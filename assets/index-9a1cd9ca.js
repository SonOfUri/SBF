(function () {
  const t = document.createElement("link").relList;
  if (t && t.supports && t.supports("modulepreload")) return;
  for (const c of document.querySelectorAll('link[rel="modulepreload"]')) s(c);
  new MutationObserver((c) => {
    for (const f of c)
      if (f.type === "childList")
        for (const m of f.addedNodes)
          m.tagName === "LINK" && m.rel === "modulepreload" && s(m);
  }).observe(document, { childList: !0, subtree: !0 });
  function r(c) {
    const f = {};
    return (
      c.integrity && (f.integrity = c.integrity),
      c.referrerPolicy && (f.referrerPolicy = c.referrerPolicy),
      c.crossOrigin === "use-credentials"
        ? (f.credentials = "include")
        : c.crossOrigin === "anonymous"
        ? (f.credentials = "omit")
        : (f.credentials = "same-origin"),
      f
    );
  }
  function s(c) {
    if (c.ep) return;
    c.ep = !0;
    const f = r(c);
    fetch(c.href, f);
  }
})();
var Pa =
  typeof globalThis < "u"
    ? globalThis
    : typeof window < "u"
    ? window
    : typeof global < "u"
    ? global
    : typeof self < "u"
    ? self
    : {};
function Tp(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default")
    ? e.default
    : e;
}
function Sy(e) {
  if (e.__esModule) return e;
  var t = e.default;
  if (typeof t == "function") {
    var r = function s() {
      return this instanceof s
        ? Reflect.construct(t, arguments, this.constructor)
        : t.apply(this, arguments);
    };
    r.prototype = t.prototype;
  } else r = {};
  return (
    Object.defineProperty(r, "__esModule", { value: !0 }),
    Object.keys(e).forEach(function (s) {
      var c = Object.getOwnPropertyDescriptor(e, s);
      Object.defineProperty(
        r,
        s,
        c.get
          ? c
          : {
              enumerable: !0,
              get: function () {
                return e[s];
              },
            }
      );
    }),
    r
  );
}
var Lp = { exports: {} },
  Js = {},
  Ep = { exports: {} },
  Pe = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var pa = Symbol.for("react.element"),
  ky = Symbol.for("react.portal"),
  Cy = Symbol.for("react.fragment"),
  Ay = Symbol.for("react.strict_mode"),
  Py = Symbol.for("react.profiler"),
  Ty = Symbol.for("react.provider"),
  Ly = Symbol.for("react.context"),
  Ey = Symbol.for("react.forward_ref"),
  My = Symbol.for("react.suspense"),
  Oy = Symbol.for("react.memo"),
  Ry = Symbol.for("react.lazy"),
  Yh = Symbol.iterator;
function zy(e) {
  return e === null || typeof e != "object"
    ? null
    : ((e = (Yh && e[Yh]) || e["@@iterator"]),
      typeof e == "function" ? e : null);
}
var Mp = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  Op = Object.assign,
  Rp = {};
function dr(e, t, r) {
  (this.props = e),
    (this.context = t),
    (this.refs = Rp),
    (this.updater = r || Mp);
}
dr.prototype.isReactComponent = {};
dr.prototype.setState = function (e, t) {
  if (typeof e != "object" && typeof e != "function" && e != null)
    throw Error(
      "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
    );
  this.updater.enqueueSetState(this, e, t, "setState");
};
dr.prototype.forceUpdate = function (e) {
  this.updater.enqueueForceUpdate(this, e, "forceUpdate");
};
function zp() {}
zp.prototype = dr.prototype;
function au(e, t, r) {
  (this.props = e),
    (this.context = t),
    (this.refs = Rp),
    (this.updater = r || Mp);
}
var su = (au.prototype = new zp());
su.constructor = au;
Op(su, dr.prototype);
su.isPureReactComponent = !0;
var Wh = Array.isArray,
  Ip = Object.prototype.hasOwnProperty,
  ou = { current: null },
  Dp = { key: !0, ref: !0, __self: !0, __source: !0 };
function Np(e, t, r) {
  var s,
    c = {},
    f = null,
    m = null;
  if (t != null)
    for (s in (t.ref !== void 0 && (m = t.ref),
    t.key !== void 0 && (f = "" + t.key),
    t))
      Ip.call(t, s) && !Dp.hasOwnProperty(s) && (c[s] = t[s]);
  var y = arguments.length - 2;
  if (y === 1) c.children = r;
  else if (1 < y) {
    for (var S = Array(y), T = 0; T < y; T++) S[T] = arguments[T + 2];
    c.children = S;
  }
  if (e && e.defaultProps)
    for (s in ((y = e.defaultProps), y)) c[s] === void 0 && (c[s] = y[s]);
  return {
    $$typeof: pa,
    type: e,
    key: f,
    ref: m,
    props: c,
    _owner: ou.current,
  };
}
function Iy(e, t) {
  return {
    $$typeof: pa,
    type: e.type,
    key: t,
    ref: e.ref,
    props: e.props,
    _owner: e._owner,
  };
}
function lu(e) {
  return typeof e == "object" && e !== null && e.$$typeof === pa;
}
function Dy(e) {
  var t = { "=": "=0", ":": "=2" };
  return (
    "$" +
    e.replace(/[=:]/g, function (r) {
      return t[r];
    })
  );
}
var Gh = /\/+/g;
function jo(e, t) {
  return typeof e == "object" && e !== null && e.key != null
    ? Dy("" + e.key)
    : t.toString(36);
}
function Za(e, t, r, s, c) {
  var f = typeof e;
  (f === "undefined" || f === "boolean") && (e = null);
  var m = !1;
  if (e === null) m = !0;
  else
    switch (f) {
      case "string":
      case "number":
        m = !0;
        break;
      case "object":
        switch (e.$$typeof) {
          case pa:
          case ky:
            m = !0;
        }
    }
  if (m)
    return (
      (m = e),
      (c = c(m)),
      (e = s === "" ? "." + jo(m, 0) : s),
      Wh(c)
        ? ((r = ""),
          e != null && (r = e.replace(Gh, "$&/") + "/"),
          Za(c, t, r, "", function (T) {
            return T;
          }))
        : c != null &&
          (lu(c) &&
            (c = Iy(
              c,
              r +
                (!c.key || (m && m.key === c.key)
                  ? ""
                  : ("" + c.key).replace(Gh, "$&/") + "/") +
                e
            )),
          t.push(c)),
      1
    );
  if (((m = 0), (s = s === "" ? "." : s + ":"), Wh(e)))
    for (var y = 0; y < e.length; y++) {
      f = e[y];
      var S = s + jo(f, y);
      m += Za(f, t, r, S, c);
    }
  else if (((S = zy(e)), typeof S == "function"))
    for (e = S.call(e), y = 0; !(f = e.next()).done; )
      (f = f.value), (S = s + jo(f, y++)), (m += Za(f, t, r, S, c));
  else if (f === "object")
    throw (
      ((t = String(e)),
      Error(
        "Objects are not valid as a React child (found: " +
          (t === "[object Object]"
            ? "object with keys {" + Object.keys(e).join(", ") + "}"
            : t) +
          "). If you meant to render a collection of children, use an array instead."
      ))
    );
  return m;
}
function Ta(e, t, r) {
  if (e == null) return e;
  var s = [],
    c = 0;
  return (
    Za(e, s, "", "", function (f) {
      return t.call(r, f, c++);
    }),
    s
  );
}
function Ny(e) {
  if (e._status === -1) {
    var t = e._result;
    (t = t()),
      t.then(
        function (r) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 1), (e._result = r));
        },
        function (r) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 2), (e._result = r));
        }
      ),
      e._status === -1 && ((e._status = 0), (e._result = t));
  }
  if (e._status === 1) return e._result.default;
  throw e._result;
}
var vt = { current: null },
  Ka = { transition: null },
  Fy = {
    ReactCurrentDispatcher: vt,
    ReactCurrentBatchConfig: Ka,
    ReactCurrentOwner: ou,
  };
Pe.Children = {
  map: Ta,
  forEach: function (e, t, r) {
    Ta(
      e,
      function () {
        t.apply(this, arguments);
      },
      r
    );
  },
  count: function (e) {
    var t = 0;
    return (
      Ta(e, function () {
        t++;
      }),
      t
    );
  },
  toArray: function (e) {
    return (
      Ta(e, function (t) {
        return t;
      }) || []
    );
  },
  only: function (e) {
    if (!lu(e))
      throw Error(
        "React.Children.only expected to receive a single React element child."
      );
    return e;
  },
};
Pe.Component = dr;
Pe.Fragment = Cy;
Pe.Profiler = Py;
Pe.PureComponent = au;
Pe.StrictMode = Ay;
Pe.Suspense = My;
Pe.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Fy;
Pe.cloneElement = function (e, t, r) {
  if (e == null)
    throw Error(
      "React.cloneElement(...): The argument must be a React element, but you passed " +
        e +
        "."
    );
  var s = Op({}, e.props),
    c = e.key,
    f = e.ref,
    m = e._owner;
  if (t != null) {
    if (
      (t.ref !== void 0 && ((f = t.ref), (m = ou.current)),
      t.key !== void 0 && (c = "" + t.key),
      e.type && e.type.defaultProps)
    )
      var y = e.type.defaultProps;
    for (S in t)
      Ip.call(t, S) &&
        !Dp.hasOwnProperty(S) &&
        (s[S] = t[S] === void 0 && y !== void 0 ? y[S] : t[S]);
  }
  var S = arguments.length - 2;
  if (S === 1) s.children = r;
  else if (1 < S) {
    y = Array(S);
    for (var T = 0; T < S; T++) y[T] = arguments[T + 2];
    s.children = y;
  }
  return { $$typeof: pa, type: e.type, key: c, ref: f, props: s, _owner: m };
};
Pe.createContext = function (e) {
  return (
    (e = {
      $$typeof: Ly,
      _currentValue: e,
      _currentValue2: e,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (e.Provider = { $$typeof: Ty, _context: e }),
    (e.Consumer = e)
  );
};
Pe.createElement = Np;
Pe.createFactory = function (e) {
  var t = Np.bind(null, e);
  return (t.type = e), t;
};
Pe.createRef = function () {
  return { current: null };
};
Pe.forwardRef = function (e) {
  return { $$typeof: Ey, render: e };
};
Pe.isValidElement = lu;
Pe.lazy = function (e) {
  return { $$typeof: Ry, _payload: { _status: -1, _result: e }, _init: Ny };
};
Pe.memo = function (e, t) {
  return { $$typeof: Oy, type: e, compare: t === void 0 ? null : t };
};
Pe.startTransition = function (e) {
  var t = Ka.transition;
  Ka.transition = {};
  try {
    e();
  } finally {
    Ka.transition = t;
  }
};
Pe.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
Pe.useCallback = function (e, t) {
  return vt.current.useCallback(e, t);
};
Pe.useContext = function (e) {
  return vt.current.useContext(e);
};
Pe.useDebugValue = function () {};
Pe.useDeferredValue = function (e) {
  return vt.current.useDeferredValue(e);
};
Pe.useEffect = function (e, t) {
  return vt.current.useEffect(e, t);
};
Pe.useId = function () {
  return vt.current.useId();
};
Pe.useImperativeHandle = function (e, t, r) {
  return vt.current.useImperativeHandle(e, t, r);
};
Pe.useInsertionEffect = function (e, t) {
  return vt.current.useInsertionEffect(e, t);
};
Pe.useLayoutEffect = function (e, t) {
  return vt.current.useLayoutEffect(e, t);
};
Pe.useMemo = function (e, t) {
  return vt.current.useMemo(e, t);
};
Pe.useReducer = function (e, t, r) {
  return vt.current.useReducer(e, t, r);
};
Pe.useRef = function (e) {
  return vt.current.useRef(e);
};
Pe.useState = function (e) {
  return vt.current.useState(e);
};
Pe.useSyncExternalStore = function (e, t, r) {
  return vt.current.useSyncExternalStore(e, t, r);
};
Pe.useTransition = function () {
  return vt.current.useTransition();
};
Pe.version = "18.2.0";
Ep.exports = Pe;
var re = Ep.exports;
const ai = Tp(re);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var _y = re,
  Hy = Symbol.for("react.element"),
  Xy = Symbol.for("react.fragment"),
  jy = Object.prototype.hasOwnProperty,
  By = _y.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  Vy = { key: !0, ref: !0, __self: !0, __source: !0 };
function Fp(e, t, r) {
  var s,
    c = {},
    f = null,
    m = null;
  r !== void 0 && (f = "" + r),
    t.key !== void 0 && (f = "" + t.key),
    t.ref !== void 0 && (m = t.ref);
  for (s in t) jy.call(t, s) && !Vy.hasOwnProperty(s) && (c[s] = t[s]);
  if (e && e.defaultProps)
    for (s in ((t = e.defaultProps), t)) c[s] === void 0 && (c[s] = t[s]);
  return {
    $$typeof: Hy,
    type: e,
    key: f,
    ref: m,
    props: c,
    _owner: By.current,
  };
}
Js.Fragment = Xy;
Js.jsx = Fp;
Js.jsxs = Fp;
Lp.exports = Js;
var $ = Lp.exports,
  Nl = {},
  _p = { exports: {} },
  It = {},
  Hp = { exports: {} },
  Xp = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (e) {
  function t(se, ge) {
    var me = se.length;
    se.push(ge);
    e: for (; 0 < me; ) {
      var fe = (me - 1) >>> 1,
        be = se[fe];
      if (0 < c(be, ge)) (se[fe] = ge), (se[me] = be), (me = fe);
      else break e;
    }
  }
  function r(se) {
    return se.length === 0 ? null : se[0];
  }
  function s(se) {
    if (se.length === 0) return null;
    var ge = se[0],
      me = se.pop();
    if (me !== ge) {
      se[0] = me;
      e: for (var fe = 0, be = se.length, je = be >>> 1; fe < je; ) {
        var Oe = 2 * (fe + 1) - 1,
          Lt = se[Oe],
          Re = Oe + 1,
          Qt = se[Re];
        if (0 > c(Lt, me))
          Re < be && 0 > c(Qt, Lt)
            ? ((se[fe] = Qt), (se[Re] = me), (fe = Re))
            : ((se[fe] = Lt), (se[Oe] = me), (fe = Oe));
        else if (Re < be && 0 > c(Qt, me))
          (se[fe] = Qt), (se[Re] = me), (fe = Re);
        else break e;
      }
    }
    return ge;
  }
  function c(se, ge) {
    var me = se.sortIndex - ge.sortIndex;
    return me !== 0 ? me : se.id - ge.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var f = performance;
    e.unstable_now = function () {
      return f.now();
    };
  } else {
    var m = Date,
      y = m.now();
    e.unstable_now = function () {
      return m.now() - y;
    };
  }
  var S = [],
    T = [],
    O = 1,
    z = null,
    N = 3,
    X = !1,
    V = !1,
    Y = !1,
    Q = typeof setTimeout == "function" ? setTimeout : null,
    j = typeof clearTimeout == "function" ? clearTimeout : null,
    L = typeof setImmediate < "u" ? setImmediate : null;
  typeof navigator < "u" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function H(se) {
    for (var ge = r(T); ge !== null; ) {
      if (ge.callback === null) s(T);
      else if (ge.startTime <= se)
        s(T), (ge.sortIndex = ge.expirationTime), t(S, ge);
      else break;
      ge = r(T);
    }
  }
  function U(se) {
    if (((Y = !1), H(se), !V))
      if (r(S) !== null) (V = !0), Me(B);
      else {
        var ge = r(T);
        ge !== null && Xe(U, ge.startTime - se);
      }
  }
  function B(se, ge) {
    (V = !1), Y && ((Y = !1), j(q), (q = -1)), (X = !0);
    var me = N;
    try {
      for (
        H(ge), z = r(S);
        z !== null && (!(z.expirationTime > ge) || (se && !pe()));

      ) {
        var fe = z.callback;
        if (typeof fe == "function") {
          (z.callback = null), (N = z.priorityLevel);
          var be = fe(z.expirationTime <= ge);
          (ge = e.unstable_now()),
            typeof be == "function" ? (z.callback = be) : z === r(S) && s(S),
            H(ge);
        } else s(S);
        z = r(S);
      }
      if (z !== null) var je = !0;
      else {
        var Oe = r(T);
        Oe !== null && Xe(U, Oe.startTime - ge), (je = !1);
      }
      return je;
    } finally {
      (z = null), (N = me), (X = !1);
    }
  }
  var K = !1,
    te = null,
    q = -1,
    ie = 5,
    ae = -1;
  function pe() {
    return !(e.unstable_now() - ae < ie);
  }
  function le() {
    if (te !== null) {
      var se = e.unstable_now();
      ae = se;
      var ge = !0;
      try {
        ge = te(!0, se);
      } finally {
        ge ? he() : ((K = !1), (te = null));
      }
    } else K = !1;
  }
  var he;
  if (typeof L == "function")
    he = function () {
      L(le);
    };
  else if (typeof MessageChannel < "u") {
    var xe = new MessageChannel(),
      we = xe.port2;
    (xe.port1.onmessage = le),
      (he = function () {
        we.postMessage(null);
      });
  } else
    he = function () {
      Q(le, 0);
    };
  function Me(se) {
    (te = se), K || ((K = !0), he());
  }
  function Xe(se, ge) {
    q = Q(function () {
      se(e.unstable_now());
    }, ge);
  }
  (e.unstable_IdlePriority = 5),
    (e.unstable_ImmediatePriority = 1),
    (e.unstable_LowPriority = 4),
    (e.unstable_NormalPriority = 3),
    (e.unstable_Profiling = null),
    (e.unstable_UserBlockingPriority = 2),
    (e.unstable_cancelCallback = function (se) {
      se.callback = null;
    }),
    (e.unstable_continueExecution = function () {
      V || X || ((V = !0), Me(B));
    }),
    (e.unstable_forceFrameRate = function (se) {
      0 > se || 125 < se
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
          )
        : (ie = 0 < se ? Math.floor(1e3 / se) : 5);
    }),
    (e.unstable_getCurrentPriorityLevel = function () {
      return N;
    }),
    (e.unstable_gSBFirstCallbackNode = function () {
      return r(S);
    }),
    (e.unstable_next = function (se) {
      switch (N) {
        case 1:
        case 2:
        case 3:
          var ge = 3;
          break;
        default:
          ge = N;
      }
      var me = N;
      N = ge;
      try {
        return se();
      } finally {
        N = me;
      }
    }),
    (e.unstable_pauseExecution = function () {}),
    (e.unstable_requestPaint = function () {}),
    (e.unstable_runWithPriority = function (se, ge) {
      switch (se) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          se = 3;
      }
      var me = N;
      N = se;
      try {
        return ge();
      } finally {
        N = me;
      }
    }),
    (e.unstable_scheduleCallback = function (se, ge, me) {
      var fe = e.unstable_now();
      switch (
        (typeof me == "object" && me !== null
          ? ((me = me.delay),
            (me = typeof me == "number" && 0 < me ? fe + me : fe))
          : (me = fe),
        se)
      ) {
        case 1:
          var be = -1;
          break;
        case 2:
          be = 250;
          break;
        case 5:
          be = 1073741823;
          break;
        case 4:
          be = 1e4;
          break;
        default:
          be = 5e3;
      }
      return (
        (be = me + be),
        (se = {
          id: O++,
          callback: ge,
          priorityLevel: se,
          startTime: me,
          expirationTime: be,
          sortIndex: -1,
        }),
        me > fe
          ? ((se.sortIndex = me),
            t(T, se),
            r(S) === null &&
              se === r(T) &&
              (Y ? (j(q), (q = -1)) : (Y = !0), Xe(U, me - fe)))
          : ((se.sortIndex = be), t(S, se), V || X || ((V = !0), Me(B))),
        se
      );
    }),
    (e.unstable_shouldYield = pe),
    (e.unstable_wrapCallback = function (se) {
      var ge = N;
      return function () {
        var me = N;
        N = ge;
        try {
          return se.apply(this, arguments);
        } finally {
          N = me;
        }
      };
    });
})(Xp);
Hp.exports = Xp;
var Yy = Hp.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var jp = re,
  Rt = Yy;
function ne(e) {
  for (
    var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, r = 1;
    r < arguments.length;
    r++
  )
    t += "&args[]=" + encodeURIComponent(arguments[r]);
  return (
    "Minified React error #" +
    e +
    "; visit " +
    t +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
var Bp = new Set(),
  Gr = {};
function Cn(e, t) {
  tr(e, t), tr(e + "Capture", t);
}
function tr(e, t) {
  for (Gr[e] = t, e = 0; e < t.length; e++) Bp.add(t[e]);
}
var bi = !(
    typeof window > "u" ||
    typeof window.document > "u" ||
    typeof window.document.createElement > "u"
  ),
  Fl = Object.prototype.hasOwnProperty,
  Wy =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  Uh = {},
  $h = {};
function Gy(e) {
  return Fl.call($h, e)
    ? !0
    : Fl.call(Uh, e)
    ? !1
    : Wy.test(e)
    ? ($h[e] = !0)
    : ((Uh[e] = !0), !1);
}
function Uy(e, t, r, s) {
  if (r !== null && r.type === 0) return !1;
  switch (typeof t) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      return s
        ? !1
        : r !== null
        ? !r.acceptsBooleans
        : ((e = e.toLowerCase().slice(0, 5)), e !== "data-" && e !== "aria-");
    default:
      return !1;
  }
}
function $y(e, t, r, s) {
  if (t === null || typeof t > "u" || Uy(e, t, r, s)) return !0;
  if (s) return !1;
  if (r !== null)
    switch (r.type) {
      case 3:
        return !t;
      case 4:
        return t === !1;
      case 5:
        return isNaN(t);
      case 6:
        return isNaN(t) || 1 > t;
    }
  return !1;
}
function yt(e, t, r, s, c, f, m) {
  (this.acceptsBooleans = t === 2 || t === 3 || t === 4),
    (this.attributeName = s),
    (this.attributeNamespace = c),
    (this.mustUseProperty = r),
    (this.propertyName = e),
    (this.type = t),
    (this.sanitizeURL = f),
    (this.removeEmptyString = m);
}
var lt = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
  .split(" ")
  .forEach(function (e) {
    lt[e] = new yt(e, 0, !1, e, null, !1, !1);
  });
[
  ["acceptCharset", "accept-charset"],
  ["className", "class"],
  ["htmlFor", "for"],
  ["httpEquiv", "http-equiv"],
].forEach(function (e) {
  var t = e[0];
  lt[t] = new yt(t, 1, !1, e[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (e) {
  lt[e] = new yt(e, 2, !1, e.toLowerCase(), null, !1, !1);
});
[
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha",
].forEach(function (e) {
  lt[e] = new yt(e, 2, !1, e, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
  .split(" ")
  .forEach(function (e) {
    lt[e] = new yt(e, 3, !1, e.toLowerCase(), null, !1, !1);
  });
["checked", "multiple", "muted", "selected"].forEach(function (e) {
  lt[e] = new yt(e, 3, !0, e, null, !1, !1);
});
["capture", "download"].forEach(function (e) {
  lt[e] = new yt(e, 4, !1, e, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (e) {
  lt[e] = new yt(e, 6, !1, e, null, !1, !1);
});
["rowSpan", "start"].forEach(function (e) {
  lt[e] = new yt(e, 5, !1, e.toLowerCase(), null, !1, !1);
});
var cu = /[\-:]([a-z])/g;
function uu(e) {
  return e[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
  .split(" ")
  .forEach(function (e) {
    var t = e.replace(cu, uu);
    lt[t] = new yt(t, 1, !1, e, null, !1, !1);
  });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
  .split(" ")
  .forEach(function (e) {
    var t = e.replace(cu, uu);
    lt[t] = new yt(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
  });
["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
  var t = e.replace(cu, uu);
  lt[t] = new yt(t, 1, !1, e, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (e) {
  lt[e] = new yt(e, 1, !1, e.toLowerCase(), null, !1, !1);
});
lt.xlinkHref = new yt(
  "xlinkHref",
  1,
  !1,
  "xlink:href",
  "http://www.w3.org/1999/xlink",
  !0,
  !1
);
["src", "href", "action", "formAction"].forEach(function (e) {
  lt[e] = new yt(e, 1, !1, e.toLowerCase(), null, !0, !0);
});
function hu(e, t, r, s) {
  var c = lt.hasOwnProperty(t) ? lt[t] : null;
  (c !== null
    ? c.type !== 0
    : s ||
      !(2 < t.length) ||
      (t[0] !== "o" && t[0] !== "O") ||
      (t[1] !== "n" && t[1] !== "N")) &&
    ($y(t, r, c, s) && (r = null),
    s || c === null
      ? Gy(t) && (r === null ? e.removeAttribute(t) : e.setAttribute(t, "" + r))
      : c.mustUseProperty
      ? (e[c.propertyName] = r === null ? (c.type === 3 ? !1 : "") : r)
      : ((t = c.attributeName),
        (s = c.attributeNamespace),
        r === null
          ? e.removeAttribute(t)
          : ((c = c.type),
            (r = c === 3 || (c === 4 && r === !0) ? "" : "" + r),
            s ? e.setAttributeNS(s, t, r) : e.setAttribute(t, r))));
}
var Ai = jp.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  La = Symbol.for("react.element"),
  Rn = Symbol.for("react.portal"),
  zn = Symbol.for("react.fragment"),
  du = Symbol.for("react.strict_mode"),
  _l = Symbol.for("react.profiler"),
  Vp = Symbol.for("react.provider"),
  Yp = Symbol.for("react.context"),
  fu = Symbol.for("react.forward_ref"),
  Hl = Symbol.for("react.suspense"),
  Xl = Symbol.for("react.suspense_list"),
  pu = Symbol.for("react.memo"),
  Mi = Symbol.for("react.lazy"),
  Wp = Symbol.for("react.offscreen"),
  qh = Symbol.iterator;
function mr(e) {
  return e === null || typeof e != "object"
    ? null
    : ((e = (qh && e[qh]) || e["@@iterator"]),
      typeof e == "function" ? e : null);
}
var Ue = Object.assign,
  Bo;
function Tr(e) {
  if (Bo === void 0)
    try {
      throw Error();
    } catch (r) {
      var t = r.stack.trim().match(/\n( *(at )?)/);
      Bo = (t && t[1]) || "";
    }
  return (
    `
` +
    Bo +
    e
  );
}
var Vo = !1;
function Yo(e, t) {
  if (!e || Vo) return "";
  Vo = !0;
  var r = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (t)
      if (
        ((t = function () {
          throw Error();
        }),
        Object.defineProperty(t.prototype, "props", {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == "object" && Reflect.construct)
      ) {
        try {
          Reflect.construct(t, []);
        } catch (T) {
          var s = T;
        }
        Reflect.construct(e, [], t);
      } else {
        try {
          t.call();
        } catch (T) {
          s = T;
        }
        e.call(t.prototype);
      }
    else {
      try {
        throw Error();
      } catch (T) {
        s = T;
      }
      e();
    }
  } catch (T) {
    if (T && s && typeof T.stack == "string") {
      for (
        var c = T.stack.split(`
`),
          f = s.stack.split(`
`),
          m = c.length - 1,
          y = f.length - 1;
        1 <= m && 0 <= y && c[m] !== f[y];

      )
        y--;
      for (; 1 <= m && 0 <= y; m--, y--)
        if (c[m] !== f[y]) {
          if (m !== 1 || y !== 1)
            do
              if ((m--, y--, 0 > y || c[m] !== f[y])) {
                var S =
                  `
` + c[m].replace(" at new ", " at ");
                return (
                  e.displayName &&
                    S.includes("<anonymous>") &&
                    (S = S.replace("<anonymous>", e.displayName)),
                  S
                );
              }
            while (1 <= m && 0 <= y);
          break;
        }
    }
  } finally {
    (Vo = !1), (Error.prepareStackTrace = r);
  }
  return (e = e ? e.displayName || e.name : "") ? Tr(e) : "";
}
function qy(e) {
  switch (e.tag) {
    case 5:
      return Tr(e.type);
    case 16:
      return Tr("Lazy");
    case 13:
      return Tr("Suspense");
    case 19:
      return Tr("SuspenseList");
    case 0:
    case 2:
    case 15:
      return (e = Yo(e.type, !1)), e;
    case 11:
      return (e = Yo(e.type.render, !1)), e;
    case 1:
      return (e = Yo(e.type, !0)), e;
    default:
      return "";
  }
}
function jl(e) {
  if (e == null) return null;
  if (typeof e == "function") return e.displayName || e.name || null;
  if (typeof e == "string") return e;
  switch (e) {
    case zn:
      return "Fragment";
    case Rn:
      return "Portal";
    case _l:
      return "Profiler";
    case du:
      return "StrictMode";
    case Hl:
      return "Suspense";
    case Xl:
      return "SuspenseList";
  }
  if (typeof e == "object")
    switch (e.$$typeof) {
      case Yp:
        return (e.displayName || "Context") + ".Consumer";
      case Vp:
        return (e._context.displayName || "Context") + ".Provider";
      case fu:
        var t = e.render;
        return (
          (e = e.displayName),
          e ||
            ((e = t.displayName || t.name || ""),
            (e = e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef")),
          e
        );
      case pu:
        return (
          (t = e.displayName || null), t !== null ? t : jl(e.type) || "Memo"
        );
      case Mi:
        (t = e._payload), (e = e._init);
        try {
          return jl(e(t));
        } catch {}
    }
  return null;
}
function Zy(e) {
  var t = e.type;
  switch (e.tag) {
    case 24:
      return "Cache";
    case 9:
      return (t.displayName || "Context") + ".Consumer";
    case 10:
      return (t._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return (
        (e = t.render),
        (e = e.displayName || e.name || ""),
        t.displayName || (e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef")
      );
    case 7:
      return "Fragment";
    case 5:
      return t;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return jl(t);
    case 8:
      return t === du ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof t == "function") return t.displayName || t.name || null;
      if (typeof t == "string") return t;
  }
  return null;
}
function qi(e) {
  switch (typeof e) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return e;
    case "object":
      return e;
    default:
      return "";
  }
}
function Gp(e) {
  var t = e.type;
  return (
    (e = e.nodeName) &&
    e.toLowerCase() === "input" &&
    (t === "checkbox" || t === "radio")
  );
}
function Ky(e) {
  var t = Gp(e) ? "checked" : "value",
    r = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
    s = "" + e[t];
  if (
    !e.hasOwnProperty(t) &&
    typeof r < "u" &&
    typeof r.get == "function" &&
    typeof r.set == "function"
  ) {
    var c = r.get,
      f = r.set;
    return (
      Object.defineProperty(e, t, {
        configurable: !0,
        get: function () {
          return c.call(this);
        },
        set: function (m) {
          (s = "" + m), f.call(this, m);
        },
      }),
      Object.defineProperty(e, t, { enumerable: r.enumerable }),
      {
        getValue: function () {
          return s;
        },
        setValue: function (m) {
          s = "" + m;
        },
        stopTracking: function () {
          (e._valueTracker = null), delete e[t];
        },
      }
    );
  }
}
function Ea(e) {
  e._valueTracker || (e._valueTracker = Ky(e));
}
function Up(e) {
  if (!e) return !1;
  var t = e._valueTracker;
  if (!t) return !0;
  var r = t.getValue(),
    s = "";
  return (
    e && (s = Gp(e) ? (e.checked ? "true" : "false") : e.value),
    (e = s),
    e !== r ? (t.setValue(e), !0) : !1
  );
}
function us(e) {
  if (((e = e || (typeof document < "u" ? document : void 0)), typeof e > "u"))
    return null;
  try {
    return e.activeElement || e.body;
  } catch {
    return e.body;
  }
}
function Bl(e, t) {
  var r = t.checked;
  return Ue({}, t, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: r ?? e._wrapperState.initialChecked,
  });
}
function Zh(e, t) {
  var r = t.defaultValue == null ? "" : t.defaultValue,
    s = t.checked != null ? t.checked : t.defaultChecked;
  (r = qi(t.value != null ? t.value : r)),
    (e._wrapperState = {
      initialChecked: s,
      initialValue: r,
      controlled:
        t.type === "checkbox" || t.type === "radio"
          ? t.checked != null
          : t.value != null,
    });
}
function $p(e, t) {
  (t = t.checked), t != null && hu(e, "checked", t, !1);
}
function Vl(e, t) {
  $p(e, t);
  var r = qi(t.value),
    s = t.type;
  if (r != null)
    s === "number"
      ? ((r === 0 && e.value === "") || e.value != r) && (e.value = "" + r)
      : e.value !== "" + r && (e.value = "" + r);
  else if (s === "submit" || s === "reset") {
    e.removeAttribute("value");
    return;
  }
  t.hasOwnProperty("value")
    ? Yl(e, t.type, r)
    : t.hasOwnProperty("defaultValue") && Yl(e, t.type, qi(t.defaultValue)),
    t.checked == null &&
      t.defaultChecked != null &&
      (e.defaultChecked = !!t.defaultChecked);
}
function Kh(e, t, r) {
  if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
    var s = t.type;
    if (
      !(
        (s !== "submit" && s !== "reset") ||
        (t.value !== void 0 && t.value !== null)
      )
    )
      return;
    (t = "" + e._wrapperState.initialValue),
      r || t === e.value || (e.value = t),
      (e.defaultValue = t);
  }
  (r = e.name),
    r !== "" && (e.name = ""),
    (e.defaultChecked = !!e._wrapperState.initialChecked),
    r !== "" && (e.name = r);
}
function Yl(e, t, r) {
  (t !== "number" || us(e.ownerDocument) !== e) &&
    (r == null
      ? (e.defaultValue = "" + e._wrapperState.initialValue)
      : e.defaultValue !== "" + r && (e.defaultValue = "" + r));
}
var Lr = Array.isArray;
function $n(e, t, r, s) {
  if (((e = e.options), t)) {
    t = {};
    for (var c = 0; c < r.length; c++) t["$" + r[c]] = !0;
    for (r = 0; r < e.length; r++)
      (c = t.hasOwnProperty("$" + e[r].value)),
        e[r].selected !== c && (e[r].selected = c),
        c && s && (e[r].defaultSelected = !0);
  } else {
    for (r = "" + qi(r), t = null, c = 0; c < e.length; c++) {
      if (e[c].value === r) {
        (e[c].selected = !0), s && (e[c].defaultSelected = !0);
        return;
      }
      t !== null || e[c].disabled || (t = e[c]);
    }
    t !== null && (t.selected = !0);
  }
}
function Wl(e, t) {
  if (t.dangerouslySetInnerHTML != null) throw Error(ne(91));
  return Ue({}, t, {
    value: void 0,
    defaultValue: void 0,
    children: "" + e._wrapperState.initialValue,
  });
}
function Qh(e, t) {
  var r = t.value;
  if (r == null) {
    if (((r = t.children), (t = t.defaultValue), r != null)) {
      if (t != null) throw Error(ne(92));
      if (Lr(r)) {
        if (1 < r.length) throw Error(ne(93));
        r = r[0];
      }
      t = r;
    }
    t == null && (t = ""), (r = t);
  }
  e._wrapperState = { initialValue: qi(r) };
}
function qp(e, t) {
  var r = qi(t.value),
    s = qi(t.defaultValue);
  r != null &&
    ((r = "" + r),
    r !== e.value && (e.value = r),
    t.defaultValue == null && e.defaultValue !== r && (e.defaultValue = r)),
    s != null && (e.defaultValue = "" + s);
}
function Jh(e) {
  var t = e.textContent;
  t === e._wrapperState.initialValue && t !== "" && t !== null && (e.value = t);
}
function Zp(e) {
  switch (e) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function Gl(e, t) {
  return e == null || e === "http://www.w3.org/1999/xhtml"
    ? Zp(t)
    : e === "http://www.w3.org/2000/svg" && t === "foreignObject"
    ? "http://www.w3.org/1999/xhtml"
    : e;
}
var Ma,
  Kp = (function (e) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
      ? function (t, r, s, c) {
          MSApp.execUnsafeLocalFunction(function () {
            return e(t, r, s, c);
          });
        }
      : e;
  })(function (e, t) {
    if (e.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in e)
      e.innerHTML = t;
    else {
      for (
        Ma = Ma || document.createElement("div"),
          Ma.innerHTML = "<svg style="display: none;" >" + t.valueOf().toString() + "</svg>",
          t = Ma.firstChild;
        e.firstChild;

      )
        e.removeChild(e.firstChild);
      for (; t.firstChild; ) e.appendChild(t.firstChild);
    }
  });
function Ur(e, t) {
  if (t) {
    var r = e.firstChild;
    if (r && r === e.lastChild && r.nodeType === 3) {
      r.nodeValue = t;
      return;
    }
  }
  e.textContent = t;
}
var Rr = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  Qy = ["Webkit", "ms", "Moz", "O"];
Object.keys(Rr).forEach(function (e) {
  Qy.forEach(function (t) {
    (t = t + e.charAt(0).toUpperCase() + e.substring(1)), (Rr[t] = Rr[e]);
  });
});
function Qp(e, t, r) {
  return t == null || typeof t == "boolean" || t === ""
    ? ""
    : r || typeof t != "number" || t === 0 || (Rr.hasOwnProperty(e) && Rr[e])
    ? ("" + t).trim()
    : t + "px";
}
function Jp(e, t) {
  e = e.style;
  for (var r in t)
    if (t.hasOwnProperty(r)) {
      var s = r.indexOf("--") === 0,
        c = Qp(r, t[r], s);
      r === "float" && (r = "cssFloat"), s ? e.setProperty(r, c) : (e[r] = c);
    }
}
var Jy = Ue(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  }
);
function Ul(e, t) {
  if (t) {
    if (Jy[e] && (t.children != null || t.dangerouslySetInnerHTML != null))
      throw Error(ne(137, e));
    if (t.dangerouslySetInnerHTML != null) {
      if (t.children != null) throw Error(ne(60));
      if (
        typeof t.dangerouslySetInnerHTML != "object" ||
        !("__html" in t.dangerouslySetInnerHTML)
      )
        throw Error(ne(61));
    }
    if (t.style != null && typeof t.style != "object") throw Error(ne(62));
  }
}
function $l(e, t) {
  if (e.indexOf("-") === -1) return typeof t.is == "string";
  switch (e) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var ql = null;
function gu(e) {
  return (
    (e = e.target || e.srcElement || window),
    e.correspondingUseElement && (e = e.correspondingUseElement),
    e.nodeType === 3 ? e.parentNode : e
  );
}
var Zl = null,
  qn = null,
  Zn = null;
function ed(e) {
  if ((e = xa(e))) {
    if (typeof Zl != "function") throw Error(ne(280));
    var t = e.stateNode;
    t && ((t = ro(t)), Zl(e.stateNode, e.type, t));
  }
}
function eg(e) {
  qn ? (Zn ? Zn.push(e) : (Zn = [e])) : (qn = e);
}
function tg() {
  if (qn) {
    var e = qn,
      t = Zn;
    if (((Zn = qn = null), ed(e), t)) for (e = 0; e < t.length; e++) ed(t[e]);
  }
}
function ig(e, t) {
  return e(t);
}
function ng() {}
var Wo = !1;
function rg(e, t, r) {
  if (Wo) return e(t, r);
  Wo = !0;
  try {
    return ig(e, t, r);
  } finally {
    (Wo = !1), (qn !== null || Zn !== null) && (ng(), tg());
  }
}
function $r(e, t) {
  var r = e.stateNode;
  if (r === null) return null;
  var s = ro(r);
  if (s === null) return null;
  r = s[t];
  e: switch (t) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (s = !s.disabled) ||
        ((e = e.type),
        (s = !(
          e === "button" ||
          e === "input" ||
          e === "select" ||
          e === "textarea"
        ))),
        (e = !s);
      break e;
    default:
      e = !1;
  }
  if (e) return null;
  if (r && typeof r != "function") throw Error(ne(231, t, typeof r));
  return r;
}
var Kl = !1;
if (bi)
  try {
    var xr = {};
    Object.defineProperty(xr, "passive", {
      get: function () {
        Kl = !0;
      },
    }),
      window.addEventListener("test", xr, xr),
      window.removeEventListener("test", xr, xr);
  } catch {
    Kl = !1;
  }
function e0(e, t, r, s, c, f, m, y, S) {
  var T = Array.prototype.slice.call(arguments, 3);
  try {
    t.apply(r, T);
  } catch (O) {
    this.onError(O);
  }
}
var zr = !1,
  hs = null,
  ds = !1,
  Ql = null,
  t0 = {
    onError: function (e) {
      (zr = !0), (hs = e);
    },
  };
function i0(e, t, r, s, c, f, m, y, S) {
  (zr = !1), (hs = null), e0.apply(t0, arguments);
}
function n0(e, t, r, s, c, f, m, y, S) {
  if ((i0.apply(this, arguments), zr)) {
    if (zr) {
      var T = hs;
      (zr = !1), (hs = null);
    } else throw Error(ne(198));
    ds || ((ds = !0), (Ql = T));
  }
}
function An(e) {
  var t = e,
    r = e;
  if (e.alternate) for (; t.return; ) t = t.return;
  else {
    e = t;
    do (t = e), t.flags & 4098 && (r = t.return), (e = t.return);
    while (e);
  }
  return t.tag === 3 ? r : null;
}
function ag(e) {
  if (e.tag === 13) {
    var t = e.memoizedState;
    if (
      (t === null && ((e = e.alternate), e !== null && (t = e.memoizedState)),
      t !== null)
    )
      return t.dehydrated;
  }
  return null;
}
function td(e) {
  if (An(e) !== e) throw Error(ne(188));
}
function r0(e) {
  var t = e.alternate;
  if (!t) {
    if (((t = An(e)), t === null)) throw Error(ne(188));
    return t !== e ? null : e;
  }
  for (var r = e, s = t; ; ) {
    var c = r.return;
    if (c === null) break;
    var f = c.alternate;
    if (f === null) {
      if (((s = c.return), s !== null)) {
        r = s;
        continue;
      }
      break;
    }
    if (c.child === f.child) {
      for (f = c.child; f; ) {
        if (f === r) return td(c), e;
        if (f === s) return td(c), t;
        f = f.sibling;
      }
      throw Error(ne(188));
    }
    if (r.return !== s.return) (r = c), (s = f);
    else {
      for (var m = !1, y = c.child; y; ) {
        if (y === r) {
          (m = !0), (r = c), (s = f);
          break;
        }
        if (y === s) {
          (m = !0), (s = c), (r = f);
          break;
        }
        y = y.sibling;
      }
      if (!m) {
        for (y = f.child; y; ) {
          if (y === r) {
            (m = !0), (r = f), (s = c);
            break;
          }
          if (y === s) {
            (m = !0), (s = f), (r = c);
            break;
          }
          y = y.sibling;
        }
        if (!m) throw Error(ne(189));
      }
    }
    if (r.alternate !== s) throw Error(ne(190));
  }
  if (r.tag !== 3) throw Error(ne(188));
  return r.stateNode.current === r ? e : t;
}
function sg(e) {
  return (e = r0(e)), e !== null ? og(e) : null;
}
function og(e) {
  if (e.tag === 5 || e.tag === 6) return e;
  for (e = e.child; e !== null; ) {
    var t = og(e);
    if (t !== null) return t;
    e = e.sibling;
  }
  return null;
}
var lg = Rt.unstable_scheduleCallback,
  id = Rt.unstable_cancelCallback,
  a0 = Rt.unstable_shouldYield,
  s0 = Rt.unstable_requestPaint,
  Qe = Rt.unstable_now,
  o0 = Rt.unstable_getCurrentPriorityLevel,
  mu = Rt.unstable_ImmediatePriority,
  cg = Rt.unstable_UserBlockingPriority,
  fs = Rt.unstable_NormalPriority,
  l0 = Rt.unstable_LowPriority,
  ug = Rt.unstable_IdlePriority,
  eo = null,
  si = null;
function c0(e) {
  if (si && typeof si.onCommitFiberRoot == "function")
    try {
      si.onCommitFiberRoot(eo, e, void 0, (e.current.flags & 128) === 128);
    } catch {}
}
var qt = Math.clz32 ? Math.clz32 : d0,
  u0 = Math.log,
  h0 = Math.LN2;
function d0(e) {
  return (e >>>= 0), e === 0 ? 32 : (31 - ((u0(e) / h0) | 0)) | 0;
}
var Oa = 64,
  Ra = 4194304;
function Er(e) {
  switch (e & -e) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return e & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return e & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return e;
  }
}
function ps(e, t) {
  var r = e.pendingLanes;
  if (r === 0) return 0;
  var s = 0,
    c = e.suspendedLanes,
    f = e.pingedLanes,
    m = r & 268435455;
  if (m !== 0) {
    var y = m & ~c;
    y !== 0 ? (s = Er(y)) : ((f &= m), f !== 0 && (s = Er(f)));
  } else (m = r & ~c), m !== 0 ? (s = Er(m)) : f !== 0 && (s = Er(f));
  if (s === 0) return 0;
  if (
    t !== 0 &&
    t !== s &&
    !(t & c) &&
    ((c = s & -s), (f = t & -t), c >= f || (c === 16 && (f & 4194240) !== 0))
  )
    return t;
  if ((s & 4 && (s |= r & 16), (t = e.entangledLanes), t !== 0))
    for (e = e.entanglements, t &= s; 0 < t; )
      (r = 31 - qt(t)), (c = 1 << r), (s |= e[r]), (t &= ~c);
  return s;
}
function f0(e, t) {
  switch (e) {
    case 1:
    case 2:
    case 4:
      return t + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return t + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function p0(e, t) {
  for (
    var r = e.suspendedLanes,
      s = e.pingedLanes,
      c = e.expirationTimes,
      f = e.pendingLanes;
    0 < f;

  ) {
    var m = 31 - qt(f),
      y = 1 << m,
      S = c[m];
    S === -1
      ? (!(y & r) || y & s) && (c[m] = f0(y, t))
      : S <= t && (e.expiredLanes |= y),
      (f &= ~y);
  }
}
function Jl(e) {
  return (
    (e = e.pendingLanes & -1073741825),
    e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
  );
}
function hg() {
  var e = Oa;
  return (Oa <<= 1), !(Oa & 4194240) && (Oa = 64), e;
}
function Go(e) {
  for (var t = [], r = 0; 31 > r; r++) t.push(e);
  return t;
}
function ga(e, t, r) {
  (e.pendingLanes |= t),
    t !== 536870912 && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
    (e = e.eventTimes),
    (t = 31 - qt(t)),
    (e[t] = r);
}
function g0(e, t) {
  var r = e.pendingLanes & ~t;
  (e.pendingLanes = t),
    (e.suspendedLanes = 0),
    (e.pingedLanes = 0),
    (e.expiredLanes &= t),
    (e.mutableReadLanes &= t),
    (e.entangledLanes &= t),
    (t = e.entanglements);
  var s = e.eventTimes;
  for (e = e.expirationTimes; 0 < r; ) {
    var c = 31 - qt(r),
      f = 1 << c;
    (t[c] = 0), (s[c] = -1), (e[c] = -1), (r &= ~f);
  }
}
function xu(e, t) {
  var r = (e.entangledLanes |= t);
  for (e = e.entanglements; r; ) {
    var s = 31 - qt(r),
      c = 1 << s;
    (c & t) | (e[s] & t) && (e[s] |= t), (r &= ~c);
  }
}
var Ee = 0;
function dg(e) {
  return (e &= -e), 1 < e ? (4 < e ? (e & 268435455 ? 16 : 536870912) : 4) : 1;
}
var fg,
  vu,
  pg,
  gg,
  mg,
  ec = !1,
  za = [],
  _i = null,
  Hi = null,
  Xi = null,
  qr = new Map(),
  Zr = new Map(),
  Ii = [],
  m0 =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
      " "
    );
function nd(e, t) {
  switch (e) {
    case "focusin":
    case "focusout":
      _i = null;
      break;
    case "dragenter":
    case "dragleave":
      Hi = null;
      break;
    case "mouseover":
    case "mouseout":
      Xi = null;
      break;
    case "pointerover":
    case "pointerout":
      qr.delete(t.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Zr.delete(t.pointerId);
  }
}
function vr(e, t, r, s, c, f) {
  return e === null || e.nativeEvent !== f
    ? ((e = {
        blockedOn: t,
        domEventName: r,
        eventSystemFlags: s,
        nativeEvent: f,
        targetContainers: [c],
      }),
      t !== null && ((t = xa(t)), t !== null && vu(t)),
      e)
    : ((e.eventSystemFlags |= s),
      (t = e.targetContainers),
      c !== null && t.indexOf(c) === -1 && t.push(c),
      e);
}
function x0(e, t, r, s, c) {
  switch (t) {
    case "focusin":
      return (_i = vr(_i, e, t, r, s, c)), !0;
    case "dragenter":
      return (Hi = vr(Hi, e, t, r, s, c)), !0;
    case "mouseover":
      return (Xi = vr(Xi, e, t, r, s, c)), !0;
    case "pointerover":
      var f = c.pointerId;
      return qr.set(f, vr(qr.get(f) || null, e, t, r, s, c)), !0;
    case "gotpointercapture":
      return (
        (f = c.pointerId), Zr.set(f, vr(Zr.get(f) || null, e, t, r, s, c)), !0
      );
  }
  return !1;
}
function xg(e) {
  var t = hn(e.target);
  if (t !== null) {
    var r = An(t);
    if (r !== null) {
      if (((t = r.tag), t === 13)) {
        if (((t = ag(r)), t !== null)) {
          (e.blockedOn = t),
            mg(e.priority, function () {
              pg(r);
            });
          return;
        }
      } else if (t === 3 && r.stateNode.current.memoizedState.isDehydrated) {
        e.blockedOn = r.tag === 3 ? r.stateNode.containerInfo : null;
        return;
      }
    }
  }
  e.blockedOn = null;
}
function Qa(e) {
  if (e.blockedOn !== null) return !1;
  for (var t = e.targetContainers; 0 < t.length; ) {
    var r = tc(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
    if (r === null) {
      r = e.nativeEvent;
      var s = new r.constructor(r.type, r);
      (ql = s), r.target.dispatchEvent(s), (ql = null);
    } else return (t = xa(r)), t !== null && vu(t), (e.blockedOn = r), !1;
    t.shift();
  }
  return !0;
}
function rd(e, t, r) {
  Qa(e) && r.delete(t);
}
function v0() {
  (ec = !1),
    _i !== null && Qa(_i) && (_i = null),
    Hi !== null && Qa(Hi) && (Hi = null),
    Xi !== null && Qa(Xi) && (Xi = null),
    qr.forEach(rd),
    Zr.forEach(rd);
}
function yr(e, t) {
  e.blockedOn === t &&
    ((e.blockedOn = null),
    ec ||
      ((ec = !0),
      Rt.unstable_scheduleCallback(Rt.unstable_NormalPriority, v0)));
}
function Kr(e) {
  function t(c) {
    return yr(c, e);
  }
  if (0 < za.length) {
    yr(za[0], e);
    for (var r = 1; r < za.length; r++) {
      var s = za[r];
      s.blockedOn === e && (s.blockedOn = null);
    }
  }
  for (
    _i !== null && yr(_i, e),
      Hi !== null && yr(Hi, e),
      Xi !== null && yr(Xi, e),
      qr.forEach(t),
      Zr.forEach(t),
      r = 0;
    r < Ii.length;
    r++
  )
    (s = Ii[r]), s.blockedOn === e && (s.blockedOn = null);
  for (; 0 < Ii.length && ((r = Ii[0]), r.blockedOn === null); )
    xg(r), r.blockedOn === null && Ii.shift();
}
var Kn = Ai.ReactCurrentBatchConfig,
  gs = !0;
function y0(e, t, r, s) {
  var c = Ee,
    f = Kn.transition;
  Kn.transition = null;
  try {
    (Ee = 1), yu(e, t, r, s);
  } finally {
    (Ee = c), (Kn.transition = f);
  }
}
function b0(e, t, r, s) {
  var c = Ee,
    f = Kn.transition;
  Kn.transition = null;
  try {
    (Ee = 4), yu(e, t, r, s);
  } finally {
    (Ee = c), (Kn.transition = f);
  }
}
function yu(e, t, r, s) {
  if (gs) {
    var c = tc(e, t, r, s);
    if (c === null) il(e, t, s, ms, r), nd(e, s);
    else if (x0(c, e, t, r, s)) s.stopPropagation();
    else if ((nd(e, s), t & 4 && -1 < m0.indexOf(e))) {
      for (; c !== null; ) {
        var f = xa(c);
        if (
          (f !== null && fg(f),
          (f = tc(e, t, r, s)),
          f === null && il(e, t, s, ms, r),
          f === c)
        )
          break;
        c = f;
      }
      c !== null && s.stopPropagation();
    } else il(e, t, s, null, r);
  }
}
var ms = null;
function tc(e, t, r, s) {
  if (((ms = null), (e = gu(s)), (e = hn(e)), e !== null))
    if (((t = An(e)), t === null)) e = null;
    else if (((r = t.tag), r === 13)) {
      if (((e = ag(t)), e !== null)) return e;
      e = null;
    } else if (r === 3) {
      if (t.stateNode.current.memoizedState.isDehydrated)
        return t.tag === 3 ? t.stateNode.containerInfo : null;
      e = null;
    } else t !== e && (e = null);
  return (ms = e), null;
}
function vg(e) {
  switch (e) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (o0()) {
        case mu:
          return 1;
        case cg:
          return 4;
        case fs:
        case l0:
          return 16;
        case ug:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var Ni = null,
  bu = null,
  Ja = null;
function yg() {
  if (Ja) return Ja;
  var e,
    t = bu,
    r = t.length,
    s,
    c = "value" in Ni ? Ni.value : Ni.textContent,
    f = c.length;
  for (e = 0; e < r && t[e] === c[e]; e++);
  var m = r - e;
  for (s = 1; s <= m && t[r - s] === c[f - s]; s++);
  return (Ja = c.slice(e, 1 < s ? 1 - s : void 0));
}
function es(e) {
  var t = e.keyCode;
  return (
    "charCode" in e
      ? ((e = e.charCode), e === 0 && t === 13 && (e = 13))
      : (e = t),
    e === 10 && (e = 13),
    32 <= e || e === 13 ? e : 0
  );
}
function Ia() {
  return !0;
}
function ad() {
  return !1;
}
function Dt(e) {
  function t(r, s, c, f, m) {
    (this._reactName = r),
      (this._targetInst = c),
      (this.type = s),
      (this.nativeEvent = f),
      (this.target = m),
      (this.currentTarget = null);
    for (var y in e)
      e.hasOwnProperty(y) && ((r = e[y]), (this[y] = r ? r(f) : f[y]));
    return (
      (this.isDefaultPrevented = (
        f.defaultPrevented != null ? f.defaultPrevented : f.returnValue === !1
      )
        ? Ia
        : ad),
      (this.isPropagationStopped = ad),
      this
    );
  }
  return (
    Ue(t.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var r = this.nativeEvent;
        r &&
          (r.preventDefault
            ? r.preventDefault()
            : typeof r.returnValue != "unknown" && (r.returnValue = !1),
          (this.isDefaultPrevented = Ia));
      },
      stopPropagation: function () {
        var r = this.nativeEvent;
        r &&
          (r.stopPropagation
            ? r.stopPropagation()
            : typeof r.cancelBubble != "unknown" && (r.cancelBubble = !0),
          (this.isPropagationStopped = Ia));
      },
      persist: function () {},
      isPersistent: Ia,
    }),
    t
  );
}
var fr = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (e) {
      return e.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  wu = Dt(fr),
  ma = Ue({}, fr, { view: 0, detail: 0 }),
  w0 = Dt(ma),
  Uo,
  $o,
  br,
  to = Ue({}, ma, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: Su,
    button: 0,
    buttons: 0,
    relatedTarget: function (e) {
      return e.relatedTarget === void 0
        ? e.fromElement === e.srcElement
          ? e.toElement
          : e.fromElement
        : e.relatedTarget;
    },
    movementX: function (e) {
      return "movementX" in e
        ? e.movementX
        : (e !== br &&
            (br && e.type === "mousemove"
              ? ((Uo = e.screenX - br.screenX), ($o = e.screenY - br.screenY))
              : ($o = Uo = 0),
            (br = e)),
          Uo);
    },
    movementY: function (e) {
      return "movementY" in e ? e.movementY : $o;
    },
  }),
  sd = Dt(to),
  S0 = Ue({}, to, { dataTransfer: 0 }),
  k0 = Dt(S0),
  C0 = Ue({}, ma, { relatedTarget: 0 }),
  qo = Dt(C0),
  A0 = Ue({}, fr, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  P0 = Dt(A0),
  T0 = Ue({}, fr, {
    clipboardData: function (e) {
      return "clipboardData" in e ? e.clipboardData : window.clipboardData;
    },
  }),
  L0 = Dt(T0),
  E0 = Ue({}, fr, { data: 0 }),
  od = Dt(E0),
  M0 = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified",
  },
  O0 = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta",
  },
  R0 = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey",
  };
function z0(e) {
  var t = this.nativeEvent;
  return t.getModifierState ? t.getModifierState(e) : (e = R0[e]) ? !!t[e] : !1;
}
function Su() {
  return z0;
}
var I0 = Ue({}, ma, {
    key: function (e) {
      if (e.key) {
        var t = M0[e.key] || e.key;
        if (t !== "Unidentified") return t;
      }
      return e.type === "keypress"
        ? ((e = es(e)), e === 13 ? "Enter" : String.fromCharCode(e))
        : e.type === "keydown" || e.type === "keyup"
        ? O0[e.keyCode] || "Unidentified"
        : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: Su,
    charCode: function (e) {
      return e.type === "keypress" ? es(e) : 0;
    },
    keyCode: function (e) {
      return e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0;
    },
    which: function (e) {
      return e.type === "keypress"
        ? es(e)
        : e.type === "keydown" || e.type === "keyup"
        ? e.keyCode
        : 0;
    },
  }),
  D0 = Dt(I0),
  N0 = Ue({}, to, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  ld = Dt(N0),
  F0 = Ue({}, ma, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: Su,
  }),
  _0 = Dt(F0),
  H0 = Ue({}, fr, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  X0 = Dt(H0),
  j0 = Ue({}, to, {
    deltaX: function (e) {
      return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0;
    },
    deltaY: function (e) {
      return "deltaY" in e
        ? e.deltaY
        : "wheelDeltaY" in e
        ? -e.wheelDeltaY
        : "wheelDelta" in e
        ? -e.wheelDelta
        : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  B0 = Dt(j0),
  V0 = [9, 13, 27, 32],
  ku = bi && "CompositionEvent" in window,
  Ir = null;
bi && "documentMode" in document && (Ir = document.documentMode);
var Y0 = bi && "TextEvent" in window && !Ir,
  bg = bi && (!ku || (Ir && 8 < Ir && 11 >= Ir)),
  cd = String.fromCharCode(32),
  ud = !1;
function wg(e, t) {
  switch (e) {
    case "keyup":
      return V0.indexOf(t.keyCode) !== -1;
    case "keydown":
      return t.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function Sg(e) {
  return (e = e.detail), typeof e == "object" && "data" in e ? e.data : null;
}
var In = !1;
function W0(e, t) {
  switch (e) {
    case "compositionend":
      return Sg(t);
    case "keypress":
      return t.which !== 32 ? null : ((ud = !0), cd);
    case "textInput":
      return (e = t.data), e === cd && ud ? null : e;
    default:
      return null;
  }
}
function G0(e, t) {
  if (In)
    return e === "compositionend" || (!ku && wg(e, t))
      ? ((e = yg()), (Ja = bu = Ni = null), (In = !1), e)
      : null;
  switch (e) {
    case "paste":
      return null;
    case "keypress":
      if (!(t.ctrlKey || t.altKey || t.metaKey) || (t.ctrlKey && t.altKey)) {
        if (t.char && 1 < t.char.length) return t.char;
        if (t.which) return String.fromCharCode(t.which);
      }
      return null;
    case "compositionend":
      return bg && t.locale !== "ko" ? null : t.data;
    default:
      return null;
  }
}
var U0 = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function hd(e) {
  var t = e && e.nodeName && e.nodeName.toLowerCase();
  return t === "input" ? !!U0[e.type] : t === "textarea";
}
function kg(e, t, r, s) {
  eg(s),
    (t = xs(t, "onChange")),
    0 < t.length &&
      ((r = new wu("onChange", "change", null, r, s)),
      e.push({ event: r, listeners: t }));
}
var Dr = null,
  Qr = null;
function $0(e) {
  Ig(e, 0);
}
function io(e) {
  var t = Fn(e);
  if (Up(t)) return e;
}
function q0(e, t) {
  if (e === "change") return t;
}
var Cg = !1;
if (bi) {
  var Zo;
  if (bi) {
    var Ko = "oninput" in document;
    if (!Ko) {
      var dd = document.createElement("div");
      dd.setAttribute("oninput", "return;"),
        (Ko = typeof dd.oninput == "function");
    }
    Zo = Ko;
  } else Zo = !1;
  Cg = Zo && (!document.documentMode || 9 < document.documentMode);
}
function fd() {
  Dr && (Dr.detachEvent("onpropertychange", Ag), (Qr = Dr = null));
}
function Ag(e) {
  if (e.propertyName === "value" && io(Qr)) {
    var t = [];
    kg(t, Qr, e, gu(e)), rg($0, t);
  }
}
function Z0(e, t, r) {
  e === "focusin"
    ? (fd(), (Dr = t), (Qr = r), Dr.attachEvent("onpropertychange", Ag))
    : e === "focusout" && fd();
}
function K0(e) {
  if (e === "selectionchange" || e === "keyup" || e === "keydown")
    return io(Qr);
}
function Q0(e, t) {
  if (e === "click") return io(t);
}
function J0(e, t) {
  if (e === "input" || e === "change") return io(t);
}
function eb(e, t) {
  return (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t);
}
var Kt = typeof Object.is == "function" ? Object.is : eb;
function Jr(e, t) {
  if (Kt(e, t)) return !0;
  if (typeof e != "object" || e === null || typeof t != "object" || t === null)
    return !1;
  var r = Object.keys(e),
    s = Object.keys(t);
  if (r.length !== s.length) return !1;
  for (s = 0; s < r.length; s++) {
    var c = r[s];
    if (!Fl.call(t, c) || !Kt(e[c], t[c])) return !1;
  }
  return !0;
}
function pd(e) {
  for (; e && e.firstChild; ) e = e.firstChild;
  return e;
}
function gd(e, t) {
  var r = pd(e);
  e = 0;
  for (var s; r; ) {
    if (r.nodeType === 3) {
      if (((s = e + r.textContent.length), e <= t && s >= t))
        return { node: r, offset: t - e };
      e = s;
    }
    e: {
      for (; r; ) {
        if (r.nextSibling) {
          r = r.nextSibling;
          break e;
        }
        r = r.parentNode;
      }
      r = void 0;
    }
    r = pd(r);
  }
}
function Pg(e, t) {
  return e && t
    ? e === t
      ? !0
      : e && e.nodeType === 3
      ? !1
      : t && t.nodeType === 3
      ? Pg(e, t.parentNode)
      : "contains" in e
      ? e.contains(t)
      : e.compareDocumentPosition
      ? !!(e.compareDocumentPosition(t) & 16)
      : !1
    : !1;
}
function Tg() {
  for (var e = window, t = us(); t instanceof e.HTMLIFrameElement; ) {
    try {
      var r = typeof t.contentWindow.location.href == "string";
    } catch {
      r = !1;
    }
    if (r) e = t.contentWindow;
    else break;
    t = us(e.document);
  }
  return t;
}
function Cu(e) {
  var t = e && e.nodeName && e.nodeName.toLowerCase();
  return (
    t &&
    ((t === "input" &&
      (e.type === "text" ||
        e.type === "search" ||
        e.type === "tel" ||
        e.type === "url" ||
        e.type === "password")) ||
      t === "textarea" ||
      e.contentEditable === "true")
  );
}
function tb(e) {
  var t = Tg(),
    r = e.focusedElem,
    s = e.selectionRange;
  if (
    t !== r &&
    r &&
    r.ownerDocument &&
    Pg(r.ownerDocument.documentElement, r)
  ) {
    if (s !== null && Cu(r)) {
      if (
        ((t = s.start),
        (e = s.end),
        e === void 0 && (e = t),
        "selectionStart" in r)
      )
        (r.selectionStart = t), (r.selectionEnd = Math.min(e, r.value.length));
      else if (
        ((e = ((t = r.ownerDocument || document) && t.defaultView) || window),
        e.getSelection)
      ) {
        e = e.getSelection();
        var c = r.textContent.length,
          f = Math.min(s.start, c);
        (s = s.end === void 0 ? f : Math.min(s.end, c)),
          !e.extend && f > s && ((c = s), (s = f), (f = c)),
          (c = gd(r, f));
        var m = gd(r, s);
        c &&
          m &&
          (e.rangeCount !== 1 ||
            e.anchorNode !== c.node ||
            e.anchorOffset !== c.offset ||
            e.focusNode !== m.node ||
            e.focusOffset !== m.offset) &&
          ((t = t.createRange()),
          t.setStart(c.node, c.offset),
          e.removeAllRanges(),
          f > s
            ? (e.addRange(t), e.extend(m.node, m.offset))
            : (t.setEnd(m.node, m.offset), e.addRange(t)));
      }
    }
    for (t = [], e = r; (e = e.parentNode); )
      e.nodeType === 1 &&
        t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
    for (typeof r.focus == "function" && r.focus(), r = 0; r < t.length; r++)
      (e = t[r]),
        (e.element.scrollLeft = e.left),
        (e.element.scrollTop = e.top);
  }
}
var ib = bi && "documentMode" in document && 11 >= document.documentMode,
  Dn = null,
  ic = null,
  Nr = null,
  nc = !1;
function md(e, t, r) {
  var s = r.window === r ? r.document : r.nodeType === 9 ? r : r.ownerDocument;
  nc ||
    Dn == null ||
    Dn !== us(s) ||
    ((s = Dn),
    "selectionStart" in s && Cu(s)
      ? (s = { start: s.selectionStart, end: s.selectionEnd })
      : ((s = (
          (s.ownerDocument && s.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (s = {
          anchorNode: s.anchorNode,
          anchorOffset: s.anchorOffset,
          focusNode: s.focusNode,
          focusOffset: s.focusOffset,
        })),
    (Nr && Jr(Nr, s)) ||
      ((Nr = s),
      (s = xs(ic, "onSelect")),
      0 < s.length &&
        ((t = new wu("onSelect", "select", null, t, r)),
        e.push({ event: t, listeners: s }),
        (t.target = Dn))));
}
function Da(e, t) {
  var r = {};
  return (
    (r[e.toLowerCase()] = t.toLowerCase()),
    (r["Webkit" + e] = "webkit" + t),
    (r["Moz" + e] = "moz" + t),
    r
  );
}
var Nn = {
    animationend: Da("Animation", "AnimationEnd"),
    animationiteration: Da("Animation", "AnimationIteration"),
    animationstart: Da("Animation", "AnimationStart"),
    transitionend: Da("Transition", "TransitionEnd"),
  },
  Qo = {},
  Lg = {};
bi &&
  ((Lg = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete Nn.animationend.animation,
    delete Nn.animationiteration.animation,
    delete Nn.animationstart.animation),
  "TransitionEvent" in window || delete Nn.transitionend.transition);
function no(e) {
  if (Qo[e]) return Qo[e];
  if (!Nn[e]) return e;
  var t = Nn[e],
    r;
  for (r in t) if (t.hasOwnProperty(r) && r in Lg) return (Qo[e] = t[r]);
  return e;
}
var Eg = no("animationend"),
  Mg = no("animationiteration"),
  Og = no("animationstart"),
  Rg = no("transitionend"),
  zg = new Map(),
  xd =
    "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
      " "
    );
function Ji(e, t) {
  zg.set(e, t), Cn(t, [e]);
}
for (var Jo = 0; Jo < xd.length; Jo++) {
  var el = xd[Jo],
    nb = el.toLowerCase(),
    rb = el[0].toUpperCase() + el.slice(1);
  Ji(nb, "on" + rb);
}
Ji(Eg, "onAnimationEnd");
Ji(Mg, "onAnimationIteration");
Ji(Og, "onAnimationStart");
Ji("dblclick", "onDoubleClick");
Ji("focusin", "onFocus");
Ji("focusout", "onBlur");
Ji(Rg, "onTransitionEnd");
tr("onMouseEnter", ["mouseout", "mouseover"]);
tr("onMouseLeave", ["mouseout", "mouseover"]);
tr("onPointerEnter", ["pointerout", "pointerover"]);
tr("onPointerLeave", ["pointerout", "pointerover"]);
Cn(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(" ")
);
Cn(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " "
  )
);
Cn("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
Cn(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" ")
);
Cn(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" ")
);
Cn(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
);
var Mr =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " "
    ),
  ab = new Set("cancel close invalid load scroll toggle".split(" ").concat(Mr));
function vd(e, t, r) {
  var s = e.type || "unknown-event";
  (e.currentTarget = r), n0(s, t, void 0, e), (e.currentTarget = null);
}
function Ig(e, t) {
  t = (t & 4) !== 0;
  for (var r = 0; r < e.length; r++) {
    var s = e[r],
      c = s.event;
    s = s.listeners;
    e: {
      var f = void 0;
      if (t)
        for (var m = s.length - 1; 0 <= m; m--) {
          var y = s[m],
            S = y.instance,
            T = y.currentTarget;
          if (((y = y.listener), S !== f && c.isPropagationStopped())) break e;
          vd(c, y, T), (f = S);
        }
      else
        for (m = 0; m < s.length; m++) {
          if (
            ((y = s[m]),
            (S = y.instance),
            (T = y.currentTarget),
            (y = y.listener),
            S !== f && c.isPropagationStopped())
          )
            break e;
          vd(c, y, T), (f = S);
        }
    }
  }
  if (ds) throw ((e = Ql), (ds = !1), (Ql = null), e);
}
function Ne(e, t) {
  var r = t[lc];
  r === void 0 && (r = t[lc] = new Set());
  var s = e + "__bubble";
  r.has(s) || (Dg(t, e, 2, !1), r.add(s));
}
function tl(e, t, r) {
  var s = 0;
  t && (s |= 4), Dg(r, e, s, t);
}
var Na = "_reactListening" + Math.random().toString(36).slice(2);
function ea(e) {
  if (!e[Na]) {
    (e[Na] = !0),
      Bp.forEach(function (r) {
        r !== "selectionchange" && (ab.has(r) || tl(r, !1, e), tl(r, !0, e));
      });
    var t = e.nodeType === 9 ? e : e.ownerDocument;
    t === null || t[Na] || ((t[Na] = !0), tl("selectionchange", !1, t));
  }
}
function Dg(e, t, r, s) {
  switch (vg(t)) {
    case 1:
      var c = y0;
      break;
    case 4:
      c = b0;
      break;
    default:
      c = yu;
  }
  (r = c.bind(null, t, r, e)),
    (c = void 0),
    !Kl ||
      (t !== "touchstart" && t !== "touchmove" && t !== "wheel") ||
      (c = !0),
    s
      ? c !== void 0
        ? e.addEventListener(t, r, { capture: !0, passive: c })
        : e.addEventListener(t, r, !0)
      : c !== void 0
      ? e.addEventListener(t, r, { passive: c })
      : e.addEventListener(t, r, !1);
}
function il(e, t, r, s, c) {
  var f = s;
  if (!(t & 1) && !(t & 2) && s !== null)
    e: for (;;) {
      if (s === null) return;
      var m = s.tag;
      if (m === 3 || m === 4) {
        var y = s.stateNode.containerInfo;
        if (y === c || (y.nodeType === 8 && y.parentNode === c)) break;
        if (m === 4)
          for (m = s.return; m !== null; ) {
            var S = m.tag;
            if (
              (S === 3 || S === 4) &&
              ((S = m.stateNode.containerInfo),
              S === c || (S.nodeType === 8 && S.parentNode === c))
            )
              return;
            m = m.return;
          }
        for (; y !== null; ) {
          if (((m = hn(y)), m === null)) return;
          if (((S = m.tag), S === 5 || S === 6)) {
            s = f = m;
            continue e;
          }
          y = y.parentNode;
        }
      }
      s = s.return;
    }
  rg(function () {
    var T = f,
      O = gu(r),
      z = [];
    e: {
      var N = zg.get(e);
      if (N !== void 0) {
        var X = wu,
          V = e;
        switch (e) {
          case "keypress":
            if (es(r) === 0) break e;
          case "keydown":
          case "keyup":
            X = D0;
            break;
          case "focusin":
            (V = "focus"), (X = qo);
            break;
          case "focusout":
            (V = "blur"), (X = qo);
            break;
          case "beforeblur":
          case "afterblur":
            X = qo;
            break;
          case "click":
            if (r.button === 2) break e;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            X = sd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            X = k0;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            X = _0;
            break;
          case Eg:
          case Mg:
          case Og:
            X = P0;
            break;
          case Rg:
            X = X0;
            break;
          case "scroll":
            X = w0;
            break;
          case "wheel":
            X = B0;
            break;
          case "copy":
          case "cut":
          case "paste":
            X = L0;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            X = ld;
        }
        var Y = (t & 4) !== 0,
          Q = !Y && e === "scroll",
          j = Y ? (N !== null ? N + "Capture" : null) : N;
        Y = [];
        for (var L = T, H; L !== null; ) {
          H = L;
          var U = H.stateNode;
          if (
            (H.tag === 5 &&
              U !== null &&
              ((H = U),
              j !== null && ((U = $r(L, j)), U != null && Y.push(ta(L, U, H)))),
            Q)
          )
            break;
          L = L.return;
        }
        0 < Y.length &&
          ((N = new X(N, V, null, r, O)), z.push({ event: N, listeners: Y }));
      }
    }
    if (!(t & 7)) {
      e: {
        if (
          ((N = e === "mouseover" || e === "pointerover"),
          (X = e === "mouseout" || e === "pointerout"),
          N &&
            r !== ql &&
            (V = r.relatedTarget || r.fromElement) &&
            (hn(V) || V[wi]))
        )
          break e;
        if (
          (X || N) &&
          ((N =
            O.window === O
              ? O
              : (N = O.ownerDocument)
              ? N.defaultView || N.parentWindow
              : window),
          X
            ? ((V = r.relatedTarget || r.toElement),
              (X = T),
              (V = V ? hn(V) : null),
              V !== null &&
                ((Q = An(V)), V !== Q || (V.tag !== 5 && V.tag !== 6)) &&
                (V = null))
            : ((X = null), (V = T)),
          X !== V)
        ) {
          if (
            ((Y = sd),
            (U = "onMouseLeave"),
            (j = "onMouseEnter"),
            (L = "mouse"),
            (e === "pointerout" || e === "pointerover") &&
              ((Y = ld),
              (U = "onPointerLeave"),
              (j = "onPointerEnter"),
              (L = "pointer")),
            (Q = X == null ? N : Fn(X)),
            (H = V == null ? N : Fn(V)),
            (N = new Y(U, L + "leave", X, r, O)),
            (N.target = Q),
            (N.relatedTarget = H),
            (U = null),
            hn(O) === T &&
              ((Y = new Y(j, L + "enter", V, r, O)),
              (Y.target = H),
              (Y.relatedTarget = Q),
              (U = Y)),
            (Q = U),
            X && V)
          )
            t: {
              for (Y = X, j = V, L = 0, H = Y; H; H = Mn(H)) L++;
              for (H = 0, U = j; U; U = Mn(U)) H++;
              for (; 0 < L - H; ) (Y = Mn(Y)), L--;
              for (; 0 < H - L; ) (j = Mn(j)), H--;
              for (; L--; ) {
                if (Y === j || (j !== null && Y === j.alternate)) break t;
                (Y = Mn(Y)), (j = Mn(j));
              }
              Y = null;
            }
          else Y = null;
          X !== null && yd(z, N, X, Y, !1),
            V !== null && Q !== null && yd(z, Q, V, Y, !0);
        }
      }
      e: {
        if (
          ((N = T ? Fn(T) : window),
          (X = N.nodeName && N.nodeName.toLowerCase()),
          X === "select" || (X === "input" && N.type === "file"))
        )
          var B = q0;
        else if (hd(N))
          if (Cg) B = J0;
          else {
            B = K0;
            var K = Z0;
          }
        else
          (X = N.nodeName) &&
            X.toLowerCase() === "input" &&
            (N.type === "checkbox" || N.type === "radio") &&
            (B = Q0);
        if (B && (B = B(e, T))) {
          kg(z, B, r, O);
          break e;
        }
        K && K(e, N, T),
          e === "focusout" &&
            (K = N._wrapperState) &&
            K.controlled &&
            N.type === "number" &&
            Yl(N, "number", N.value);
      }
      switch (((K = T ? Fn(T) : window), e)) {
        case "focusin":
          (hd(K) || K.contentEditable === "true") &&
            ((Dn = K), (ic = T), (Nr = null));
          break;
        case "focusout":
          Nr = ic = Dn = null;
          break;
        case "mousedown":
          nc = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          (nc = !1), md(z, r, O);
          break;
        case "selectionchange":
          if (ib) break;
        case "keydown":
        case "keyup":
          md(z, r, O);
      }
      var te;
      if (ku)
        e: {
          switch (e) {
            case "compositionstart":
              var q = "onCompositionStart";
              break e;
            case "compositionend":
              q = "onCompositionEnd";
              break e;
            case "compositionupdate":
              q = "onCompositionUpdate";
              break e;
          }
          q = void 0;
        }
      else
        In
          ? wg(e, r) && (q = "onCompositionEnd")
          : e === "keydown" && r.keyCode === 229 && (q = "onCompositionStart");
      q &&
        (bg &&
          r.locale !== "ko" &&
          (In || q !== "onCompositionStart"
            ? q === "onCompositionEnd" && In && (te = yg())
            : ((Ni = O),
              (bu = "value" in Ni ? Ni.value : Ni.textContent),
              (In = !0))),
        (K = xs(T, q)),
        0 < K.length &&
          ((q = new od(q, e, null, r, O)),
          z.push({ event: q, listeners: K }),
          te ? (q.data = te) : ((te = Sg(r)), te !== null && (q.data = te)))),
        (te = Y0 ? W0(e, r) : G0(e, r)) &&
          ((T = xs(T, "onBeforeInput")),
          0 < T.length &&
            ((O = new od("onBeforeInput", "beforeinput", null, r, O)),
            z.push({ event: O, listeners: T }),
            (O.data = te)));
    }
    Ig(z, t);
  });
}
function ta(e, t, r) {
  return { instance: e, listener: t, currentTarget: r };
}
function xs(e, t) {
  for (var r = t + "Capture", s = []; e !== null; ) {
    var c = e,
      f = c.stateNode;
    c.tag === 5 &&
      f !== null &&
      ((c = f),
      (f = $r(e, r)),
      f != null && s.unshift(ta(e, f, c)),
      (f = $r(e, t)),
      f != null && s.push(ta(e, f, c))),
      (e = e.return);
  }
  return s;
}
function Mn(e) {
  if (e === null) return null;
  do e = e.return;
  while (e && e.tag !== 5);
  return e || null;
}
function yd(e, t, r, s, c) {
  for (var f = t._reactName, m = []; r !== null && r !== s; ) {
    var y = r,
      S = y.alternate,
      T = y.stateNode;
    if (S !== null && S === s) break;
    y.tag === 5 &&
      T !== null &&
      ((y = T),
      c
        ? ((S = $r(r, f)), S != null && m.unshift(ta(r, S, y)))
        : c || ((S = $r(r, f)), S != null && m.push(ta(r, S, y)))),
      (r = r.return);
  }
  m.length !== 0 && e.push({ event: t, listeners: m });
}
var sb = /\r\n?/g,
  ob = /\u0000|\uFFFD/g;
function bd(e) {
  return (typeof e == "string" ? e : "" + e)
    .replace(
      sb,
      `
`
    )
    .replace(ob, "");
}
function Fa(e, t, r) {
  if (((t = bd(t)), bd(e) !== t && r)) throw Error(ne(425));
}
function vs() {}
var rc = null,
  ac = null;
function sc(e, t) {
  return (
    e === "textarea" ||
    e === "noscript" ||
    typeof t.children == "string" ||
    typeof t.children == "number" ||
    (typeof t.dangerouslySetInnerHTML == "object" &&
      t.dangerouslySetInnerHTML !== null &&
      t.dangerouslySetInnerHTML.__html != null)
  );
}
var oc = typeof setTimeout == "function" ? setTimeout : void 0,
  lb = typeof clearTimeout == "function" ? clearTimeout : void 0,
  wd = typeof Promise == "function" ? Promise : void 0,
  cb =
    typeof queueMicrotask == "function"
      ? queueMicrotask
      : typeof wd < "u"
      ? function (e) {
          return wd.resolve(null).then(e).catch(ub);
        }
      : oc;
function ub(e) {
  setTimeout(function () {
    throw e;
  });
}
function nl(e, t) {
  var r = t,
    s = 0;
  do {
    var c = r.nextSibling;
    if ((e.removeChild(r), c && c.nodeType === 8))
      if (((r = c.data), r === "/$")) {
        if (s === 0) {
          e.removeChild(c), Kr(t);
          return;
        }
        s--;
      } else (r !== "$" && r !== "$?" && r !== "$!") || s++;
    r = c;
  } while (r);
  Kr(t);
}
function ji(e) {
  for (; e != null; e = e.nextSibling) {
    var t = e.nodeType;
    if (t === 1 || t === 3) break;
    if (t === 8) {
      if (((t = e.data), t === "$" || t === "$!" || t === "$?")) break;
      if (t === "/$") return null;
    }
  }
  return e;
}
function Sd(e) {
  e = e.previousSibling;
  for (var t = 0; e; ) {
    if (e.nodeType === 8) {
      var r = e.data;
      if (r === "$" || r === "$!" || r === "$?") {
        if (t === 0) return e;
        t--;
      } else r === "/$" && t++;
    }
    e = e.previousSibling;
  }
  return null;
}
var pr = Math.random().toString(36).slice(2),
  ri = "__reactFiber$" + pr,
  ia = "__reactProps$" + pr,
  wi = "__reactContainer$" + pr,
  lc = "__reactEvents$" + pr,
  hb = "__reactListeners$" + pr,
  db = "__reactHandles$" + pr;
function hn(e) {
  var t = e[ri];
  if (t) return t;
  for (var r = e.parentNode; r; ) {
    if ((t = r[wi] || r[ri])) {
      if (
        ((r = t.alternate),
        t.child !== null || (r !== null && r.child !== null))
      )
        for (e = Sd(e); e !== null; ) {
          if ((r = e[ri])) return r;
          e = Sd(e);
        }
      return t;
    }
    (e = r), (r = e.parentNode);
  }
  return null;
}
function xa(e) {
  return (
    (e = e[ri] || e[wi]),
    !e || (e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3) ? null : e
  );
}
function Fn(e) {
  if (e.tag === 5 || e.tag === 6) return e.stateNode;
  throw Error(ne(33));
}
function ro(e) {
  return e[ia] || null;
}
var cc = [],
  _n = -1;
function en(e) {
  return { current: e };
}
function Fe(e) {
  0 > _n || ((e.current = cc[_n]), (cc[_n] = null), _n--);
}
function Ie(e, t) {
  _n++, (cc[_n] = e.current), (e.current = t);
}
var Zi = {},
  ft = en(Zi),
  Ct = en(!1),
  yn = Zi;
function ir(e, t) {
  var r = e.type.contextTypes;
  if (!r) return Zi;
  var s = e.stateNode;
  if (s && s.__reactInternalMemoizedUnmaskedChildContext === t)
    return s.__reactInternalMemoizedMaskedChildContext;
  var c = {},
    f;
  for (f in r) c[f] = t[f];
  return (
    s &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = t),
      (e.__reactInternalMemoizedMaskedChildContext = c)),
    c
  );
}
function At(e) {
  return (e = e.childContextTypes), e != null;
}
function ys() {
  Fe(Ct), Fe(ft);
}
function kd(e, t, r) {
  if (ft.current !== Zi) throw Error(ne(168));
  Ie(ft, t), Ie(Ct, r);
}
function Ng(e, t, r) {
  var s = e.stateNode;
  if (((t = t.childContextTypes), typeof s.getChildContext != "function"))
    return r;
  s = s.getChildContext();
  for (var c in s) if (!(c in t)) throw Error(ne(108, Zy(e) || "Unknown", c));
  return Ue({}, r, s);
}
function bs(e) {
  return (
    (e =
      ((e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext) || Zi),
    (yn = ft.current),
    Ie(ft, e),
    Ie(Ct, Ct.current),
    !0
  );
}
function Cd(e, t, r) {
  var s = e.stateNode;
  if (!s) throw Error(ne(169));
  r
    ? ((e = Ng(e, t, yn)),
      (s.__reactInternalMemoizedMergedChildContext = e),
      Fe(Ct),
      Fe(ft),
      Ie(ft, e))
    : Fe(Ct),
    Ie(Ct, r);
}
var fi = null,
  ao = !1,
  rl = !1;
function Fg(e) {
  fi === null ? (fi = [e]) : fi.push(e);
}
function fb(e) {
  (ao = !0), Fg(e);
}
function tn() {
  if (!rl && fi !== null) {
    rl = !0;
    var e = 0,
      t = Ee;
    try {
      var r = fi;
      for (Ee = 1; e < r.length; e++) {
        var s = r[e];
        do s = s(!0);
        while (s !== null);
      }
      (fi = null), (ao = !1);
    } catch (c) {
      throw (fi !== null && (fi = fi.slice(e + 1)), lg(mu, tn), c);
    } finally {
      (Ee = t), (rl = !1);
    }
  }
  return null;
}
var Hn = [],
  Xn = 0,
  ws = null,
  Ss = 0,
  Ft = [],
  _t = 0,
  bn = null,
  pi = 1,
  gi = "";
function on(e, t) {
  (Hn[Xn++] = Ss), (Hn[Xn++] = ws), (ws = e), (Ss = t);
}
function _g(e, t, r) {
  (Ft[_t++] = pi), (Ft[_t++] = gi), (Ft[_t++] = bn), (bn = e);
  var s = pi;
  e = gi;
  var c = 32 - qt(s) - 1;
  (s &= ~(1 << c)), (r += 1);
  var f = 32 - qt(t) + c;
  if (30 < f) {
    var m = c - (c % 5);
    (f = (s & ((1 << m) - 1)).toString(32)),
      (s >>= m),
      (c -= m),
      (pi = (1 << (32 - qt(t) + c)) | (r << c) | s),
      (gi = f + e);
  } else (pi = (1 << f) | (r << c) | s), (gi = e);
}
function Au(e) {
  e.return !== null && (on(e, 1), _g(e, 1, 0));
}
function Pu(e) {
  for (; e === ws; )
    (ws = Hn[--Xn]), (Hn[Xn] = null), (Ss = Hn[--Xn]), (Hn[Xn] = null);
  for (; e === bn; )
    (bn = Ft[--_t]),
      (Ft[_t] = null),
      (gi = Ft[--_t]),
      (Ft[_t] = null),
      (pi = Ft[--_t]),
      (Ft[_t] = null);
}
var Ot = null,
  Mt = null,
  He = !1,
  Ut = null;
function Hg(e, t) {
  var r = Ht(5, null, null, 0);
  (r.elementType = "DELETED"),
    (r.stateNode = t),
    (r.return = e),
    (t = e.deletions),
    t === null ? ((e.deletions = [r]), (e.flags |= 16)) : t.push(r);
}
function Ad(e, t) {
  switch (e.tag) {
    case 5:
      var r = e.type;
      return (
        (t =
          t.nodeType !== 1 || r.toLowerCase() !== t.nodeName.toLowerCase()
            ? null
            : t),
        t !== null
          ? ((e.stateNode = t), (Ot = e), (Mt = ji(t.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (t = e.pendingProps === "" || t.nodeType !== 3 ? null : t),
        t !== null ? ((e.stateNode = t), (Ot = e), (Mt = null), !0) : !1
      );
    case 13:
      return (
        (t = t.nodeType !== 8 ? null : t),
        t !== null
          ? ((r = bn !== null ? { id: pi, overflow: gi } : null),
            (e.memoizedState = {
              dehydrated: t,
              treeContext: r,
              retryLane: 1073741824,
            }),
            (r = Ht(18, null, null, 0)),
            (r.stateNode = t),
            (r.return = e),
            (e.child = r),
            (Ot = e),
            (Mt = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function uc(e) {
  return (e.mode & 1) !== 0 && (e.flags & 128) === 0;
}
function hc(e) {
  if (He) {
    var t = Mt;
    if (t) {
      var r = t;
      if (!Ad(e, t)) {
        if (uc(e)) throw Error(ne(418));
        t = ji(r.nextSibling);
        var s = Ot;
        t && Ad(e, t)
          ? Hg(s, r)
          : ((e.flags = (e.flags & -4097) | 2), (He = !1), (Ot = e));
      }
    } else {
      if (uc(e)) throw Error(ne(418));
      (e.flags = (e.flags & -4097) | 2), (He = !1), (Ot = e);
    }
  }
}
function Pd(e) {
  for (e = e.return; e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13; )
    e = e.return;
  Ot = e;
}
function _a(e) {
  if (e !== Ot) return !1;
  if (!He) return Pd(e), (He = !0), !1;
  var t;
  if (
    ((t = e.tag !== 3) &&
      !(t = e.tag !== 5) &&
      ((t = e.type),
      (t = t !== "head" && t !== "body" && !sc(e.type, e.memoizedProps))),
    t && (t = Mt))
  ) {
    if (uc(e)) throw (Xg(), Error(ne(418)));
    for (; t; ) Hg(e, t), (t = ji(t.nextSibling));
  }
  if ((Pd(e), e.tag === 13)) {
    if (((e = e.memoizedState), (e = e !== null ? e.dehydrated : null), !e))
      throw Error(ne(317));
    e: {
      for (e = e.nextSibling, t = 0; e; ) {
        if (e.nodeType === 8) {
          var r = e.data;
          if (r === "/$") {
            if (t === 0) {
              Mt = ji(e.nextSibling);
              break e;
            }
            t--;
          } else (r !== "$" && r !== "$!" && r !== "$?") || t++;
        }
        e = e.nextSibling;
      }
      Mt = null;
    }
  } else Mt = Ot ? ji(e.stateNode.nextSibling) : null;
  return !0;
}
function Xg() {
  for (var e = Mt; e; ) e = ji(e.nextSibling);
}
function nr() {
  (Mt = Ot = null), (He = !1);
}
function Tu(e) {
  Ut === null ? (Ut = [e]) : Ut.push(e);
}
var pb = Ai.ReactCurrentBatchConfig;
function Wt(e, t) {
  if (e && e.defaultProps) {
    (t = Ue({}, t)), (e = e.defaultProps);
    for (var r in e) t[r] === void 0 && (t[r] = e[r]);
    return t;
  }
  return t;
}
var ks = en(null),
  Cs = null,
  jn = null,
  Lu = null;
function Eu() {
  Lu = jn = Cs = null;
}
function Mu(e) {
  var t = ks.current;
  Fe(ks), (e._currentValue = t);
}
function dc(e, t, r) {
  for (; e !== null; ) {
    var s = e.alternate;
    if (
      ((e.childLanes & t) !== t
        ? ((e.childLanes |= t), s !== null && (s.childLanes |= t))
        : s !== null && (s.childLanes & t) !== t && (s.childLanes |= t),
      e === r)
    )
      break;
    e = e.return;
  }
}
function Qn(e, t) {
  (Cs = e),
    (Lu = jn = null),
    (e = e.dependencies),
    e !== null &&
      e.firstContext !== null &&
      (e.lanes & t && (kt = !0), (e.firstContext = null));
}
function jt(e) {
  var t = e._currentValue;
  if (Lu !== e)
    if (((e = { context: e, memoizedValue: t, next: null }), jn === null)) {
      if (Cs === null) throw Error(ne(308));
      (jn = e), (Cs.dependencies = { lanes: 0, firstContext: e });
    } else jn = jn.next = e;
  return t;
}
var dn = null;
function Ou(e) {
  dn === null ? (dn = [e]) : dn.push(e);
}
function jg(e, t, r, s) {
  var c = t.interleaved;
  return (
    c === null ? ((r.next = r), Ou(t)) : ((r.next = c.next), (c.next = r)),
    (t.interleaved = r),
    Si(e, s)
  );
}
function Si(e, t) {
  e.lanes |= t;
  var r = e.alternate;
  for (r !== null && (r.lanes |= t), r = e, e = e.return; e !== null; )
    (e.childLanes |= t),
      (r = e.alternate),
      r !== null && (r.childLanes |= t),
      (r = e),
      (e = e.return);
  return r.tag === 3 ? r.stateNode : null;
}
var Oi = !1;
function Ru(e) {
  e.updateQueue = {
    baseState: e.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function Bg(e, t) {
  (e = e.updateQueue),
    t.updateQueue === e &&
      (t.updateQueue = {
        baseState: e.baseState,
        firstBaseUpdate: e.firstBaseUpdate,
        lastBaseUpdate: e.lastBaseUpdate,
        shared: e.shared,
        effects: e.effects,
      });
}
function xi(e, t) {
  return {
    eventTime: e,
    lane: t,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function Bi(e, t, r) {
  var s = e.updateQueue;
  if (s === null) return null;
  if (((s = s.shared), Te & 2)) {
    var c = s.pending;
    return (
      c === null ? (t.next = t) : ((t.next = c.next), (c.next = t)),
      (s.pending = t),
      Si(e, r)
    );
  }
  return (
    (c = s.interleaved),
    c === null ? ((t.next = t), Ou(s)) : ((t.next = c.next), (c.next = t)),
    (s.interleaved = t),
    Si(e, r)
  );
}
function ts(e, t, r) {
  if (
    ((t = t.updateQueue), t !== null && ((t = t.shared), (r & 4194240) !== 0))
  ) {
    var s = t.lanes;
    (s &= e.pendingLanes), (r |= s), (t.lanes = r), xu(e, r);
  }
}
function Td(e, t) {
  var r = e.updateQueue,
    s = e.alternate;
  if (s !== null && ((s = s.updateQueue), r === s)) {
    var c = null,
      f = null;
    if (((r = r.firstBaseUpdate), r !== null)) {
      do {
        var m = {
          eventTime: r.eventTime,
          lane: r.lane,
          tag: r.tag,
          payload: r.payload,
          callback: r.callback,
          next: null,
        };
        f === null ? (c = f = m) : (f = f.next = m), (r = r.next);
      } while (r !== null);
      f === null ? (c = f = t) : (f = f.next = t);
    } else c = f = t;
    (r = {
      baseState: s.baseState,
      firstBaseUpdate: c,
      lastBaseUpdate: f,
      shared: s.shared,
      effects: s.effects,
    }),
      (e.updateQueue = r);
    return;
  }
  (e = r.lastBaseUpdate),
    e === null ? (r.firstBaseUpdate = t) : (e.next = t),
    (r.lastBaseUpdate = t);
}
function As(e, t, r, s) {
  var c = e.updateQueue;
  Oi = !1;
  var f = c.firstBaseUpdate,
    m = c.lastBaseUpdate,
    y = c.shared.pending;
  if (y !== null) {
    c.shared.pending = null;
    var S = y,
      T = S.next;
    (S.next = null), m === null ? (f = T) : (m.next = T), (m = S);
    var O = e.alternate;
    O !== null &&
      ((O = O.updateQueue),
      (y = O.lastBaseUpdate),
      y !== m &&
        (y === null ? (O.firstBaseUpdate = T) : (y.next = T),
        (O.lastBaseUpdate = S)));
  }
  if (f !== null) {
    var z = c.baseState;
    (m = 0), (O = T = S = null), (y = f);
    do {
      var N = y.lane,
        X = y.eventTime;
      if ((s & N) === N) {
        O !== null &&
          (O = O.next =
            {
              eventTime: X,
              lane: 0,
              tag: y.tag,
              payload: y.payload,
              callback: y.callback,
              next: null,
            });
        e: {
          var V = e,
            Y = y;
          switch (((N = t), (X = r), Y.tag)) {
            case 1:
              if (((V = Y.payload), typeof V == "function")) {
                z = V.call(X, z, N);
                break e;
              }
              z = V;
              break e;
            case 3:
              V.flags = (V.flags & -65537) | 128;
            case 0:
              if (
                ((V = Y.payload),
                (N = typeof V == "function" ? V.call(X, z, N) : V),
                N == null)
              )
                break e;
              z = Ue({}, z, N);
              break e;
            case 2:
              Oi = !0;
          }
        }
        y.callback !== null &&
          y.lane !== 0 &&
          ((e.flags |= 64),
          (N = c.effects),
          N === null ? (c.effects = [y]) : N.push(y));
      } else
        (X = {
          eventTime: X,
          lane: N,
          tag: y.tag,
          payload: y.payload,
          callback: y.callback,
          next: null,
        }),
          O === null ? ((T = O = X), (S = z)) : (O = O.next = X),
          (m |= N);
      if (((y = y.next), y === null)) {
        if (((y = c.shared.pending), y === null)) break;
        (N = y),
          (y = N.next),
          (N.next = null),
          (c.lastBaseUpdate = N),
          (c.shared.pending = null);
      }
    } while (1);
    if (
      (O === null && (S = z),
      (c.baseState = S),
      (c.firstBaseUpdate = T),
      (c.lastBaseUpdate = O),
      (t = c.shared.interleaved),
      t !== null)
    ) {
      c = t;
      do (m |= c.lane), (c = c.next);
      while (c !== t);
    } else f === null && (c.shared.lanes = 0);
    (Sn |= m), (e.lanes = m), (e.memoizedState = z);
  }
}
function Ld(e, t, r) {
  if (((e = t.effects), (t.effects = null), e !== null))
    for (t = 0; t < e.length; t++) {
      var s = e[t],
        c = s.callback;
      if (c !== null) {
        if (((s.callback = null), (s = r), typeof c != "function"))
          throw Error(ne(191, c));
        c.call(s);
      }
    }
}
var Vg = new jp.Component().refs;
function fc(e, t, r, s) {
  (t = e.memoizedState),
    (r = r(s, t)),
    (r = r == null ? t : Ue({}, t, r)),
    (e.memoizedState = r),
    e.lanes === 0 && (e.updateQueue.baseState = r);
}
var so = {
  isMounted: function (e) {
    return (e = e._reactInternals) ? An(e) === e : !1;
  },
  enqueueSetState: function (e, t, r) {
    e = e._reactInternals;
    var s = xt(),
      c = Yi(e),
      f = xi(s, c);
    (f.payload = t),
      r != null && (f.callback = r),
      (t = Bi(e, f, c)),
      t !== null && (Zt(t, e, c, s), ts(t, e, c));
  },
  enqueueReplaceState: function (e, t, r) {
    e = e._reactInternals;
    var s = xt(),
      c = Yi(e),
      f = xi(s, c);
    (f.tag = 1),
      (f.payload = t),
      r != null && (f.callback = r),
      (t = Bi(e, f, c)),
      t !== null && (Zt(t, e, c, s), ts(t, e, c));
  },
  enqueueForceUpdate: function (e, t) {
    e = e._reactInternals;
    var r = xt(),
      s = Yi(e),
      c = xi(r, s);
    (c.tag = 2),
      t != null && (c.callback = t),
      (t = Bi(e, c, s)),
      t !== null && (Zt(t, e, s, r), ts(t, e, s));
  },
};
function Ed(e, t, r, s, c, f, m) {
  return (
    (e = e.stateNode),
    typeof e.shouldComponentUpdate == "function"
      ? e.shouldComponentUpdate(s, f, m)
      : t.prototype && t.prototype.isPureReactComponent
      ? !Jr(r, s) || !Jr(c, f)
      : !0
  );
}
function Yg(e, t, r) {
  var s = !1,
    c = Zi,
    f = t.contextType;
  return (
    typeof f == "object" && f !== null
      ? (f = jt(f))
      : ((c = At(t) ? yn : ft.current),
        (s = t.contextTypes),
        (f = (s = s != null) ? ir(e, c) : Zi)),
    (t = new t(r, f)),
    (e.memoizedState = t.state !== null && t.state !== void 0 ? t.state : null),
    (t.updater = so),
    (e.stateNode = t),
    (t._reactInternals = e),
    s &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = c),
      (e.__reactInternalMemoizedMaskedChildContext = f)),
    t
  );
}
function Md(e, t, r, s) {
  (e = t.state),
    typeof t.componentWillReceiveProps == "function" &&
      t.componentWillReceiveProps(r, s),
    typeof t.UNSAFE_componentWillReceiveProps == "function" &&
      t.UNSAFE_componentWillReceiveProps(r, s),
    t.state !== e && so.enqueueReplaceState(t, t.state, null);
}
function pc(e, t, r, s) {
  var c = e.stateNode;
  (c.props = r), (c.state = e.memoizedState), (c.refs = Vg), Ru(e);
  var f = t.contextType;
  typeof f == "object" && f !== null
    ? (c.context = jt(f))
    : ((f = At(t) ? yn : ft.current), (c.context = ir(e, f))),
    (c.state = e.memoizedState),
    (f = t.getDerivedStateFromProps),
    typeof f == "function" && (fc(e, t, f, r), (c.state = e.memoizedState)),
    typeof t.getDerivedStateFromProps == "function" ||
      typeof c.getSnapshotBeforeUpdate == "function" ||
      (typeof c.UNSAFE_componentWillMount != "function" &&
        typeof c.componentWillMount != "function") ||
      ((t = c.state),
      typeof c.componentWillMount == "function" && c.componentWillMount(),
      typeof c.UNSAFE_componentWillMount == "function" &&
        c.UNSAFE_componentWillMount(),
      t !== c.state && so.enqueueReplaceState(c, c.state, null),
      As(e, r, c, s),
      (c.state = e.memoizedState)),
    typeof c.componentDidMount == "function" && (e.flags |= 4194308);
}
function wr(e, t, r) {
  if (
    ((e = r.ref), e !== null && typeof e != "function" && typeof e != "object")
  ) {
    if (r._owner) {
      if (((r = r._owner), r)) {
        if (r.tag !== 1) throw Error(ne(309));
        var s = r.stateNode;
      }
      if (!s) throw Error(ne(147, e));
      var c = s,
        f = "" + e;
      return t !== null &&
        t.ref !== null &&
        typeof t.ref == "function" &&
        t.ref._stringRef === f
        ? t.ref
        : ((t = function (m) {
            var y = c.refs;
            y === Vg && (y = c.refs = {}),
              m === null ? delete y[f] : (y[f] = m);
          }),
          (t._stringRef = f),
          t);
    }
    if (typeof e != "string") throw Error(ne(284));
    if (!r._owner) throw Error(ne(290, e));
  }
  return e;
}
function Ha(e, t) {
  throw (
    ((e = Object.prototype.toString.call(t)),
    Error(
      ne(
        31,
        e === "[object Object]"
          ? "object with keys {" + Object.keys(t).join(", ") + "}"
          : e
      )
    ))
  );
}
function Od(e) {
  var t = e._init;
  return t(e._payload);
}
function Wg(e) {
  function t(j, L) {
    if (e) {
      var H = j.deletions;
      H === null ? ((j.deletions = [L]), (j.flags |= 16)) : H.push(L);
    }
  }
  function r(j, L) {
    if (!e) return null;
    for (; L !== null; ) t(j, L), (L = L.sibling);
    return null;
  }
  function s(j, L) {
    for (j = new Map(); L !== null; )
      L.key !== null ? j.set(L.key, L) : j.set(L.index, L), (L = L.sibling);
    return j;
  }
  function c(j, L) {
    return (j = Wi(j, L)), (j.index = 0), (j.sibling = null), j;
  }
  function f(j, L, H) {
    return (
      (j.index = H),
      e
        ? ((H = j.alternate),
          H !== null
            ? ((H = H.index), H < L ? ((j.flags |= 2), L) : H)
            : ((j.flags |= 2), L))
        : ((j.flags |= 1048576), L)
    );
  }
  function m(j) {
    return e && j.alternate === null && (j.flags |= 2), j;
  }
  function y(j, L, H, U) {
    return L === null || L.tag !== 6
      ? ((L = hl(H, j.mode, U)), (L.return = j), L)
      : ((L = c(L, H)), (L.return = j), L);
  }
  function S(j, L, H, U) {
    var B = H.type;
    return B === zn
      ? O(j, L, H.props.children, U, H.key)
      : L !== null &&
        (L.elementType === B ||
          (typeof B == "object" &&
            B !== null &&
            B.$$typeof === Mi &&
            Od(B) === L.type))
      ? ((U = c(L, H.props)), (U.ref = wr(j, L, H)), (U.return = j), U)
      : ((U = os(H.type, H.key, H.props, null, j.mode, U)),
        (U.ref = wr(j, L, H)),
        (U.return = j),
        U);
  }
  function T(j, L, H, U) {
    return L === null ||
      L.tag !== 4 ||
      L.stateNode.containerInfo !== H.containerInfo ||
      L.stateNode.implementation !== H.implementation
      ? ((L = dl(H, j.mode, U)), (L.return = j), L)
      : ((L = c(L, H.children || [])), (L.return = j), L);
  }
  function O(j, L, H, U, B) {
    return L === null || L.tag !== 7
      ? ((L = mn(H, j.mode, U, B)), (L.return = j), L)
      : ((L = c(L, H)), (L.return = j), L);
  }
  function z(j, L, H) {
    if ((typeof L == "string" && L !== "") || typeof L == "number")
      return (L = hl("" + L, j.mode, H)), (L.return = j), L;
    if (typeof L == "object" && L !== null) {
      switch (L.$$typeof) {
        case La:
          return (
            (H = os(L.type, L.key, L.props, null, j.mode, H)),
            (H.ref = wr(j, null, L)),
            (H.return = j),
            H
          );
        case Rn:
          return (L = dl(L, j.mode, H)), (L.return = j), L;
        case Mi:
          var U = L._init;
          return z(j, U(L._payload), H);
      }
      if (Lr(L) || mr(L))
        return (L = mn(L, j.mode, H, null)), (L.return = j), L;
      Ha(j, L);
    }
    return null;
  }
  function N(j, L, H, U) {
    var B = L !== null ? L.key : null;
    if ((typeof H == "string" && H !== "") || typeof H == "number")
      return B !== null ? null : y(j, L, "" + H, U);
    if (typeof H == "object" && H !== null) {
      switch (H.$$typeof) {
        case La:
          return H.key === B ? S(j, L, H, U) : null;
        case Rn:
          return H.key === B ? T(j, L, H, U) : null;
        case Mi:
          return (B = H._init), N(j, L, B(H._payload), U);
      }
      if (Lr(H) || mr(H)) return B !== null ? null : O(j, L, H, U, null);
      Ha(j, H);
    }
    return null;
  }
  function X(j, L, H, U, B) {
    if ((typeof U == "string" && U !== "") || typeof U == "number")
      return (j = j.get(H) || null), y(L, j, "" + U, B);
    if (typeof U == "object" && U !== null) {
      switch (U.$$typeof) {
        case La:
          return (j = j.get(U.key === null ? H : U.key) || null), S(L, j, U, B);
        case Rn:
          return (j = j.get(U.key === null ? H : U.key) || null), T(L, j, U, B);
        case Mi:
          var K = U._init;
          return X(j, L, H, K(U._payload), B);
      }
      if (Lr(U) || mr(U)) return (j = j.get(H) || null), O(L, j, U, B, null);
      Ha(L, U);
    }
    return null;
  }
  function V(j, L, H, U) {
    for (
      var B = null, K = null, te = L, q = (L = 0), ie = null;
      te !== null && q < H.length;
      q++
    ) {
      te.index > q ? ((ie = te), (te = null)) : (ie = te.sibling);
      var ae = N(j, te, H[q], U);
      if (ae === null) {
        te === null && (te = ie);
        break;
      }
      e && te && ae.alternate === null && t(j, te),
        (L = f(ae, L, q)),
        K === null ? (B = ae) : (K.sibling = ae),
        (K = ae),
        (te = ie);
    }
    if (q === H.length) return r(j, te), He && on(j, q), B;
    if (te === null) {
      for (; q < H.length; q++)
        (te = z(j, H[q], U)),
          te !== null &&
            ((L = f(te, L, q)),
            K === null ? (B = te) : (K.sibling = te),
            (K = te));
      return He && on(j, q), B;
    }
    for (te = s(j, te); q < H.length; q++)
      (ie = X(te, j, q, H[q], U)),
        ie !== null &&
          (e &&
            ie.alternate !== null &&
            te.delete(ie.key === null ? q : ie.key),
          (L = f(ie, L, q)),
          K === null ? (B = ie) : (K.sibling = ie),
          (K = ie));
    return (
      e &&
        te.forEach(function (pe) {
          return t(j, pe);
        }),
      He && on(j, q),
      B
    );
  }
  function Y(j, L, H, U) {
    var B = mr(H);
    if (typeof B != "function") throw Error(ne(150));
    if (((H = B.call(H)), H == null)) throw Error(ne(151));
    for (
      var K = (B = null), te = L, q = (L = 0), ie = null, ae = H.next();
      te !== null && !ae.done;
      q++, ae = H.next()
    ) {
      te.index > q ? ((ie = te), (te = null)) : (ie = te.sibling);
      var pe = N(j, te, ae.value, U);
      if (pe === null) {
        te === null && (te = ie);
        break;
      }
      e && te && pe.alternate === null && t(j, te),
        (L = f(pe, L, q)),
        K === null ? (B = pe) : (K.sibling = pe),
        (K = pe),
        (te = ie);
    }
    if (ae.done) return r(j, te), He && on(j, q), B;
    if (te === null) {
      for (; !ae.done; q++, ae = H.next())
        (ae = z(j, ae.value, U)),
          ae !== null &&
            ((L = f(ae, L, q)),
            K === null ? (B = ae) : (K.sibling = ae),
            (K = ae));
      return He && on(j, q), B;
    }
    for (te = s(j, te); !ae.done; q++, ae = H.next())
      (ae = X(te, j, q, ae.value, U)),
        ae !== null &&
          (e &&
            ae.alternate !== null &&
            te.delete(ae.key === null ? q : ae.key),
          (L = f(ae, L, q)),
          K === null ? (B = ae) : (K.sibling = ae),
          (K = ae));
    return (
      e &&
        te.forEach(function (le) {
          return t(j, le);
        }),
      He && on(j, q),
      B
    );
  }
  function Q(j, L, H, U) {
    if (
      (typeof H == "object" &&
        H !== null &&
        H.type === zn &&
        H.key === null &&
        (H = H.props.children),
      typeof H == "object" && H !== null)
    ) {
      switch (H.$$typeof) {
        case La:
          e: {
            for (var B = H.key, K = L; K !== null; ) {
              if (K.key === B) {
                if (((B = H.type), B === zn)) {
                  if (K.tag === 7) {
                    r(j, K.sibling),
                      (L = c(K, H.props.children)),
                      (L.return = j),
                      (j = L);
                    break e;
                  }
                } else if (
                  K.elementType === B ||
                  (typeof B == "object" &&
                    B !== null &&
                    B.$$typeof === Mi &&
                    Od(B) === K.type)
                ) {
                  r(j, K.sibling),
                    (L = c(K, H.props)),
                    (L.ref = wr(j, K, H)),
                    (L.return = j),
                    (j = L);
                  break e;
                }
                r(j, K);
                break;
              } else t(j, K);
              K = K.sibling;
            }
            H.type === zn
              ? ((L = mn(H.props.children, j.mode, U, H.key)),
                (L.return = j),
                (j = L))
              : ((U = os(H.type, H.key, H.props, null, j.mode, U)),
                (U.ref = wr(j, L, H)),
                (U.return = j),
                (j = U));
          }
          return m(j);
        case Rn:
          e: {
            for (K = H.key; L !== null; ) {
              if (L.key === K)
                if (
                  L.tag === 4 &&
                  L.stateNode.containerInfo === H.containerInfo &&
                  L.stateNode.implementation === H.implementation
                ) {
                  r(j, L.sibling),
                    (L = c(L, H.children || [])),
                    (L.return = j),
                    (j = L);
                  break e;
                } else {
                  r(j, L);
                  break;
                }
              else t(j, L);
              L = L.sibling;
            }
            (L = dl(H, j.mode, U)), (L.return = j), (j = L);
          }
          return m(j);
        case Mi:
          return (K = H._init), Q(j, L, K(H._payload), U);
      }
      if (Lr(H)) return V(j, L, H, U);
      if (mr(H)) return Y(j, L, H, U);
      Ha(j, H);
    }
    return (typeof H == "string" && H !== "") || typeof H == "number"
      ? ((H = "" + H),
        L !== null && L.tag === 6
          ? (r(j, L.sibling), (L = c(L, H)), (L.return = j), (j = L))
          : (r(j, L), (L = hl(H, j.mode, U)), (L.return = j), (j = L)),
        m(j))
      : r(j, L);
  }
  return Q;
}
var rr = Wg(!0),
  Gg = Wg(!1),
  va = {},
  oi = en(va),
  na = en(va),
  ra = en(va);
function fn(e) {
  if (e === va) throw Error(ne(174));
  return e;
}
function zu(e, t) {
  switch ((Ie(ra, t), Ie(na, e), Ie(oi, va), (e = t.nodeType), e)) {
    case 9:
    case 11:
      t = (t = t.documentElement) ? t.namespaceURI : Gl(null, "");
      break;
    default:
      (e = e === 8 ? t.parentNode : t),
        (t = e.namespaceURI || null),
        (e = e.tagName),
        (t = Gl(t, e));
  }
  Fe(oi), Ie(oi, t);
}
function ar() {
  Fe(oi), Fe(na), Fe(ra);
}
function Ug(e) {
  fn(ra.current);
  var t = fn(oi.current),
    r = Gl(t, e.type);
  t !== r && (Ie(na, e), Ie(oi, r));
}
function Iu(e) {
  na.current === e && (Fe(oi), Fe(na));
}
var Ye = en(0);
function Ps(e) {
  for (var t = e; t !== null; ) {
    if (t.tag === 13) {
      var r = t.memoizedState;
      if (
        r !== null &&
        ((r = r.dehydrated), r === null || r.data === "$?" || r.data === "$!")
      )
        return t;
    } else if (t.tag === 19 && t.memoizedProps.revealOrder !== void 0) {
      if (t.flags & 128) return t;
    } else if (t.child !== null) {
      (t.child.return = t), (t = t.child);
      continue;
    }
    if (t === e) break;
    for (; t.sibling === null; ) {
      if (t.return === null || t.return === e) return null;
      t = t.return;
    }
    (t.sibling.return = t.return), (t = t.sibling);
  }
  return null;
}
var al = [];
function Du() {
  for (var e = 0; e < al.length; e++)
    al[e]._workInProgressVersionPrimary = null;
  al.length = 0;
}
var is = Ai.ReactCurrentDispatcher,
  sl = Ai.ReactCurrentBatchConfig,
  wn = 0,
  Ge = null,
  tt = null,
  rt = null,
  Ts = !1,
  Fr = !1,
  aa = 0,
  gb = 0;
function ut() {
  throw Error(ne(321));
}
function Nu(e, t) {
  if (t === null) return !1;
  for (var r = 0; r < t.length && r < e.length; r++)
    if (!Kt(e[r], t[r])) return !1;
  return !0;
}
function Fu(e, t, r, s, c, f) {
  if (
    ((wn = f),
    (Ge = t),
    (t.memoizedState = null),
    (t.updateQueue = null),
    (t.lanes = 0),
    (is.current = e === null || e.memoizedState === null ? yb : bb),
    (e = r(s, c)),
    Fr)
  ) {
    f = 0;
    do {
      if (((Fr = !1), (aa = 0), 25 <= f)) throw Error(ne(301));
      (f += 1),
        (rt = tt = null),
        (t.updateQueue = null),
        (is.current = wb),
        (e = r(s, c));
    } while (Fr);
  }
  if (
    ((is.current = Ls),
    (t = tt !== null && tt.next !== null),
    (wn = 0),
    (rt = tt = Ge = null),
    (Ts = !1),
    t)
  )
    throw Error(ne(300));
  return e;
}
function _u() {
  var e = aa !== 0;
  return (aa = 0), e;
}
function ii() {
  var e = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return rt === null ? (Ge.memoizedState = rt = e) : (rt = rt.next = e), rt;
}
function Bt() {
  if (tt === null) {
    var e = Ge.alternate;
    e = e !== null ? e.memoizedState : null;
  } else e = tt.next;
  var t = rt === null ? Ge.memoizedState : rt.next;
  if (t !== null) (rt = t), (tt = e);
  else {
    if (e === null) throw Error(ne(310));
    (tt = e),
      (e = {
        memoizedState: tt.memoizedState,
        baseState: tt.baseState,
        baseQueue: tt.baseQueue,
        queue: tt.queue,
        next: null,
      }),
      rt === null ? (Ge.memoizedState = rt = e) : (rt = rt.next = e);
  }
  return rt;
}
function sa(e, t) {
  return typeof t == "function" ? t(e) : t;
}
function ol(e) {
  var t = Bt(),
    r = t.queue;
  if (r === null) throw Error(ne(311));
  r.lastRenderedReducer = e;
  var s = tt,
    c = s.baseQueue,
    f = r.pending;
  if (f !== null) {
    if (c !== null) {
      var m = c.next;
      (c.next = f.next), (f.next = m);
    }
    (s.baseQueue = c = f), (r.pending = null);
  }
  if (c !== null) {
    (f = c.next), (s = s.baseState);
    var y = (m = null),
      S = null,
      T = f;
    do {
      var O = T.lane;
      if ((wn & O) === O)
        S !== null &&
          (S = S.next =
            {
              lane: 0,
              action: T.action,
              hasEagerState: T.hasEagerState,
              eagerState: T.eagerState,
              next: null,
            }),
          (s = T.hasEagerState ? T.eagerState : e(s, T.action));
      else {
        var z = {
          lane: O,
          action: T.action,
          hasEagerState: T.hasEagerState,
          eagerState: T.eagerState,
          next: null,
        };
        S === null ? ((y = S = z), (m = s)) : (S = S.next = z),
          (Ge.lanes |= O),
          (Sn |= O);
      }
      T = T.next;
    } while (T !== null && T !== f);
    S === null ? (m = s) : (S.next = y),
      Kt(s, t.memoizedState) || (kt = !0),
      (t.memoizedState = s),
      (t.baseState = m),
      (t.baseQueue = S),
      (r.lastRenderedState = s);
  }
  if (((e = r.interleaved), e !== null)) {
    c = e;
    do (f = c.lane), (Ge.lanes |= f), (Sn |= f), (c = c.next);
    while (c !== e);
  } else c === null && (r.lanes = 0);
  return [t.memoizedState, r.dispatch];
}
function ll(e) {
  var t = Bt(),
    r = t.queue;
  if (r === null) throw Error(ne(311));
  r.lastRenderedReducer = e;
  var s = r.dispatch,
    c = r.pending,
    f = t.memoizedState;
  if (c !== null) {
    r.pending = null;
    var m = (c = c.next);
    do (f = e(f, m.action)), (m = m.next);
    while (m !== c);
    Kt(f, t.memoizedState) || (kt = !0),
      (t.memoizedState = f),
      t.baseQueue === null && (t.baseState = f),
      (r.lastRenderedState = f);
  }
  return [f, s];
}
function $g() {}
function qg(e, t) {
  var r = Ge,
    s = Bt(),
    c = t(),
    f = !Kt(s.memoizedState, c);
  if (
    (f && ((s.memoizedState = c), (kt = !0)),
    (s = s.queue),
    Hu(Qg.bind(null, r, s, e), [e]),
    s.getSnapshot !== t || f || (rt !== null && rt.memoizedState.tag & 1))
  ) {
    if (
      ((r.flags |= 2048),
      oa(9, Kg.bind(null, r, s, c, t), void 0, null),
      at === null)
    )
      throw Error(ne(349));
    wn & 30 || Zg(r, t, c);
  }
  return c;
}
function Zg(e, t, r) {
  (e.flags |= 16384),
    (e = { getSnapshot: t, value: r }),
    (t = Ge.updateQueue),
    t === null
      ? ((t = { lastEffect: null, stores: null }),
        (Ge.updateQueue = t),
        (t.stores = [e]))
      : ((r = t.stores), r === null ? (t.stores = [e]) : r.push(e));
}
function Kg(e, t, r, s) {
  (t.value = r), (t.getSnapshot = s), Jg(t) && em(e);
}
function Qg(e, t, r) {
  return r(function () {
    Jg(t) && em(e);
  });
}
function Jg(e) {
  var t = e.getSnapshot;
  e = e.value;
  try {
    var r = t();
    return !Kt(e, r);
  } catch {
    return !0;
  }
}
function em(e) {
  var t = Si(e, 1);
  t !== null && Zt(t, e, 1, -1);
}
function Rd(e) {
  var t = ii();
  return (
    typeof e == "function" && (e = e()),
    (t.memoizedState = t.baseState = e),
    (e = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: sa,
      lastRenderedState: e,
    }),
    (t.queue = e),
    (e = e.dispatch = vb.bind(null, Ge, e)),
    [t.memoizedState, e]
  );
}
function oa(e, t, r, s) {
  return (
    (e = { tag: e, create: t, destroy: r, deps: s, next: null }),
    (t = Ge.updateQueue),
    t === null
      ? ((t = { lastEffect: null, stores: null }),
        (Ge.updateQueue = t),
        (t.lastEffect = e.next = e))
      : ((r = t.lastEffect),
        r === null
          ? (t.lastEffect = e.next = e)
          : ((s = r.next), (r.next = e), (e.next = s), (t.lastEffect = e))),
    e
  );
}
function tm() {
  return Bt().memoizedState;
}
function ns(e, t, r, s) {
  var c = ii();
  (Ge.flags |= e),
    (c.memoizedState = oa(1 | t, r, void 0, s === void 0 ? null : s));
}
function oo(e, t, r, s) {
  var c = Bt();
  s = s === void 0 ? null : s;
  var f = void 0;
  if (tt !== null) {
    var m = tt.memoizedState;
    if (((f = m.destroy), s !== null && Nu(s, m.deps))) {
      c.memoizedState = oa(t, r, f, s);
      return;
    }
  }
  (Ge.flags |= e), (c.memoizedState = oa(1 | t, r, f, s));
}
function zd(e, t) {
  return ns(8390656, 8, e, t);
}
function Hu(e, t) {
  return oo(2048, 8, e, t);
}
function im(e, t) {
  return oo(4, 2, e, t);
}
function nm(e, t) {
  return oo(4, 4, e, t);
}
function rm(e, t) {
  if (typeof t == "function")
    return (
      (e = e()),
      t(e),
      function () {
        t(null);
      }
    );
  if (t != null)
    return (
      (e = e()),
      (t.current = e),
      function () {
        t.current = null;
      }
    );
}
function am(e, t, r) {
  return (
    (r = r != null ? r.concat([e]) : null), oo(4, 4, rm.bind(null, t, e), r)
  );
}
function Xu() {}
function sm(e, t) {
  var r = Bt();
  t = t === void 0 ? null : t;
  var s = r.memoizedState;
  return s !== null && t !== null && Nu(t, s[1])
    ? s[0]
    : ((r.memoizedState = [e, t]), e);
}
function om(e, t) {
  var r = Bt();
  t = t === void 0 ? null : t;
  var s = r.memoizedState;
  return s !== null && t !== null && Nu(t, s[1])
    ? s[0]
    : ((e = e()), (r.memoizedState = [e, t]), e);
}
function lm(e, t, r) {
  return wn & 21
    ? (Kt(r, t) || ((r = hg()), (Ge.lanes |= r), (Sn |= r), (e.baseState = !0)),
      t)
    : (e.baseState && ((e.baseState = !1), (kt = !0)), (e.memoizedState = r));
}
function mb(e, t) {
  var r = Ee;
  (Ee = r !== 0 && 4 > r ? r : 4), e(!0);
  var s = sl.transition;
  sl.transition = {};
  try {
    e(!1), t();
  } finally {
    (Ee = r), (sl.transition = s);
  }
}
function cm() {
  return Bt().memoizedState;
}
function xb(e, t, r) {
  var s = Yi(e);
  if (
    ((r = {
      lane: s,
      action: r,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    um(e))
  )
    hm(t, r);
  else if (((r = jg(e, t, r, s)), r !== null)) {
    var c = xt();
    Zt(r, e, s, c), dm(r, t, s);
  }
}
function vb(e, t, r) {
  var s = Yi(e),
    c = { lane: s, action: r, hasEagerState: !1, eagerState: null, next: null };
  if (um(e)) hm(t, c);
  else {
    var f = e.alternate;
    if (
      e.lanes === 0 &&
      (f === null || f.lanes === 0) &&
      ((f = t.lastRenderedReducer), f !== null)
    )
      try {
        var m = t.lastRenderedState,
          y = f(m, r);
        if (((c.hasEagerState = !0), (c.eagerState = y), Kt(y, m))) {
          var S = t.interleaved;
          S === null
            ? ((c.next = c), Ou(t))
            : ((c.next = S.next), (S.next = c)),
            (t.interleaved = c);
          return;
        }
      } catch {
      } finally {
      }
    (r = jg(e, t, c, s)),
      r !== null && ((c = xt()), Zt(r, e, s, c), dm(r, t, s));
  }
}
function um(e) {
  var t = e.alternate;
  return e === Ge || (t !== null && t === Ge);
}
function hm(e, t) {
  Fr = Ts = !0;
  var r = e.pending;
  r === null ? (t.next = t) : ((t.next = r.next), (r.next = t)),
    (e.pending = t);
}
function dm(e, t, r) {
  if (r & 4194240) {
    var s = t.lanes;
    (s &= e.pendingLanes), (r |= s), (t.lanes = r), xu(e, r);
  }
}
var Ls = {
    readContext: jt,
    useCallback: ut,
    useContext: ut,
    useEffect: ut,
    useImperativeHandle: ut,
    useInsertionEffect: ut,
    useLayoutEffect: ut,
    useMemo: ut,
    useReducer: ut,
    useRef: ut,
    useState: ut,
    useDebugValue: ut,
    useDeferredValue: ut,
    useTransition: ut,
    useMutableSource: ut,
    useSyncExternalStore: ut,
    useId: ut,
    unstable_isNewReconciler: !1,
  },
  yb = {
    readContext: jt,
    useCallback: function (e, t) {
      return (ii().memoizedState = [e, t === void 0 ? null : t]), e;
    },
    useContext: jt,
    useEffect: zd,
    useImperativeHandle: function (e, t, r) {
      return (
        (r = r != null ? r.concat([e]) : null),
        ns(4194308, 4, rm.bind(null, t, e), r)
      );
    },
    useLayoutEffect: function (e, t) {
      return ns(4194308, 4, e, t);
    },
    useInsertionEffect: function (e, t) {
      return ns(4, 2, e, t);
    },
    useMemo: function (e, t) {
      var r = ii();
      return (
        (t = t === void 0 ? null : t), (e = e()), (r.memoizedState = [e, t]), e
      );
    },
    useReducer: function (e, t, r) {
      var s = ii();
      return (
        (t = r !== void 0 ? r(t) : t),
        (s.memoizedState = s.baseState = t),
        (e = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: e,
          lastRenderedState: t,
        }),
        (s.queue = e),
        (e = e.dispatch = xb.bind(null, Ge, e)),
        [s.memoizedState, e]
      );
    },
    useRef: function (e) {
      var t = ii();
      return (e = { current: e }), (t.memoizedState = e);
    },
    useState: Rd,
    useDebugValue: Xu,
    useDeferredValue: function (e) {
      return (ii().memoizedState = e);
    },
    useTransition: function () {
      var e = Rd(!1),
        t = e[0];
      return (e = mb.bind(null, e[1])), (ii().memoizedState = e), [t, e];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (e, t, r) {
      var s = Ge,
        c = ii();
      if (He) {
        if (r === void 0) throw Error(ne(407));
        r = r();
      } else {
        if (((r = t()), at === null)) throw Error(ne(349));
        wn & 30 || Zg(s, t, r);
      }
      c.memoizedState = r;
      var f = { value: r, getSnapshot: t };
      return (
        (c.queue = f),
        zd(Qg.bind(null, s, f, e), [e]),
        (s.flags |= 2048),
        oa(9, Kg.bind(null, s, f, r, t), void 0, null),
        r
      );
    },
    useId: function () {
      var e = ii(),
        t = at.identifierPrefix;
      if (He) {
        var r = gi,
          s = pi;
        (r = (s & ~(1 << (32 - qt(s) - 1))).toString(32) + r),
          (t = ":" + t + "R" + r),
          (r = aa++),
          0 < r && (t += "H" + r.toString(32)),
          (t += ":");
      } else (r = gb++), (t = ":" + t + "r" + r.toString(32) + ":");
      return (e.memoizedState = t);
    },
    unstable_isNewReconciler: !1,
  },
  bb = {
    readContext: jt,
    useCallback: sm,
    useContext: jt,
    useEffect: Hu,
    useImperativeHandle: am,
    useInsertionEffect: im,
    useLayoutEffect: nm,
    useMemo: om,
    useReducer: ol,
    useRef: tm,
    useState: function () {
      return ol(sa);
    },
    useDebugValue: Xu,
    useDeferredValue: function (e) {
      var t = Bt();
      return lm(t, tt.memoizedState, e);
    },
    useTransition: function () {
      var e = ol(sa)[0],
        t = Bt().memoizedState;
      return [e, t];
    },
    useMutableSource: $g,
    useSyncExternalStore: qg,
    useId: cm,
    unstable_isNewReconciler: !1,
  },
  wb = {
    readContext: jt,
    useCallback: sm,
    useContext: jt,
    useEffect: Hu,
    useImperativeHandle: am,
    useInsertionEffect: im,
    useLayoutEffect: nm,
    useMemo: om,
    useReducer: ll,
    useRef: tm,
    useState: function () {
      return ll(sa);
    },
    useDebugValue: Xu,
    useDeferredValue: function (e) {
      var t = Bt();
      return tt === null ? (t.memoizedState = e) : lm(t, tt.memoizedState, e);
    },
    useTransition: function () {
      var e = ll(sa)[0],
        t = Bt().memoizedState;
      return [e, t];
    },
    useMutableSource: $g,
    useSyncExternalStore: qg,
    useId: cm,
    unstable_isNewReconciler: !1,
  };
function sr(e, t) {
  try {
    var r = "",
      s = t;
    do (r += qy(s)), (s = s.return);
    while (s);
    var c = r;
  } catch (f) {
    c =
      `
Error generating stack: ` +
      f.message +
      `
` +
      f.stack;
  }
  return { value: e, source: t, stack: c, digest: null };
}
function cl(e, t, r) {
  return { value: e, source: null, stack: r ?? null, digest: t ?? null };
}
function gc(e, t) {
  try {
    console.error(t.value);
  } catch (r) {
    setTimeout(function () {
      throw r;
    });
  }
}
var Sb = typeof WeakMap == "function" ? WeakMap : Map;
function fm(e, t, r) {
  (r = xi(-1, r)), (r.tag = 3), (r.payload = { element: null });
  var s = t.value;
  return (
    (r.callback = function () {
      Ms || ((Ms = !0), (Ac = s)), gc(e, t);
    }),
    r
  );
}
function pm(e, t, r) {
  (r = xi(-1, r)), (r.tag = 3);
  var s = e.type.getDerivedStateFromError;
  if (typeof s == "function") {
    var c = t.value;
    (r.payload = function () {
      return s(c);
    }),
      (r.callback = function () {
        gc(e, t);
      });
  }
  var f = e.stateNode;
  return (
    f !== null &&
      typeof f.componentDidCatch == "function" &&
      (r.callback = function () {
        gc(e, t),
          typeof s != "function" &&
            (Vi === null ? (Vi = new Set([this])) : Vi.add(this));
        var m = t.stack;
        this.componentDidCatch(t.value, {
          componentStack: m !== null ? m : "",
        });
      }),
    r
  );
}
function Id(e, t, r) {
  var s = e.pingCache;
  if (s === null) {
    s = e.pingCache = new Sb();
    var c = new Set();
    s.set(t, c);
  } else (c = s.get(t)), c === void 0 && ((c = new Set()), s.set(t, c));
  c.has(r) || (c.add(r), (e = Nb.bind(null, e, t, r)), t.then(e, e));
}
function Dd(e) {
  do {
    var t;
    if (
      ((t = e.tag === 13) &&
        ((t = e.memoizedState), (t = t !== null ? t.dehydrated !== null : !0)),
      t)
    )
      return e;
    e = e.return;
  } while (e !== null);
  return null;
}
function Nd(e, t, r, s, c) {
  return e.mode & 1
    ? ((e.flags |= 65536), (e.lanes = c), e)
    : (e === t
        ? (e.flags |= 65536)
        : ((e.flags |= 128),
          (r.flags |= 131072),
          (r.flags &= -52805),
          r.tag === 1 &&
            (r.alternate === null
              ? (r.tag = 17)
              : ((t = xi(-1, 1)), (t.tag = 2), Bi(r, t, 1))),
          (r.lanes |= 1)),
      e);
}
var kb = Ai.ReactCurrentOwner,
  kt = !1;
function mt(e, t, r, s) {
  t.child = e === null ? Gg(t, null, r, s) : rr(t, e.child, r, s);
}
function Fd(e, t, r, s, c) {
  r = r.render;
  var f = t.ref;
  return (
    Qn(t, c),
    (s = Fu(e, t, r, s, f, c)),
    (r = _u()),
    e !== null && !kt
      ? ((t.updateQueue = e.updateQueue),
        (t.flags &= -2053),
        (e.lanes &= ~c),
        ki(e, t, c))
      : (He && r && Au(t), (t.flags |= 1), mt(e, t, s, c), t.child)
  );
}
function _d(e, t, r, s, c) {
  if (e === null) {
    var f = r.type;
    return typeof f == "function" &&
      !$u(f) &&
      f.defaultProps === void 0 &&
      r.compare === null &&
      r.defaultProps === void 0
      ? ((t.tag = 15), (t.type = f), gm(e, t, f, s, c))
      : ((e = os(r.type, null, s, t, t.mode, c)),
        (e.ref = t.ref),
        (e.return = t),
        (t.child = e));
  }
  if (((f = e.child), !(e.lanes & c))) {
    var m = f.memoizedProps;
    if (
      ((r = r.compare), (r = r !== null ? r : Jr), r(m, s) && e.ref === t.ref)
    )
      return ki(e, t, c);
  }
  return (
    (t.flags |= 1),
    (e = Wi(f, s)),
    (e.ref = t.ref),
    (e.return = t),
    (t.child = e)
  );
}
function gm(e, t, r, s, c) {
  if (e !== null) {
    var f = e.memoizedProps;
    if (Jr(f, s) && e.ref === t.ref)
      if (((kt = !1), (t.pendingProps = s = f), (e.lanes & c) !== 0))
        e.flags & 131072 && (kt = !0);
      else return (t.lanes = e.lanes), ki(e, t, c);
  }
  return mc(e, t, r, s, c);
}
function mm(e, t, r) {
  var s = t.pendingProps,
    c = s.children,
    f = e !== null ? e.memoizedState : null;
  if (s.mode === "hidden")
    if (!(t.mode & 1))
      (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        Ie(Vn, Et),
        (Et |= r);
    else {
      if (!(r & 1073741824))
        return (
          (e = f !== null ? f.baseLanes | r : r),
          (t.lanes = t.childLanes = 1073741824),
          (t.memoizedState = {
            baseLanes: e,
            cachePool: null,
            transitions: null,
          }),
          (t.updateQueue = null),
          Ie(Vn, Et),
          (Et |= e),
          null
        );
      (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (s = f !== null ? f.baseLanes : r),
        Ie(Vn, Et),
        (Et |= s);
    }
  else
    f !== null ? ((s = f.baseLanes | r), (t.memoizedState = null)) : (s = r),
      Ie(Vn, Et),
      (Et |= s);
  return mt(e, t, c, r), t.child;
}
function xm(e, t) {
  var r = t.ref;
  ((e === null && r !== null) || (e !== null && e.ref !== r)) &&
    ((t.flags |= 512), (t.flags |= 2097152));
}
function mc(e, t, r, s, c) {
  var f = At(r) ? yn : ft.current;
  return (
    (f = ir(t, f)),
    Qn(t, c),
    (r = Fu(e, t, r, s, f, c)),
    (s = _u()),
    e !== null && !kt
      ? ((t.updateQueue = e.updateQueue),
        (t.flags &= -2053),
        (e.lanes &= ~c),
        ki(e, t, c))
      : (He && s && Au(t), (t.flags |= 1), mt(e, t, r, c), t.child)
  );
}
function Hd(e, t, r, s, c) {
  if (At(r)) {
    var f = !0;
    bs(t);
  } else f = !1;
  if ((Qn(t, c), t.stateNode === null))
    rs(e, t), Yg(t, r, s), pc(t, r, s, c), (s = !0);
  else if (e === null) {
    var m = t.stateNode,
      y = t.memoizedProps;
    m.props = y;
    var S = m.context,
      T = r.contextType;
    typeof T == "object" && T !== null
      ? (T = jt(T))
      : ((T = At(r) ? yn : ft.current), (T = ir(t, T)));
    var O = r.getDerivedStateFromProps,
      z =
        typeof O == "function" ||
        typeof m.getSnapshotBeforeUpdate == "function";
    z ||
      (typeof m.UNSAFE_componentWillReceiveProps != "function" &&
        typeof m.componentWillReceiveProps != "function") ||
      ((y !== s || S !== T) && Md(t, m, s, T)),
      (Oi = !1);
    var N = t.memoizedState;
    (m.state = N),
      As(t, s, m, c),
      (S = t.memoizedState),
      y !== s || N !== S || Ct.current || Oi
        ? (typeof O == "function" && (fc(t, r, O, s), (S = t.memoizedState)),
          (y = Oi || Ed(t, r, y, s, N, S, T))
            ? (z ||
                (typeof m.UNSAFE_componentWillMount != "function" &&
                  typeof m.componentWillMount != "function") ||
                (typeof m.componentWillMount == "function" &&
                  m.componentWillMount(),
                typeof m.UNSAFE_componentWillMount == "function" &&
                  m.UNSAFE_componentWillMount()),
              typeof m.componentDidMount == "function" && (t.flags |= 4194308))
            : (typeof m.componentDidMount == "function" && (t.flags |= 4194308),
              (t.memoizedProps = s),
              (t.memoizedState = S)),
          (m.props = s),
          (m.state = S),
          (m.context = T),
          (s = y))
        : (typeof m.componentDidMount == "function" && (t.flags |= 4194308),
          (s = !1));
  } else {
    (m = t.stateNode),
      Bg(e, t),
      (y = t.memoizedProps),
      (T = t.type === t.elementType ? y : Wt(t.type, y)),
      (m.props = T),
      (z = t.pendingProps),
      (N = m.context),
      (S = r.contextType),
      typeof S == "object" && S !== null
        ? (S = jt(S))
        : ((S = At(r) ? yn : ft.current), (S = ir(t, S)));
    var X = r.getDerivedStateFromProps;
    (O =
      typeof X == "function" ||
      typeof m.getSnapshotBeforeUpdate == "function") ||
      (typeof m.UNSAFE_componentWillReceiveProps != "function" &&
        typeof m.componentWillReceiveProps != "function") ||
      ((y !== z || N !== S) && Md(t, m, s, S)),
      (Oi = !1),
      (N = t.memoizedState),
      (m.state = N),
      As(t, s, m, c);
    var V = t.memoizedState;
    y !== z || N !== V || Ct.current || Oi
      ? (typeof X == "function" && (fc(t, r, X, s), (V = t.memoizedState)),
        (T = Oi || Ed(t, r, T, s, N, V, S) || !1)
          ? (O ||
              (typeof m.UNSAFE_componentWillUpdate != "function" &&
                typeof m.componentWillUpdate != "function") ||
              (typeof m.componentWillUpdate == "function" &&
                m.componentWillUpdate(s, V, S),
              typeof m.UNSAFE_componentWillUpdate == "function" &&
                m.UNSAFE_componentWillUpdate(s, V, S)),
            typeof m.componentDidUpdate == "function" && (t.flags |= 4),
            typeof m.getSnapshotBeforeUpdate == "function" && (t.flags |= 1024))
          : (typeof m.componentDidUpdate != "function" ||
              (y === e.memoizedProps && N === e.memoizedState) ||
              (t.flags |= 4),
            typeof m.getSnapshotBeforeUpdate != "function" ||
              (y === e.memoizedProps && N === e.memoizedState) ||
              (t.flags |= 1024),
            (t.memoizedProps = s),
            (t.memoizedState = V)),
        (m.props = s),
        (m.state = V),
        (m.context = S),
        (s = T))
      : (typeof m.componentDidUpdate != "function" ||
          (y === e.memoizedProps && N === e.memoizedState) ||
          (t.flags |= 4),
        typeof m.getSnapshotBeforeUpdate != "function" ||
          (y === e.memoizedProps && N === e.memoizedState) ||
          (t.flags |= 1024),
        (s = !1));
  }
  return xc(e, t, r, s, f, c);
}
function xc(e, t, r, s, c, f) {
  xm(e, t);
  var m = (t.flags & 128) !== 0;
  if (!s && !m) return c && Cd(t, r, !1), ki(e, t, f);
  (s = t.stateNode), (kb.current = t);
  var y =
    m && typeof r.getDerivedStateFromError != "function" ? null : s.render();
  return (
    (t.flags |= 1),
    e !== null && m
      ? ((t.child = rr(t, e.child, null, f)), (t.child = rr(t, null, y, f)))
      : mt(e, t, y, f),
    (t.memoizedState = s.state),
    c && Cd(t, r, !0),
    t.child
  );
}
function vm(e) {
  var t = e.stateNode;
  t.pendingContext
    ? kd(e, t.pendingContext, t.pendingContext !== t.context)
    : t.context && kd(e, t.context, !1),
    zu(e, t.containerInfo);
}
function Xd(e, t, r, s, c) {
  return nr(), Tu(c), (t.flags |= 256), mt(e, t, r, s), t.child;
}
var vc = { dehydrated: null, treeContext: null, retryLane: 0 };
function yc(e) {
  return { baseLanes: e, cachePool: null, transitions: null };
}
function ym(e, t, r) {
  var s = t.pendingProps,
    c = Ye.current,
    f = !1,
    m = (t.flags & 128) !== 0,
    y;
  if (
    ((y = m) ||
      (y = e !== null && e.memoizedState === null ? !1 : (c & 2) !== 0),
    y
      ? ((f = !0), (t.flags &= -129))
      : (e === null || e.memoizedState !== null) && (c |= 1),
    Ie(Ye, c & 1),
    e === null)
  )
    return (
      hc(t),
      (e = t.memoizedState),
      e !== null && ((e = e.dehydrated), e !== null)
        ? (t.mode & 1
            ? e.data === "$!"
              ? (t.lanes = 8)
              : (t.lanes = 1073741824)
            : (t.lanes = 1),
          null)
        : ((m = s.children),
          (e = s.fallback),
          f
            ? ((s = t.mode),
              (f = t.child),
              (m = { mode: "hidden", children: m }),
              !(s & 1) && f !== null
                ? ((f.childLanes = 0), (f.pendingProps = m))
                : (f = uo(m, s, 0, null)),
              (e = mn(e, s, r, null)),
              (f.return = t),
              (e.return = t),
              (f.sibling = e),
              (t.child = f),
              (t.child.memoizedState = yc(r)),
              (t.memoizedState = vc),
              e)
            : ju(t, m))
    );
  if (((c = e.memoizedState), c !== null && ((y = c.dehydrated), y !== null)))
    return Cb(e, t, m, s, y, c, r);
  if (f) {
    (f = s.fallback), (m = t.mode), (c = e.child), (y = c.sibling);
    var S = { mode: "hidden", children: s.children };
    return (
      !(m & 1) && t.child !== c
        ? ((s = t.child),
          (s.childLanes = 0),
          (s.pendingProps = S),
          (t.deletions = null))
        : ((s = Wi(c, S)), (s.subtreeFlags = c.subtreeFlags & 14680064)),
      y !== null ? (f = Wi(y, f)) : ((f = mn(f, m, r, null)), (f.flags |= 2)),
      (f.return = t),
      (s.return = t),
      (s.sibling = f),
      (t.child = s),
      (s = f),
      (f = t.child),
      (m = e.child.memoizedState),
      (m =
        m === null
          ? yc(r)
          : {
              baseLanes: m.baseLanes | r,
              cachePool: null,
              transitions: m.transitions,
            }),
      (f.memoizedState = m),
      (f.childLanes = e.childLanes & ~r),
      (t.memoizedState = vc),
      s
    );
  }
  return (
    (f = e.child),
    (e = f.sibling),
    (s = Wi(f, { mode: "visible", children: s.children })),
    !(t.mode & 1) && (s.lanes = r),
    (s.return = t),
    (s.sibling = null),
    e !== null &&
      ((r = t.deletions),
      r === null ? ((t.deletions = [e]), (t.flags |= 16)) : r.push(e)),
    (t.child = s),
    (t.memoizedState = null),
    s
  );
}
function ju(e, t) {
  return (
    (t = uo({ mode: "visible", children: t }, e.mode, 0, null)),
    (t.return = e),
    (e.child = t)
  );
}
function Xa(e, t, r, s) {
  return (
    s !== null && Tu(s),
    rr(t, e.child, null, r),
    (e = ju(t, t.pendingProps.children)),
    (e.flags |= 2),
    (t.memoizedState = null),
    e
  );
}
function Cb(e, t, r, s, c, f, m) {
  if (r)
    return t.flags & 256
      ? ((t.flags &= -257), (s = cl(Error(ne(422)))), Xa(e, t, m, s))
      : t.memoizedState !== null
      ? ((t.child = e.child), (t.flags |= 128), null)
      : ((f = s.fallback),
        (c = t.mode),
        (s = uo({ mode: "visible", children: s.children }, c, 0, null)),
        (f = mn(f, c, m, null)),
        (f.flags |= 2),
        (s.return = t),
        (f.return = t),
        (s.sibling = f),
        (t.child = s),
        t.mode & 1 && rr(t, e.child, null, m),
        (t.child.memoizedState = yc(m)),
        (t.memoizedState = vc),
        f);
  if (!(t.mode & 1)) return Xa(e, t, m, null);
  if (c.data === "$!") {
    if (((s = c.nextSibling && c.nextSibling.dataset), s)) var y = s.dgst;
    return (
      (s = y), (f = Error(ne(419))), (s = cl(f, s, void 0)), Xa(e, t, m, s)
    );
  }
  if (((y = (m & e.childLanes) !== 0), kt || y)) {
    if (((s = at), s !== null)) {
      switch (m & -m) {
        case 4:
          c = 2;
          break;
        case 16:
          c = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          c = 32;
          break;
        case 536870912:
          c = 268435456;
          break;
        default:
          c = 0;
      }
      (c = c & (s.suspendedLanes | m) ? 0 : c),
        c !== 0 &&
          c !== f.retryLane &&
          ((f.retryLane = c), Si(e, c), Zt(s, e, c, -1));
    }
    return Uu(), (s = cl(Error(ne(421)))), Xa(e, t, m, s);
  }
  return c.data === "$?"
    ? ((t.flags |= 128),
      (t.child = e.child),
      (t = Fb.bind(null, e)),
      (c._reactRetry = t),
      null)
    : ((e = f.treeContext),
      (Mt = ji(c.nextSibling)),
      (Ot = t),
      (He = !0),
      (Ut = null),
      e !== null &&
        ((Ft[_t++] = pi),
        (Ft[_t++] = gi),
        (Ft[_t++] = bn),
        (pi = e.id),
        (gi = e.overflow),
        (bn = t)),
      (t = ju(t, s.children)),
      (t.flags |= 4096),
      t);
}
function jd(e, t, r) {
  e.lanes |= t;
  var s = e.alternate;
  s !== null && (s.lanes |= t), dc(e.return, t, r);
}
function ul(e, t, r, s, c) {
  var f = e.memoizedState;
  f === null
    ? (e.memoizedState = {
        isBackwards: t,
        rendering: null,
        renderingStartTime: 0,
        last: s,
        tail: r,
        tailMode: c,
      })
    : ((f.isBackwards = t),
      (f.rendering = null),
      (f.renderingStartTime = 0),
      (f.last = s),
      (f.tail = r),
      (f.tailMode = c));
}
function bm(e, t, r) {
  var s = t.pendingProps,
    c = s.revealOrder,
    f = s.tail;
  if ((mt(e, t, s.children, r), (s = Ye.current), s & 2))
    (s = (s & 1) | 2), (t.flags |= 128);
  else {
    if (e !== null && e.flags & 128)
      e: for (e = t.child; e !== null; ) {
        if (e.tag === 13) e.memoizedState !== null && jd(e, r, t);
        else if (e.tag === 19) jd(e, r, t);
        else if (e.child !== null) {
          (e.child.return = e), (e = e.child);
          continue;
        }
        if (e === t) break e;
        for (; e.sibling === null; ) {
          if (e.return === null || e.return === t) break e;
          e = e.return;
        }
        (e.sibling.return = e.return), (e = e.sibling);
      }
    s &= 1;
  }
  if ((Ie(Ye, s), !(t.mode & 1))) t.memoizedState = null;
  else
    switch (c) {
      case "forwards":
        for (r = t.child, c = null; r !== null; )
          (e = r.alternate),
            e !== null && Ps(e) === null && (c = r),
            (r = r.sibling);
        (r = c),
          r === null
            ? ((c = t.child), (t.child = null))
            : ((c = r.sibling), (r.sibling = null)),
          ul(t, !1, c, r, f);
        break;
      case "backwards":
        for (r = null, c = t.child, t.child = null; c !== null; ) {
          if (((e = c.alternate), e !== null && Ps(e) === null)) {
            t.child = c;
            break;
          }
          (e = c.sibling), (c.sibling = r), (r = c), (c = e);
        }
        ul(t, !0, r, null, f);
        break;
      case "together":
        ul(t, !1, null, null, void 0);
        break;
      default:
        t.memoizedState = null;
    }
  return t.child;
}
function rs(e, t) {
  !(t.mode & 1) &&
    e !== null &&
    ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
}
function ki(e, t, r) {
  if (
    (e !== null && (t.dependencies = e.dependencies),
    (Sn |= t.lanes),
    !(r & t.childLanes))
  )
    return null;
  if (e !== null && t.child !== e.child) throw Error(ne(153));
  if (t.child !== null) {
    for (
      e = t.child, r = Wi(e, e.pendingProps), t.child = r, r.return = t;
      e.sibling !== null;

    )
      (e = e.sibling), (r = r.sibling = Wi(e, e.pendingProps)), (r.return = t);
    r.sibling = null;
  }
  return t.child;
}
function Ab(e, t, r) {
  switch (t.tag) {
    case 3:
      vm(t), nr();
      break;
    case 5:
      Ug(t);
      break;
    case 1:
      At(t.type) && bs(t);
      break;
    case 4:
      zu(t, t.stateNode.containerInfo);
      break;
    case 10:
      var s = t.type._context,
        c = t.memoizedProps.value;
      Ie(ks, s._currentValue), (s._currentValue = c);
      break;
    case 13:
      if (((s = t.memoizedState), s !== null))
        return s.dehydrated !== null
          ? (Ie(Ye, Ye.current & 1), (t.flags |= 128), null)
          : r & t.child.childLanes
          ? ym(e, t, r)
          : (Ie(Ye, Ye.current & 1),
            (e = ki(e, t, r)),
            e !== null ? e.sibling : null);
      Ie(Ye, Ye.current & 1);
      break;
    case 19:
      if (((s = (r & t.childLanes) !== 0), e.flags & 128)) {
        if (s) return bm(e, t, r);
        t.flags |= 128;
      }
      if (
        ((c = t.memoizedState),
        c !== null &&
          ((c.rendering = null), (c.tail = null), (c.lastEffect = null)),
        Ie(Ye, Ye.current),
        s)
      )
        break;
      return null;
    case 22:
    case 23:
      return (t.lanes = 0), mm(e, t, r);
  }
  return ki(e, t, r);
}
var wm, bc, Sm, km;
wm = function (e, t) {
  for (var r = t.child; r !== null; ) {
    if (r.tag === 5 || r.tag === 6) e.appendChild(r.stateNode);
    else if (r.tag !== 4 && r.child !== null) {
      (r.child.return = r), (r = r.child);
      continue;
    }
    if (r === t) break;
    for (; r.sibling === null; ) {
      if (r.return === null || r.return === t) return;
      r = r.return;
    }
    (r.sibling.return = r.return), (r = r.sibling);
  }
};
bc = function () {};
Sm = function (e, t, r, s) {
  var c = e.memoizedProps;
  if (c !== s) {
    (e = t.stateNode), fn(oi.current);
    var f = null;
    switch (r) {
      case "input":
        (c = Bl(e, c)), (s = Bl(e, s)), (f = []);
        break;
      case "select":
        (c = Ue({}, c, { value: void 0 })),
          (s = Ue({}, s, { value: void 0 })),
          (f = []);
        break;
      case "textarea":
        (c = Wl(e, c)), (s = Wl(e, s)), (f = []);
        break;
      default:
        typeof c.onClick != "function" &&
          typeof s.onClick == "function" &&
          (e.onclick = vs);
    }
    Ul(r, s);
    var m;
    r = null;
    for (T in c)
      if (!s.hasOwnProperty(T) && c.hasOwnProperty(T) && c[T] != null)
        if (T === "style") {
          var y = c[T];
          for (m in y) y.hasOwnProperty(m) && (r || (r = {}), (r[m] = ""));
        } else
          T !== "dangerouslySetInnerHTML" &&
            T !== "children" &&
            T !== "suppressContentEditableWarning" &&
            T !== "suppressHydrationWarning" &&
            T !== "autoFocus" &&
            (Gr.hasOwnProperty(T)
              ? f || (f = [])
              : (f = f || []).push(T, null));
    for (T in s) {
      var S = s[T];
      if (
        ((y = c != null ? c[T] : void 0),
        s.hasOwnProperty(T) && S !== y && (S != null || y != null))
      )
        if (T === "style")
          if (y) {
            for (m in y)
              !y.hasOwnProperty(m) ||
                (S && S.hasOwnProperty(m)) ||
                (r || (r = {}), (r[m] = ""));
            for (m in S)
              S.hasOwnProperty(m) &&
                y[m] !== S[m] &&
                (r || (r = {}), (r[m] = S[m]));
          } else r || (f || (f = []), f.push(T, r)), (r = S);
        else
          T === "dangerouslySetInnerHTML"
            ? ((S = S ? S.__html : void 0),
              (y = y ? y.__html : void 0),
              S != null && y !== S && (f = f || []).push(T, S))
            : T === "children"
            ? (typeof S != "string" && typeof S != "number") ||
              (f = f || []).push(T, "" + S)
            : T !== "suppressContentEditableWarning" &&
              T !== "suppressHydrationWarning" &&
              (Gr.hasOwnProperty(T)
                ? (S != null && T === "onScroll" && Ne("scroll", e),
                  f || y === S || (f = []))
                : (f = f || []).push(T, S));
    }
    r && (f = f || []).push("style", r);
    var T = f;
    (t.updateQueue = T) && (t.flags |= 4);
  }
};
km = function (e, t, r, s) {
  r !== s && (t.flags |= 4);
};
function Sr(e, t) {
  if (!He)
    switch (e.tailMode) {
      case "hidden":
        t = e.tail;
        for (var r = null; t !== null; )
          t.alternate !== null && (r = t), (t = t.sibling);
        r === null ? (e.tail = null) : (r.sibling = null);
        break;
      case "collapsed":
        r = e.tail;
        for (var s = null; r !== null; )
          r.alternate !== null && (s = r), (r = r.sibling);
        s === null
          ? t || e.tail === null
            ? (e.tail = null)
            : (e.tail.sibling = null)
          : (s.sibling = null);
    }
}
function ht(e) {
  var t = e.alternate !== null && e.alternate.child === e.child,
    r = 0,
    s = 0;
  if (t)
    for (var c = e.child; c !== null; )
      (r |= c.lanes | c.childLanes),
        (s |= c.subtreeFlags & 14680064),
        (s |= c.flags & 14680064),
        (c.return = e),
        (c = c.sibling);
  else
    for (c = e.child; c !== null; )
      (r |= c.lanes | c.childLanes),
        (s |= c.subtreeFlags),
        (s |= c.flags),
        (c.return = e),
        (c = c.sibling);
  return (e.subtreeFlags |= s), (e.childLanes = r), t;
}
function Pb(e, t, r) {
  var s = t.pendingProps;
  switch ((Pu(t), t.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return ht(t), null;
    case 1:
      return At(t.type) && ys(), ht(t), null;
    case 3:
      return (
        (s = t.stateNode),
        ar(),
        Fe(Ct),
        Fe(ft),
        Du(),
        s.pendingContext &&
          ((s.context = s.pendingContext), (s.pendingContext = null)),
        (e === null || e.child === null) &&
          (_a(t)
            ? (t.flags |= 4)
            : e === null ||
              (e.memoizedState.isDehydrated && !(t.flags & 256)) ||
              ((t.flags |= 1024), Ut !== null && (Lc(Ut), (Ut = null)))),
        bc(e, t),
        ht(t),
        null
      );
    case 5:
      Iu(t);
      var c = fn(ra.current);
      if (((r = t.type), e !== null && t.stateNode != null))
        Sm(e, t, r, s, c),
          e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
      else {
        if (!s) {
          if (t.stateNode === null) throw Error(ne(166));
          return ht(t), null;
        }
        if (((e = fn(oi.current)), _a(t))) {
          (s = t.stateNode), (r = t.type);
          var f = t.memoizedProps;
          switch (((s[ri] = t), (s[ia] = f), (e = (t.mode & 1) !== 0), r)) {
            case "dialog":
              Ne("cancel", s), Ne("close", s);
              break;
            case "iframe":
            case "object":
            case "embed":
              Ne("load", s);
              break;
            case "video":
            case "audio":
              for (c = 0; c < Mr.length; c++) Ne(Mr[c], s);
              break;
            case "source":
              Ne("error", s);
              break;
            case "img":
            case "image":
            case "link":
              Ne("error", s), Ne("load", s);
              break;
            case "details":
              Ne("toggle", s);
              break;
            case "input":
              Zh(s, f), Ne("invalid", s);
              break;
            case "select":
              (s._wrapperState = { wasMultiple: !!f.multiple }),
                Ne("invalid", s);
              break;
            case "textarea":
              Qh(s, f), Ne("invalid", s);
          }
          Ul(r, f), (c = null);
          for (var m in f)
            if (f.hasOwnProperty(m)) {
              var y = f[m];
              m === "children"
                ? typeof y == "string"
                  ? s.textContent !== y &&
                    (f.suppressHydrationWarning !== !0 &&
                      Fa(s.textContent, y, e),
                    (c = ["children", y]))
                  : typeof y == "number" &&
                    s.textContent !== "" + y &&
                    (f.suppressHydrationWarning !== !0 &&
                      Fa(s.textContent, y, e),
                    (c = ["children", "" + y]))
                : Gr.hasOwnProperty(m) &&
                  y != null &&
                  m === "onScroll" &&
                  Ne("scroll", s);
            }
          switch (r) {
            case "input":
              Ea(s), Kh(s, f, !0);
              break;
            case "textarea":
              Ea(s), Jh(s);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof f.onClick == "function" && (s.onclick = vs);
          }
          (s = c), (t.updateQueue = s), s !== null && (t.flags |= 4);
        } else {
          (m = c.nodeType === 9 ? c : c.ownerDocument),
            e === "http://www.w3.org/1999/xhtml" && (e = Zp(r)),
            e === "http://www.w3.org/1999/xhtml"
              ? r === "script"
                ? ((e = m.createElement("div")),
                  (e.innerHTML = "<script></script>"),
                  (e = e.removeChild(e.firstChild)))
                : typeof s.is == "string"
                ? (e = m.createElement(r, { is: s.is }))
                : ((e = m.createElement(r)),
                  r === "select" &&
                    ((m = e),
                    s.multiple
                      ? (m.multiple = !0)
                      : s.size && (m.size = s.size)))
              : (e = m.createElementNS(e, r)),
            (e[ri] = t),
            (e[ia] = s),
            wm(e, t, !1, !1),
            (t.stateNode = e);
          e: {
            switch (((m = $l(r, s)), r)) {
              case "dialog":
                Ne("cancel", e), Ne("close", e), (c = s);
                break;
              case "iframe":
              case "object":
              case "embed":
                Ne("load", e), (c = s);
                break;
              case "video":
              case "audio":
                for (c = 0; c < Mr.length; c++) Ne(Mr[c], e);
                c = s;
                break;
              case "source":
                Ne("error", e), (c = s);
                break;
              case "img":
              case "image":
              case "link":
                Ne("error", e), Ne("load", e), (c = s);
                break;
              case "details":
                Ne("toggle", e), (c = s);
                break;
              case "input":
                Zh(e, s), (c = Bl(e, s)), Ne("invalid", e);
                break;
              case "option":
                c = s;
                break;
              case "select":
                (e._wrapperState = { wasMultiple: !!s.multiple }),
                  (c = Ue({}, s, { value: void 0 })),
                  Ne("invalid", e);
                break;
              case "textarea":
                Qh(e, s), (c = Wl(e, s)), Ne("invalid", e);
                break;
              default:
                c = s;
            }
            Ul(r, c), (y = c);
            for (f in y)
              if (y.hasOwnProperty(f)) {
                var S = y[f];
                f === "style"
                  ? Jp(e, S)
                  : f === "dangerouslySetInnerHTML"
                  ? ((S = S ? S.__html : void 0), S != null && Kp(e, S))
                  : f === "children"
                  ? typeof S == "string"
                    ? (r !== "textarea" || S !== "") && Ur(e, S)
                    : typeof S == "number" && Ur(e, "" + S)
                  : f !== "suppressContentEditableWarning" &&
                    f !== "suppressHydrationWarning" &&
                    f !== "autoFocus" &&
                    (Gr.hasOwnProperty(f)
                      ? S != null && f === "onScroll" && Ne("scroll", e)
                      : S != null && hu(e, f, S, m));
              }
            switch (r) {
              case "input":
                Ea(e), Kh(e, s, !1);
                break;
              case "textarea":
                Ea(e), Jh(e);
                break;
              case "option":
                s.value != null && e.setAttribute("value", "" + qi(s.value));
                break;
              case "select":
                (e.multiple = !!s.multiple),
                  (f = s.value),
                  f != null
                    ? $n(e, !!s.multiple, f, !1)
                    : s.defaultValue != null &&
                      $n(e, !!s.multiple, s.defaultValue, !0);
                break;
              default:
                typeof c.onClick == "function" && (e.onclick = vs);
            }
            switch (r) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                s = !!s.autoFocus;
                break e;
              case "img":
                s = !0;
                break e;
              default:
                s = !1;
            }
          }
          s && (t.flags |= 4);
        }
        t.ref !== null && ((t.flags |= 512), (t.flags |= 2097152));
      }
      return ht(t), null;
    case 6:
      if (e && t.stateNode != null) km(e, t, e.memoizedProps, s);
      else {
        if (typeof s != "string" && t.stateNode === null) throw Error(ne(166));
        if (((r = fn(ra.current)), fn(oi.current), _a(t))) {
          if (
            ((s = t.stateNode),
            (r = t.memoizedProps),
            (s[ri] = t),
            (f = s.nodeValue !== r) && ((e = Ot), e !== null))
          )
            switch (e.tag) {
              case 3:
                Fa(s.nodeValue, r, (e.mode & 1) !== 0);
                break;
              case 5:
                e.memoizedProps.suppressHydrationWarning !== !0 &&
                  Fa(s.nodeValue, r, (e.mode & 1) !== 0);
            }
          f && (t.flags |= 4);
        } else
          (s = (r.nodeType === 9 ? r : r.ownerDocument).createTextNode(s)),
            (s[ri] = t),
            (t.stateNode = s);
      }
      return ht(t), null;
    case 13:
      if (
        (Fe(Ye),
        (s = t.memoizedState),
        e === null ||
          (e.memoizedState !== null && e.memoizedState.dehydrated !== null))
      ) {
        if (He && Mt !== null && t.mode & 1 && !(t.flags & 128))
          Xg(), nr(), (t.flags |= 98560), (f = !1);
        else if (((f = _a(t)), s !== null && s.dehydrated !== null)) {
          if (e === null) {
            if (!f) throw Error(ne(318));
            if (
              ((f = t.memoizedState),
              (f = f !== null ? f.dehydrated : null),
              !f)
            )
              throw Error(ne(317));
            f[ri] = t;
          } else
            nr(), !(t.flags & 128) && (t.memoizedState = null), (t.flags |= 4);
          ht(t), (f = !1);
        } else Ut !== null && (Lc(Ut), (Ut = null)), (f = !0);
        if (!f) return t.flags & 65536 ? t : null;
      }
      return t.flags & 128
        ? ((t.lanes = r), t)
        : ((s = s !== null),
          s !== (e !== null && e.memoizedState !== null) &&
            s &&
            ((t.child.flags |= 8192),
            t.mode & 1 &&
              (e === null || Ye.current & 1 ? it === 0 && (it = 3) : Uu())),
          t.updateQueue !== null && (t.flags |= 4),
          ht(t),
          null);
    case 4:
      return (
        ar(), bc(e, t), e === null && ea(t.stateNode.containerInfo), ht(t), null
      );
    case 10:
      return Mu(t.type._context), ht(t), null;
    case 17:
      return At(t.type) && ys(), ht(t), null;
    case 19:
      if ((Fe(Ye), (f = t.memoizedState), f === null)) return ht(t), null;
      if (((s = (t.flags & 128) !== 0), (m = f.rendering), m === null))
        if (s) Sr(f, !1);
        else {
          if (it !== 0 || (e !== null && e.flags & 128))
            for (e = t.child; e !== null; ) {
              if (((m = Ps(e)), m !== null)) {
                for (
                  t.flags |= 128,
                    Sr(f, !1),
                    s = m.updateQueue,
                    s !== null && ((t.updateQueue = s), (t.flags |= 4)),
                    t.subtreeFlags = 0,
                    s = r,
                    r = t.child;
                  r !== null;

                )
                  (f = r),
                    (e = s),
                    (f.flags &= 14680066),
                    (m = f.alternate),
                    m === null
                      ? ((f.childLanes = 0),
                        (f.lanes = e),
                        (f.child = null),
                        (f.subtreeFlags = 0),
                        (f.memoizedProps = null),
                        (f.memoizedState = null),
                        (f.updateQueue = null),
                        (f.dependencies = null),
                        (f.stateNode = null))
                      : ((f.childLanes = m.childLanes),
                        (f.lanes = m.lanes),
                        (f.child = m.child),
                        (f.subtreeFlags = 0),
                        (f.deletions = null),
                        (f.memoizedProps = m.memoizedProps),
                        (f.memoizedState = m.memoizedState),
                        (f.updateQueue = m.updateQueue),
                        (f.type = m.type),
                        (e = m.dependencies),
                        (f.dependencies =
                          e === null
                            ? null
                            : {
                                lanes: e.lanes,
                                firstContext: e.firstContext,
                              })),
                    (r = r.sibling);
                return Ie(Ye, (Ye.current & 1) | 2), t.child;
              }
              e = e.sibling;
            }
          f.tail !== null &&
            Qe() > or &&
            ((t.flags |= 128), (s = !0), Sr(f, !1), (t.lanes = 4194304));
        }
      else {
        if (!s)
          if (((e = Ps(m)), e !== null)) {
            if (
              ((t.flags |= 128),
              (s = !0),
              (r = e.updateQueue),
              r !== null && ((t.updateQueue = r), (t.flags |= 4)),
              Sr(f, !0),
              f.tail === null && f.tailMode === "hidden" && !m.alternate && !He)
            )
              return ht(t), null;
          } else
            2 * Qe() - f.renderingStartTime > or &&
              r !== 1073741824 &&
              ((t.flags |= 128), (s = !0), Sr(f, !1), (t.lanes = 4194304));
        f.isBackwards
          ? ((m.sibling = t.child), (t.child = m))
          : ((r = f.last),
            r !== null ? (r.sibling = m) : (t.child = m),
            (f.last = m));
      }
      return f.tail !== null
        ? ((t = f.tail),
          (f.rendering = t),
          (f.tail = t.sibling),
          (f.renderingStartTime = Qe()),
          (t.sibling = null),
          (r = Ye.current),
          Ie(Ye, s ? (r & 1) | 2 : r & 1),
          t)
        : (ht(t), null);
    case 22:
    case 23:
      return (
        Gu(),
        (s = t.memoizedState !== null),
        e !== null && (e.memoizedState !== null) !== s && (t.flags |= 8192),
        s && t.mode & 1
          ? Et & 1073741824 && (ht(t), t.subtreeFlags & 6 && (t.flags |= 8192))
          : ht(t),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(ne(156, t.tag));
}
function Tb(e, t) {
  switch ((Pu(t), t.tag)) {
    case 1:
      return (
        At(t.type) && ys(),
        (e = t.flags),
        e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null
      );
    case 3:
      return (
        ar(),
        Fe(Ct),
        Fe(ft),
        Du(),
        (e = t.flags),
        e & 65536 && !(e & 128) ? ((t.flags = (e & -65537) | 128), t) : null
      );
    case 5:
      return Iu(t), null;
    case 13:
      if (
        (Fe(Ye), (e = t.memoizedState), e !== null && e.dehydrated !== null)
      ) {
        if (t.alternate === null) throw Error(ne(340));
        nr();
      }
      return (
        (e = t.flags), e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null
      );
    case 19:
      return Fe(Ye), null;
    case 4:
      return ar(), null;
    case 10:
      return Mu(t.type._context), null;
    case 22:
    case 23:
      return Gu(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var ja = !1,
  dt = !1,
  Lb = typeof WeakSet == "function" ? WeakSet : Set,
  de = null;
function Bn(e, t) {
  var r = e.ref;
  if (r !== null)
    if (typeof r == "function")
      try {
        r(null);
      } catch (s) {
        Ze(e, t, s);
      }
    else r.current = null;
}
function wc(e, t, r) {
  try {
    r();
  } catch (s) {
    Ze(e, t, s);
  }
}
var Bd = !1;
function Eb(e, t) {
  if (((rc = gs), (e = Tg()), Cu(e))) {
    if ("selectionStart" in e)
      var r = { start: e.selectionStart, end: e.selectionEnd };
    else
      e: {
        r = ((r = e.ownerDocument) && r.defaultView) || window;
        var s = r.getSelection && r.getSelection();
        if (s && s.rangeCount !== 0) {
          r = s.anchorNode;
          var c = s.anchorOffset,
            f = s.focusNode;
          s = s.focusOffset;
          try {
            r.nodeType, f.nodeType;
          } catch {
            r = null;
            break e;
          }
          var m = 0,
            y = -1,
            S = -1,
            T = 0,
            O = 0,
            z = e,
            N = null;
          t: for (;;) {
            for (
              var X;
              z !== r || (c !== 0 && z.nodeType !== 3) || (y = m + c),
                z !== f || (s !== 0 && z.nodeType !== 3) || (S = m + s),
                z.nodeType === 3 && (m += z.nodeValue.length),
                (X = z.firstChild) !== null;

            )
              (N = z), (z = X);
            for (;;) {
              if (z === e) break t;
              if (
                (N === r && ++T === c && (y = m),
                N === f && ++O === s && (S = m),
                (X = z.nextSibling) !== null)
              )
                break;
              (z = N), (N = z.parentNode);
            }
            z = X;
          }
          r = y === -1 || S === -1 ? null : { start: y, end: S };
        } else r = null;
      }
    r = r || { start: 0, end: 0 };
  } else r = null;
  for (
    ac = { focusedElem: e, selectionRange: r }, gs = !1, de = t;
    de !== null;

  )
    if (((t = de), (e = t.child), (t.subtreeFlags & 1028) !== 0 && e !== null))
      (e.return = t), (de = e);
    else
      for (; de !== null; ) {
        t = de;
        try {
          var V = t.alternate;
          if (t.flags & 1024)
            switch (t.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (V !== null) {
                  var Y = V.memoizedProps,
                    Q = V.memoizedState,
                    j = t.stateNode,
                    L = j.getSnapshotBeforeUpdate(
                      t.elementType === t.type ? Y : Wt(t.type, Y),
                      Q
                    );
                  j.__reactInternalSnapshotBeforeUpdate = L;
                }
                break;
              case 3:
                var H = t.stateNode.containerInfo;
                H.nodeType === 1
                  ? (H.textContent = "")
                  : H.nodeType === 9 &&
                    H.documentElement &&
                    H.removeChild(H.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(ne(163));
            }
        } catch (U) {
          Ze(t, t.return, U);
        }
        if (((e = t.sibling), e !== null)) {
          (e.return = t.return), (de = e);
          break;
        }
        de = t.return;
      }
  return (V = Bd), (Bd = !1), V;
}
function _r(e, t, r) {
  var s = t.updateQueue;
  if (((s = s !== null ? s.lastEffect : null), s !== null)) {
    var c = (s = s.next);
    do {
      if ((c.tag & e) === e) {
        var f = c.destroy;
        (c.destroy = void 0), f !== void 0 && wc(t, r, f);
      }
      c = c.next;
    } while (c !== s);
  }
}
function lo(e, t) {
  if (
    ((t = t.updateQueue), (t = t !== null ? t.lastEffect : null), t !== null)
  ) {
    var r = (t = t.next);
    do {
      if ((r.tag & e) === e) {
        var s = r.create;
        r.destroy = s();
      }
      r = r.next;
    } while (r !== t);
  }
}
function Sc(e) {
  var t = e.ref;
  if (t !== null) {
    var r = e.stateNode;
    switch (e.tag) {
      case 5:
        e = r;
        break;
      default:
        e = r;
    }
    typeof t == "function" ? t(e) : (t.current = e);
  }
}
function Cm(e) {
  var t = e.alternate;
  t !== null && ((e.alternate = null), Cm(t)),
    (e.child = null),
    (e.deletions = null),
    (e.sibling = null),
    e.tag === 5 &&
      ((t = e.stateNode),
      t !== null &&
        (delete t[ri], delete t[ia], delete t[lc], delete t[hb], delete t[db])),
    (e.stateNode = null),
    (e.return = null),
    (e.dependencies = null),
    (e.memoizedProps = null),
    (e.memoizedState = null),
    (e.pendingProps = null),
    (e.stateNode = null),
    (e.updateQueue = null);
}
function Am(e) {
  return e.tag === 5 || e.tag === 3 || e.tag === 4;
}
function Vd(e) {
  e: for (;;) {
    for (; e.sibling === null; ) {
      if (e.return === null || Am(e.return)) return null;
      e = e.return;
    }
    for (
      e.sibling.return = e.return, e = e.sibling;
      e.tag !== 5 && e.tag !== 6 && e.tag !== 18;

    ) {
      if (e.flags & 2 || e.child === null || e.tag === 4) continue e;
      (e.child.return = e), (e = e.child);
    }
    if (!(e.flags & 2)) return e.stateNode;
  }
}
function kc(e, t, r) {
  var s = e.tag;
  if (s === 5 || s === 6)
    (e = e.stateNode),
      t
        ? r.nodeType === 8
          ? r.parentNode.insertBefore(e, t)
          : r.insertBefore(e, t)
        : (r.nodeType === 8
            ? ((t = r.parentNode), t.insertBefore(e, r))
            : ((t = r), t.appendChild(e)),
          (r = r._reactRootContainer),
          r != null || t.onclick !== null || (t.onclick = vs));
  else if (s !== 4 && ((e = e.child), e !== null))
    for (kc(e, t, r), e = e.sibling; e !== null; ) kc(e, t, r), (e = e.sibling);
}
function Cc(e, t, r) {
  var s = e.tag;
  if (s === 5 || s === 6)
    (e = e.stateNode), t ? r.insertBefore(e, t) : r.appendChild(e);
  else if (s !== 4 && ((e = e.child), e !== null))
    for (Cc(e, t, r), e = e.sibling; e !== null; ) Cc(e, t, r), (e = e.sibling);
}
var st = null,
  Gt = !1;
function Ti(e, t, r) {
  for (r = r.child; r !== null; ) Pm(e, t, r), (r = r.sibling);
}
function Pm(e, t, r) {
  if (si && typeof si.onCommitFiberUnmount == "function")
    try {
      si.onCommitFiberUnmount(eo, r);
    } catch {}
  switch (r.tag) {
    case 5:
      dt || Bn(r, t);
    case 6:
      var s = st,
        c = Gt;
      (st = null),
        Ti(e, t, r),
        (st = s),
        (Gt = c),
        st !== null &&
          (Gt
            ? ((e = st),
              (r = r.stateNode),
              e.nodeType === 8 ? e.parentNode.removeChild(r) : e.removeChild(r))
            : st.removeChild(r.stateNode));
      break;
    case 18:
      st !== null &&
        (Gt
          ? ((e = st),
            (r = r.stateNode),
            e.nodeType === 8
              ? nl(e.parentNode, r)
              : e.nodeType === 1 && nl(e, r),
            Kr(e))
          : nl(st, r.stateNode));
      break;
    case 4:
      (s = st),
        (c = Gt),
        (st = r.stateNode.containerInfo),
        (Gt = !0),
        Ti(e, t, r),
        (st = s),
        (Gt = c);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !dt &&
        ((s = r.updateQueue), s !== null && ((s = s.lastEffect), s !== null))
      ) {
        c = s = s.next;
        do {
          var f = c,
            m = f.destroy;
          (f = f.tag),
            m !== void 0 && (f & 2 || f & 4) && wc(r, t, m),
            (c = c.next);
        } while (c !== s);
      }
      Ti(e, t, r);
      break;
    case 1:
      if (
        !dt &&
        (Bn(r, t),
        (s = r.stateNode),
        typeof s.componentWillUnmount == "function")
      )
        try {
          (s.props = r.memoizedProps),
            (s.state = r.memoizedState),
            s.componentWillUnmount();
        } catch (y) {
          Ze(r, t, y);
        }
      Ti(e, t, r);
      break;
    case 21:
      Ti(e, t, r);
      break;
    case 22:
      r.mode & 1
        ? ((dt = (s = dt) || r.memoizedState !== null), Ti(e, t, r), (dt = s))
        : Ti(e, t, r);
      break;
    default:
      Ti(e, t, r);
  }
}
function Yd(e) {
  var t = e.updateQueue;
  if (t !== null) {
    e.updateQueue = null;
    var r = e.stateNode;
    r === null && (r = e.stateNode = new Lb()),
      t.forEach(function (s) {
        var c = _b.bind(null, e, s);
        r.has(s) || (r.add(s), s.then(c, c));
      });
  }
}
function Yt(e, t) {
  var r = t.deletions;
  if (r !== null)
    for (var s = 0; s < r.length; s++) {
      var c = r[s];
      try {
        var f = e,
          m = t,
          y = m;
        e: for (; y !== null; ) {
          switch (y.tag) {
            case 5:
              (st = y.stateNode), (Gt = !1);
              break e;
            case 3:
              (st = y.stateNode.containerInfo), (Gt = !0);
              break e;
            case 4:
              (st = y.stateNode.containerInfo), (Gt = !0);
              break e;
          }
          y = y.return;
        }
        if (st === null) throw Error(ne(160));
        Pm(f, m, c), (st = null), (Gt = !1);
        var S = c.alternate;
        S !== null && (S.return = null), (c.return = null);
      } catch (T) {
        Ze(c, t, T);
      }
    }
  if (t.subtreeFlags & 12854)
    for (t = t.child; t !== null; ) Tm(t, e), (t = t.sibling);
}
function Tm(e, t) {
  var r = e.alternate,
    s = e.flags;
  switch (e.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((Yt(t, e), ti(e), s & 4)) {
        try {
          _r(3, e, e.return), lo(3, e);
        } catch (Y) {
          Ze(e, e.return, Y);
        }
        try {
          _r(5, e, e.return);
        } catch (Y) {
          Ze(e, e.return, Y);
        }
      }
      break;
    case 1:
      Yt(t, e), ti(e), s & 512 && r !== null && Bn(r, r.return);
      break;
    case 5:
      if (
        (Yt(t, e),
        ti(e),
        s & 512 && r !== null && Bn(r, r.return),
        e.flags & 32)
      ) {
        var c = e.stateNode;
        try {
          Ur(c, "");
        } catch (Y) {
          Ze(e, e.return, Y);
        }
      }
      if (s & 4 && ((c = e.stateNode), c != null)) {
        var f = e.memoizedProps,
          m = r !== null ? r.memoizedProps : f,
          y = e.type,
          S = e.updateQueue;
        if (((e.updateQueue = null), S !== null))
          try {
            y === "input" && f.type === "radio" && f.name != null && $p(c, f),
              $l(y, m);
            var T = $l(y, f);
            for (m = 0; m < S.length; m += 2) {
              var O = S[m],
                z = S[m + 1];
              O === "style"
                ? Jp(c, z)
                : O === "dangerouslySetInnerHTML"
                ? Kp(c, z)
                : O === "children"
                ? Ur(c, z)
                : hu(c, O, z, T);
            }
            switch (y) {
              case "input":
                Vl(c, f);
                break;
              case "textarea":
                qp(c, f);
                break;
              case "select":
                var N = c._wrapperState.wasMultiple;
                c._wrapperState.wasMultiple = !!f.multiple;
                var X = f.value;
                X != null
                  ? $n(c, !!f.multiple, X, !1)
                  : N !== !!f.multiple &&
                    (f.defaultValue != null
                      ? $n(c, !!f.multiple, f.defaultValue, !0)
                      : $n(c, !!f.multiple, f.multiple ? [] : "", !1));
            }
            c[ia] = f;
          } catch (Y) {
            Ze(e, e.return, Y);
          }
      }
      break;
    case 6:
      if ((Yt(t, e), ti(e), s & 4)) {
        if (e.stateNode === null) throw Error(ne(162));
        (c = e.stateNode), (f = e.memoizedProps);
        try {
          c.nodeValue = f;
        } catch (Y) {
          Ze(e, e.return, Y);
        }
      }
      break;
    case 3:
      if (
        (Yt(t, e), ti(e), s & 4 && r !== null && r.memoizedState.isDehydrated)
      )
        try {
          Kr(t.containerInfo);
        } catch (Y) {
          Ze(e, e.return, Y);
        }
      break;
    case 4:
      Yt(t, e), ti(e);
      break;
    case 13:
      Yt(t, e),
        ti(e),
        (c = e.child),
        c.flags & 8192 &&
          ((f = c.memoizedState !== null),
          (c.stateNode.isHidden = f),
          !f ||
            (c.alternate !== null && c.alternate.memoizedState !== null) ||
            (Yu = Qe())),
        s & 4 && Yd(e);
      break;
    case 22:
      if (
        ((O = r !== null && r.memoizedState !== null),
        e.mode & 1 ? ((dt = (T = dt) || O), Yt(t, e), (dt = T)) : Yt(t, e),
        ti(e),
        s & 8192)
      ) {
        if (
          ((T = e.memoizedState !== null),
          (e.stateNode.isHidden = T) && !O && e.mode & 1)
        )
          for (de = e, O = e.child; O !== null; ) {
            for (z = de = O; de !== null; ) {
              switch (((N = de), (X = N.child), N.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  _r(4, N, N.return);
                  break;
                case 1:
                  Bn(N, N.return);
                  var V = N.stateNode;
                  if (typeof V.componentWillUnmount == "function") {
                    (s = N), (r = N.return);
                    try {
                      (t = s),
                        (V.props = t.memoizedProps),
                        (V.state = t.memoizedState),
                        V.componentWillUnmount();
                    } catch (Y) {
                      Ze(s, r, Y);
                    }
                  }
                  break;
                case 5:
                  Bn(N, N.return);
                  break;
                case 22:
                  if (N.memoizedState !== null) {
                    Gd(z);
                    continue;
                  }
              }
              X !== null ? ((X.return = N), (de = X)) : Gd(z);
            }
            O = O.sibling;
          }
        e: for (O = null, z = e; ; ) {
          if (z.tag === 5) {
            if (O === null) {
              O = z;
              try {
                (c = z.stateNode),
                  T
                    ? ((f = c.style),
                      typeof f.setProperty == "function"
                        ? f.setProperty("display", "none", "important")
                        : (f.display = "none"))
                    : ((y = z.stateNode),
                      (S = z.memoizedProps.style),
                      (m =
                        S != null && S.hasOwnProperty("display")
                          ? S.display
                          : null),
                      (y.style.display = Qp("display", m)));
              } catch (Y) {
                Ze(e, e.return, Y);
              }
            }
          } else if (z.tag === 6) {
            if (O === null)
              try {
                z.stateNode.nodeValue = T ? "" : z.memoizedProps;
              } catch (Y) {
                Ze(e, e.return, Y);
              }
          } else if (
            ((z.tag !== 22 && z.tag !== 23) ||
              z.memoizedState === null ||
              z === e) &&
            z.child !== null
          ) {
            (z.child.return = z), (z = z.child);
            continue;
          }
          if (z === e) break e;
          for (; z.sibling === null; ) {
            if (z.return === null || z.return === e) break e;
            O === z && (O = null), (z = z.return);
          }
          O === z && (O = null), (z.sibling.return = z.return), (z = z.sibling);
        }
      }
      break;
    case 19:
      Yt(t, e), ti(e), s & 4 && Yd(e);
      break;
    case 21:
      break;
    default:
      Yt(t, e), ti(e);
  }
}
function ti(e) {
  var t = e.flags;
  if (t & 2) {
    try {
      e: {
        for (var r = e.return; r !== null; ) {
          if (Am(r)) {
            var s = r;
            break e;
          }
          r = r.return;
        }
        throw Error(ne(160));
      }
      switch (s.tag) {
        case 5:
          var c = s.stateNode;
          s.flags & 32 && (Ur(c, ""), (s.flags &= -33));
          var f = Vd(e);
          Cc(e, f, c);
          break;
        case 3:
        case 4:
          var m = s.stateNode.containerInfo,
            y = Vd(e);
          kc(e, y, m);
          break;
        default:
          throw Error(ne(161));
      }
    } catch (S) {
      Ze(e, e.return, S);
    }
    e.flags &= -3;
  }
  t & 4096 && (e.flags &= -4097);
}
function Mb(e, t, r) {
  (de = e), Lm(e);
}
function Lm(e, t, r) {
  for (var s = (e.mode & 1) !== 0; de !== null; ) {
    var c = de,
      f = c.child;
    if (c.tag === 22 && s) {
      var m = c.memoizedState !== null || ja;
      if (!m) {
        var y = c.alternate,
          S = (y !== null && y.memoizedState !== null) || dt;
        y = ja;
        var T = dt;
        if (((ja = m), (dt = S) && !T))
          for (de = c; de !== null; )
            (m = de),
              (S = m.child),
              m.tag === 22 && m.memoizedState !== null
                ? Ud(c)
                : S !== null
                ? ((S.return = m), (de = S))
                : Ud(c);
        for (; f !== null; ) (de = f), Lm(f), (f = f.sibling);
        (de = c), (ja = y), (dt = T);
      }
      Wd(e);
    } else
      c.subtreeFlags & 8772 && f !== null ? ((f.return = c), (de = f)) : Wd(e);
  }
}
function Wd(e) {
  for (; de !== null; ) {
    var t = de;
    if (t.flags & 8772) {
      var r = t.alternate;
      try {
        if (t.flags & 8772)
          switch (t.tag) {
            case 0:
            case 11:
            case 15:
              dt || lo(5, t);
              break;
            case 1:
              var s = t.stateNode;
              if (t.flags & 4 && !dt)
                if (r === null) s.componentDidMount();
                else {
                  var c =
                    t.elementType === t.type
                      ? r.memoizedProps
                      : Wt(t.type, r.memoizedProps);
                  s.componentDidUpdate(
                    c,
                    r.memoizedState,
                    s.__reactInternalSnapshotBeforeUpdate
                  );
                }
              var f = t.updateQueue;
              f !== null && Ld(t, f, s);
              break;
            case 3:
              var m = t.updateQueue;
              if (m !== null) {
                if (((r = null), t.child !== null))
                  switch (t.child.tag) {
                    case 5:
                      r = t.child.stateNode;
                      break;
                    case 1:
                      r = t.child.stateNode;
                  }
                Ld(t, m, r);
              }
              break;
            case 5:
              var y = t.stateNode;
              if (r === null && t.flags & 4) {
                r = y;
                var S = t.memoizedProps;
                switch (t.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    S.autoFocus && r.focus();
                    break;
                  case "img":
                    S.src && (r.src = S.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (t.memoizedState === null) {
                var T = t.alternate;
                if (T !== null) {
                  var O = T.memoizedState;
                  if (O !== null) {
                    var z = O.dehydrated;
                    z !== null && Kr(z);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(ne(163));
          }
        dt || (t.flags & 512 && Sc(t));
      } catch (N) {
        Ze(t, t.return, N);
      }
    }
    if (t === e) {
      de = null;
      break;
    }
    if (((r = t.sibling), r !== null)) {
      (r.return = t.return), (de = r);
      break;
    }
    de = t.return;
  }
}
function Gd(e) {
  for (; de !== null; ) {
    var t = de;
    if (t === e) {
      de = null;
      break;
    }
    var r = t.sibling;
    if (r !== null) {
      (r.return = t.return), (de = r);
      break;
    }
    de = t.return;
  }
}
function Ud(e) {
  for (; de !== null; ) {
    var t = de;
    try {
      switch (t.tag) {
        case 0:
        case 11:
        case 15:
          var r = t.return;
          try {
            lo(4, t);
          } catch (S) {
            Ze(t, r, S);
          }
          break;
        case 1:
          var s = t.stateNode;
          if (typeof s.componentDidMount == "function") {
            var c = t.return;
            try {
              s.componentDidMount();
            } catch (S) {
              Ze(t, c, S);
            }
          }
          var f = t.return;
          try {
            Sc(t);
          } catch (S) {
            Ze(t, f, S);
          }
          break;
        case 5:
          var m = t.return;
          try {
            Sc(t);
          } catch (S) {
            Ze(t, m, S);
          }
      }
    } catch (S) {
      Ze(t, t.return, S);
    }
    if (t === e) {
      de = null;
      break;
    }
    var y = t.sibling;
    if (y !== null) {
      (y.return = t.return), (de = y);
      break;
    }
    de = t.return;
  }
}
var Ob = Math.ceil,
  Es = Ai.ReactCurrentDispatcher,
  Bu = Ai.ReactCurrentOwner,
  Xt = Ai.ReactCurrentBatchConfig,
  Te = 0,
  at = null,
  et = null,
  ot = 0,
  Et = 0,
  Vn = en(0),
  it = 0,
  la = null,
  Sn = 0,
  co = 0,
  Vu = 0,
  Hr = null,
  St = null,
  Yu = 0,
  or = 1 / 0,
  di = null,
  Ms = !1,
  Ac = null,
  Vi = null,
  Ba = !1,
  Fi = null,
  Os = 0,
  Xr = 0,
  Pc = null,
  as = -1,
  ss = 0;
function xt() {
  return Te & 6 ? Qe() : as !== -1 ? as : (as = Qe());
}
function Yi(e) {
  return e.mode & 1
    ? Te & 2 && ot !== 0
      ? ot & -ot
      : pb.transition !== null
      ? (ss === 0 && (ss = hg()), ss)
      : ((e = Ee),
        e !== 0 || ((e = window.event), (e = e === void 0 ? 16 : vg(e.type))),
        e)
    : 1;
}
function Zt(e, t, r, s) {
  if (50 < Xr) throw ((Xr = 0), (Pc = null), Error(ne(185)));
  ga(e, r, s),
    (!(Te & 2) || e !== at) &&
      (e === at && (!(Te & 2) && (co |= r), it === 4 && Di(e, ot)),
      Pt(e, s),
      r === 1 && Te === 0 && !(t.mode & 1) && ((or = Qe() + 500), ao && tn()));
}
function Pt(e, t) {
  var r = e.callbackNode;
  p0(e, t);
  var s = ps(e, e === at ? ot : 0);
  if (s === 0)
    r !== null && id(r), (e.callbackNode = null), (e.callbackPriority = 0);
  else if (((t = s & -s), e.callbackPriority !== t)) {
    if ((r != null && id(r), t === 1))
      e.tag === 0 ? fb($d.bind(null, e)) : Fg($d.bind(null, e)),
        cb(function () {
          !(Te & 6) && tn();
        }),
        (r = null);
    else {
      switch (dg(s)) {
        case 1:
          r = mu;
          break;
        case 4:
          r = cg;
          break;
        case 16:
          r = fs;
          break;
        case 536870912:
          r = ug;
          break;
        default:
          r = fs;
      }
      r = Nm(r, Em.bind(null, e));
    }
    (e.callbackPriority = t), (e.callbackNode = r);
  }
}
function Em(e, t) {
  if (((as = -1), (ss = 0), Te & 6)) throw Error(ne(327));
  var r = e.callbackNode;
  if (Jn() && e.callbackNode !== r) return null;
  var s = ps(e, e === at ? ot : 0);
  if (s === 0) return null;
  if (s & 30 || s & e.expiredLanes || t) t = Rs(e, s);
  else {
    t = s;
    var c = Te;
    Te |= 2;
    var f = Om();
    (at !== e || ot !== t) && ((di = null), (or = Qe() + 500), gn(e, t));
    do
      try {
        Ib();
        break;
      } catch (y) {
        Mm(e, y);
      }
    while (1);
    Eu(),
      (Es.current = f),
      (Te = c),
      et !== null ? (t = 0) : ((at = null), (ot = 0), (t = it));
  }
  if (t !== 0) {
    if (
      (t === 2 && ((c = Jl(e)), c !== 0 && ((s = c), (t = Tc(e, c)))), t === 1)
    )
      throw ((r = la), gn(e, 0), Di(e, s), Pt(e, Qe()), r);
    if (t === 6) Di(e, s);
    else {
      if (
        ((c = e.current.alternate),
        !(s & 30) &&
          !Rb(c) &&
          ((t = Rs(e, s)),
          t === 2 && ((f = Jl(e)), f !== 0 && ((s = f), (t = Tc(e, f)))),
          t === 1))
      )
        throw ((r = la), gn(e, 0), Di(e, s), Pt(e, Qe()), r);
      switch (((e.finishedWork = c), (e.finishedLanes = s), t)) {
        case 0:
        case 1:
          throw Error(ne(345));
        case 2:
          ln(e, St, di);
          break;
        case 3:
          if (
            (Di(e, s), (s & 130023424) === s && ((t = Yu + 500 - Qe()), 10 < t))
          ) {
            if (ps(e, 0) !== 0) break;
            if (((c = e.suspendedLanes), (c & s) !== s)) {
              xt(), (e.pingedLanes |= e.suspendedLanes & c);
              break;
            }
            e.timeoutHandle = oc(ln.bind(null, e, St, di), t);
            break;
          }
          ln(e, St, di);
          break;
        case 4:
          if ((Di(e, s), (s & 4194240) === s)) break;
          for (t = e.eventTimes, c = -1; 0 < s; ) {
            var m = 31 - qt(s);
            (f = 1 << m), (m = t[m]), m > c && (c = m), (s &= ~f);
          }
          if (
            ((s = c),
            (s = Qe() - s),
            (s =
              (120 > s
                ? 120
                : 480 > s
                ? 480
                : 1080 > s
                ? 1080
                : 1920 > s
                ? 1920
                : 3e3 > s
                ? 3e3
                : 4320 > s
                ? 4320
                : 1960 * Ob(s / 1960)) - s),
            10 < s)
          ) {
            e.timeoutHandle = oc(ln.bind(null, e, St, di), s);
            break;
          }
          ln(e, St, di);
          break;
        case 5:
          ln(e, St, di);
          break;
        default:
          throw Error(ne(329));
      }
    }
  }
  return Pt(e, Qe()), e.callbackNode === r ? Em.bind(null, e) : null;
}
function Tc(e, t) {
  var r = Hr;
  return (
    e.current.memoizedState.isDehydrated && (gn(e, t).flags |= 256),
    (e = Rs(e, t)),
    e !== 2 && ((t = St), (St = r), t !== null && Lc(t)),
    e
  );
}
function Lc(e) {
  St === null ? (St = e) : St.push.apply(St, e);
}
function Rb(e) {
  for (var t = e; ; ) {
    if (t.flags & 16384) {
      var r = t.updateQueue;
      if (r !== null && ((r = r.stores), r !== null))
        for (var s = 0; s < r.length; s++) {
          var c = r[s],
            f = c.getSnapshot;
          c = c.value;
          try {
            if (!Kt(f(), c)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((r = t.child), t.subtreeFlags & 16384 && r !== null))
      (r.return = t), (t = r);
    else {
      if (t === e) break;
      for (; t.sibling === null; ) {
        if (t.return === null || t.return === e) return !0;
        t = t.return;
      }
      (t.sibling.return = t.return), (t = t.sibling);
    }
  }
  return !0;
}
function Di(e, t) {
  for (
    t &= ~Vu,
      t &= ~co,
      e.suspendedLanes |= t,
      e.pingedLanes &= ~t,
      e = e.expirationTimes;
    0 < t;

  ) {
    var r = 31 - qt(t),
      s = 1 << r;
    (e[r] = -1), (t &= ~s);
  }
}
function $d(e) {
  if (Te & 6) throw Error(ne(327));
  Jn();
  var t = ps(e, 0);
  if (!(t & 1)) return Pt(e, Qe()), null;
  var r = Rs(e, t);
  if (e.tag !== 0 && r === 2) {
    var s = Jl(e);
    s !== 0 && ((t = s), (r = Tc(e, s)));
  }
  if (r === 1) throw ((r = la), gn(e, 0), Di(e, t), Pt(e, Qe()), r);
  if (r === 6) throw Error(ne(345));
  return (
    (e.finishedWork = e.current.alternate),
    (e.finishedLanes = t),
    ln(e, St, di),
    Pt(e, Qe()),
    null
  );
}
function Wu(e, t) {
  var r = Te;
  Te |= 1;
  try {
    return e(t);
  } finally {
    (Te = r), Te === 0 && ((or = Qe() + 500), ao && tn());
  }
}
function kn(e) {
  Fi !== null && Fi.tag === 0 && !(Te & 6) && Jn();
  var t = Te;
  Te |= 1;
  var r = Xt.transition,
    s = Ee;
  try {
    if (((Xt.transition = null), (Ee = 1), e)) return e();
  } finally {
    (Ee = s), (Xt.transition = r), (Te = t), !(Te & 6) && tn();
  }
}
function Gu() {
  (Et = Vn.current), Fe(Vn);
}
function gn(e, t) {
  (e.finishedWork = null), (e.finishedLanes = 0);
  var r = e.timeoutHandle;
  if ((r !== -1 && ((e.timeoutHandle = -1), lb(r)), et !== null))
    for (r = et.return; r !== null; ) {
      var s = r;
      switch ((Pu(s), s.tag)) {
        case 1:
          (s = s.type.childContextTypes), s != null && ys();
          break;
        case 3:
          ar(), Fe(Ct), Fe(ft), Du();
          break;
        case 5:
          Iu(s);
          break;
        case 4:
          ar();
          break;
        case 13:
          Fe(Ye);
          break;
        case 19:
          Fe(Ye);
          break;
        case 10:
          Mu(s.type._context);
          break;
        case 22:
        case 23:
          Gu();
      }
      r = r.return;
    }
  if (
    ((at = e),
    (et = e = Wi(e.current, null)),
    (ot = Et = t),
    (it = 0),
    (la = null),
    (Vu = co = Sn = 0),
    (St = Hr = null),
    dn !== null)
  ) {
    for (t = 0; t < dn.length; t++)
      if (((r = dn[t]), (s = r.interleaved), s !== null)) {
        r.interleaved = null;
        var c = s.next,
          f = r.pending;
        if (f !== null) {
          var m = f.next;
          (f.next = c), (s.next = m);
        }
        r.pending = s;
      }
    dn = null;
  }
  return e;
}
function Mm(e, t) {
  do {
    var r = et;
    try {
      if ((Eu(), (is.current = Ls), Ts)) {
        for (var s = Ge.memoizedState; s !== null; ) {
          var c = s.queue;
          c !== null && (c.pending = null), (s = s.next);
        }
        Ts = !1;
      }
      if (
        ((wn = 0),
        (rt = tt = Ge = null),
        (Fr = !1),
        (aa = 0),
        (Bu.current = null),
        r === null || r.return === null)
      ) {
        (it = 1), (la = t), (et = null);
        break;
      }
      e: {
        var f = e,
          m = r.return,
          y = r,
          S = t;
        if (
          ((t = ot),
          (y.flags |= 32768),
          S !== null && typeof S == "object" && typeof S.then == "function")
        ) {
          var T = S,
            O = y,
            z = O.tag;
          if (!(O.mode & 1) && (z === 0 || z === 11 || z === 15)) {
            var N = O.alternate;
            N
              ? ((O.updateQueue = N.updateQueue),
                (O.memoizedState = N.memoizedState),
                (O.lanes = N.lanes))
              : ((O.updateQueue = null), (O.memoizedState = null));
          }
          var X = Dd(m);
          if (X !== null) {
            (X.flags &= -257),
              Nd(X, m, y, f, t),
              X.mode & 1 && Id(f, T, t),
              (t = X),
              (S = T);
            var V = t.updateQueue;
            if (V === null) {
              var Y = new Set();
              Y.add(S), (t.updateQueue = Y);
            } else V.add(S);
            break e;
          } else {
            if (!(t & 1)) {
              Id(f, T, t), Uu();
              break e;
            }
            S = Error(ne(426));
          }
        } else if (He && y.mode & 1) {
          var Q = Dd(m);
          if (Q !== null) {
            !(Q.flags & 65536) && (Q.flags |= 256),
              Nd(Q, m, y, f, t),
              Tu(sr(S, y));
            break e;
          }
        }
        (f = S = sr(S, y)),
          it !== 4 && (it = 2),
          Hr === null ? (Hr = [f]) : Hr.push(f),
          (f = m);
        do {
          switch (f.tag) {
            case 3:
              (f.flags |= 65536), (t &= -t), (f.lanes |= t);
              var j = fm(f, S, t);
              Td(f, j);
              break e;
            case 1:
              y = S;
              var L = f.type,
                H = f.stateNode;
              if (
                !(f.flags & 128) &&
                (typeof L.getDerivedStateFromError == "function" ||
                  (H !== null &&
                    typeof H.componentDidCatch == "function" &&
                    (Vi === null || !Vi.has(H))))
              ) {
                (f.flags |= 65536), (t &= -t), (f.lanes |= t);
                var U = pm(f, y, t);
                Td(f, U);
                break e;
              }
          }
          f = f.return;
        } while (f !== null);
      }
      zm(r);
    } catch (B) {
      (t = B), et === r && r !== null && (et = r = r.return);
      continue;
    }
    break;
  } while (1);
}
function Om() {
  var e = Es.current;
  return (Es.current = Ls), e === null ? Ls : e;
}
function Uu() {
  (it === 0 || it === 3 || it === 2) && (it = 4),
    at === null || (!(Sn & 268435455) && !(co & 268435455)) || Di(at, ot);
}
function Rs(e, t) {
  var r = Te;
  Te |= 2;
  var s = Om();
  (at !== e || ot !== t) && ((di = null), gn(e, t));
  do
    try {
      zb();
      break;
    } catch (c) {
      Mm(e, c);
    }
  while (1);
  if ((Eu(), (Te = r), (Es.current = s), et !== null)) throw Error(ne(261));
  return (at = null), (ot = 0), it;
}
function zb() {
  for (; et !== null; ) Rm(et);
}
function Ib() {
  for (; et !== null && !a0(); ) Rm(et);
}
function Rm(e) {
  var t = Dm(e.alternate, e, Et);
  (e.memoizedProps = e.pendingProps),
    t === null ? zm(e) : (et = t),
    (Bu.current = null);
}
function zm(e) {
  var t = e;
  do {
    var r = t.alternate;
    if (((e = t.return), t.flags & 32768)) {
      if (((r = Tb(r, t)), r !== null)) {
        (r.flags &= 32767), (et = r);
        return;
      }
      if (e !== null)
        (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
      else {
        (it = 6), (et = null);
        return;
      }
    } else if (((r = Pb(r, t, Et)), r !== null)) {
      et = r;
      return;
    }
    if (((t = t.sibling), t !== null)) {
      et = t;
      return;
    }
    et = t = e;
  } while (t !== null);
  it === 0 && (it = 5);
}
function ln(e, t, r) {
  var s = Ee,
    c = Xt.transition;
  try {
    (Xt.transition = null), (Ee = 1), Db(e, t, r, s);
  } finally {
    (Xt.transition = c), (Ee = s);
  }
  return null;
}
function Db(e, t, r, s) {
  do Jn();
  while (Fi !== null);
  if (Te & 6) throw Error(ne(327));
  r = e.finishedWork;
  var c = e.finishedLanes;
  if (r === null) return null;
  if (((e.finishedWork = null), (e.finishedLanes = 0), r === e.current))
    throw Error(ne(177));
  (e.callbackNode = null), (e.callbackPriority = 0);
  var f = r.lanes | r.childLanes;
  if (
    (g0(e, f),
    e === at && ((et = at = null), (ot = 0)),
    (!(r.subtreeFlags & 2064) && !(r.flags & 2064)) ||
      Ba ||
      ((Ba = !0),
      Nm(fs, function () {
        return Jn(), null;
      })),
    (f = (r.flags & 15990) !== 0),
    r.subtreeFlags & 15990 || f)
  ) {
    (f = Xt.transition), (Xt.transition = null);
    var m = Ee;
    Ee = 1;
    var y = Te;
    (Te |= 4),
      (Bu.current = null),
      Eb(e, r),
      Tm(r, e),
      tb(ac),
      (gs = !!rc),
      (ac = rc = null),
      (e.current = r),
      Mb(r),
      s0(),
      (Te = y),
      (Ee = m),
      (Xt.transition = f);
  } else e.current = r;
  if (
    (Ba && ((Ba = !1), (Fi = e), (Os = c)),
    (f = e.pendingLanes),
    f === 0 && (Vi = null),
    c0(r.stateNode),
    Pt(e, Qe()),
    t !== null)
  )
    for (s = e.onRecoverableError, r = 0; r < t.length; r++)
      (c = t[r]), s(c.value, { componentStack: c.stack, digest: c.digest });
  if (Ms) throw ((Ms = !1), (e = Ac), (Ac = null), e);
  return (
    Os & 1 && e.tag !== 0 && Jn(),
    (f = e.pendingLanes),
    f & 1 ? (e === Pc ? Xr++ : ((Xr = 0), (Pc = e))) : (Xr = 0),
    tn(),
    null
  );
}
function Jn() {
  if (Fi !== null) {
    var e = dg(Os),
      t = Xt.transition,
      r = Ee;
    try {
      if (((Xt.transition = null), (Ee = 16 > e ? 16 : e), Fi === null))
        var s = !1;
      else {
        if (((e = Fi), (Fi = null), (Os = 0), Te & 6)) throw Error(ne(331));
        var c = Te;
        for (Te |= 4, de = e.current; de !== null; ) {
          var f = de,
            m = f.child;
          if (de.flags & 16) {
            var y = f.deletions;
            if (y !== null) {
              for (var S = 0; S < y.length; S++) {
                var T = y[S];
                for (de = T; de !== null; ) {
                  var O = de;
                  switch (O.tag) {
                    case 0:
                    case 11:
                    case 15:
                      _r(8, O, f);
                  }
                  var z = O.child;
                  if (z !== null) (z.return = O), (de = z);
                  else
                    for (; de !== null; ) {
                      O = de;
                      var N = O.sibling,
                        X = O.return;
                      if ((Cm(O), O === T)) {
                        de = null;
                        break;
                      }
                      if (N !== null) {
                        (N.return = X), (de = N);
                        break;
                      }
                      de = X;
                    }
                }
              }
              var V = f.alternate;
              if (V !== null) {
                var Y = V.child;
                if (Y !== null) {
                  V.child = null;
                  do {
                    var Q = Y.sibling;
                    (Y.sibling = null), (Y = Q);
                  } while (Y !== null);
                }
              }
              de = f;
            }
          }
          if (f.subtreeFlags & 2064 && m !== null) (m.return = f), (de = m);
          else
            e: for (; de !== null; ) {
              if (((f = de), f.flags & 2048))
                switch (f.tag) {
                  case 0:
                  case 11:
                  case 15:
                    _r(9, f, f.return);
                }
              var j = f.sibling;
              if (j !== null) {
                (j.return = f.return), (de = j);
                break e;
              }
              de = f.return;
            }
        }
        var L = e.current;
        for (de = L; de !== null; ) {
          m = de;
          var H = m.child;
          if (m.subtreeFlags & 2064 && H !== null) (H.return = m), (de = H);
          else
            e: for (m = L; de !== null; ) {
              if (((y = de), y.flags & 2048))
                try {
                  switch (y.tag) {
                    case 0:
                    case 11:
                    case 15:
                      lo(9, y);
                  }
                } catch (B) {
                  Ze(y, y.return, B);
                }
              if (y === m) {
                de = null;
                break e;
              }
              var U = y.sibling;
              if (U !== null) {
                (U.return = y.return), (de = U);
                break e;
              }
              de = y.return;
            }
        }
        if (
          ((Te = c), tn(), si && typeof si.onPostCommitFiberRoot == "function")
        )
          try {
            si.onPostCommitFiberRoot(eo, e);
          } catch {}
        s = !0;
      }
      return s;
    } finally {
      (Ee = r), (Xt.transition = t);
    }
  }
  return !1;
}
function qd(e, t, r) {
  (t = sr(r, t)),
    (t = fm(e, t, 1)),
    (e = Bi(e, t, 1)),
    (t = xt()),
    e !== null && (ga(e, 1, t), Pt(e, t));
}
function Ze(e, t, r) {
  if (e.tag === 3) qd(e, e, r);
  else
    for (; t !== null; ) {
      if (t.tag === 3) {
        qd(t, e, r);
        break;
      } else if (t.tag === 1) {
        var s = t.stateNode;
        if (
          typeof t.type.getDerivedStateFromError == "function" ||
          (typeof s.componentDidCatch == "function" &&
            (Vi === null || !Vi.has(s)))
        ) {
          (e = sr(r, e)),
            (e = pm(t, e, 1)),
            (t = Bi(t, e, 1)),
            (e = xt()),
            t !== null && (ga(t, 1, e), Pt(t, e));
          break;
        }
      }
      t = t.return;
    }
}
function Nb(e, t, r) {
  var s = e.pingCache;
  s !== null && s.delete(t),
    (t = xt()),
    (e.pingedLanes |= e.suspendedLanes & r),
    at === e &&
      (ot & r) === r &&
      (it === 4 || (it === 3 && (ot & 130023424) === ot && 500 > Qe() - Yu)
        ? gn(e, 0)
        : (Vu |= r)),
    Pt(e, t);
}
function Im(e, t) {
  t === 0 &&
    (e.mode & 1
      ? ((t = Ra), (Ra <<= 1), !(Ra & 130023424) && (Ra = 4194304))
      : (t = 1));
  var r = xt();
  (e = Si(e, t)), e !== null && (ga(e, t, r), Pt(e, r));
}
function Fb(e) {
  var t = e.memoizedState,
    r = 0;
  t !== null && (r = t.retryLane), Im(e, r);
}
function _b(e, t) {
  var r = 0;
  switch (e.tag) {
    case 13:
      var s = e.stateNode,
        c = e.memoizedState;
      c !== null && (r = c.retryLane);
      break;
    case 19:
      s = e.stateNode;
      break;
    default:
      throw Error(ne(314));
  }
  s !== null && s.delete(t), Im(e, r);
}
var Dm;
Dm = function (e, t, r) {
  if (e !== null)
    if (e.memoizedProps !== t.pendingProps || Ct.current) kt = !0;
    else {
      if (!(e.lanes & r) && !(t.flags & 128)) return (kt = !1), Ab(e, t, r);
      kt = !!(e.flags & 131072);
    }
  else (kt = !1), He && t.flags & 1048576 && _g(t, Ss, t.index);
  switch (((t.lanes = 0), t.tag)) {
    case 2:
      var s = t.type;
      rs(e, t), (e = t.pendingProps);
      var c = ir(t, ft.current);
      Qn(t, r), (c = Fu(null, t, s, e, c, r));
      var f = _u();
      return (
        (t.flags |= 1),
        typeof c == "object" &&
        c !== null &&
        typeof c.render == "function" &&
        c.$$typeof === void 0
          ? ((t.tag = 1),
            (t.memoizedState = null),
            (t.updateQueue = null),
            At(s) ? ((f = !0), bs(t)) : (f = !1),
            (t.memoizedState =
              c.state !== null && c.state !== void 0 ? c.state : null),
            Ru(t),
            (c.updater = so),
            (t.stateNode = c),
            (c._reactInternals = t),
            pc(t, s, e, r),
            (t = xc(null, t, s, !0, f, r)))
          : ((t.tag = 0), He && f && Au(t), mt(null, t, c, r), (t = t.child)),
        t
      );
    case 16:
      s = t.elementType;
      e: {
        switch (
          (rs(e, t),
          (e = t.pendingProps),
          (c = s._init),
          (s = c(s._payload)),
          (t.type = s),
          (c = t.tag = Xb(s)),
          (e = Wt(s, e)),
          c)
        ) {
          case 0:
            t = mc(null, t, s, e, r);
            break e;
          case 1:
            t = Hd(null, t, s, e, r);
            break e;
          case 11:
            t = Fd(null, t, s, e, r);
            break e;
          case 14:
            t = _d(null, t, s, Wt(s.type, e), r);
            break e;
        }
        throw Error(ne(306, s, ""));
      }
      return t;
    case 0:
      return (
        (s = t.type),
        (c = t.pendingProps),
        (c = t.elementType === s ? c : Wt(s, c)),
        mc(e, t, s, c, r)
      );
    case 1:
      return (
        (s = t.type),
        (c = t.pendingProps),
        (c = t.elementType === s ? c : Wt(s, c)),
        Hd(e, t, s, c, r)
      );
    case 3:
      e: {
        if ((vm(t), e === null)) throw Error(ne(387));
        (s = t.pendingProps),
          (f = t.memoizedState),
          (c = f.element),
          Bg(e, t),
          As(t, s, null, r);
        var m = t.memoizedState;
        if (((s = m.element), f.isDehydrated))
          if (
            ((f = {
              element: s,
              isDehydrated: !1,
              cache: m.cache,
              pendingSuspenseBoundaries: m.pendingSuspenseBoundaries,
              transitions: m.transitions,
            }),
            (t.updateQueue.baseState = f),
            (t.memoizedState = f),
            t.flags & 256)
          ) {
            (c = sr(Error(ne(423)), t)), (t = Xd(e, t, s, r, c));
            break e;
          } else if (s !== c) {
            (c = sr(Error(ne(424)), t)), (t = Xd(e, t, s, r, c));
            break e;
          } else
            for (
              Mt = ji(t.stateNode.containerInfo.firstChild),
                Ot = t,
                He = !0,
                Ut = null,
                r = Gg(t, null, s, r),
                t.child = r;
              r;

            )
              (r.flags = (r.flags & -3) | 4096), (r = r.sibling);
        else {
          if ((nr(), s === c)) {
            t = ki(e, t, r);
            break e;
          }
          mt(e, t, s, r);
        }
        t = t.child;
      }
      return t;
    case 5:
      return (
        Ug(t),
        e === null && hc(t),
        (s = t.type),
        (c = t.pendingProps),
        (f = e !== null ? e.memoizedProps : null),
        (m = c.children),
        sc(s, c) ? (m = null) : f !== null && sc(s, f) && (t.flags |= 32),
        xm(e, t),
        mt(e, t, m, r),
        t.child
      );
    case 6:
      return e === null && hc(t), null;
    case 13:
      return ym(e, t, r);
    case 4:
      return (
        zu(t, t.stateNode.containerInfo),
        (s = t.pendingProps),
        e === null ? (t.child = rr(t, null, s, r)) : mt(e, t, s, r),
        t.child
      );
    case 11:
      return (
        (s = t.type),
        (c = t.pendingProps),
        (c = t.elementType === s ? c : Wt(s, c)),
        Fd(e, t, s, c, r)
      );
    case 7:
      return mt(e, t, t.pendingProps, r), t.child;
    case 8:
      return mt(e, t, t.pendingProps.children, r), t.child;
    case 12:
      return mt(e, t, t.pendingProps.children, r), t.child;
    case 10:
      e: {
        if (
          ((s = t.type._context),
          (c = t.pendingProps),
          (f = t.memoizedProps),
          (m = c.value),
          Ie(ks, s._currentValue),
          (s._currentValue = m),
          f !== null)
        )
          if (Kt(f.value, m)) {
            if (f.children === c.children && !Ct.current) {
              t = ki(e, t, r);
              break e;
            }
          } else
            for (f = t.child, f !== null && (f.return = t); f !== null; ) {
              var y = f.dependencies;
              if (y !== null) {
                m = f.child;
                for (var S = y.firstContext; S !== null; ) {
                  if (S.context === s) {
                    if (f.tag === 1) {
                      (S = xi(-1, r & -r)), (S.tag = 2);
                      var T = f.updateQueue;
                      if (T !== null) {
                        T = T.shared;
                        var O = T.pending;
                        O === null
                          ? (S.next = S)
                          : ((S.next = O.next), (O.next = S)),
                          (T.pending = S);
                      }
                    }
                    (f.lanes |= r),
                      (S = f.alternate),
                      S !== null && (S.lanes |= r),
                      dc(f.return, r, t),
                      (y.lanes |= r);
                    break;
                  }
                  S = S.next;
                }
              } else if (f.tag === 10) m = f.type === t.type ? null : f.child;
              else if (f.tag === 18) {
                if (((m = f.return), m === null)) throw Error(ne(341));
                (m.lanes |= r),
                  (y = m.alternate),
                  y !== null && (y.lanes |= r),
                  dc(m, r, t),
                  (m = f.sibling);
              } else m = f.child;
              if (m !== null) m.return = f;
              else
                for (m = f; m !== null; ) {
                  if (m === t) {
                    m = null;
                    break;
                  }
                  if (((f = m.sibling), f !== null)) {
                    (f.return = m.return), (m = f);
                    break;
                  }
                  m = m.return;
                }
              f = m;
            }
        mt(e, t, c.children, r), (t = t.child);
      }
      return t;
    case 9:
      return (
        (c = t.type),
        (s = t.pendingProps.children),
        Qn(t, r),
        (c = jt(c)),
        (s = s(c)),
        (t.flags |= 1),
        mt(e, t, s, r),
        t.child
      );
    case 14:
      return (
        (s = t.type),
        (c = Wt(s, t.pendingProps)),
        (c = Wt(s.type, c)),
        _d(e, t, s, c, r)
      );
    case 15:
      return gm(e, t, t.type, t.pendingProps, r);
    case 17:
      return (
        (s = t.type),
        (c = t.pendingProps),
        (c = t.elementType === s ? c : Wt(s, c)),
        rs(e, t),
        (t.tag = 1),
        At(s) ? ((e = !0), bs(t)) : (e = !1),
        Qn(t, r),
        Yg(t, s, c),
        pc(t, s, c, r),
        xc(null, t, s, !0, e, r)
      );
    case 19:
      return bm(e, t, r);
    case 22:
      return mm(e, t, r);
  }
  throw Error(ne(156, t.tag));
};
function Nm(e, t) {
  return lg(e, t);
}
function Hb(e, t, r, s) {
  (this.tag = e),
    (this.key = r),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = t),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = s),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function Ht(e, t, r, s) {
  return new Hb(e, t, r, s);
}
function $u(e) {
  return (e = e.prototype), !(!e || !e.isReactComponent);
}
function Xb(e) {
  if (typeof e == "function") return $u(e) ? 1 : 0;
  if (e != null) {
    if (((e = e.$$typeof), e === fu)) return 11;
    if (e === pu) return 14;
  }
  return 2;
}
function Wi(e, t) {
  var r = e.alternate;
  return (
    r === null
      ? ((r = Ht(e.tag, t, e.key, e.mode)),
        (r.elementType = e.elementType),
        (r.type = e.type),
        (r.stateNode = e.stateNode),
        (r.alternate = e),
        (e.alternate = r))
      : ((r.pendingProps = t),
        (r.type = e.type),
        (r.flags = 0),
        (r.subtreeFlags = 0),
        (r.deletions = null)),
    (r.flags = e.flags & 14680064),
    (r.childLanes = e.childLanes),
    (r.lanes = e.lanes),
    (r.child = e.child),
    (r.memoizedProps = e.memoizedProps),
    (r.memoizedState = e.memoizedState),
    (r.updateQueue = e.updateQueue),
    (t = e.dependencies),
    (r.dependencies =
      t === null ? null : { lanes: t.lanes, firstContext: t.firstContext }),
    (r.sibling = e.sibling),
    (r.index = e.index),
    (r.ref = e.ref),
    r
  );
}
function os(e, t, r, s, c, f) {
  var m = 2;
  if (((s = e), typeof e == "function")) $u(e) && (m = 1);
  else if (typeof e == "string") m = 5;
  else
    e: switch (e) {
      case zn:
        return mn(r.children, c, f, t);
      case du:
        (m = 8), (c |= 8);
        break;
      case _l:
        return (
          (e = Ht(12, r, t, c | 2)), (e.elementType = _l), (e.lanes = f), e
        );
      case Hl:
        return (e = Ht(13, r, t, c)), (e.elementType = Hl), (e.lanes = f), e;
      case Xl:
        return (e = Ht(19, r, t, c)), (e.elementType = Xl), (e.lanes = f), e;
      case Wp:
        return uo(r, c, f, t);
      default:
        if (typeof e == "object" && e !== null)
          switch (e.$$typeof) {
            case Vp:
              m = 10;
              break e;
            case Yp:
              m = 9;
              break e;
            case fu:
              m = 11;
              break e;
            case pu:
              m = 14;
              break e;
            case Mi:
              (m = 16), (s = null);
              break e;
          }
        throw Error(ne(130, e == null ? e : typeof e, ""));
    }
  return (
    (t = Ht(m, r, t, c)), (t.elementType = e), (t.type = s), (t.lanes = f), t
  );
}
function mn(e, t, r, s) {
  return (e = Ht(7, e, s, t)), (e.lanes = r), e;
}
function uo(e, t, r, s) {
  return (
    (e = Ht(22, e, s, t)),
    (e.elementType = Wp),
    (e.lanes = r),
    (e.stateNode = { isHidden: !1 }),
    e
  );
}
function hl(e, t, r) {
  return (e = Ht(6, e, null, t)), (e.lanes = r), e;
}
function dl(e, t, r) {
  return (
    (t = Ht(4, e.children !== null ? e.children : [], e.key, t)),
    (t.lanes = r),
    (t.stateNode = {
      containerInfo: e.containerInfo,
      pendingChildren: null,
      implementation: e.implementation,
    }),
    t
  );
}
function jb(e, t, r, s, c) {
  (this.tag = t),
    (this.containerInfo = e),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = Go(0)),
    (this.expirationTimes = Go(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = Go(0)),
    (this.identifierPrefix = s),
    (this.onRecoverableError = c),
    (this.mutableSourceEagerHydrationData = null);
}
function qu(e, t, r, s, c, f, m, y, S) {
  return (
    (e = new jb(e, t, r, y, S)),
    t === 1 ? ((t = 1), f === !0 && (t |= 8)) : (t = 0),
    (f = Ht(3, null, null, t)),
    (e.current = f),
    (f.stateNode = e),
    (f.memoizedState = {
      element: s,
      isDehydrated: r,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    Ru(f),
    e
  );
}
function Bb(e, t, r) {
  var s = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: Rn,
    key: s == null ? null : "" + s,
    children: e,
    containerInfo: t,
    implementation: r,
  };
}
function Fm(e) {
  if (!e) return Zi;
  e = e._reactInternals;
  e: {
    if (An(e) !== e || e.tag !== 1) throw Error(ne(170));
    var t = e;
    do {
      switch (t.tag) {
        case 3:
          t = t.stateNode.context;
          break e;
        case 1:
          if (At(t.type)) {
            t = t.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      t = t.return;
    } while (t !== null);
    throw Error(ne(171));
  }
  if (e.tag === 1) {
    var r = e.type;
    if (At(r)) return Ng(e, r, t);
  }
  return t;
}
function _m(e, t, r, s, c, f, m, y, S) {
  return (
    (e = qu(r, s, !0, e, c, f, m, y, S)),
    (e.context = Fm(null)),
    (r = e.current),
    (s = xt()),
    (c = Yi(r)),
    (f = xi(s, c)),
    (f.callback = t ?? null),
    Bi(r, f, c),
    (e.current.lanes = c),
    ga(e, c, s),
    Pt(e, s),
    e
  );
}
function ho(e, t, r, s) {
  var c = t.current,
    f = xt(),
    m = Yi(c);
  return (
    (r = Fm(r)),
    t.context === null ? (t.context = r) : (t.pendingContext = r),
    (t = xi(f, m)),
    (t.payload = { element: e }),
    (s = s === void 0 ? null : s),
    s !== null && (t.callback = s),
    (e = Bi(c, t, m)),
    e !== null && (Zt(e, c, m, f), ts(e, c, m)),
    m
  );
}
function zs(e) {
  if (((e = e.current), !e.child)) return null;
  switch (e.child.tag) {
    case 5:
      return e.child.stateNode;
    default:
      return e.child.stateNode;
  }
}
function Zd(e, t) {
  if (((e = e.memoizedState), e !== null && e.dehydrated !== null)) {
    var r = e.retryLane;
    e.retryLane = r !== 0 && r < t ? r : t;
  }
}
function Zu(e, t) {
  Zd(e, t), (e = e.alternate) && Zd(e, t);
}
function Vb() {
  return null;
}
var Hm =
  typeof reportError == "function"
    ? reportError
    : function (e) {
        console.error(e);
      };
function Ku(e) {
  this._internalRoot = e;
}
fo.prototype.render = Ku.prototype.render = function (e) {
  var t = this._internalRoot;
  if (t === null) throw Error(ne(409));
  ho(e, t, null, null);
};
fo.prototype.unmount = Ku.prototype.unmount = function () {
  var e = this._internalRoot;
  if (e !== null) {
    this._internalRoot = null;
    var t = e.containerInfo;
    kn(function () {
      ho(null, e, null, null);
    }),
      (t[wi] = null);
  }
};
function fo(e) {
  this._internalRoot = e;
}
fo.prototype.unstable_scheduleHydration = function (e) {
  if (e) {
    var t = gg();
    e = { blockedOn: null, target: e, priority: t };
    for (var r = 0; r < Ii.length && t !== 0 && t < Ii[r].priority; r++);
    Ii.splice(r, 0, e), r === 0 && xg(e);
  }
};
function Qu(e) {
  return !(!e || (e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11));
}
function po(e) {
  return !(
    !e ||
    (e.nodeType !== 1 &&
      e.nodeType !== 9 &&
      e.nodeType !== 11 &&
      (e.nodeType !== 8 || e.nodeValue !== " react-mount-point-unstable "))
  );
}
function Kd() {}
function Yb(e, t, r, s, c) {
  if (c) {
    if (typeof s == "function") {
      var f = s;
      s = function () {
        var T = zs(m);
        f.call(T);
      };
    }
    var m = _m(t, s, e, 0, null, !1, !1, "", Kd);
    return (
      (e._reactRootContainer = m),
      (e[wi] = m.current),
      ea(e.nodeType === 8 ? e.parentNode : e),
      kn(),
      m
    );
  }
  for (; (c = e.lastChild); ) e.removeChild(c);
  if (typeof s == "function") {
    var y = s;
    s = function () {
      var T = zs(S);
      y.call(T);
    };
  }
  var S = qu(e, 0, !1, null, null, !1, !1, "", Kd);
  return (
    (e._reactRootContainer = S),
    (e[wi] = S.current),
    ea(e.nodeType === 8 ? e.parentNode : e),
    kn(function () {
      ho(t, S, r, s);
    }),
    S
  );
}
function go(e, t, r, s, c) {
  var f = r._reactRootContainer;
  if (f) {
    var m = f;
    if (typeof c == "function") {
      var y = c;
      c = function () {
        var S = zs(m);
        y.call(S);
      };
    }
    ho(t, m, e, c);
  } else m = Yb(r, t, e, c, s);
  return zs(m);
}
fg = function (e) {
  switch (e.tag) {
    case 3:
      var t = e.stateNode;
      if (t.current.memoizedState.isDehydrated) {
        var r = Er(t.pendingLanes);
        r !== 0 &&
          (xu(t, r | 1), Pt(t, Qe()), !(Te & 6) && ((or = Qe() + 500), tn()));
      }
      break;
    case 13:
      kn(function () {
        var s = Si(e, 1);
        if (s !== null) {
          var c = xt();
          Zt(s, e, 1, c);
        }
      }),
        Zu(e, 1);
  }
};
vu = function (e) {
  if (e.tag === 13) {
    var t = Si(e, 134217728);
    if (t !== null) {
      var r = xt();
      Zt(t, e, 134217728, r);
    }
    Zu(e, 134217728);
  }
};
pg = function (e) {
  if (e.tag === 13) {
    var t = Yi(e),
      r = Si(e, t);
    if (r !== null) {
      var s = xt();
      Zt(r, e, t, s);
    }
    Zu(e, t);
  }
};
gg = function () {
  return Ee;
};
mg = function (e, t) {
  var r = Ee;
  try {
    return (Ee = e), t();
  } finally {
    Ee = r;
  }
};
Zl = function (e, t, r) {
  switch (t) {
    case "input":
      if ((Vl(e, r), (t = r.name), r.type === "radio" && t != null)) {
        for (r = e; r.parentNode; ) r = r.parentNode;
        for (
          r = r.querySelectorAll(
            "input[name=" + JSON.stringify("" + t) + '][type="radio"]'
          ),
            t = 0;
          t < r.length;
          t++
        ) {
          var s = r[t];
          if (s !== e && s.form === e.form) {
            var c = ro(s);
            if (!c) throw Error(ne(90));
            Up(s), Vl(s, c);
          }
        }
      }
      break;
    case "textarea":
      qp(e, r);
      break;
    case "select":
      (t = r.value), t != null && $n(e, !!r.multiple, t, !1);
  }
};
ig = Wu;
ng = kn;
var Wb = { usingClientEntryPoint: !1, Events: [xa, Fn, ro, eg, tg, Wu] },
  kr = {
    findFiberByHostInstance: hn,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom",
  },
  Gb = {
    bundleType: kr.bundleType,
    version: kr.version,
    rendererPackageName: kr.rendererPackageName,
    rendererConfig: kr.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: Ai.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (e) {
      return (e = sg(e)), e === null ? null : e.stateNode;
    },
    findFiberByHostInstance: kr.findFiberByHostInstance || Vb,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
  var Va = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!Va.isDisabled && Va.supportsFiber)
    try {
      (eo = Va.inject(Gb)), (si = Va);
    } catch {}
}
It.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Wb;
It.createPortal = function (e, t) {
  var r = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!Qu(t)) throw Error(ne(200));
  return Bb(e, t, null, r);
};
It.createRoot = function (e, t) {
  if (!Qu(e)) throw Error(ne(299));
  var r = !1,
    s = "",
    c = Hm;
  return (
    t != null &&
      (t.unstable_strictMode === !0 && (r = !0),
      t.identifierPrefix !== void 0 && (s = t.identifierPrefix),
      t.onRecoverableError !== void 0 && (c = t.onRecoverableError)),
    (t = qu(e, 1, !1, null, null, r, !1, s, c)),
    (e[wi] = t.current),
    ea(e.nodeType === 8 ? e.parentNode : e),
    new Ku(t)
  );
};
It.findDOMNode = function (e) {
  if (e == null) return null;
  if (e.nodeType === 1) return e;
  var t = e._reactInternals;
  if (t === void 0)
    throw typeof e.render == "function"
      ? Error(ne(188))
      : ((e = Object.keys(e).join(",")), Error(ne(268, e)));
  return (e = sg(t)), (e = e === null ? null : e.stateNode), e;
};
It.flushSync = function (e) {
  return kn(e);
};
It.hydrate = function (e, t, r) {
  if (!po(t)) throw Error(ne(200));
  return go(null, e, t, !0, r);
};
It.hydrateRoot = function (e, t, r) {
  if (!Qu(e)) throw Error(ne(405));
  var s = (r != null && r.hydratedSources) || null,
    c = !1,
    f = "",
    m = Hm;
  if (
    (r != null &&
      (r.unstable_strictMode === !0 && (c = !0),
      r.identifierPrefix !== void 0 && (f = r.identifierPrefix),
      r.onRecoverableError !== void 0 && (m = r.onRecoverableError)),
    (t = _m(t, null, e, 1, r ?? null, c, !1, f, m)),
    (e[wi] = t.current),
    ea(e),
    s)
  )
    for (e = 0; e < s.length; e++)
      (r = s[e]),
        (c = r._getVersion),
        (c = c(r._source)),
        t.mutableSourceEagerHydrationData == null
          ? (t.mutableSourceEagerHydrationData = [r, c])
          : t.mutableSourceEagerHydrationData.push(r, c);
  return new fo(t);
};
It.render = function (e, t, r) {
  if (!po(t)) throw Error(ne(200));
  return go(null, e, t, !1, r);
};
It.unmountComponentAtNode = function (e) {
  if (!po(e)) throw Error(ne(40));
  return e._reactRootContainer
    ? (kn(function () {
        go(null, null, e, !1, function () {
          (e._reactRootContainer = null), (e[wi] = null);
        });
      }),
      !0)
    : !1;
};
It.unstable_batchedUpdates = Wu;
It.unstable_renderSubtreeIntoContainer = function (e, t, r, s) {
  if (!po(r)) throw Error(ne(200));
  if (e == null || e._reactInternals === void 0) throw Error(ne(38));
  return go(e, t, r, !1, s);
};
It.version = "18.2.0-next-9e3b772b8-20220608";
function Xm() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Xm);
    } catch (e) {
      console.error(e);
    }
}
Xm(), (_p.exports = It);
var Ub = _p.exports,
  Qd = Ub;
(Nl.createRoot = Qd.createRoot), (Nl.hydrateRoot = Qd.hydrateRoot);
var jm = {
    color: void 0,
    size: void 0,
    className: void 0,
    style: void 0,
    attr: void 0,
  },
  Jd = ai.createContext && ai.createContext(jm),
  Gi =
    (globalThis && globalThis.__assign) ||
    function () {
      return (
        (Gi =
          Object.assign ||
          function (e) {
            for (var t, r = 1, s = arguments.length; r < s; r++) {
              t = arguments[r];
              for (var c in t)
                Object.prototype.hasOwnProperty.call(t, c) && (e[c] = t[c]);
            }
            return e;
          }),
        Gi.apply(this, arguments)
      );
    },
  $b =
    (globalThis && globalThis.__rest) ||
    function (e, t) {
      var r = {};
      for (var s in e)
        Object.prototype.hasOwnProperty.call(e, s) &&
          t.indexOf(s) < 0 &&
          (r[s] = e[s]);
      if (e != null && typeof Object.getOwnPropertySymbols == "function")
        for (var c = 0, s = Object.getOwnPropertySymbols(e); c < s.length; c++)
          t.indexOf(s[c]) < 0 &&
            Object.prototype.propertyIsEnumerable.call(e, s[c]) &&
            (r[s[c]] = e[s[c]]);
      return r;
    };
function Bm(e) {
  return (
    e &&
    e.map(function (t, r) {
      return ai.createElement(t.tag, Gi({ key: r }, t.attr), Bm(t.child));
    })
  );
}
function mo(e) {
  return function (t) {
    return ai.createElement(qb, Gi({ attr: Gi({}, e.attr) }, t), Bm(e.child));
  };
}
function qb(e) {
  var t = function (r) {
    var s = e.attr,
      c = e.size,
      f = e.title,
      m = $b(e, ["attr", "size", "title"]),
      y = c || r.size || "1em",
      S;
    return (
      r.className && (S = r.className),
      e.className && (S = (S ? S + " " : "") + e.className),
      ai.createElement(
        "svg",
        Gi(
          { stroke: "currentColor", fill: "currentColor", strokeWidth: "0" },
          r.attr,
          s,
          m,
          {
            className: S,
            style: Gi(Gi({ color: e.color || r.color }, r.style), e.style),
            height: y,
            width: y,
            xmlns: "http://www.w3.org/2000/svg",
          }
        ),
        f && ai.createElement("title", null, f),
        e.children
      )
    );
  };
  return Jd !== void 0
    ? ai.createElement(Jd.Consumer, null, function (r) {
        return t(r);
      })
    : t(jm);
}
function Zb(e) {
  return mo({
    tag: "svg",
    attr: { viewBox: "0 0 24 24" },
    child: [
      {
        tag: "path",
        attr: {
          d: "M18.2048 2.25H21.5128L14.2858 10.51L22.7878 21.75H16.1308L10.9168 14.933L4.95084 21.75H1.64084L9.37084 12.915L1.21484 2.25H8.04084L12.7538 8.481L18.2048 2.25ZM17.0438 19.77H18.8768L7.04484 4.126H5.07784L17.0438 19.77Z",
        },
      },
    ],
  })(e);
}
function Kb(e) {
  return mo({
    tag: "svg",
    attr: { viewBox: "0 0 24 24" },
    child: [
      {
        tag: "path",
        attr: { d: "M3 4H21V6H3V4ZM9 11H21V13H9V11ZM3 18H21V20H3V18Z" },
      },
    ],
  })(e);
}
function Qb(e) {
  return mo({
    tag: "svg",
    attr: { viewBox: "0 0 512 512" },
    child: [
      {
        tag: "path",
        attr: {
          d: "M400 145.49L366.51 112 256 222.51 145.49 112 112 145.49 222.51 256 112 366.51 145.49 400 256 289.49 366.51 400 400 366.51 289.49 256 400 145.49z",
        },
      },
    ],
  })(e);
}
const xn = ({ children: e, className: t, link: r, onClick: s, type: c }) =>
    $.jsx("a", {
      href: r,
      target: "_blank",
      rel: "noopener noreferrer",
      children: $.jsxs("button", {
        onClick: s,
        className: ` text-white rounded-lg relative group bg-primary overflow-hidden font-primary ${t} ${
          c === "icon" ? "p-2 px-3" : "px-7 py-2"
        }`,
        children: [
          $.jsx("div", {
            className:
              "relative z-10 group-hover:-translate-y-[150%] transition-all ease-in-out duration-300",
            children: e,
          }),
          $.jsx("div", {
            className:
              " z-10 translate-y-full group-hover:-translate-y-2 transition-all ease-in-out duration-300 absolute bottom-0",
            children: e,
          }),
        ],
      }),
    }),
  Jb = () => {
    const e = [
        { title: "Home", link: "#home", type: "internal" },
        { title: "Tokenomics", link: "#tokenomics", type: "internal" },
        { title: "Partners", link: "#partners", type: "internal" },
        { title: "STAKING", link: "#staking", type: "internal" },
        { title: "Roadmap", link: "#roadmap", type: "internal" },
        {
          title: "KYC",
          link: "https://sbf.life/",
          type: "external",
        },
        // {
        //   title: "Audit 1",
        //   link: "https://github.com/Audit-Ace/Audits-Smart-Contracts/blob/main/SBF%20Audit%20Report.pdfroadmap",
        //   type: "external",
        // },
        // {
        //   title: "Audit 2",
        //   link: "https://github.com/SpyWolfNetwork/Smart_Contract_Audits/blob/main/October_2023/SBF_0x2FcBD5a6eb694d573D280664393681cB52b9a98b.pdf",
        //   type: "external",
        // },
      ],
      [t, r] = re.useState(!1),
      s = () => {
        r((f) => !f);
      },
      c = () => {
        window.scrollTo({ top: 0, left: 0, behavior: "smooth" });
      };
    return $.jsxs($.Fragment, {
      children: [
        $.jsxs("nav", {
          className: `w-full h-screen top-0 left-0 fixed z-[51] bg-black transition-all ease-in-out duration-500 font-secondary ${
            t
              ? "translate-x-0 opacity-100 lg:translate-x-full"
              : "translate-x-full opacity-0"
          }`,
          children: [
            $.jsx("img", {
              src: "/sam.png",
              alt: "Logo",
              className: "w-20 mx-auto mt-10 relative z-10",
            }),
            $.jsx("div", {
              className:
                "w-20 h-20 rounded-full absolute left-0 right-0 bg-cyn mx-auto top-10 opacity-60 blur-[3rem]",
            }),
            $.jsx("button", {
              className: "",
              onClick: s,
              children: $.jsx(Qb, {
                className: "absolute text-white text-3xl top-5 right-5",
              }),
            }),
            $.jsx("ul", {
              className:
                "gap-y-9 text-white font-semibold w-fit flex flex-col items-center justify-center mx-auto mt-10",
              children: e.map((f) =>
                $.jsx(
                  "li",
                  {
                    className: "uppercase",
                    onClick: s,
                    children:
                      f.type === "external"
                        ? $.jsx("a", {
                            href: f.link,
                            rel: "noopener noreferrer",
                            target: "_blank",
                            className: "",
                            children: f.title,
                          })
                        : $.jsx("a", {
                            href: f.link,
                            className: "",
                            children: f.title,
                          }),
                  },
                  f.title
                )
              ),
            }),
          ],
        }),
        $.jsx("nav", {
          className:
            "h-auto px-5 font-primary overflow-hidden  max-w-[1300px] w-full mx-auto top-5 right-0 fixed backdrop-blur-md rounded-2xl left-0 transition-all ease-in-out duration-500 z-[50] bg-white/10 dark:bg-black/20",
          children: $.jsxs("div", {
            className:
              "w-full  items-center mx-auto flex justify-between py-3 animated-element",
            children: [
              $.jsx("div", {
                className: "w-full",
                children: $.jsxs("div", {
                  className: "flex items-center gap-2",
                  children: [
                    $.jsx("img", {
                      src: "/sam.png",
                      alt: "Navlogo",
                      className: "w-12 cursor-pointer",
                      onClick: c,
                    }),
                    $.jsx("h1", { className: "text-white", children: "$SBF" }),
                  ],
                }),
              }),
              $.jsx("ul", {
                className:
                  "w-full justify-center gap-x-9 text-white xl:flex hidden items-center text-sm font-secondary u-class-1",
                children: e.slice(0, 6).map((f) =>
                  $.jsx(
                    "li",
                    {
                      className: "uppercase",
                      onClick: () => {
                        f.title === "home" && window.scrollTo(0, 0);
                      },
                      children:
                        f.type === "external"
                          ? $.jsx("a", {
                              href: f.link,
                              rel: "noopener noreferrer",
                              target: "_blank",
                              className: "",
                              children: f.title,
                            })
                          : $.jsx("a", {
                              href: f.link,
                              className: "",
                              children: f.title,
                            }),
                    },
                    f.title
                  )
                ),
              }),
              $.jsxs("div", {
                className: "w-full place-content-end xl:flex gap-2 u-class-3",
                children: [
                  $.jsx(xn, {
                    link: "https://t.me/",
                    className: " xl:flex ",
                    type: "icon",
                    children: $.jsx("img", {
                      src: "/socmed/tg.webp",
                      alt: "Telegram",
                      className: "",
                    }),
                  }),
                  $.jsx(xn, {
                    link: "https://twitter.com/",
                    className: " xl:flex ",
                    type: "icon",
                    children: $.jsx("img", {
                      src: "/socmed/twitter.webp",
                      alt: "Twitter",
                      className: "",
                    }),
                  }),
                  // $.jsx(xn, {
                  //   link: "https://sbf.life/",
                  //   className: "",
                  //   children: "GITBOOK",
                  // }),
                ],
              }),
              $.jsx(Kb, {
                className: "xl:hidden text-white text-3xl",
                onClick: s,
              }),
            ],
          }),
        }),
      ],
    });
  },
  Vm = re.createContext({
    transformPagePoint: (e) => e,
    isStatic: !1,
    reducedMotion: "never",
  }),
  xo = re.createContext({}),
  vo = re.createContext(null),
  yo = typeof document < "u",
  bo = yo ? re.useLayoutEffect : re.useEffect,
  Ym = re.createContext({ strict: !1 });
function ew(e, t, r, s) {
  const { visualElement: c } = re.useContext(xo),
    f = re.useContext(Ym),
    m = re.useContext(vo),
    y = re.useContext(Vm).reducedMotion,
    S = re.useRef();
  (s = s || f.renderer),
    !S.current &&
      s &&
      (S.current = s(e, {
        visualState: t,
        parent: c,
        props: r,
        presenceContext: m,
        blockInitialAnimation: m ? m.initial === !1 : !1,
        reducedMotionConfig: y,
      }));
  const T = S.current;
  re.useInsertionEffect(() => {
    T && T.update(r, m);
  });
  const O = re.useRef(!!window.HandoffAppearAnimations);
  return (
    bo(() => {
      T &&
        (T.render(),
        O.current && T.animationState && T.animationState.animateChanges());
    }),
    re.useEffect(() => {
      T &&
        (T.updateFeatures(),
        !O.current && T.animationState && T.animationState.animateChanges(),
        (window.HandoffAppearAnimations = void 0),
        (O.current = !1));
    }),
    T
  );
}
function Yn(e) {
  return (
    typeof e == "object" && Object.prototype.hasOwnProperty.call(e, "current")
  );
}
function tw(e, t, r) {
  return re.useCallback(
    (s) => {
      s && e.mount && e.mount(s),
        t && (s ? t.mount(s) : t.unmount()),
        r && (typeof r == "function" ? r(s) : Yn(r) && (r.current = s));
    },
    [t]
  );
}
function ca(e) {
  return typeof e == "string" || Array.isArray(e);
}
function wo(e) {
  return typeof e == "object" && typeof e.start == "function";
}
const Ju = [
    "animate",
    "whileInView",
    "whileFocus",
    "whileHover",
    "whileTap",
    "whileDrag",
    "exit",
  ],
  eh = ["initial", ...Ju];
function So(e) {
  return wo(e.animate) || eh.some((t) => ca(e[t]));
}
function Wm(e) {
  return !!(So(e) || e.variants);
}
function iw(e, t) {
  if (So(e)) {
    const { initial: r, animate: s } = e;
    return {
      initial: r === !1 || ca(r) ? r : void 0,
      animate: ca(s) ? s : void 0,
    };
  }
  return e.inherit !== !1 ? t : {};
}
function nw(e) {
  const { initial: t, animate: r } = iw(e, re.useContext(xo));
  return re.useMemo(() => ({ initial: t, animate: r }), [ef(t), ef(r)]);
}
function ef(e) {
  return Array.isArray(e) ? e.join(" ") : e;
}
const tf = {
    animation: [
      "animate",
      "variants",
      "whileHover",
      "whileTap",
      "exit",
      "whileInView",
      "whileFocus",
      "whileDrag",
    ],
    exit: ["exit"],
    drag: ["drag", "dragControls"],
    focus: ["whileFocus"],
    hover: ["whileHover", "onHoverStart", "onHoverEnd"],
    tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
    pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
    inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
    layout: ["layout", "layoutId"],
  },
  ua = {};
for (const e in tf) ua[e] = { isEnabled: (t) => tf[e].some((r) => !!t[r]) };
function rw(e) {
  for (const t in e) ua[t] = { ...ua[t], ...e[t] };
}
const th = re.createContext({}),
  Gm = re.createContext({}),
  aw = Symbol.for("motionComponentSymbol");
function sw({
  preloadedFeatures: e,
  createVisualElement: t,
  useRender: r,
  useVisualState: s,
  Component: c,
}) {
  e && rw(e);
  function f(y, S) {
    let T;
    const O = { ...re.useContext(Vm), ...y, layoutId: ow(y) },
      { isStatic: z } = O,
      N = nw(y),
      X = s(y, z);
    if (!z && yo) {
      N.visualElement = ew(c, X, O, t);
      const V = re.useContext(Gm),
        Y = re.useContext(Ym).strict;
      N.visualElement && (T = N.visualElement.loadFeatures(O, Y, e, V));
    }
    return re.createElement(
      xo.Provider,
      { value: N },
      T && N.visualElement
        ? re.createElement(T, { visualElement: N.visualElement, ...O })
        : null,
      r(c, y, tw(X, N.visualElement, S), X, z, N.visualElement)
    );
  }
  const m = re.forwardRef(f);
  return (m[aw] = c), m;
}
function ow({ layoutId: e }) {
  const t = re.useContext(th).id;
  return t && e !== void 0 ? t + "-" + e : e;
}
function lw(e) {
  function t(s, c = {}) {
    return sw(e(s, c));
  }
  if (typeof Proxy > "u") return t;
  const r = new Map();
  return new Proxy(t, {
    get: (s, c) => (r.has(c) || r.set(c, t(c)), r.get(c)),
  });
}
const cw = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view",
];
function ih(e) {
  return typeof e != "string" || e.includes("-")
    ? !1
    : !!(cw.indexOf(e) > -1 || /[A-Z]/.test(e));
}
const Is = {};
function uw(e) {
  Object.assign(Is, e);
}
const ya = [
    "transformPerspective",
    "x",
    "y",
    "z",
    "translateX",
    "translateY",
    "translateZ",
    "scale",
    "scaleX",
    "scaleY",
    "rotate",
    "rotateX",
    "rotateY",
    "rotateZ",
    "skew",
    "skewX",
    "skewY",
  ],
  Pn = new Set(ya);
function Um(e, { layout: t, layoutId: r }) {
  return (
    Pn.has(e) ||
    e.startsWith("origin") ||
    ((t || r !== void 0) && (!!Is[e] || e === "opacity"))
  );
}
const Tt = (e) => !!(e && e.getVelocity),
  hw = {
    x: "translateX",
    y: "translateY",
    z: "translateZ",
    transformPerspective: "perspective",
  },
  dw = ya.length;
function fw(
  e,
  { enableHardwareAcceleration: t = !0, allowTransformNone: r = !0 },
  s,
  c
) {
  let f = "";
  for (let m = 0; m < dw; m++) {
    const y = ya[m];
    if (e[y] !== void 0) {
      const S = hw[y] || y;
      f += `${S}(${e[y]}) `;
    }
  }
  return (
    t && !e.z && (f += "translateZ(0)"),
    (f = f.trim()),
    c ? (f = c(e, s ? "" : f)) : r && s && (f = "none"),
    f
  );
}
const $m = (e) => (t) => typeof t == "string" && t.startsWith(e),
  qm = $m("--"),
  Ec = $m("var(--"),
  pw =
    /var\s*\(\s*--[\w-]+(\s*,\s*(?:(?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)+)?\s*\)/g,
  gw = (e, t) => (t && typeof e == "number" ? t.transform(e) : e),
  Ki = (e, t, r) => Math.min(Math.max(r, e), t),
  Tn = {
    test: (e) => typeof e == "number",
    parse: parseFloat,
    transform: (e) => e,
  },
  jr = { ...Tn, transform: (e) => Ki(0, 1, e) },
  Ya = { ...Tn, default: 1 },
  Br = (e) => Math.round(e * 1e5) / 1e5,
  ko = /(-)?([\d]*\.?[\d])+/g,
  Zm =
    /(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,
  mw =
    /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;
function ba(e) {
  return typeof e == "string";
}
const wa = (e) => ({
    test: (t) => ba(t) && t.endsWith(e) && t.split(" ").length === 1,
    parse: parseFloat,
    transform: (t) => `${t}${e}`,
  }),
  Ei = wa("deg"),
  li = wa("%"),
  ye = wa("px"),
  xw = wa("vh"),
  vw = wa("vw"),
  nf = {
    ...li,
    parse: (e) => li.parse(e) / 100,
    transform: (e) => li.transform(e * 100),
  },
  rf = { ...Tn, transform: Math.round },
  Km = {
    borderWidth: ye,
    borderTopWidth: ye,
    borderRightWidth: ye,
    borderBottomWidth: ye,
    borderLeftWidth: ye,
    borderRadius: ye,
    radius: ye,
    borderTopLeftRadius: ye,
    borderTopRightRadius: ye,
    borderBottomRightRadius: ye,
    borderBottomLeftRadius: ye,
    width: ye,
    maxWidth: ye,
    height: ye,
    maxHeight: ye,
    size: ye,
    top: ye,
    right: ye,
    bottom: ye,
    left: ye,
    padding: ye,
    paddingTop: ye,
    paddingRight: ye,
    paddingBottom: ye,
    paddingLeft: ye,
    margin: ye,
    marginTop: ye,
    marginRight: ye,
    marginBottom: ye,
    marginLeft: ye,
    rotate: Ei,
    rotateX: Ei,
    rotateY: Ei,
    rotateZ: Ei,
    scale: Ya,
    scaleX: Ya,
    scaleY: Ya,
    scaleZ: Ya,
    skew: Ei,
    skewX: Ei,
    skewY: Ei,
    distance: ye,
    translateX: ye,
    translateY: ye,
    translateZ: ye,
    x: ye,
    y: ye,
    z: ye,
    perspective: ye,
    transformPerspective: ye,
    opacity: jr,
    originX: nf,
    originY: nf,
    originZ: ye,
    zIndex: rf,
    fillOpacity: jr,
    strokeOpacity: jr,
    numOctaves: rf,
  };
function nh(e, t, r, s) {
  const { style: c, vars: f, transform: m, transformOrigin: y } = e;
  let S = !1,
    T = !1,
    O = !0;
  for (const z in t) {
    const N = t[z];
    if (qm(z)) {
      f[z] = N;
      continue;
    }
    const X = Km[z],
      V = gw(N, X);
    if (Pn.has(z)) {
      if (((S = !0), (m[z] = V), !O)) continue;
      N !== (X.default || 0) && (O = !1);
    } else z.startsWith("origin") ? ((T = !0), (y[z] = V)) : (c[z] = V);
  }
  if (
    (t.transform ||
      (S || s
        ? (c.transform = fw(e.transform, r, O, s))
        : c.transform && (c.transform = "none")),
    T)
  ) {
    const { originX: z = "50%", originY: N = "50%", originZ: X = 0 } = y;
    c.transformOrigin = `${z} ${N} ${X}`;
  }
}
const rh = () => ({ style: {}, transform: {}, transformOrigin: {}, vars: {} });
function Qm(e, t, r) {
  for (const s in t) !Tt(t[s]) && !Um(s, r) && (e[s] = t[s]);
}
function yw({ transformTemplate: e }, t, r) {
  return re.useMemo(() => {
    const s = rh();
    return (
      nh(s, t, { enableHardwareAcceleration: !r }, e),
      Object.assign({}, s.vars, s.style)
    );
  }, [t]);
}
function bw(e, t, r) {
  const s = e.style || {},
    c = {};
  return (
    Qm(c, s, e),
    Object.assign(c, yw(e, t, r)),
    e.transformValues ? e.transformValues(c) : c
  );
}
function ww(e, t, r) {
  const s = {},
    c = bw(e, t, r);
  return (
    e.drag &&
      e.dragListener !== !1 &&
      ((s.draggable = !1),
      (c.userSelect = c.WebkitUserSelect = c.WebkitTouchCallout = "none"),
      (c.touchAction =
        e.drag === !0 ? "none" : `pan-${e.drag === "x" ? "y" : "x"}`)),
    e.tabIndex === void 0 &&
      (e.onTap || e.onTapStart || e.whileTap) &&
      (s.tabIndex = 0),
    (s.style = c),
    s
  );
}
const Sw = new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "transformValues",
  "custom",
  "inherit",
  "onLayoutAnimationStart",
  "onLayoutAnimationComplete",
  "onLayoutMeasure",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "ignoreStrict",
  "viewport",
]);
function Ds(e) {
  return (
    e.startsWith("while") ||
    (e.startsWith("drag") && e !== "draggable") ||
    e.startsWith("layout") ||
    e.startsWith("onTap") ||
    e.startsWith("onPan") ||
    Sw.has(e)
  );
}
let Jm = (e) => !Ds(e);
function kw(e) {
  e && (Jm = (t) => (t.startsWith("on") ? !Ds(t) : e(t)));
}
try {
  kw(require("@emotion/is-prop-valid").default);
} catch {}
function Cw(e, t, r) {
  const s = {};
  for (const c in e)
    (c === "values" && typeof e.values == "object") ||
      ((Jm(c) ||
        (r === !0 && Ds(c)) ||
        (!t && !Ds(c)) ||
        (e.draggable && c.startsWith("onDrag"))) &&
        (s[c] = e[c]));
  return s;
}
function af(e, t, r) {
  return typeof e == "string" ? e : ye.transform(t + r * e);
}
function Aw(e, t, r) {
  const s = af(t, e.x, e.width),
    c = af(r, e.y, e.height);
  return `${s} ${c}`;
}
const Pw = { offset: "stroke-dashoffset", array: "stroke-dasharray" },
  Tw = { offset: "strokeDashoffset", array: "strokeDasharray" };
function Lw(e, t, r = 1, s = 0, c = !0) {
  e.pathLength = 1;
  const f = c ? Pw : Tw;
  e[f.offset] = ye.transform(-s);
  const m = ye.transform(t),
    y = ye.transform(r);
  e[f.array] = `${m} ${y}`;
}
function ah(
  e,
  {
    attrX: t,
    attrY: r,
    attrScale: s,
    originX: c,
    originY: f,
    pathLength: m,
    pathSpacing: y = 1,
    pathOffset: S = 0,
    ...T
  },
  O,
  z,
  N
) {
  if ((nh(e, T, O, N), z)) {
    e.style.viewBox && (e.attrs.viewBox = e.style.viewBox);
    return;
  }
  (e.attrs = e.style), (e.style = {});
  const { attrs: X, style: V, dimensions: Y } = e;
  X.transform && (Y && (V.transform = X.transform), delete X.transform),
    Y &&
      (c !== void 0 || f !== void 0 || V.transform) &&
      (V.transformOrigin = Aw(
        Y,
        c !== void 0 ? c : 0.5,
        f !== void 0 ? f : 0.5
      )),
    t !== void 0 && (X.x = t),
    r !== void 0 && (X.y = r),
    s !== void 0 && (X.scale = s),
    m !== void 0 && Lw(X, m, y, S, !1);
}
const ex = () => ({ ...rh(), attrs: {} }),
  sh = (e) => typeof e == "string" && e.toLowerCase() === "svg";
function Ew(e, t, r, s) {
  const c = re.useMemo(() => {
    const f = ex();
    return (
      ah(f, t, { enableHardwareAcceleration: !1 }, sh(s), e.transformTemplate),
      { ...f.attrs, style: { ...f.style } }
    );
  }, [t]);
  if (e.style) {
    const f = {};
    Qm(f, e.style, e), (c.style = { ...f, ...c.style });
  }
  return c;
}
function Mw(e = !1) {
  return (r, s, c, { latestValues: f }, m) => {
    const S = (ih(r) ? Ew : ww)(s, f, m, r),
      O = { ...Cw(s, typeof r == "string", e), ...S, ref: c },
      { children: z } = s,
      N = re.useMemo(() => (Tt(z) ? z.get() : z), [z]);
    return re.createElement(r, { ...O, children: N });
  };
}
const oh = (e) => e.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
function tx(e, { style: t, vars: r }, s, c) {
  Object.assign(e.style, t, c && c.getProjectionStyles(s));
  for (const f in r) e.style.setProperty(f, r[f]);
}
const ix = new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust",
]);
function nx(e, t, r, s) {
  tx(e, t, void 0, s);
  for (const c in t.attrs) e.setAttribute(ix.has(c) ? c : oh(c), t.attrs[c]);
}
function lh(e, t) {
  const { style: r } = e,
    s = {};
  for (const c in r)
    (Tt(r[c]) || (t.style && Tt(t.style[c])) || Um(c, e)) && (s[c] = r[c]);
  return s;
}
function rx(e, t) {
  const r = lh(e, t);
  for (const s in e)
    if (Tt(e[s]) || Tt(t[s])) {
      const c =
        ya.indexOf(s) !== -1
          ? "attr" + s.charAt(0).toUpperCase() + s.substring(1)
          : s;
      r[c] = e[s];
    }
  return r;
}
function ch(e, t, r, s = {}, c = {}) {
  return (
    typeof t == "function" && (t = t(r !== void 0 ? r : e.custom, s, c)),
    typeof t == "string" && (t = e.variants && e.variants[t]),
    typeof t == "function" && (t = t(r !== void 0 ? r : e.custom, s, c)),
    t
  );
}
function uh(e) {
  const t = re.useRef(null);
  return t.current === null && (t.current = e()), t.current;
}
const Ns = (e) => Array.isArray(e),
  Ow = (e) => !!(e && typeof e == "object" && e.mix && e.toValue),
  Rw = (e) => (Ns(e) ? e[e.length - 1] || 0 : e);
function ls(e) {
  const t = Tt(e) ? e.get() : e;
  return Ow(t) ? t.toValue() : t;
}
function zw(
  { scrapeMotionValuesFromProps: e, createRenderState: t, onMount: r },
  s,
  c,
  f
) {
  const m = { latestValues: Iw(s, c, f, e), renderState: t() };
  return r && (m.mount = (y) => r(s, y, m)), m;
}
const ax = (e) => (t, r) => {
  const s = re.useContext(xo),
    c = re.useContext(vo),
    f = () => zw(e, t, s, c);
  return r ? f() : uh(f);
};
function Iw(e, t, r, s) {
  const c = {},
    f = s(e, {});
  for (const N in f) c[N] = ls(f[N]);
  let { initial: m, animate: y } = e;
  const S = So(e),
    T = Wm(e);
  t &&
    T &&
    !S &&
    e.inherit !== !1 &&
    (m === void 0 && (m = t.initial), y === void 0 && (y = t.animate));
  let O = r ? r.initial === !1 : !1;
  O = O || m === !1;
  const z = O ? y : m;
  return (
    z &&
      typeof z != "boolean" &&
      !wo(z) &&
      (Array.isArray(z) ? z : [z]).forEach((X) => {
        const V = ch(e, X);
        if (!V) return;
        const { transitionEnd: Y, transition: Q, ...j } = V;
        for (const L in j) {
          let H = j[L];
          if (Array.isArray(H)) {
            const U = O ? H.length - 1 : 0;
            H = H[U];
          }
          H !== null && (c[L] = H);
        }
        for (const L in Y) c[L] = Y[L];
      }),
    c
  );
}
const Ke = (e) => e;
class sf {
  constructor() {
    (this.order = []), (this.scheduled = new Set());
  }
  add(t) {
    if (!this.scheduled.has(t))
      return this.scheduled.add(t), this.order.push(t), !0;
  }
  remove(t) {
    const r = this.order.indexOf(t);
    r !== -1 && (this.order.splice(r, 1), this.scheduled.delete(t));
  }
  clear() {
    (this.order.length = 0), this.scheduled.clear();
  }
}
function Dw(e) {
  let t = new sf(),
    r = new sf(),
    s = 0,
    c = !1,
    f = !1;
  const m = new WeakSet(),
    y = {
      schedule: (S, T = !1, O = !1) => {
        const z = O && c,
          N = z ? t : r;
        return T && m.add(S), N.add(S) && z && c && (s = t.order.length), S;
      },
      cancel: (S) => {
        r.remove(S), m.delete(S);
      },
      process: (S) => {
        if (c) {
          f = !0;
          return;
        }
        if (((c = !0), ([t, r] = [r, t]), r.clear(), (s = t.order.length), s))
          for (let T = 0; T < s; T++) {
            const O = t.order[T];
            O(S), m.has(O) && (y.schedule(O), e());
          }
        (c = !1), f && ((f = !1), y.process(S));
      },
    };
  return y;
}
const Wa = ["prepare", "read", "update", "preRender", "render", "postRender"],
  Nw = 40;
function Fw(e, t) {
  let r = !1,
    s = !0;
  const c = { delta: 0, timestamp: 0, isProcessing: !1 },
    f = Wa.reduce((z, N) => ((z[N] = Dw(() => (r = !0))), z), {}),
    m = (z) => f[z].process(c),
    y = () => {
      const z = performance.now();
      (r = !1),
        (c.delta = s ? 1e3 / 60 : Math.max(Math.min(z - c.timestamp, Nw), 1)),
        (c.timestamp = z),
        (c.isProcessing = !0),
        Wa.forEach(m),
        (c.isProcessing = !1),
        r && t && ((s = !1), e(y));
    },
    S = () => {
      (r = !0), (s = !0), c.isProcessing || e(y);
    };
  return {
    schedule: Wa.reduce((z, N) => {
      const X = f[N];
      return (z[N] = (V, Y = !1, Q = !1) => (r || S(), X.schedule(V, Y, Q))), z;
    }, {}),
    cancel: (z) => Wa.forEach((N) => f[N].cancel(z)),
    state: c,
    steps: f,
  };
}
const {
    schedule: De,
    cancel: Ci,
    state: nt,
    steps: fl,
  } = Fw(typeof requestAnimationFrame < "u" ? requestAnimationFrame : Ke, !0),
  _w = {
    useVisualState: ax({
      scrapeMotionValuesFromProps: rx,
      createRenderState: ex,
      onMount: (e, t, { renderState: r, latestValues: s }) => {
        De.read(() => {
          try {
            r.dimensions =
              typeof t.getBBox == "function"
                ? t.getBBox()
                : t.getBoundingClientRect();
          } catch {
            r.dimensions = { x: 0, y: 0, width: 0, height: 0 };
          }
        }),
          De.render(() => {
            ah(
              r,
              s,
              { enableHardwareAcceleration: !1 },
              sh(t.tagName),
              e.transformTemplate
            ),
              nx(t, r);
          });
      },
    }),
  },
  Hw = {
    useVisualState: ax({
      scrapeMotionValuesFromProps: lh,
      createRenderState: rh,
    }),
  };
function Xw(e, { forwardMotionProps: t = !1 }, r, s) {
  return {
    ...(ih(e) ? _w : Hw),
    preloadedFeatures: r,
    useRender: Mw(t),
    createVisualElement: s,
    Component: e,
  };
}
function mi(e, t, r, s = { passive: !0 }) {
  return e.addEventListener(t, r, s), () => e.removeEventListener(t, r);
}
const sx = (e) =>
  e.pointerType === "mouse"
    ? typeof e.button != "number" || e.button <= 0
    : e.isPrimary !== !1;
function Co(e, t = "page") {
  return { point: { x: e[t + "X"], y: e[t + "Y"] } };
}
const jw = (e) => (t) => sx(t) && e(t, Co(t));
function vi(e, t, r, s) {
  return mi(e, t, jw(r), s);
}
const Bw = (e, t) => (r) => t(e(r)),
  Ui = (...e) => e.reduce(Bw);
function ox(e) {
  let t = null;
  return () => {
    const r = () => {
      t = null;
    };
    return t === null ? ((t = e), r) : !1;
  };
}
const of = ox("dragHorizontal"),
  lf = ox("dragVertical");
function lx(e) {
  let t = !1;
  if (e === "y") t = lf();
  else if (e === "x") t = of();
  else {
    const r = of(),
      s = lf();
    r && s
      ? (t = () => {
          r(), s();
        })
      : (r && r(), s && s());
  }
  return t;
}
function cx() {
  const e = lx(!0);
  return e ? (e(), !1) : !0;
}
class nn {
  constructor(t) {
    (this.isMounted = !1), (this.node = t);
  }
  update() {}
}
function cf(e, t) {
  const r = "pointer" + (t ? "enter" : "leave"),
    s = "onHover" + (t ? "Start" : "End"),
    c = (f, m) => {
      if (f.type === "touch" || cx()) return;
      const y = e.getProps();
      e.animationState &&
        y.whileHover &&
        e.animationState.setActive("whileHover", t),
        y[s] && De.update(() => y[s](f, m));
    };
  return vi(e.current, r, c, { passive: !e.getProps()[s] });
}
class Vw extends nn {
  mount() {
    this.unmount = Ui(cf(this.node, !0), cf(this.node, !1));
  }
  unmount() {}
}
class Yw extends nn {
  constructor() {
    super(...arguments), (this.isActive = !1);
  }
  onFocus() {
    let t = !1;
    try {
      t = this.node.current.matches(":focus-visible");
    } catch {
      t = !0;
    }
    !t ||
      !this.node.animationState ||
      (this.node.animationState.setActive("whileFocus", !0),
      (this.isActive = !0));
  }
  onBlur() {
    !this.isActive ||
      !this.node.animationState ||
      (this.node.animationState.setActive("whileFocus", !1),
      (this.isActive = !1));
  }
  mount() {
    this.unmount = Ui(
      mi(this.node.current, "focus", () => this.onFocus()),
      mi(this.node.current, "blur", () => this.onBlur())
    );
  }
  unmount() {}
}
const ux = (e, t) => (t ? (e === t ? !0 : ux(e, t.parentElement)) : !1);
function pl(e, t) {
  if (!t) return;
  const r = new PointerEvent("pointer" + e);
  t(r, Co(r));
}
class Ww extends nn {
  constructor() {
    super(...arguments),
      (this.removeStartListeners = Ke),
      (this.removeEndListeners = Ke),
      (this.removeAccessibleListeners = Ke),
      (this.startPointerPress = (t, r) => {
        if ((this.removeEndListeners(), this.isPressing)) return;
        const s = this.node.getProps(),
          f = vi(
            window,
            "pointerup",
            (y, S) => {
              if (!this.checkPressEnd()) return;
              const { onTap: T, onTapCancel: O } = this.node.getProps();
              De.update(() => {
                ux(this.node.current, y.target) ? T && T(y, S) : O && O(y, S);
              });
            },
            { passive: !(s.onTap || s.onPointerUp) }
          ),
          m = vi(window, "pointercancel", (y, S) => this.cancelPress(y, S), {
            passive: !(s.onTapCancel || s.onPointerCancel),
          });
        (this.removeEndListeners = Ui(f, m)), this.startPress(t, r);
      }),
      (this.startAccessiblePress = () => {
        const t = (f) => {
            if (f.key !== "Enter" || this.isPressing) return;
            const m = (y) => {
              y.key !== "Enter" ||
                !this.checkPressEnd() ||
                pl("up", (S, T) => {
                  const { onTap: O } = this.node.getProps();
                  O && De.update(() => O(S, T));
                });
            };
            this.removeEndListeners(),
              (this.removeEndListeners = mi(this.node.current, "keyup", m)),
              pl("down", (y, S) => {
                this.startPress(y, S);
              });
          },
          r = mi(this.node.current, "keydown", t),
          s = () => {
            this.isPressing && pl("cancel", (f, m) => this.cancelPress(f, m));
          },
          c = mi(this.node.current, "blur", s);
        this.removeAccessibleListeners = Ui(r, c);
      });
  }
  startPress(t, r) {
    this.isPressing = !0;
    const { onTapStart: s, whileTap: c } = this.node.getProps();
    c &&
      this.node.animationState &&
      this.node.animationState.setActive("whileTap", !0),
      s && De.update(() => s(t, r));
  }
  checkPressEnd() {
    return (
      this.removeEndListeners(),
      (this.isPressing = !1),
      this.node.getProps().whileTap &&
        this.node.animationState &&
        this.node.animationState.setActive("whileTap", !1),
      !cx()
    );
  }
  cancelPress(t, r) {
    if (!this.checkPressEnd()) return;
    const { onTapCancel: s } = this.node.getProps();
    s && De.update(() => s(t, r));
  }
  mount() {
    const t = this.node.getProps(),
      r = vi(this.node.current, "pointerdown", this.startPointerPress, {
        passive: !(t.onTapStart || t.onPointerStart),
      }),
      s = mi(this.node.current, "focus", this.startAccessiblePress);
    this.removeStartListeners = Ui(r, s);
  }
  unmount() {
    this.removeStartListeners(),
      this.removeEndListeners(),
      this.removeAccessibleListeners();
  }
}
const Mc = new WeakMap(),
  gl = new WeakMap(),
  Gw = (e) => {
    const t = Mc.get(e.target);
    t && t(e);
  },
  Uw = (e) => {
    e.forEach(Gw);
  };
function $w({ root: e, ...t }) {
  const r = e || document;
  gl.has(r) || gl.set(r, {});
  const s = gl.get(r),
    c = JSON.stringify(t);
  return s[c] || (s[c] = new IntersectionObserver(Uw, { root: e, ...t })), s[c];
}
function qw(e, t, r) {
  const s = $w(t);
  return (
    Mc.set(e, r),
    s.observe(e),
    () => {
      Mc.delete(e), s.unobserve(e);
    }
  );
}
const Zw = { some: 0, all: 1 };
class Kw extends nn {
  constructor() {
    super(...arguments), (this.hasEnteredView = !1), (this.isInView = !1);
  }
  startObserver() {
    this.unmount();
    const { viewport: t = {} } = this.node.getProps(),
      { root: r, margin: s, amount: c = "some", once: f } = t,
      m = {
        root: r ? r.current : void 0,
        rootMargin: s,
        threshold: typeof c == "number" ? c : Zw[c],
      },
      y = (S) => {
        const { isIntersecting: T } = S;
        if (
          this.isInView === T ||
          ((this.isInView = T), f && !T && this.hasEnteredView)
        )
          return;
        T && (this.hasEnteredView = !0),
          this.node.animationState &&
            this.node.animationState.setActive("whileInView", T);
        const { onViewportEnter: O, onViewportLeave: z } = this.node.getProps(),
          N = T ? O : z;
        N && N(S);
      };
    return qw(this.node.current, m, y);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver > "u") return;
    const { props: t, prevProps: r } = this.node;
    ["amount", "margin", "root"].some(Qw(t, r)) && this.startObserver();
  }
  unmount() {}
}
function Qw({ viewport: e = {} }, { viewport: t = {} } = {}) {
  return (r) => e[r] !== t[r];
}
const Jw = {
  inView: { Feature: Kw },
  tap: { Feature: Ww },
  focus: { Feature: Yw },
  hover: { Feature: Vw },
};
function hx(e, t) {
  if (!Array.isArray(t)) return !1;
  const r = t.length;
  if (r !== e.length) return !1;
  for (let s = 0; s < r; s++) if (t[s] !== e[s]) return !1;
  return !0;
}
function e1(e) {
  const t = {};
  return e.values.forEach((r, s) => (t[s] = r.get())), t;
}
function t1(e) {
  const t = {};
  return e.values.forEach((r, s) => (t[s] = r.getVelocity())), t;
}
function Ao(e, t, r) {
  const s = e.getProps();
  return ch(s, t, r !== void 0 ? r : s.custom, e1(e), t1(e));
}
const i1 = "framerAppearId",
  n1 = "data-" + oh(i1);
let r1 = Ke,
  hh = Ke;
const $i = (e) => e * 1e3,
  yi = (e) => e / 1e3,
  a1 = { current: !1 },
  dx = (e) => Array.isArray(e) && typeof e[0] == "number";
function fx(e) {
  return !!(
    !e ||
    (typeof e == "string" && px[e]) ||
    dx(e) ||
    (Array.isArray(e) && e.every(fx))
  );
}
const Or = ([e, t, r, s]) => `cubic-bezier(${e}, ${t}, ${r}, ${s})`,
  px = {
    linear: "linear",
    ease: "ease",
    easeIn: "ease-in",
    easeOut: "ease-out",
    easeInOut: "ease-in-out",
    circIn: Or([0, 0.65, 0.55, 1]),
    circOut: Or([0.55, 0, 1, 0.45]),
    backIn: Or([0.31, 0.01, 0.66, -0.59]),
    backOut: Or([0.33, 1.53, 0.69, 0.99]),
  };
function gx(e) {
  if (e) return dx(e) ? Or(e) : Array.isArray(e) ? e.map(gx) : px[e];
}
function s1(
  e,
  t,
  r,
  {
    delay: s = 0,
    duration: c,
    repeat: f = 0,
    repeatType: m = "loop",
    ease: y,
    times: S,
  } = {}
) {
  const T = { [t]: r };
  S && (T.offset = S);
  const O = gx(y);
  return (
    Array.isArray(O) && (T.easing = O),
    e.animate(T, {
      delay: s,
      duration: c,
      easing: Array.isArray(O) ? "linear" : O,
      fill: "both",
      iterations: f + 1,
      direction: m === "reverse" ? "alternate" : "normal",
    })
  );
}
function o1(e, { repeat: t, repeatType: r = "loop" }) {
  const s = t && r !== "loop" && t % 2 === 1 ? 0 : e.length - 1;
  return e[s];
}
const mx = (e, t, r) =>
    (((1 - 3 * r + 3 * t) * e + (3 * r - 6 * t)) * e + 3 * t) * e,
  l1 = 1e-7,
  c1 = 12;
function u1(e, t, r, s, c) {
  let f,
    m,
    y = 0;
  do (m = t + (r - t) / 2), (f = mx(m, s, c) - e), f > 0 ? (r = m) : (t = m);
  while (Math.abs(f) > l1 && ++y < c1);
  return m;
}
function Sa(e, t, r, s) {
  if (e === t && r === s) return Ke;
  const c = (f) => u1(f, 0, 1, e, r);
  return (f) => (f === 0 || f === 1 ? f : mx(c(f), t, s));
}
const h1 = Sa(0.42, 0, 1, 1),
  d1 = Sa(0, 0, 0.58, 1),
  xx = Sa(0.42, 0, 0.58, 1),
  f1 = (e) => Array.isArray(e) && typeof e[0] != "number",
  vx = (e) => (t) => t <= 0.5 ? e(2 * t) / 2 : (2 - e(2 * (1 - t))) / 2,
  yx = (e) => (t) => 1 - e(1 - t),
  bx = (e) => 1 - Math.sin(Math.acos(e)),
  dh = yx(bx),
  p1 = vx(dh),
  wx = Sa(0.33, 1.53, 0.69, 0.99),
  fh = yx(wx),
  g1 = vx(fh),
  m1 = (e) =>
    (e *= 2) < 1 ? 0.5 * fh(e) : 0.5 * (2 - Math.pow(2, -10 * (e - 1))),
  x1 = {
    linear: Ke,
    easeIn: h1,
    easeInOut: xx,
    easeOut: d1,
    circIn: bx,
    circInOut: p1,
    circOut: dh,
    backIn: fh,
    backInOut: g1,
    backOut: wx,
    anticipate: m1,
  },
  uf = (e) => {
    if (Array.isArray(e)) {
      hh(e.length === 4);
      const [t, r, s, c] = e;
      return Sa(t, r, s, c);
    } else if (typeof e == "string") return x1[e];
    return e;
  },
  ph = (e, t) => (r) =>
    !!(
      (ba(r) && mw.test(r) && r.startsWith(e)) ||
      (t && Object.prototype.hasOwnProperty.call(r, t))
    ),
  Sx = (e, t, r) => (s) => {
    if (!ba(s)) return s;
    const [c, f, m, y] = s.match(ko);
    return {
      [e]: parseFloat(c),
      [t]: parseFloat(f),
      [r]: parseFloat(m),
      alpha: y !== void 0 ? parseFloat(y) : 1,
    };
  },
  v1 = (e) => Ki(0, 255, e),
  ml = { ...Tn, transform: (e) => Math.round(v1(e)) },
  pn = {
    test: ph("rgb", "red"),
    parse: Sx("red", "green", "blue"),
    transform: ({ red: e, green: t, blue: r, alpha: s = 1 }) =>
      "rgba(" +
      ml.transform(e) +
      ", " +
      ml.transform(t) +
      ", " +
      ml.transform(r) +
      ", " +
      Br(jr.transform(s)) +
      ")",
  };
function y1(e) {
  let t = "",
    r = "",
    s = "",
    c = "";
  return (
    e.length > 5
      ? ((t = e.substring(1, 3)),
        (r = e.substring(3, 5)),
        (s = e.substring(5, 7)),
        (c = e.substring(7, 9)))
      : ((t = e.substring(1, 2)),
        (r = e.substring(2, 3)),
        (s = e.substring(3, 4)),
        (c = e.substring(4, 5)),
        (t += t),
        (r += r),
        (s += s),
        (c += c)),
    {
      red: parseInt(t, 16),
      green: parseInt(r, 16),
      blue: parseInt(s, 16),
      alpha: c ? parseInt(c, 16) / 255 : 1,
    }
  );
}
const Oc = { test: ph("#"), parse: y1, transform: pn.transform },
  Wn = {
    test: ph("hsl", "hue"),
    parse: Sx("hue", "saturation", "lightness"),
    transform: ({ hue: e, saturation: t, lightness: r, alpha: s = 1 }) =>
      "hsla(" +
      Math.round(e) +
      ", " +
      li.transform(Br(t)) +
      ", " +
      li.transform(Br(r)) +
      ", " +
      Br(jr.transform(s)) +
      ")",
  },
  gt = {
    test: (e) => pn.test(e) || Oc.test(e) || Wn.test(e),
    parse: (e) =>
      pn.test(e) ? pn.parse(e) : Wn.test(e) ? Wn.parse(e) : Oc.parse(e),
    transform: (e) =>
      ba(e) ? e : e.hasOwnProperty("red") ? pn.transform(e) : Wn.transform(e),
  },
  We = (e, t, r) => -r * e + r * t + e;
function xl(e, t, r) {
  return (
    r < 0 && (r += 1),
    r > 1 && (r -= 1),
    r < 1 / 6
      ? e + (t - e) * 6 * r
      : r < 1 / 2
      ? t
      : r < 2 / 3
      ? e + (t - e) * (2 / 3 - r) * 6
      : e
  );
}
function b1({ hue: e, saturation: t, lightness: r, alpha: s }) {
  (e /= 360), (t /= 100), (r /= 100);
  let c = 0,
    f = 0,
    m = 0;
  if (!t) c = f = m = r;
  else {
    const y = r < 0.5 ? r * (1 + t) : r + t - r * t,
      S = 2 * r - y;
    (c = xl(S, y, e + 1 / 3)), (f = xl(S, y, e)), (m = xl(S, y, e - 1 / 3));
  }
  return {
    red: Math.round(c * 255),
    green: Math.round(f * 255),
    blue: Math.round(m * 255),
    alpha: s,
  };
}
const vl = (e, t, r) => {
    const s = e * e;
    return Math.sqrt(Math.max(0, r * (t * t - s) + s));
  },
  w1 = [Oc, pn, Wn],
  S1 = (e) => w1.find((t) => t.test(e));
function hf(e) {
  const t = S1(e);
  let r = t.parse(e);
  return t === Wn && (r = b1(r)), r;
}
const kx = (e, t) => {
  const r = hf(e),
    s = hf(t),
    c = { ...r };
  return (f) => (
    (c.red = vl(r.red, s.red, f)),
    (c.green = vl(r.green, s.green, f)),
    (c.blue = vl(r.blue, s.blue, f)),
    (c.alpha = We(r.alpha, s.alpha, f)),
    pn.transform(c)
  );
};
function k1(e) {
  var t, r;
  return (
    isNaN(e) &&
    ba(e) &&
    (((t = e.match(ko)) === null || t === void 0 ? void 0 : t.length) || 0) +
      (((r = e.match(Zm)) === null || r === void 0 ? void 0 : r.length) || 0) >
      0
  );
}
const Cx = { regex: pw, countKey: "Vars", token: "${v}", parse: Ke },
  Ax = { regex: Zm, countKey: "Colors", token: "${c}", parse: gt.parse },
  Px = { regex: ko, countKey: "Numbers", token: "${n}", parse: Tn.parse };
function yl(e, { regex: t, countKey: r, token: s, parse: c }) {
  const f = e.tokenised.match(t);
  f &&
    ((e["num" + r] = f.length),
    (e.tokenised = e.tokenised.replace(t, s)),
    e.values.push(...f.map(c)));
}
function Fs(e) {
  const t = e.toString(),
    r = {
      value: t,
      tokenised: t,
      values: [],
      numVars: 0,
      numColors: 0,
      numNumbers: 0,
    };
  return r.value.includes("var(--") && yl(r, Cx), yl(r, Ax), yl(r, Px), r;
}
function Tx(e) {
  return Fs(e).values;
}
function Lx(e) {
  const { values: t, numColors: r, numVars: s, tokenised: c } = Fs(e),
    f = t.length;
  return (m) => {
    let y = c;
    for (let S = 0; S < f; S++)
      S < s
        ? (y = y.replace(Cx.token, m[S]))
        : S < s + r
        ? (y = y.replace(Ax.token, gt.transform(m[S])))
        : (y = y.replace(Px.token, Br(m[S])));
    return y;
  };
}
const C1 = (e) => (typeof e == "number" ? 0 : e);
function A1(e) {
  const t = Tx(e);
  return Lx(e)(t.map(C1));
}
const Qi = {
    test: k1,
    parse: Tx,
    createTransformer: Lx,
    getAnimatableNone: A1,
  },
  Ex = (e, t) => (r) => `${r > 0 ? t : e}`;
function Mx(e, t) {
  return typeof e == "number"
    ? (r) => We(e, t, r)
    : gt.test(e)
    ? kx(e, t)
    : e.startsWith("var(")
    ? Ex(e, t)
    : Rx(e, t);
}
const Ox = (e, t) => {
    const r = [...e],
      s = r.length,
      c = e.map((f, m) => Mx(f, t[m]));
    return (f) => {
      for (let m = 0; m < s; m++) r[m] = c[m](f);
      return r;
    };
  },
  P1 = (e, t) => {
    const r = { ...e, ...t },
      s = {};
    for (const c in r)
      e[c] !== void 0 && t[c] !== void 0 && (s[c] = Mx(e[c], t[c]));
    return (c) => {
      for (const f in s) r[f] = s[f](c);
      return r;
    };
  },
  Rx = (e, t) => {
    const r = Qi.createTransformer(t),
      s = Fs(e),
      c = Fs(t);
    return s.numVars === c.numVars &&
      s.numColors === c.numColors &&
      s.numNumbers >= c.numNumbers
      ? Ui(Ox(s.values, c.values), r)
      : Ex(e, t);
  },
  ha = (e, t, r) => {
    const s = t - e;
    return s === 0 ? 1 : (r - e) / s;
  },
  df = (e, t) => (r) => We(e, t, r);
function T1(e) {
  return typeof e == "number"
    ? df
    : typeof e == "string"
    ? gt.test(e)
      ? kx
      : Rx
    : Array.isArray(e)
    ? Ox
    : typeof e == "object"
    ? P1
    : df;
}
function L1(e, t, r) {
  const s = [],
    c = r || T1(e[0]),
    f = e.length - 1;
  for (let m = 0; m < f; m++) {
    let y = c(e[m], e[m + 1]);
    if (t) {
      const S = Array.isArray(t) ? t[m] || Ke : t;
      y = Ui(S, y);
    }
    s.push(y);
  }
  return s;
}
function zx(e, t, { clamp: r = !0, ease: s, mixer: c } = {}) {
  const f = e.length;
  if ((hh(f === t.length), f === 1)) return () => t[0];
  e[0] > e[f - 1] && ((e = [...e].reverse()), (t = [...t].reverse()));
  const m = L1(t, s, c),
    y = m.length,
    S = (T) => {
      let O = 0;
      if (y > 1) for (; O < e.length - 2 && !(T < e[O + 1]); O++);
      const z = ha(e[O], e[O + 1], T);
      return m[O](z);
    };
  return r ? (T) => S(Ki(e[0], e[f - 1], T)) : S;
}
function E1(e, t) {
  const r = e[e.length - 1];
  for (let s = 1; s <= t; s++) {
    const c = ha(0, t, s);
    e.push(We(r, 1, c));
  }
}
function M1(e) {
  const t = [0];
  return E1(t, e.length - 1), t;
}
function O1(e, t) {
  return e.map((r) => r * t);
}
function R1(e, t) {
  return e.map(() => t || xx).splice(0, e.length - 1);
}
function _s({
  duration: e = 300,
  keyframes: t,
  times: r,
  ease: s = "easeInOut",
}) {
  const c = f1(s) ? s.map(uf) : uf(s),
    f = { done: !1, value: t[0] },
    m = O1(r && r.length === t.length ? r : M1(t), e),
    y = zx(m, t, { ease: Array.isArray(c) ? c : R1(t, c) });
  return {
    calculatedDuration: e,
    next: (S) => ((f.value = y(S)), (f.done = S >= e), f),
  };
}
function Ix(e, t) {
  return t ? e * (1e3 / t) : 0;
}
const z1 = 5;
function Dx(e, t, r) {
  const s = Math.max(t - z1, 0);
  return Ix(r - e(s), t - s);
}
const bl = 0.001,
  I1 = 0.01,
  ff = 10,
  D1 = 0.05,
  N1 = 1;
function F1({
  duration: e = 800,
  bounce: t = 0.25,
  velocity: r = 0,
  mass: s = 1,
}) {
  let c, f;
  r1(e <= $i(ff));
  let m = 1 - t;
  (m = Ki(D1, N1, m)),
    (e = Ki(I1, ff, yi(e))),
    m < 1
      ? ((c = (T) => {
          const O = T * m,
            z = O * e,
            N = O - r,
            X = Rc(T, m),
            V = Math.exp(-z);
          return bl - (N / X) * V;
        }),
        (f = (T) => {
          const z = T * m * e,
            N = z * r + r,
            X = Math.pow(m, 2) * Math.pow(T, 2) * e,
            V = Math.exp(-z),
            Y = Rc(Math.pow(T, 2), m);
          return ((-c(T) + bl > 0 ? -1 : 1) * ((N - X) * V)) / Y;
        }))
      : ((c = (T) => {
          const O = Math.exp(-T * e),
            z = (T - r) * e + 1;
          return -bl + O * z;
        }),
        (f = (T) => {
          const O = Math.exp(-T * e),
            z = (r - T) * (e * e);
          return O * z;
        }));
  const y = 5 / e,
    S = H1(c, f, y);
  if (((e = $i(e)), isNaN(S)))
    return { stiffness: 100, damping: 10, duration: e };
  {
    const T = Math.pow(S, 2) * s;
    return { stiffness: T, damping: m * 2 * Math.sqrt(s * T), duration: e };
  }
}
const _1 = 12;
function H1(e, t, r) {
  let s = r;
  for (let c = 1; c < _1; c++) s = s - e(s) / t(s);
  return s;
}
function Rc(e, t) {
  return e * Math.sqrt(1 - t * t);
}
const X1 = ["duration", "bounce"],
  j1 = ["stiffness", "damping", "mass"];
function pf(e, t) {
  return t.some((r) => e[r] !== void 0);
}
function B1(e) {
  let t = {
    velocity: 0,
    stiffness: 100,
    damping: 10,
    mass: 1,
    isResolvedFromDuration: !1,
    ...e,
  };
  if (!pf(e, j1) && pf(e, X1)) {
    const r = F1(e);
    (t = { ...t, ...r, velocity: 0, mass: 1 }), (t.isResolvedFromDuration = !0);
  }
  return t;
}
function Nx({ keyframes: e, restDelta: t, restSpeed: r, ...s }) {
  const c = e[0],
    f = e[e.length - 1],
    m = { done: !1, value: c },
    {
      stiffness: y,
      damping: S,
      mass: T,
      velocity: O,
      duration: z,
      isResolvedFromDuration: N,
    } = B1(s),
    X = O ? -yi(O) : 0,
    V = S / (2 * Math.sqrt(y * T)),
    Y = f - c,
    Q = yi(Math.sqrt(y / T)),
    j = Math.abs(Y) < 5;
  r || (r = j ? 0.01 : 2), t || (t = j ? 0.005 : 0.5);
  let L;
  if (V < 1) {
    const H = Rc(Q, V);
    L = (U) => {
      const B = Math.exp(-V * Q * U);
      return (
        f - B * (((X + V * Q * Y) / H) * Math.sin(H * U) + Y * Math.cos(H * U))
      );
    };
  } else if (V === 1) L = (H) => f - Math.exp(-Q * H) * (Y + (X + Q * Y) * H);
  else {
    const H = Q * Math.sqrt(V * V - 1);
    L = (U) => {
      const B = Math.exp(-V * Q * U),
        K = Math.min(H * U, 300);
      return (
        f - (B * ((X + V * Q * Y) * Math.sinh(K) + H * Y * Math.cosh(K))) / H
      );
    };
  }
  return {
    calculatedDuration: (N && z) || null,
    next: (H) => {
      const U = L(H);
      if (N) m.done = H >= z;
      else {
        let B = X;
        H !== 0 && (V < 1 ? (B = Dx(L, H, U)) : (B = 0));
        const K = Math.abs(B) <= r,
          te = Math.abs(f - U) <= t;
        m.done = K && te;
      }
      return (m.value = m.done ? f : U), m;
    },
  };
}
function gf({
  keyframes: e,
  velocity: t = 0,
  power: r = 0.8,
  timeConstant: s = 325,
  bounceDamping: c = 10,
  bounceStiffness: f = 500,
  modifyTarget: m,
  min: y,
  max: S,
  restDelta: T = 0.5,
  restSpeed: O,
}) {
  const z = e[0],
    N = { done: !1, value: z },
    X = (q) => (y !== void 0 && q < y) || (S !== void 0 && q > S),
    V = (q) =>
      y === void 0
        ? S
        : S === void 0 || Math.abs(y - q) < Math.abs(S - q)
        ? y
        : S;
  let Y = r * t;
  const Q = z + Y,
    j = m === void 0 ? Q : m(Q);
  j !== Q && (Y = j - z);
  const L = (q) => -Y * Math.exp(-q / s),
    H = (q) => j + L(q),
    U = (q) => {
      const ie = L(q),
        ae = H(q);
      (N.done = Math.abs(ie) <= T), (N.value = N.done ? j : ae);
    };
  let B, K;
  const te = (q) => {
    X(N.value) &&
      ((B = q),
      (K = Nx({
        keyframes: [N.value, V(N.value)],
        velocity: Dx(H, q, N.value),
        damping: c,
        stiffness: f,
        restDelta: T,
        restSpeed: O,
      })));
  };
  return (
    te(0),
    {
      calculatedDuration: null,
      next: (q) => {
        let ie = !1;
        return (
          !K && B === void 0 && ((ie = !0), U(q), te(q)),
          B !== void 0 && q > B ? K.next(q - B) : (!ie && U(q), N)
        );
      },
    }
  );
}
const V1 = (e) => {
    const t = ({ timestamp: r }) => e(r);
    return {
      start: () => De.update(t, !0),
      stop: () => Ci(t),
      now: () => (nt.isProcessing ? nt.timestamp : performance.now()),
    };
  },
  mf = 2e4;
function xf(e) {
  let t = 0;
  const r = 50;
  let s = e.next(t);
  for (; !s.done && t < mf; ) (t += r), (s = e.next(t));
  return t >= mf ? 1 / 0 : t;
}
const Y1 = { decay: gf, inertia: gf, tween: _s, keyframes: _s, spring: Nx };
function Hs({
  autoplay: e = !0,
  delay: t = 0,
  driver: r = V1,
  keyframes: s,
  type: c = "keyframes",
  repeat: f = 0,
  repeatDelay: m = 0,
  repeatType: y = "loop",
  onPlay: S,
  onStop: T,
  onComplete: O,
  onUpdate: z,
  ...N
}) {
  let X = 1,
    V = !1,
    Y,
    Q;
  const j = () => {
    Q = new Promise((fe) => {
      Y = fe;
    });
  };
  j();
  let L;
  const H = Y1[c] || _s;
  let U;
  H !== _s &&
    typeof s[0] != "number" &&
    ((U = zx([0, 100], s, { clamp: !1 })), (s = [0, 100]));
  const B = H({ ...N, keyframes: s });
  let K;
  y === "mirror" &&
    (K = H({
      ...N,
      keyframes: [...s].reverse(),
      velocity: -(N.velocity || 0),
    }));
  let te = "idle",
    q = null,
    ie = null,
    ae = null;
  B.calculatedDuration === null && f && (B.calculatedDuration = xf(B));
  const { calculatedDuration: pe } = B;
  let le = 1 / 0,
    he = 1 / 0;
  pe !== null && ((le = pe + m), (he = le * (f + 1) - m));
  let xe = 0;
  const we = (fe) => {
      if (ie === null) return;
      X > 0 && (ie = Math.min(ie, fe)),
        X < 0 && (ie = Math.min(fe - he / X, ie)),
        q !== null ? (xe = q) : (xe = Math.round(fe - ie) * X);
      const be = xe - t * (X >= 0 ? 1 : -1),
        je = X >= 0 ? be < 0 : be > he;
      (xe = Math.max(be, 0)), te === "finished" && q === null && (xe = he);
      let Oe = xe,
        Lt = B;
      if (f) {
        const Pi = xe / le;
        let Jt = Math.floor(Pi),
          ei = Pi % 1;
        !ei && Pi >= 1 && (ei = 1),
          ei === 1 && Jt--,
          (Jt = Math.min(Jt, f + 1));
        const ui = !!(Jt % 2);
        ui &&
          (y === "reverse"
            ? ((ei = 1 - ei), m && (ei -= m / le))
            : y === "mirror" && (Lt = K));
        let Ln = Ki(0, 1, ei);
        xe > he && (Ln = y === "reverse" && ui ? 1 : 0), (Oe = Ln * le);
      }
      const Re = je ? { done: !1, value: s[0] } : Lt.next(Oe);
      U && (Re.value = U(Re.value));
      let { done: Qt } = Re;
      !je && pe !== null && (Qt = X >= 0 ? xe >= he : xe <= 0);
      const ci = q === null && (te === "finished" || (te === "running" && Qt));
      return z && z(Re.value), ci && se(), Re;
    },
    Me = () => {
      L && L.stop(), (L = void 0);
    },
    Xe = () => {
      (te = "idle"), Me(), Y(), j(), (ie = ae = null);
    },
    se = () => {
      (te = "finished"), O && O(), Me(), Y();
    },
    ge = () => {
      if (V) return;
      L || (L = r(we));
      const fe = L.now();
      S && S(),
        q !== null ? (ie = fe - q) : (!ie || te === "finished") && (ie = fe),
        te === "finished" && j(),
        (ae = ie),
        (q = null),
        (te = "running"),
        L.start();
    };
  e && ge();
  const me = {
    then(fe, be) {
      return Q.then(fe, be);
    },
    get time() {
      return yi(xe);
    },
    set time(fe) {
      (fe = $i(fe)),
        (xe = fe),
        q !== null || !L || X === 0 ? (q = fe) : (ie = L.now() - fe / X);
    },
    get duration() {
      const fe = B.calculatedDuration === null ? xf(B) : B.calculatedDuration;
      return yi(fe);
    },
    get speed() {
      return X;
    },
    set speed(fe) {
      fe === X || !L || ((X = fe), (me.time = yi(xe)));
    },
    get state() {
      return te;
    },
    play: ge,
    pause: () => {
      (te = "paused"), (q = xe);
    },
    stop: () => {
      (V = !0), te !== "idle" && ((te = "idle"), T && T(), Xe());
    },
    cancel: () => {
      ae !== null && we(ae), Xe();
    },
    complete: () => {
      te = "finished";
    },
    sample: (fe) => ((ie = 0), we(fe)),
  };
  return me;
}
function W1(e) {
  let t;
  return () => (t === void 0 && (t = e()), t);
}
const G1 = W1(() => Object.hasOwnProperty.call(Element.prototype, "animate")),
  U1 = new Set([
    "opacity",
    "clipPath",
    "filter",
    "transform",
    "backgroundColor",
  ]),
  Ga = 10,
  $1 = 2e4,
  q1 = (e, t) => t.type === "spring" || e === "backgroundColor" || !fx(t.ease);
function Z1(e, t, { onUpdate: r, onComplete: s, ...c }) {
  if (
    !(
      G1() &&
      U1.has(t) &&
      !c.repeatDelay &&
      c.repeatType !== "mirror" &&
      c.damping !== 0 &&
      c.type !== "inertia"
    )
  )
    return !1;
  let m = !1,
    y,
    S;
  const T = () => {
    S = new Promise((L) => {
      y = L;
    });
  };
  T();
  let { keyframes: O, duration: z = 300, ease: N, times: X } = c;
  if (q1(t, c)) {
    const L = Hs({ ...c, repeat: 0, delay: 0 });
    let H = { done: !1, value: O[0] };
    const U = [];
    let B = 0;
    for (; !H.done && B < $1; ) (H = L.sample(B)), U.push(H.value), (B += Ga);
    (X = void 0), (O = U), (z = B - Ga), (N = "linear");
  }
  const V = s1(e.owner.current, t, O, { ...c, duration: z, ease: N, times: X });
  c.syncStart &&
    (V.startTime = nt.isProcessing
      ? nt.timestamp
      : document.timeline
      ? document.timeline.currentTime
      : performance.now());
  const Y = () => V.cancel(),
    Q = () => {
      De.update(Y), y(), T();
    };
  return (
    (V.onfinish = () => {
      e.set(o1(O, c)), s && s(), Q();
    }),
    {
      then(L, H) {
        return S.then(L, H);
      },
      attachTimeline(L) {
        return (V.timeline = L), (V.onfinish = null), Ke;
      },
      get time() {
        return yi(V.currentTime || 0);
      },
      set time(L) {
        V.currentTime = $i(L);
      },
      get speed() {
        return V.playbackRate;
      },
      set speed(L) {
        V.playbackRate = L;
      },
      get duration() {
        return yi(z);
      },
      play: () => {
        m || (V.play(), Ci(Y));
      },
      pause: () => V.pause(),
      stop: () => {
        if (((m = !0), V.playState === "idle")) return;
        const { currentTime: L } = V;
        if (L) {
          const H = Hs({ ...c, autoplay: !1 });
          e.setWithVelocity(H.sample(L - Ga).value, H.sample(L).value, Ga);
        }
        Q();
      },
      complete: () => V.finish(),
      cancel: Q,
    }
  );
}
function K1({ keyframes: e, delay: t, onUpdate: r, onComplete: s }) {
  const c = () => (
    r && r(e[e.length - 1]),
    s && s(),
    {
      time: 0,
      speed: 1,
      duration: 0,
      play: Ke,
      pause: Ke,
      stop: Ke,
      then: (f) => (f(), Promise.resolve()),
      cancel: Ke,
      complete: Ke,
    }
  );
  return t
    ? Hs({ keyframes: [0, 1], duration: 0, delay: t, onComplete: c })
    : c();
}
const Q1 = { type: "spring", stiffness: 500, damping: 25, restSpeed: 10 },
  J1 = (e) => ({
    type: "spring",
    stiffness: 550,
    damping: e === 0 ? 2 * Math.sqrt(550) : 30,
    restSpeed: 10,
  }),
  eS = { type: "keyframes", duration: 0.8 },
  tS = { type: "keyframes", ease: [0.25, 0.1, 0.35, 1], duration: 0.3 },
  iS = (e, { keyframes: t }) =>
    t.length > 2
      ? eS
      : Pn.has(e)
      ? e.startsWith("scale")
        ? J1(t[1])
        : Q1
      : tS,
  zc = (e, t) =>
    e === "zIndex"
      ? !1
      : !!(
          typeof t == "number" ||
          Array.isArray(t) ||
          (typeof t == "string" &&
            (Qi.test(t) || t === "0") &&
            !t.startsWith("url("))
        ),
  nS = new Set(["brightness", "contrast", "saturate", "opacity"]);
function rS(e) {
  const [t, r] = e.slice(0, -1).split("(");
  if (t === "drop-shadow") return e;
  const [s] = r.match(ko) || [];
  if (!s) return e;
  const c = r.replace(s, "");
  let f = nS.has(t) ? 1 : 0;
  return s !== r && (f *= 100), t + "(" + f + c + ")";
}
const aS = /([a-z-]*)\(.*?\)/g,
  Ic = {
    ...Qi,
    getAnimatableNone: (e) => {
      const t = e.match(aS);
      return t ? t.map(rS).join(" ") : e;
    },
  },
  sS = {
    ...Km,
    color: gt,
    backgroundColor: gt,
    outlineColor: gt,
    fill: gt,
    stroke: gt,
    borderColor: gt,
    borderTopColor: gt,
    borderRightColor: gt,
    borderBottomColor: gt,
    borderLeftColor: gt,
    filter: Ic,
    WebkitFilter: Ic,
  },
  gh = (e) => sS[e];
function Fx(e, t) {
  let r = gh(e);
  return (
    r !== Ic && (r = Qi), r.getAnimatableNone ? r.getAnimatableNone(t) : void 0
  );
}
const _x = (e) => /^0[^.\s]+$/.test(e);
function oS(e) {
  if (typeof e == "number") return e === 0;
  if (e !== null) return e === "none" || e === "0" || _x(e);
}
function lS(e, t, r, s) {
  const c = zc(t, r);
  let f;
  Array.isArray(r) ? (f = [...r]) : (f = [null, r]);
  const m = s.from !== void 0 ? s.from : e.get();
  let y;
  const S = [];
  for (let T = 0; T < f.length; T++)
    f[T] === null && (f[T] = T === 0 ? m : f[T - 1]),
      oS(f[T]) && S.push(T),
      typeof f[T] == "string" && f[T] !== "none" && f[T] !== "0" && (y = f[T]);
  if (c && S.length && y)
    for (let T = 0; T < S.length; T++) {
      const O = S[T];
      f[O] = Fx(t, y);
    }
  return f;
}
function cS({
  when: e,
  delay: t,
  delayChildren: r,
  staggerChildren: s,
  staggerDirection: c,
  repeat: f,
  repeatType: m,
  repeatDelay: y,
  from: S,
  elapsed: T,
  ...O
}) {
  return !!Object.keys(O).length;
}
function Hx(e, t) {
  return e[t] || e.default || e;
}
const mh =
  (e, t, r, s = {}) =>
  (c) => {
    const f = Hx(s, e) || {},
      m = f.delay || s.delay || 0;
    let { elapsed: y = 0 } = s;
    y = y - $i(m);
    const S = lS(t, e, r, f),
      T = S[0],
      O = S[S.length - 1],
      z = zc(e, T),
      N = zc(e, O);
    let X = {
      keyframes: S,
      velocity: t.getVelocity(),
      ease: "easeOut",
      ...f,
      delay: -y,
      onUpdate: (V) => {
        t.set(V), f.onUpdate && f.onUpdate(V);
      },
      onComplete: () => {
        c(), f.onComplete && f.onComplete();
      },
    };
    if (
      (cS(f) || (X = { ...X, ...iS(e, X) }),
      X.duration && (X.duration = $i(X.duration)),
      X.repeatDelay && (X.repeatDelay = $i(X.repeatDelay)),
      !z || !N || a1.current || f.type === !1)
    )
      return K1(X);
    if (
      t.owner &&
      t.owner.current instanceof HTMLElement &&
      !t.owner.getProps().onUpdate
    ) {
      const V = Z1(t, e, X);
      if (V) return V;
    }
    return Hs(X);
  };
function Xs(e) {
  return !!(Tt(e) && e.add);
}
const Xx = (e) => /^\-?\d*\.?\d+$/.test(e);
function xh(e, t) {
  e.indexOf(t) === -1 && e.push(t);
}
function vh(e, t) {
  const r = e.indexOf(t);
  r > -1 && e.splice(r, 1);
}
class yh {
  constructor() {
    this.subscriptions = [];
  }
  add(t) {
    return xh(this.subscriptions, t), () => vh(this.subscriptions, t);
  }
  notify(t, r, s) {
    const c = this.subscriptions.length;
    if (c)
      if (c === 1) this.subscriptions[0](t, r, s);
      else
        for (let f = 0; f < c; f++) {
          const m = this.subscriptions[f];
          m && m(t, r, s);
        }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
}
const uS = (e) => !isNaN(parseFloat(e));
class hS {
  constructor(t, r = {}) {
    (this.version = "10.16.4"),
      (this.timeDelta = 0),
      (this.lastUpdated = 0),
      (this.canTrackVelocity = !1),
      (this.events = {}),
      (this.updateAndNotify = (s, c = !0) => {
        (this.prev = this.current), (this.current = s);
        const { delta: f, timestamp: m } = nt;
        this.lastUpdated !== m &&
          ((this.timeDelta = f),
          (this.lastUpdated = m),
          De.postRender(this.scheduleVelocityCheck)),
          this.prev !== this.current &&
            this.events.change &&
            this.events.change.notify(this.current),
          this.events.velocityChange &&
            this.events.velocityChange.notify(this.getVelocity()),
          c &&
            this.events.renderRequest &&
            this.events.renderRequest.notify(this.current);
      }),
      (this.scheduleVelocityCheck = () => De.postRender(this.velocityCheck)),
      (this.velocityCheck = ({ timestamp: s }) => {
        s !== this.lastUpdated &&
          ((this.prev = this.current),
          this.events.velocityChange &&
            this.events.velocityChange.notify(this.getVelocity()));
      }),
      (this.hasAnimated = !1),
      (this.prev = this.current = t),
      (this.canTrackVelocity = uS(this.current)),
      (this.owner = r.owner);
  }
  onChange(t) {
    return this.on("change", t);
  }
  on(t, r) {
    this.events[t] || (this.events[t] = new yh());
    const s = this.events[t].add(r);
    return t === "change"
      ? () => {
          s(),
            De.read(() => {
              this.events.change.getSize() || this.stop();
            });
        }
      : s;
  }
  clearListeners() {
    for (const t in this.events) this.events[t].clear();
  }
  attach(t, r) {
    (this.passiveEffect = t), (this.stopPassiveEffect = r);
  }
  set(t, r = !0) {
    !r || !this.passiveEffect
      ? this.updateAndNotify(t, r)
      : this.passiveEffect(t, this.updateAndNotify);
  }
  setWithVelocity(t, r, s) {
    this.set(r), (this.prev = t), (this.timeDelta = s);
  }
  jump(t) {
    this.updateAndNotify(t),
      (this.prev = t),
      this.stop(),
      this.stopPassiveEffect && this.stopPassiveEffect();
  }
  get() {
    return this.current;
  }
  getPrevious() {
    return this.prev;
  }
  getVelocity() {
    return this.canTrackVelocity
      ? Ix(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta)
      : 0;
  }
  start(t) {
    return (
      this.stop(),
      new Promise((r) => {
        (this.hasAnimated = !0),
          (this.animation = t(r)),
          this.events.animationStart && this.events.animationStart.notify();
      }).then(() => {
        this.events.animationComplete && this.events.animationComplete.notify(),
          this.clearAnimation();
      })
    );
  }
  stop() {
    this.animation &&
      (this.animation.stop(),
      this.events.animationCancel && this.events.animationCancel.notify()),
      this.clearAnimation();
  }
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  destroy() {
    this.clearListeners(),
      this.stop(),
      this.stopPassiveEffect && this.stopPassiveEffect();
  }
}
function lr(e, t) {
  return new hS(e, t);
}
const jx = (e) => (t) => t.test(e),
  dS = { test: (e) => e === "auto", parse: (e) => e },
  Bx = [Tn, ye, li, Ei, vw, xw, dS],
  Cr = (e) => Bx.find(jx(e)),
  fS = [...Bx, gt, Qi],
  pS = (e) => fS.find(jx(e));
function gS(e, t, r) {
  e.hasValue(t) ? e.getValue(t).set(r) : e.addValue(t, lr(r));
}
function bh(e, t) {
  const r = Ao(e, t);
  let {
    transitionEnd: s = {},
    transition: c = {},
    ...f
  } = r ? e.makeTargetAnimatable(r, !1) : {};
  f = { ...f, ...s };
  for (const m in f) {
    const y = Rw(f[m]);
    gS(e, m, y);
  }
}
function Dc(e, t) {
  [...t].reverse().forEach((s) => {
    const c = e.getVariant(s);
    c && bh(e, c),
      e.variantChildren &&
        e.variantChildren.forEach((f) => {
          Dc(f, t);
        });
  });
}
function mS(e, t) {
  if (Array.isArray(t)) return Dc(e, t);
  if (typeof t == "string") return Dc(e, [t]);
  bh(e, t);
}
function xS(e, t, r) {
  var s, c;
  const f = Object.keys(t).filter((y) => !e.hasValue(y)),
    m = f.length;
  if (m)
    for (let y = 0; y < m; y++) {
      const S = f[y],
        T = t[S];
      let O = null;
      Array.isArray(T) && (O = T[0]),
        O === null &&
          (O =
            (c = (s = r[S]) !== null && s !== void 0 ? s : e.readValue(S)) !==
              null && c !== void 0
              ? c
              : t[S]),
        O != null &&
          (typeof O == "string" && (Xx(O) || _x(O))
            ? (O = parseFloat(O))
            : !pS(O) && Qi.test(T) && (O = Fx(S, T)),
          e.addValue(S, lr(O, { owner: e })),
          r[S] === void 0 && (r[S] = O),
          O !== null && e.setBaseTarget(S, O));
    }
}
function vS(e, t) {
  return t ? (t[e] || t.default || t).from : void 0;
}
function yS(e, t, r) {
  const s = {};
  for (const c in e) {
    const f = vS(c, t);
    if (f !== void 0) s[c] = f;
    else {
      const m = r.getValue(c);
      m && (s[c] = m.get());
    }
  }
  return s;
}
function bS({ protectedKeys: e, needsAnimating: t }, r) {
  const s = e.hasOwnProperty(r) && t[r] !== !0;
  return (t[r] = !1), s;
}
function Vx(e, t, { delay: r = 0, transitionOverride: s, type: c } = {}) {
  let {
    transition: f = e.getDefaultTransition(),
    transitionEnd: m,
    ...y
  } = e.makeTargetAnimatable(t);
  const S = e.getValue("willChange");
  s && (f = s);
  const T = [],
    O = c && e.animationState && e.animationState.getState()[c];
  for (const z in y) {
    const N = e.getValue(z),
      X = y[z];
    if (!N || X === void 0 || (O && bS(O, z))) continue;
    const V = { delay: r, elapsed: 0, ...f };
    if (window.HandoffAppearAnimations && !N.hasAnimated) {
      const Q = e.getProps()[n1];
      Q &&
        ((V.elapsed = window.HandoffAppearAnimations(Q, z, N, De)),
        (V.syncStart = !0));
    }
    N.start(mh(z, N, X, e.shouldReduceMotion && Pn.has(z) ? { type: !1 } : V));
    const Y = N.animation;
    Xs(S) && (S.add(z), Y.then(() => S.remove(z))), T.push(Y);
  }
  return (
    m &&
      Promise.all(T).then(() => {
        m && bh(e, m);
      }),
    T
  );
}
function Nc(e, t, r = {}) {
  const s = Ao(e, t, r.custom);
  let { transition: c = e.getDefaultTransition() || {} } = s || {};
  r.transitionOverride && (c = r.transitionOverride);
  const f = s ? () => Promise.all(Vx(e, s, r)) : () => Promise.resolve(),
    m =
      e.variantChildren && e.variantChildren.size
        ? (S = 0) => {
            const {
              delayChildren: T = 0,
              staggerChildren: O,
              staggerDirection: z,
            } = c;
            return wS(e, t, T + S, O, z, r);
          }
        : () => Promise.resolve(),
    { when: y } = c;
  if (y) {
    const [S, T] = y === "beforeChildren" ? [f, m] : [m, f];
    return S().then(() => T());
  } else return Promise.all([f(), m(r.delay)]);
}
function wS(e, t, r = 0, s = 0, c = 1, f) {
  const m = [],
    y = (e.variantChildren.size - 1) * s,
    S = c === 1 ? (T = 0) => T * s : (T = 0) => y - T * s;
  return (
    Array.from(e.variantChildren)
      .sort(SS)
      .forEach((T, O) => {
        T.notify("AnimationStart", t),
          m.push(
            Nc(T, t, { ...f, delay: r + S(O) }).then(() =>
              T.notify("AnimationComplete", t)
            )
          );
      }),
    Promise.all(m)
  );
}
function SS(e, t) {
  return e.sortNodePosition(t);
}
function Yx(e, t, r = {}) {
  e.notify("AnimationStart", t);
  let s;
  if (Array.isArray(t)) {
    const c = t.map((f) => Nc(e, f, r));
    s = Promise.all(c);
  } else if (typeof t == "string") s = Nc(e, t, r);
  else {
    const c = typeof t == "function" ? Ao(e, t, r.custom) : t;
    s = Promise.all(Vx(e, c, r));
  }
  return s.then(() => e.notify("AnimationComplete", t));
}
const kS = [...Ju].reverse(),
  CS = Ju.length;
function AS(e) {
  return (t) =>
    Promise.all(t.map(({ animation: r, options: s }) => Yx(e, r, s)));
}
function PS(e) {
  let t = AS(e);
  const r = LS();
  let s = !0;
  const c = (S, T) => {
    const O = Ao(e, T);
    if (O) {
      const { transition: z, transitionEnd: N, ...X } = O;
      S = { ...S, ...X, ...N };
    }
    return S;
  };
  function f(S) {
    t = S(e);
  }
  function m(S, T) {
    const O = e.getProps(),
      z = e.getVariantContext(!0) || {},
      N = [],
      X = new Set();
    let V = {},
      Y = 1 / 0;
    for (let j = 0; j < CS; j++) {
      const L = kS[j],
        H = r[L],
        U = O[L] !== void 0 ? O[L] : z[L],
        B = ca(U),
        K = L === T ? H.isActive : null;
      K === !1 && (Y = j);
      let te = U === z[L] && U !== O[L] && B;
      if (
        (te && s && e.manuallyAnimateOnMount && (te = !1),
        (H.protectedKeys = { ...V }),
        (!H.isActive && K === null) ||
          (!U && !H.prevProp) ||
          wo(U) ||
          typeof U == "boolean")
      )
        continue;
      const q = TS(H.prevProp, U);
      let ie = q || (L === T && H.isActive && !te && B) || (j > Y && B);
      const ae = Array.isArray(U) ? U : [U];
      let pe = ae.reduce(c, {});
      K === !1 && (pe = {});
      const { prevResolvedValues: le = {} } = H,
        he = { ...le, ...pe },
        xe = (we) => {
          (ie = !0), X.delete(we), (H.needsAnimating[we] = !0);
        };
      for (const we in he) {
        const Me = pe[we],
          Xe = le[we];
        V.hasOwnProperty(we) ||
          (Me !== Xe
            ? Ns(Me) && Ns(Xe)
              ? !hx(Me, Xe) || q
                ? xe(we)
                : (H.protectedKeys[we] = !0)
              : Me !== void 0
              ? xe(we)
              : X.add(we)
            : Me !== void 0 && X.has(we)
            ? xe(we)
            : (H.protectedKeys[we] = !0));
      }
      (H.prevProp = U),
        (H.prevResolvedValues = pe),
        H.isActive && (V = { ...V, ...pe }),
        s && e.blockInitialAnimation && (ie = !1),
        ie &&
          !te &&
          N.push(
            ...ae.map((we) => ({ animation: we, options: { type: L, ...S } }))
          );
    }
    if (X.size) {
      const j = {};
      X.forEach((L) => {
        const H = e.getBaseTarget(L);
        H !== void 0 && (j[L] = H);
      }),
        N.push({ animation: j });
    }
    let Q = !!N.length;
    return (
      s && O.initial === !1 && !e.manuallyAnimateOnMount && (Q = !1),
      (s = !1),
      Q ? t(N) : Promise.resolve()
    );
  }
  function y(S, T, O) {
    var z;
    if (r[S].isActive === T) return Promise.resolve();
    (z = e.variantChildren) === null ||
      z === void 0 ||
      z.forEach((X) => {
        var V;
        return (V = X.animationState) === null || V === void 0
          ? void 0
          : V.setActive(S, T);
      }),
      (r[S].isActive = T);
    const N = m(O, S);
    for (const X in r) r[X].protectedKeys = {};
    return N;
  }
  return {
    animateChanges: m,
    setActive: y,
    setAnimateFunction: f,
    getState: () => r,
  };
}
function TS(e, t) {
  return typeof t == "string" ? t !== e : Array.isArray(t) ? !hx(t, e) : !1;
}
function sn(e = !1) {
  return {
    isActive: e,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {},
  };
}
function LS() {
  return {
    animate: sn(!0),
    whileInView: sn(),
    whileHover: sn(),
    whileTap: sn(),
    whileDrag: sn(),
    whileFocus: sn(),
    exit: sn(),
  };
}
class ES extends nn {
  constructor(t) {
    super(t), t.animationState || (t.animationState = PS(t));
  }
  updateAnimationControlsSubscription() {
    const { animate: t } = this.node.getProps();
    this.unmount(), wo(t) && (this.unmount = t.subscribe(this.node));
  }
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    const { animate: t } = this.node.getProps(),
      { animate: r } = this.node.prevProps || {};
    t !== r && this.updateAnimationControlsSubscription();
  }
  unmount() {}
}
let MS = 0;
class OS extends nn {
  constructor() {
    super(...arguments), (this.id = MS++);
  }
  update() {
    if (!this.node.presenceContext) return;
    const {
        isPresent: t,
        onExitComplete: r,
        custom: s,
      } = this.node.presenceContext,
      { isPresent: c } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || t === c) return;
    const f = this.node.animationState.setActive("exit", !t, {
      custom: s ?? this.node.getProps().custom,
    });
    r && !t && f.then(() => r(this.id));
  }
  mount() {
    const { register: t } = this.node.presenceContext || {};
    t && (this.unmount = t(this.id));
  }
  unmount() {}
}
const RS = { animation: { Feature: ES }, exit: { Feature: OS } },
  vf = (e, t) => Math.abs(e - t);
function zS(e, t) {
  const r = vf(e.x, t.x),
    s = vf(e.y, t.y);
  return Math.sqrt(r ** 2 + s ** 2);
}
class Wx {
  constructor(t, r, { transformPagePoint: s } = {}) {
    if (
      ((this.startEvent = null),
      (this.lastMoveEvent = null),
      (this.lastMoveEventInfo = null),
      (this.handlers = {}),
      (this.updatePoint = () => {
        if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
        const T = Sl(this.lastMoveEventInfo, this.history),
          O = this.startEvent !== null,
          z = zS(T.offset, { x: 0, y: 0 }) >= 3;
        if (!O && !z) return;
        const { point: N } = T,
          { timestamp: X } = nt;
        this.history.push({ ...N, timestamp: X });
        const { onStart: V, onMove: Y } = this.handlers;
        O ||
          (V && V(this.lastMoveEvent, T),
          (this.startEvent = this.lastMoveEvent)),
          Y && Y(this.lastMoveEvent, T);
      }),
      (this.handlePointerMove = (T, O) => {
        (this.lastMoveEvent = T),
          (this.lastMoveEventInfo = wl(O, this.transformPagePoint)),
          De.update(this.updatePoint, !0);
      }),
      (this.handlePointerUp = (T, O) => {
        if ((this.end(), !(this.lastMoveEvent && this.lastMoveEventInfo)))
          return;
        const { onEnd: z, onSessionEnd: N } = this.handlers,
          X = Sl(
            T.type === "pointercancel"
              ? this.lastMoveEventInfo
              : wl(O, this.transformPagePoint),
            this.history
          );
        this.startEvent && z && z(T, X), N && N(T, X);
      }),
      !sx(t))
    )
      return;
    (this.handlers = r), (this.transformPagePoint = s);
    const c = Co(t),
      f = wl(c, this.transformPagePoint),
      { point: m } = f,
      { timestamp: y } = nt;
    this.history = [{ ...m, timestamp: y }];
    const { onSessionStart: S } = r;
    S && S(t, Sl(f, this.history)),
      (this.removeListeners = Ui(
        vi(window, "pointermove", this.handlePointerMove),
        vi(window, "pointerup", this.handlePointerUp),
        vi(window, "pointercancel", this.handlePointerUp)
      ));
  }
  updateHandlers(t) {
    this.handlers = t;
  }
  end() {
    this.removeListeners && this.removeListeners(), Ci(this.updatePoint);
  }
}
function wl(e, t) {
  return t ? { point: t(e.point) } : e;
}
function yf(e, t) {
  return { x: e.x - t.x, y: e.y - t.y };
}
function Sl({ point: e }, t) {
  return {
    point: e,
    delta: yf(e, Gx(t)),
    offset: yf(e, IS(t)),
    velocity: DS(t, 0.1),
  };
}
function IS(e) {
  return e[0];
}
function Gx(e) {
  return e[e.length - 1];
}
function DS(e, t) {
  if (e.length < 2) return { x: 0, y: 0 };
  let r = e.length - 1,
    s = null;
  const c = Gx(e);
  for (; r >= 0 && ((s = e[r]), !(c.timestamp - s.timestamp > $i(t))); ) r--;
  if (!s) return { x: 0, y: 0 };
  const f = yi(c.timestamp - s.timestamp);
  if (f === 0) return { x: 0, y: 0 };
  const m = { x: (c.x - s.x) / f, y: (c.y - s.y) / f };
  return m.x === 1 / 0 && (m.x = 0), m.y === 1 / 0 && (m.y = 0), m;
}
function zt(e) {
  return e.max - e.min;
}
function Fc(e, t = 0, r = 0.01) {
  return Math.abs(e - t) <= r;
}
function bf(e, t, r, s = 0.5) {
  (e.origin = s),
    (e.originPoint = We(t.min, t.max, e.origin)),
    (e.scale = zt(r) / zt(t)),
    (Fc(e.scale, 1, 1e-4) || isNaN(e.scale)) && (e.scale = 1),
    (e.translate = We(r.min, r.max, e.origin) - e.originPoint),
    (Fc(e.translate) || isNaN(e.translate)) && (e.translate = 0);
}
function Vr(e, t, r, s) {
  bf(e.x, t.x, r.x, s ? s.originX : void 0),
    bf(e.y, t.y, r.y, s ? s.originY : void 0);
}
function wf(e, t, r) {
  (e.min = r.min + t.min), (e.max = e.min + zt(t));
}
function NS(e, t, r) {
  wf(e.x, t.x, r.x), wf(e.y, t.y, r.y);
}
function Sf(e, t, r) {
  (e.min = t.min - r.min), (e.max = e.min + zt(t));
}
function Yr(e, t, r) {
  Sf(e.x, t.x, r.x), Sf(e.y, t.y, r.y);
}
function FS(e, { min: t, max: r }, s) {
  return (
    t !== void 0 && e < t
      ? (e = s ? We(t, e, s.min) : Math.max(e, t))
      : r !== void 0 && e > r && (e = s ? We(r, e, s.max) : Math.min(e, r)),
    e
  );
}
function kf(e, t, r) {
  return {
    min: t !== void 0 ? e.min + t : void 0,
    max: r !== void 0 ? e.max + r - (e.max - e.min) : void 0,
  };
}
function _S(e, { top: t, left: r, bottom: s, right: c }) {
  return { x: kf(e.x, r, c), y: kf(e.y, t, s) };
}
function Cf(e, t) {
  let r = t.min - e.min,
    s = t.max - e.max;
  return t.max - t.min < e.max - e.min && ([r, s] = [s, r]), { min: r, max: s };
}
function HS(e, t) {
  return { x: Cf(e.x, t.x), y: Cf(e.y, t.y) };
}
function XS(e, t) {
  let r = 0.5;
  const s = zt(e),
    c = zt(t);
  return (
    c > s
      ? (r = ha(t.min, t.max - s, e.min))
      : s > c && (r = ha(e.min, e.max - c, t.min)),
    Ki(0, 1, r)
  );
}
function jS(e, t) {
  const r = {};
  return (
    t.min !== void 0 && (r.min = t.min - e.min),
    t.max !== void 0 && (r.max = t.max - e.min),
    r
  );
}
const _c = 0.35;
function BS(e = _c) {
  return (
    e === !1 ? (e = 0) : e === !0 && (e = _c),
    { x: Af(e, "left", "right"), y: Af(e, "top", "bottom") }
  );
}
function Af(e, t, r) {
  return { min: Pf(e, t), max: Pf(e, r) };
}
function Pf(e, t) {
  return typeof e == "number" ? e : e[t] || 0;
}
const Tf = () => ({ translate: 0, scale: 1, origin: 0, originPoint: 0 }),
  Gn = () => ({ x: Tf(), y: Tf() }),
  Lf = () => ({ min: 0, max: 0 }),
  Je = () => ({ x: Lf(), y: Lf() });
function ni(e) {
  return [e("x"), e("y")];
}
function Ux({ top: e, left: t, right: r, bottom: s }) {
  return { x: { min: t, max: r }, y: { min: e, max: s } };
}
function VS({ x: e, y: t }) {
  return { top: t.min, right: e.max, bottom: t.max, left: e.min };
}
function YS(e, t) {
  if (!t) return e;
  const r = t({ x: e.left, y: e.top }),
    s = t({ x: e.right, y: e.bottom });
  return { top: r.y, left: r.x, bottom: s.y, right: s.x };
}
function kl(e) {
  return e === void 0 || e === 1;
}
function Hc({ scale: e, scaleX: t, scaleY: r }) {
  return !kl(e) || !kl(t) || !kl(r);
}
function cn(e) {
  return Hc(e) || $x(e) || e.z || e.rotate || e.rotateX || e.rotateY;
}
function $x(e) {
  return Ef(e.x) || Ef(e.y);
}
function Ef(e) {
  return e && e !== "0%";
}
function js(e, t, r) {
  const s = e - r,
    c = t * s;
  return r + c;
}
function Mf(e, t, r, s, c) {
  return c !== void 0 && (e = js(e, c, s)), js(e, r, s) + t;
}
function Xc(e, t = 0, r = 1, s, c) {
  (e.min = Mf(e.min, t, r, s, c)), (e.max = Mf(e.max, t, r, s, c));
}
function qx(e, { x: t, y: r }) {
  Xc(e.x, t.translate, t.scale, t.originPoint),
    Xc(e.y, r.translate, r.scale, r.originPoint);
}
function WS(e, t, r, s = !1) {
  const c = r.length;
  if (!c) return;
  t.x = t.y = 1;
  let f, m;
  for (let y = 0; y < c; y++) {
    (f = r[y]), (m = f.projectionDelta);
    const S = f.instance;
    (S && S.style && S.style.display === "contents") ||
      (s &&
        f.options.layoutScroll &&
        f.scroll &&
        f !== f.root &&
        Un(e, { x: -f.scroll.offset.x, y: -f.scroll.offset.y }),
      m && ((t.x *= m.x.scale), (t.y *= m.y.scale), qx(e, m)),
      s && cn(f.latestValues) && Un(e, f.latestValues));
  }
  (t.x = Of(t.x)), (t.y = Of(t.y));
}
function Of(e) {
  return Number.isInteger(e) || e > 1.0000000000001 || e < 0.999999999999
    ? e
    : 1;
}
function Ri(e, t) {
  (e.min = e.min + t), (e.max = e.max + t);
}
function Rf(e, t, [r, s, c]) {
  const f = t[c] !== void 0 ? t[c] : 0.5,
    m = We(e.min, e.max, f);
  Xc(e, t[r], t[s], m, t.scale);
}
const GS = ["x", "scaleX", "originX"],
  US = ["y", "scaleY", "originY"];
function Un(e, t) {
  Rf(e.x, t, GS), Rf(e.y, t, US);
}
function Zx(e, t) {
  return Ux(YS(e.getBoundingClientRect(), t));
}
function $S(e, t, r) {
  const s = Zx(e, r),
    { scroll: c } = t;
  return c && (Ri(s.x, c.offset.x), Ri(s.y, c.offset.y)), s;
}
const qS = new WeakMap();
class ZS {
  constructor(t) {
    (this.openGlobalLock = null),
      (this.isDragging = !1),
      (this.currentDirection = null),
      (this.originPoint = { x: 0, y: 0 }),
      (this.constraints = !1),
      (this.hasMutatedConstraints = !1),
      (this.elastic = Je()),
      (this.visualElement = t);
  }
  start(t, { snapToCursor: r = !1 } = {}) {
    const { presenceContext: s } = this.visualElement;
    if (s && s.isPresent === !1) return;
    const c = (S) => {
        this.stopAnimation(), r && this.snapToCursor(Co(S, "page").point);
      },
      f = (S, T) => {
        const { drag: O, dragPropagation: z, onDragStart: N } = this.getProps();
        if (
          O &&
          !z &&
          (this.openGlobalLock && this.openGlobalLock(),
          (this.openGlobalLock = lx(O)),
          !this.openGlobalLock)
        )
          return;
        (this.isDragging = !0),
          (this.currentDirection = null),
          this.resolveConstraints(),
          this.visualElement.projection &&
            ((this.visualElement.projection.isAnimationBlocked = !0),
            (this.visualElement.projection.target = void 0)),
          ni((V) => {
            let Y = this.getAxisMotionValue(V).get() || 0;
            if (li.test(Y)) {
              const { projection: Q } = this.visualElement;
              if (Q && Q.layout) {
                const j = Q.layout.layoutBox[V];
                j && (Y = zt(j) * (parseFloat(Y) / 100));
              }
            }
            this.originPoint[V] = Y;
          }),
          N && De.update(() => N(S, T), !1, !0);
        const { animationState: X } = this.visualElement;
        X && X.setActive("whileDrag", !0);
      },
      m = (S, T) => {
        const {
          dragPropagation: O,
          dragDirectionLock: z,
          onDirectionLock: N,
          onDrag: X,
        } = this.getProps();
        if (!O && !this.openGlobalLock) return;
        const { offset: V } = T;
        if (z && this.currentDirection === null) {
          (this.currentDirection = KS(V)),
            this.currentDirection !== null && N && N(this.currentDirection);
          return;
        }
        this.updateAxis("x", T.point, V),
          this.updateAxis("y", T.point, V),
          this.visualElement.render(),
          X && X(S, T);
      },
      y = (S, T) => this.stop(S, T);
    this.panSession = new Wx(
      t,
      { onSessionStart: c, onStart: f, onMove: m, onSessionEnd: y },
      { transformPagePoint: this.visualElement.getTransformPagePoint() }
    );
  }
  stop(t, r) {
    const s = this.isDragging;
    if ((this.cancel(), !s)) return;
    const { velocity: c } = r;
    this.startAnimation(c);
    const { onDragEnd: f } = this.getProps();
    f && De.update(() => f(t, r));
  }
  cancel() {
    this.isDragging = !1;
    const { projection: t, animationState: r } = this.visualElement;
    t && (t.isAnimationBlocked = !1),
      this.panSession && this.panSession.end(),
      (this.panSession = void 0);
    const { dragPropagation: s } = this.getProps();
    !s &&
      this.openGlobalLock &&
      (this.openGlobalLock(), (this.openGlobalLock = null)),
      r && r.setActive("whileDrag", !1);
  }
  updateAxis(t, r, s) {
    const { drag: c } = this.getProps();
    if (!s || !Ua(t, c, this.currentDirection)) return;
    const f = this.getAxisMotionValue(t);
    let m = this.originPoint[t] + s[t];
    this.constraints &&
      this.constraints[t] &&
      (m = FS(m, this.constraints[t], this.elastic[t])),
      f.set(m);
  }
  resolveConstraints() {
    const { dragConstraints: t, dragElastic: r } = this.getProps(),
      { layout: s } = this.visualElement.projection || {},
      c = this.constraints;
    t && Yn(t)
      ? this.constraints || (this.constraints = this.resolveRefConstraints())
      : t && s
      ? (this.constraints = _S(s.layoutBox, t))
      : (this.constraints = !1),
      (this.elastic = BS(r)),
      c !== this.constraints &&
        s &&
        this.constraints &&
        !this.hasMutatedConstraints &&
        ni((f) => {
          this.getAxisMotionValue(f) &&
            (this.constraints[f] = jS(s.layoutBox[f], this.constraints[f]));
        });
  }
  resolveRefConstraints() {
    const { dragConstraints: t, onMeasureDragConstraints: r } = this.getProps();
    if (!t || !Yn(t)) return !1;
    const s = t.current,
      { projection: c } = this.visualElement;
    if (!c || !c.layout) return !1;
    const f = $S(s, c.root, this.visualElement.getTransformPagePoint());
    let m = HS(c.layout.layoutBox, f);
    if (r) {
      const y = r(VS(m));
      (this.hasMutatedConstraints = !!y), y && (m = Ux(y));
    }
    return m;
  }
  startAnimation(t) {
    const {
        drag: r,
        dragMomentum: s,
        dragElastic: c,
        dragTransition: f,
        dragSnapToOrigin: m,
        onDragTransitionEnd: y,
      } = this.getProps(),
      S = this.constraints || {},
      T = ni((O) => {
        if (!Ua(O, r, this.currentDirection)) return;
        let z = (S && S[O]) || {};
        m && (z = { min: 0, max: 0 });
        const N = c ? 200 : 1e6,
          X = c ? 40 : 1e7,
          V = {
            type: "inertia",
            velocity: s ? t[O] : 0,
            bounceStiffness: N,
            bounceDamping: X,
            timeConstant: 750,
            restDelta: 1,
            restSpeed: 10,
            ...f,
            ...z,
          };
        return this.startAxisValueAnimation(O, V);
      });
    return Promise.all(T).then(y);
  }
  startAxisValueAnimation(t, r) {
    const s = this.getAxisMotionValue(t);
    return s.start(mh(t, s, 0, r));
  }
  stopAnimation() {
    ni((t) => this.getAxisMotionValue(t).stop());
  }
  getAxisMotionValue(t) {
    const r = "_drag" + t.toUpperCase(),
      s = this.visualElement.getProps(),
      c = s[r];
    return (
      c ||
      this.visualElement.getValue(t, (s.initial ? s.initial[t] : void 0) || 0)
    );
  }
  snapToCursor(t) {
    ni((r) => {
      const { drag: s } = this.getProps();
      if (!Ua(r, s, this.currentDirection)) return;
      const { projection: c } = this.visualElement,
        f = this.getAxisMotionValue(r);
      if (c && c.layout) {
        const { min: m, max: y } = c.layout.layoutBox[r];
        f.set(t[r] - We(m, y, 0.5));
      }
    });
  }
  scalePositionWithinConstraints() {
    if (!this.visualElement.current) return;
    const { drag: t, dragConstraints: r } = this.getProps(),
      { projection: s } = this.visualElement;
    if (!Yn(r) || !s || !this.constraints) return;
    this.stopAnimation();
    const c = { x: 0, y: 0 };
    ni((m) => {
      const y = this.getAxisMotionValue(m);
      if (y) {
        const S = y.get();
        c[m] = XS({ min: S, max: S }, this.constraints[m]);
      }
    });
    const { transformTemplate: f } = this.visualElement.getProps();
    (this.visualElement.current.style.transform = f ? f({}, "") : "none"),
      s.root && s.root.updateScroll(),
      s.updateLayout(),
      this.resolveConstraints(),
      ni((m) => {
        if (!Ua(m, t, null)) return;
        const y = this.getAxisMotionValue(m),
          { min: S, max: T } = this.constraints[m];
        y.set(We(S, T, c[m]));
      });
  }
  addListeners() {
    if (!this.visualElement.current) return;
    qS.set(this.visualElement, this);
    const t = this.visualElement.current,
      r = vi(t, "pointerdown", (S) => {
        const { drag: T, dragListener: O = !0 } = this.getProps();
        T && O && this.start(S);
      }),
      s = () => {
        const { dragConstraints: S } = this.getProps();
        Yn(S) && (this.constraints = this.resolveRefConstraints());
      },
      { projection: c } = this.visualElement,
      f = c.addEventListener("measure", s);
    c && !c.layout && (c.root && c.root.updateScroll(), c.updateLayout()), s();
    const m = mi(window, "resize", () => this.scalePositionWithinConstraints()),
      y = c.addEventListener(
        "didUpdate",
        ({ delta: S, hasLayoutChanged: T }) => {
          this.isDragging &&
            T &&
            (ni((O) => {
              const z = this.getAxisMotionValue(O);
              z &&
                ((this.originPoint[O] += S[O].translate),
                z.set(z.get() + S[O].translate));
            }),
            this.visualElement.render());
        }
      );
    return () => {
      m(), r(), f(), y && y();
    };
  }
  getProps() {
    const t = this.visualElement.getProps(),
      {
        drag: r = !1,
        dragDirectionLock: s = !1,
        dragPropagation: c = !1,
        dragConstraints: f = !1,
        dragElastic: m = _c,
        dragMomentum: y = !0,
      } = t;
    return {
      ...t,
      drag: r,
      dragDirectionLock: s,
      dragPropagation: c,
      dragConstraints: f,
      dragElastic: m,
      dragMomentum: y,
    };
  }
}
function Ua(e, t, r) {
  return (t === !0 || t === e) && (r === null || r === e);
}
function KS(e, t = 10) {
  let r = null;
  return Math.abs(e.y) > t ? (r = "y") : Math.abs(e.x) > t && (r = "x"), r;
}
class QS extends nn {
  constructor(t) {
    super(t),
      (this.removeGroupControls = Ke),
      (this.removeListeners = Ke),
      (this.controls = new ZS(t));
  }
  mount() {
    const { dragControls: t } = this.node.getProps();
    t && (this.removeGroupControls = t.subscribe(this.controls)),
      (this.removeListeners = this.controls.addListeners() || Ke);
  }
  unmount() {
    this.removeGroupControls(), this.removeListeners();
  }
}
const zf = (e) => (t, r) => {
  e && De.update(() => e(t, r));
};
class JS extends nn {
  constructor() {
    super(...arguments), (this.removePointerDownListener = Ke);
  }
  onPointerDown(t) {
    this.session = new Wx(t, this.createPanHandlers(), {
      transformPagePoint: this.node.getTransformPagePoint(),
    });
  }
  createPanHandlers() {
    const {
      onPanSessionStart: t,
      onPanStart: r,
      onPan: s,
      onPanEnd: c,
    } = this.node.getProps();
    return {
      onSessionStart: zf(t),
      onStart: zf(r),
      onMove: s,
      onEnd: (f, m) => {
        delete this.session, c && De.update(() => c(f, m));
      },
    };
  }
  mount() {
    this.removePointerDownListener = vi(this.node.current, "pointerdown", (t) =>
      this.onPointerDown(t)
    );
  }
  update() {
    this.session && this.session.updateHandlers(this.createPanHandlers());
  }
  unmount() {
    this.removePointerDownListener(), this.session && this.session.end();
  }
}
function ek() {
  const e = re.useContext(vo);
  if (e === null) return [!0, null];
  const { isPresent: t, onExitComplete: r, register: s } = e,
    c = re.useId();
  return re.useEffect(() => s(c), []), !t && r ? [!1, () => r && r(c)] : [!0];
}
const cs = { hasAnimatedSinceResize: !0, hasEverUpdated: !1 };
function If(e, t) {
  return t.max === t.min ? 0 : (e / (t.max - t.min)) * 100;
}
const Ar = {
    correct: (e, t) => {
      if (!t.target) return e;
      if (typeof e == "string")
        if (ye.test(e)) e = parseFloat(e);
        else return e;
      const r = If(e, t.target.x),
        s = If(e, t.target.y);
      return `${r}% ${s}%`;
    },
  },
  tk = {
    correct: (e, { treeScale: t, projectionDelta: r }) => {
      const s = e,
        c = Qi.parse(e);
      if (c.length > 5) return s;
      const f = Qi.createTransformer(e),
        m = typeof c[0] != "number" ? 1 : 0,
        y = r.x.scale * t.x,
        S = r.y.scale * t.y;
      (c[0 + m] /= y), (c[1 + m] /= S);
      const T = We(y, S, 0.5);
      return (
        typeof c[2 + m] == "number" && (c[2 + m] /= T),
        typeof c[3 + m] == "number" && (c[3 + m] /= T),
        f(c)
      );
    },
  };
class ik extends ai.Component {
  componentDidMount() {
    const {
        visualElement: t,
        layoutGroup: r,
        switchLayoutGroup: s,
        layoutId: c,
      } = this.props,
      { projection: f } = t;
    uw(nk),
      f &&
        (r.group && r.group.add(f),
        s && s.register && c && s.register(f),
        f.root.didUpdate(),
        f.addEventListener("animationComplete", () => {
          this.safeToRemove();
        }),
        f.setOptions({
          ...f.options,
          onExitComplete: () => this.safeToRemove(),
        })),
      (cs.hasEverUpdated = !0);
  }
  getSnapshotBeforeUpdate(t) {
    const {
        layoutDependency: r,
        visualElement: s,
        drag: c,
        isPresent: f,
      } = this.props,
      m = s.projection;
    return (
      m &&
        ((m.isPresent = f),
        c || t.layoutDependency !== r || r === void 0
          ? m.willUpdate()
          : this.safeToRemove(),
        t.isPresent !== f &&
          (f
            ? m.promote()
            : m.relegate() ||
              De.postRender(() => {
                const y = m.getStack();
                (!y || !y.members.length) && this.safeToRemove();
              }))),
      null
    );
  }
  componentDidUpdate() {
    const { projection: t } = this.props.visualElement;
    t &&
      (t.root.didUpdate(),
      queueMicrotask(() => {
        !t.currentAnimation && t.isLead() && this.safeToRemove();
      }));
  }
  componentWillUnmount() {
    const {
        visualElement: t,
        layoutGroup: r,
        switchLayoutGroup: s,
      } = this.props,
      { projection: c } = t;
    c &&
      (c.scheduleCheckAfterUnmount(),
      r && r.group && r.group.remove(c),
      s && s.deregister && s.deregister(c));
  }
  safeToRemove() {
    const { safeToRemove: t } = this.props;
    t && t();
  }
  render() {
    return null;
  }
}
function Kx(e) {
  const [t, r] = ek(),
    s = re.useContext(th);
  return ai.createElement(ik, {
    ...e,
    layoutGroup: s,
    switchLayoutGroup: re.useContext(Gm),
    isPresent: t,
    safeToRemove: r,
  });
}
const nk = {
    borderRadius: {
      ...Ar,
      applyTo: [
        "borderTopLeftRadius",
        "borderTopRightRadius",
        "borderBottomLeftRadius",
        "borderBottomRightRadius",
      ],
    },
    borderTopLeftRadius: Ar,
    borderTopRightRadius: Ar,
    borderBottomLeftRadius: Ar,
    borderBottomRightRadius: Ar,
    boxShadow: tk,
  },
  Qx = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"],
  rk = Qx.length,
  Df = (e) => (typeof e == "string" ? parseFloat(e) : e),
  Nf = (e) => typeof e == "number" || ye.test(e);
function ak(e, t, r, s, c, f) {
  c
    ? ((e.opacity = We(0, r.opacity !== void 0 ? r.opacity : 1, sk(s))),
      (e.opacityExit = We(t.opacity !== void 0 ? t.opacity : 1, 0, ok(s))))
    : f &&
      (e.opacity = We(
        t.opacity !== void 0 ? t.opacity : 1,
        r.opacity !== void 0 ? r.opacity : 1,
        s
      ));
  for (let m = 0; m < rk; m++) {
    const y = `border${Qx[m]}Radius`;
    let S = Ff(t, y),
      T = Ff(r, y);
    if (S === void 0 && T === void 0) continue;
    S || (S = 0),
      T || (T = 0),
      S === 0 || T === 0 || Nf(S) === Nf(T)
        ? ((e[y] = Math.max(We(Df(S), Df(T), s), 0)),
          (li.test(T) || li.test(S)) && (e[y] += "%"))
        : (e[y] = T);
  }
  (t.rotate || r.rotate) && (e.rotate = We(t.rotate || 0, r.rotate || 0, s));
}
function Ff(e, t) {
  return e[t] !== void 0 ? e[t] : e.borderRadius;
}
const sk = Jx(0, 0.5, dh),
  ok = Jx(0.5, 0.95, Ke);
function Jx(e, t, r) {
  return (s) => (s < e ? 0 : s > t ? 1 : r(ha(e, t, s)));
}
function _f(e, t) {
  (e.min = t.min), (e.max = t.max);
}
function Nt(e, t) {
  _f(e.x, t.x), _f(e.y, t.y);
}
function Hf(e, t, r, s, c) {
  return (
    (e -= t), (e = js(e, 1 / r, s)), c !== void 0 && (e = js(e, 1 / c, s)), e
  );
}
function lk(e, t = 0, r = 1, s = 0.5, c, f = e, m = e) {
  if (
    (li.test(t) &&
      ((t = parseFloat(t)), (t = We(m.min, m.max, t / 100) - m.min)),
    typeof t != "number")
  )
    return;
  let y = We(f.min, f.max, s);
  e === f && (y -= t),
    (e.min = Hf(e.min, t, r, y, c)),
    (e.max = Hf(e.max, t, r, y, c));
}
function Xf(e, t, [r, s, c], f, m) {
  lk(e, t[r], t[s], t[c], t.scale, f, m);
}
const ck = ["x", "scaleX", "originX"],
  uk = ["y", "scaleY", "originY"];
function jf(e, t, r, s) {
  Xf(e.x, t, ck, r ? r.x : void 0, s ? s.x : void 0),
    Xf(e.y, t, uk, r ? r.y : void 0, s ? s.y : void 0);
}
function Bf(e) {
  return e.translate === 0 && e.scale === 1;
}
function ev(e) {
  return Bf(e.x) && Bf(e.y);
}
function hk(e, t) {
  return (
    e.x.min === t.x.min &&
    e.x.max === t.x.max &&
    e.y.min === t.y.min &&
    e.y.max === t.y.max
  );
}
function tv(e, t) {
  return (
    Math.round(e.x.min) === Math.round(t.x.min) &&
    Math.round(e.x.max) === Math.round(t.x.max) &&
    Math.round(e.y.min) === Math.round(t.y.min) &&
    Math.round(e.y.max) === Math.round(t.y.max)
  );
}
function Vf(e) {
  return zt(e.x) / zt(e.y);
}
class dk {
  constructor() {
    this.members = [];
  }
  add(t) {
    xh(this.members, t), t.scheduleRender();
  }
  remove(t) {
    if (
      (vh(this.members, t),
      t === this.prevLead && (this.prevLead = void 0),
      t === this.lead)
    ) {
      const r = this.members[this.members.length - 1];
      r && this.promote(r);
    }
  }
  relegate(t) {
    const r = this.members.findIndex((c) => t === c);
    if (r === 0) return !1;
    let s;
    for (let c = r; c >= 0; c--) {
      const f = this.members[c];
      if (f.isPresent !== !1) {
        s = f;
        break;
      }
    }
    return s ? (this.promote(s), !0) : !1;
  }
  promote(t, r) {
    const s = this.lead;
    if (t !== s && ((this.prevLead = s), (this.lead = t), t.show(), s)) {
      s.instance && s.scheduleRender(),
        t.scheduleRender(),
        (t.resumeFrom = s),
        r && (t.resumeFrom.preserveOpacity = !0),
        s.snapshot &&
          ((t.snapshot = s.snapshot),
          (t.snapshot.latestValues = s.animationValues || s.latestValues)),
        t.root && t.root.isUpdating && (t.isLayoutDirty = !0);
      const { crossfade: c } = t.options;
      c === !1 && s.hide();
    }
  }
  exitAnimationComplete() {
    this.members.forEach((t) => {
      const { options: r, resumingFrom: s } = t;
      r.onExitComplete && r.onExitComplete(),
        s && s.options.onExitComplete && s.options.onExitComplete();
    });
  }
  scheduleRender() {
    this.members.forEach((t) => {
      t.instance && t.scheduleRender(!1);
    });
  }
  removeLeadSnapshot() {
    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
  }
}
function Yf(e, t, r) {
  let s = "";
  const c = e.x.translate / t.x,
    f = e.y.translate / t.y;
  if (
    ((c || f) && (s = `translate3d(${c}px, ${f}px, 0) `),
    (t.x !== 1 || t.y !== 1) && (s += `scale(${1 / t.x}, ${1 / t.y}) `),
    r)
  ) {
    const { rotate: S, rotateX: T, rotateY: O } = r;
    S && (s += `rotate(${S}deg) `),
      T && (s += `rotateX(${T}deg) `),
      O && (s += `rotateY(${O}deg) `);
  }
  const m = e.x.scale * t.x,
    y = e.y.scale * t.y;
  return (m !== 1 || y !== 1) && (s += `scale(${m}, ${y})`), s || "none";
}
const fk = (e, t) => e.depth - t.depth;
class pk {
  constructor() {
    (this.children = []), (this.isDirty = !1);
  }
  add(t) {
    xh(this.children, t), (this.isDirty = !0);
  }
  remove(t) {
    vh(this.children, t), (this.isDirty = !0);
  }
  forEach(t) {
    this.isDirty && this.children.sort(fk),
      (this.isDirty = !1),
      this.children.forEach(t);
  }
}
function gk(e, t) {
  const r = performance.now(),
    s = ({ timestamp: c }) => {
      const f = c - r;
      f >= t && (Ci(s), e(f - t));
    };
  return De.read(s, !0), () => Ci(s);
}
function mk(e) {
  window.MotionDebug && window.MotionDebug.record(e);
}
function xk(e) {
  return e instanceof SVGElement && e.tagName !== "svg";
}
function vk(e, t, r) {
  const s = Tt(e) ? e : lr(e);
  return s.start(mh("", s, t, r)), s.animation;
}
const Wf = ["", "X", "Y", "Z"],
  Gf = 1e3;
let yk = 0;
const un = {
  type: "projectionFrame",
  totalNodes: 0,
  resolvedTargetDeltas: 0,
  recalculatedProjection: 0,
};
function iv({
  attachResizeListener: e,
  defaultParent: t,
  measureScroll: r,
  checkIsScrollRoot: s,
  resetTransform: c,
}) {
  return class {
    constructor(m = {}, y = t == null ? void 0 : t()) {
      (this.id = yk++),
        (this.animationId = 0),
        (this.children = new Set()),
        (this.options = {}),
        (this.isTreeAnimating = !1),
        (this.isAnimationBlocked = !1),
        (this.isLayoutDirty = !1),
        (this.isProjectionDirty = !1),
        (this.isSharedProjectionDirty = !1),
        (this.isTransformDirty = !1),
        (this.updateManuallyBlocked = !1),
        (this.updateBlockedByResize = !1),
        (this.isUpdating = !1),
        (this.isSVG = !1),
        (this.needsReset = !1),
        (this.shouldResetTransform = !1),
        (this.treeScale = { x: 1, y: 1 }),
        (this.eventHandlers = new Map()),
        (this.hasTreeAnimated = !1),
        (this.updateScheduled = !1),
        (this.checkUpdateFailed = () => {
          this.isUpdating && ((this.isUpdating = !1), this.clearAllSnapshots());
        }),
        (this.updateProjection = () => {
          (un.totalNodes =
            un.resolvedTargetDeltas =
            un.recalculatedProjection =
              0),
            this.nodes.forEach(Sk),
            this.nodes.forEach(Tk),
            this.nodes.forEach(Lk),
            this.nodes.forEach(kk),
            mk(un);
        }),
        (this.hasProjected = !1),
        (this.isVisible = !0),
        (this.animationProgress = 0),
        (this.sharedNodes = new Map()),
        (this.latestValues = m),
        (this.root = y ? y.root || y : this),
        (this.path = y ? [...y.path, y] : []),
        (this.parent = y),
        (this.depth = y ? y.depth + 1 : 0);
      for (let S = 0; S < this.path.length; S++)
        this.path[S].shouldResetTransform = !0;
      this.root === this && (this.nodes = new pk());
    }
    addEventListener(m, y) {
      return (
        this.eventHandlers.has(m) || this.eventHandlers.set(m, new yh()),
        this.eventHandlers.get(m).add(y)
      );
    }
    notifyListeners(m, ...y) {
      const S = this.eventHandlers.get(m);
      S && S.notify(...y);
    }
    hasListeners(m) {
      return this.eventHandlers.has(m);
    }
    mount(m, y = this.root.hasTreeAnimated) {
      if (this.instance) return;
      (this.isSVG = xk(m)), (this.instance = m);
      const { layoutId: S, layout: T, visualElement: O } = this.options;
      if (
        (O && !O.current && O.mount(m),
        this.root.nodes.add(this),
        this.parent && this.parent.children.add(this),
        y && (T || S) && (this.isLayoutDirty = !0),
        e)
      ) {
        let z;
        const N = () => (this.root.updateBlockedByResize = !1);
        e(m, () => {
          (this.root.updateBlockedByResize = !0),
            z && z(),
            (z = gk(N, 250)),
            cs.hasAnimatedSinceResize &&
              ((cs.hasAnimatedSinceResize = !1), this.nodes.forEach($f));
        });
      }
      S && this.root.registerSharedNode(S, this),
        this.options.animate !== !1 &&
          O &&
          (S || T) &&
          this.addEventListener(
            "didUpdate",
            ({
              delta: z,
              hasLayoutChanged: N,
              hasRelativeTargetChanged: X,
              layout: V,
            }) => {
              if (this.isTreeAnimationBlocked()) {
                (this.target = void 0), (this.relativeTarget = void 0);
                return;
              }
              const Y =
                  this.options.transition || O.getDefaultTransition() || zk,
                { onLayoutAnimationStart: Q, onLayoutAnimationComplete: j } =
                  O.getProps(),
                L = !this.targetLayout || !tv(this.targetLayout, V) || X,
                H = !N && X;
              if (
                this.options.layoutRoot ||
                (this.resumeFrom && this.resumeFrom.instance) ||
                H ||
                (N && (L || !this.currentAnimation))
              ) {
                this.resumeFrom &&
                  ((this.resumingFrom = this.resumeFrom),
                  (this.resumingFrom.resumingFrom = void 0)),
                  this.setAnimationOrigin(z, H);
                const U = { ...Hx(Y, "layout"), onPlay: Q, onComplete: j };
                (O.shouldReduceMotion || this.options.layoutRoot) &&
                  ((U.delay = 0), (U.type = !1)),
                  this.startAnimation(U);
              } else
                N || $f(this),
                  this.isLead() &&
                    this.options.onExitComplete &&
                    this.options.onExitComplete();
              this.targetLayout = V;
            }
          );
    }
    unmount() {
      this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);
      const m = this.getStack();
      m && m.remove(this),
        this.parent && this.parent.children.delete(this),
        (this.instance = void 0),
        Ci(this.updateProjection);
    }
    blockUpdate() {
      this.updateManuallyBlocked = !0;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = !1;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return (
        this.isAnimationBlocked ||
        (this.parent && this.parent.isTreeAnimationBlocked()) ||
        !1
      );
    }
    startUpdate() {
      this.isUpdateBlocked() ||
        ((this.isUpdating = !0),
        this.nodes && this.nodes.forEach(Ek),
        this.animationId++);
    }
    getTransformTemplate() {
      const { visualElement: m } = this.options;
      return m && m.getProps().transformTemplate;
    }
    willUpdate(m = !0) {
      if (((this.root.hasTreeAnimated = !0), this.root.isUpdateBlocked())) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (
        (!this.root.isUpdating && this.root.startUpdate(), this.isLayoutDirty)
      )
        return;
      this.isLayoutDirty = !0;
      for (let O = 0; O < this.path.length; O++) {
        const z = this.path[O];
        (z.shouldResetTransform = !0),
          z.updateScroll("snapshot"),
          z.options.layoutRoot && z.willUpdate(!1);
      }
      const { layoutId: y, layout: S } = this.options;
      if (y === void 0 && !S) return;
      const T = this.getTransformTemplate();
      (this.prevTransformTemplateValue = T ? T(this.latestValues, "") : void 0),
        this.updateSnapshot(),
        m && this.notifyListeners("willUpdate");
    }
    update() {
      if (((this.updateScheduled = !1), this.isUpdateBlocked())) {
        this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(Uf);
        return;
      }
      this.isUpdating || this.nodes.forEach(Ak),
        (this.isUpdating = !1),
        this.nodes.forEach(Pk),
        this.nodes.forEach(bk),
        this.nodes.forEach(wk),
        this.clearAllSnapshots();
      const y = performance.now();
      (nt.delta = Ki(0, 1e3 / 60, y - nt.timestamp)),
        (nt.timestamp = y),
        (nt.isProcessing = !0),
        fl.update.process(nt),
        fl.preRender.process(nt),
        fl.render.process(nt),
        (nt.isProcessing = !1);
    }
    didUpdate() {
      this.updateScheduled ||
        ((this.updateScheduled = !0), queueMicrotask(() => this.update()));
    }
    clearAllSnapshots() {
      this.nodes.forEach(Ck), this.sharedNodes.forEach(Mk);
    }
    scheduleUpdateProjection() {
      De.preRender(this.updateProjection, !1, !0);
    }
    scheduleCheckAfterUnmount() {
      De.postRender(() => {
        this.isLayoutDirty
          ? this.root.didUpdate()
          : this.root.checkUpdateFailed();
      });
    }
    updateSnapshot() {
      this.snapshot || !this.instance || (this.snapshot = this.measure());
    }
    updateLayout() {
      if (
        !this.instance ||
        (this.updateScroll(),
        !(this.options.alwaysMeasureLayout && this.isLead()) &&
          !this.isLayoutDirty)
      )
        return;
      if (this.resumeFrom && !this.resumeFrom.instance)
        for (let S = 0; S < this.path.length; S++) this.path[S].updateScroll();
      const m = this.layout;
      (this.layout = this.measure(!1)),
        (this.layoutCorrected = Je()),
        (this.isLayoutDirty = !1),
        (this.projectionDelta = void 0),
        this.notifyListeners("measure", this.layout.layoutBox);
      const { visualElement: y } = this.options;
      y &&
        y.notify(
          "LayoutMeasure",
          this.layout.layoutBox,
          m ? m.layoutBox : void 0
        );
    }
    updateScroll(m = "measure") {
      let y = !!(this.options.layoutScroll && this.instance);
      this.scroll &&
        this.scroll.animationId === this.root.animationId &&
        this.scroll.phase === m &&
        (y = !1),
        y &&
          (this.scroll = {
            animationId: this.root.animationId,
            phase: m,
            isRoot: s(this.instance),
            offset: r(this.instance),
          });
    }
    resetTransform() {
      if (!c) return;
      const m = this.isLayoutDirty || this.shouldResetTransform,
        y = this.projectionDelta && !ev(this.projectionDelta),
        S = this.getTransformTemplate(),
        T = S ? S(this.latestValues, "") : void 0,
        O = T !== this.prevTransformTemplateValue;
      m &&
        (y || cn(this.latestValues) || O) &&
        (c(this.instance, T),
        (this.shouldResetTransform = !1),
        this.scheduleRender());
    }
    measure(m = !0) {
      const y = this.measurePageBox();
      let S = this.removeElementScroll(y);
      return (
        m && (S = this.removeTransform(S)),
        Ik(S),
        {
          animationId: this.root.animationId,
          measuredBox: y,
          layoutBox: S,
          latestValues: {},
          source: this.id,
        }
      );
    }
    measurePageBox() {
      const { visualElement: m } = this.options;
      if (!m) return Je();
      const y = m.measureViewportBox(),
        { scroll: S } = this.root;
      return S && (Ri(y.x, S.offset.x), Ri(y.y, S.offset.y)), y;
    }
    removeElementScroll(m) {
      const y = Je();
      Nt(y, m);
      for (let S = 0; S < this.path.length; S++) {
        const T = this.path[S],
          { scroll: O, options: z } = T;
        if (T !== this.root && O && z.layoutScroll) {
          if (O.isRoot) {
            Nt(y, m);
            const { scroll: N } = this.root;
            N && (Ri(y.x, -N.offset.x), Ri(y.y, -N.offset.y));
          }
          Ri(y.x, O.offset.x), Ri(y.y, O.offset.y);
        }
      }
      return y;
    }
    applyTransform(m, y = !1) {
      const S = Je();
      Nt(S, m);
      for (let T = 0; T < this.path.length; T++) {
        const O = this.path[T];
        !y &&
          O.options.layoutScroll &&
          O.scroll &&
          O !== O.root &&
          Un(S, { x: -O.scroll.offset.x, y: -O.scroll.offset.y }),
          cn(O.latestValues) && Un(S, O.latestValues);
      }
      return cn(this.latestValues) && Un(S, this.latestValues), S;
    }
    removeTransform(m) {
      const y = Je();
      Nt(y, m);
      for (let S = 0; S < this.path.length; S++) {
        const T = this.path[S];
        if (!T.instance || !cn(T.latestValues)) continue;
        Hc(T.latestValues) && T.updateSnapshot();
        const O = Je(),
          z = T.measurePageBox();
        Nt(O, z),
          jf(y, T.latestValues, T.snapshot ? T.snapshot.layoutBox : void 0, O);
      }
      return cn(this.latestValues) && jf(y, this.latestValues), y;
    }
    setTargetDelta(m) {
      (this.targetDelta = m),
        this.root.scheduleUpdateProjection(),
        (this.isProjectionDirty = !0);
    }
    setOptions(m) {
      this.options = {
        ...this.options,
        ...m,
        crossfade: m.crossfade !== void 0 ? m.crossfade : !0,
      };
    }
    clearMeasurements() {
      (this.scroll = void 0),
        (this.layout = void 0),
        (this.snapshot = void 0),
        (this.prevTransformTemplateValue = void 0),
        (this.targetDelta = void 0),
        (this.target = void 0),
        (this.isLayoutDirty = !1);
    }
    forceRelativeParentToResolveTarget() {
      this.relativeParent &&
        this.relativeParent.resolvedRelativeTargetAt !== nt.timestamp &&
        this.relativeParent.resolveTargetDelta(!0);
    }
    resolveTargetDelta(m = !1) {
      var y;
      const S = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = S.isProjectionDirty),
        this.isTransformDirty || (this.isTransformDirty = S.isTransformDirty),
        this.isSharedProjectionDirty ||
          (this.isSharedProjectionDirty = S.isSharedProjectionDirty);
      const T = !!this.resumingFrom || this !== S;
      if (
        !(
          m ||
          (T && this.isSharedProjectionDirty) ||
          this.isProjectionDirty ||
          (!((y = this.parent) === null || y === void 0) &&
            y.isProjectionDirty) ||
          this.attemptToResolveRelativeTarget
        )
      )
        return;
      const { layout: z, layoutId: N } = this.options;
      if (!(!this.layout || !(z || N))) {
        if (
          ((this.resolvedRelativeTargetAt = nt.timestamp),
          !this.targetDelta && !this.relativeTarget)
        ) {
          const X = this.getClosestProjectingParent();
          X && X.layout && this.animationProgress !== 1
            ? ((this.relativeParent = X),
              this.forceRelativeParentToResolveTarget(),
              (this.relativeTarget = Je()),
              (this.relativeTargetOrigin = Je()),
              Yr(
                this.relativeTargetOrigin,
                this.layout.layoutBox,
                X.layout.layoutBox
              ),
              Nt(this.relativeTarget, this.relativeTargetOrigin))
            : (this.relativeParent = this.relativeTarget = void 0);
        }
        if (!(!this.relativeTarget && !this.targetDelta)) {
          if (
            (this.target ||
              ((this.target = Je()), (this.targetWithTransforms = Je())),
            this.relativeTarget &&
            this.relativeTargetOrigin &&
            this.relativeParent &&
            this.relativeParent.target
              ? (this.forceRelativeParentToResolveTarget(),
                NS(
                  this.target,
                  this.relativeTarget,
                  this.relativeParent.target
                ))
              : this.targetDelta
              ? (this.resumingFrom
                  ? (this.target = this.applyTransform(this.layout.layoutBox))
                  : Nt(this.target, this.layout.layoutBox),
                qx(this.target, this.targetDelta))
              : Nt(this.target, this.layout.layoutBox),
            this.attemptToResolveRelativeTarget)
          ) {
            this.attemptToResolveRelativeTarget = !1;
            const X = this.getClosestProjectingParent();
            X &&
            !!X.resumingFrom == !!this.resumingFrom &&
            !X.options.layoutScroll &&
            X.target &&
            this.animationProgress !== 1
              ? ((this.relativeParent = X),
                this.forceRelativeParentToResolveTarget(),
                (this.relativeTarget = Je()),
                (this.relativeTargetOrigin = Je()),
                Yr(this.relativeTargetOrigin, this.target, X.target),
                Nt(this.relativeTarget, this.relativeTargetOrigin))
              : (this.relativeParent = this.relativeTarget = void 0);
          }
          un.resolvedTargetDeltas++;
        }
      }
    }
    getClosestProjectingParent() {
      if (
        !(
          !this.parent ||
          Hc(this.parent.latestValues) ||
          $x(this.parent.latestValues)
        )
      )
        return this.parent.isProjecting()
          ? this.parent
          : this.parent.getClosestProjectingParent();
    }
    isProjecting() {
      return !!(
        (this.relativeTarget || this.targetDelta || this.options.layoutRoot) &&
        this.layout
      );
    }
    calcProjection() {
      var m;
      const y = this.getLead(),
        S = !!this.resumingFrom || this !== y;
      let T = !0;
      if (
        ((this.isProjectionDirty ||
          (!((m = this.parent) === null || m === void 0) &&
            m.isProjectionDirty)) &&
          (T = !1),
        S &&
          (this.isSharedProjectionDirty || this.isTransformDirty) &&
          (T = !1),
        this.resolvedRelativeTargetAt === nt.timestamp && (T = !1),
        T)
      )
        return;
      const { layout: O, layoutId: z } = this.options;
      if (
        ((this.isTreeAnimating = !!(
          (this.parent && this.parent.isTreeAnimating) ||
          this.currentAnimation ||
          this.pendingAnimation
        )),
        this.isTreeAnimating ||
          (this.targetDelta = this.relativeTarget = void 0),
        !this.layout || !(O || z))
      )
        return;
      Nt(this.layoutCorrected, this.layout.layoutBox);
      const N = this.treeScale.x,
        X = this.treeScale.y;
      WS(this.layoutCorrected, this.treeScale, this.path, S),
        y.layout &&
          !y.target &&
          (this.treeScale.x !== 1 || this.treeScale.y !== 1) &&
          (y.target = y.layout.layoutBox);
      const { target: V } = y;
      if (!V) {
        this.projectionTransform &&
          ((this.projectionDelta = Gn()),
          (this.projectionTransform = "none"),
          this.scheduleRender());
        return;
      }
      this.projectionDelta ||
        ((this.projectionDelta = Gn()),
        (this.projectionDeltaWithTransform = Gn()));
      const Y = this.projectionTransform;
      Vr(this.projectionDelta, this.layoutCorrected, V, this.latestValues),
        (this.projectionTransform = Yf(this.projectionDelta, this.treeScale)),
        (this.projectionTransform !== Y ||
          this.treeScale.x !== N ||
          this.treeScale.y !== X) &&
          ((this.hasProjected = !0),
          this.scheduleRender(),
          this.notifyListeners("projectionUpdate", V)),
        un.recalculatedProjection++;
    }
    hide() {
      this.isVisible = !1;
    }
    show() {
      this.isVisible = !0;
    }
    scheduleRender(m = !0) {
      if ((this.options.scheduleRender && this.options.scheduleRender(), m)) {
        const y = this.getStack();
        y && y.scheduleRender();
      }
      this.resumingFrom &&
        !this.resumingFrom.instance &&
        (this.resumingFrom = void 0);
    }
    setAnimationOrigin(m, y = !1) {
      const S = this.snapshot,
        T = S ? S.latestValues : {},
        O = { ...this.latestValues },
        z = Gn();
      (!this.relativeParent || !this.relativeParent.options.layoutRoot) &&
        (this.relativeTarget = this.relativeTargetOrigin = void 0),
        (this.attemptToResolveRelativeTarget = !y);
      const N = Je(),
        X = S ? S.source : void 0,
        V = this.layout ? this.layout.source : void 0,
        Y = X !== V,
        Q = this.getStack(),
        j = !Q || Q.members.length <= 1,
        L = !!(Y && !j && this.options.crossfade === !0 && !this.path.some(Rk));
      this.animationProgress = 0;
      let H;
      (this.mixTargetDelta = (U) => {
        const B = U / 1e3;
        qf(z.x, m.x, B),
          qf(z.y, m.y, B),
          this.setTargetDelta(z),
          this.relativeTarget &&
            this.relativeTargetOrigin &&
            this.layout &&
            this.relativeParent &&
            this.relativeParent.layout &&
            (Yr(N, this.layout.layoutBox, this.relativeParent.layout.layoutBox),
            Ok(this.relativeTarget, this.relativeTargetOrigin, N, B),
            H && hk(this.relativeTarget, H) && (this.isProjectionDirty = !1),
            H || (H = Je()),
            Nt(H, this.relativeTarget)),
          Y &&
            ((this.animationValues = O), ak(O, T, this.latestValues, B, L, j)),
          this.root.scheduleUpdateProjection(),
          this.scheduleRender(),
          (this.animationProgress = B);
      }),
        this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(m) {
      this.notifyListeners("animationStart"),
        this.currentAnimation && this.currentAnimation.stop(),
        this.resumingFrom &&
          this.resumingFrom.currentAnimation &&
          this.resumingFrom.currentAnimation.stop(),
        this.pendingAnimation &&
          (Ci(this.pendingAnimation), (this.pendingAnimation = void 0)),
        (this.pendingAnimation = De.update(() => {
          (cs.hasAnimatedSinceResize = !0),
            (this.currentAnimation = vk(0, Gf, {
              ...m,
              onUpdate: (y) => {
                this.mixTargetDelta(y), m.onUpdate && m.onUpdate(y);
              },
              onComplete: () => {
                m.onComplete && m.onComplete(), this.completeAnimation();
              },
            })),
            this.resumingFrom &&
              (this.resumingFrom.currentAnimation = this.currentAnimation),
            (this.pendingAnimation = void 0);
        }));
    }
    completeAnimation() {
      this.resumingFrom &&
        ((this.resumingFrom.currentAnimation = void 0),
        (this.resumingFrom.preserveOpacity = void 0));
      const m = this.getStack();
      m && m.exitAnimationComplete(),
        (this.resumingFrom =
          this.currentAnimation =
          this.animationValues =
            void 0),
        this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      this.currentAnimation &&
        (this.mixTargetDelta && this.mixTargetDelta(Gf),
        this.currentAnimation.stop()),
        this.completeAnimation();
    }
    applyTransformsToTarget() {
      const m = this.getLead();
      let {
        targetWithTransforms: y,
        target: S,
        layout: T,
        latestValues: O,
      } = m;
      if (!(!y || !S || !T)) {
        if (
          this !== m &&
          this.layout &&
          T &&
          nv(this.options.animationType, this.layout.layoutBox, T.layoutBox)
        ) {
          S = this.target || Je();
          const z = zt(this.layout.layoutBox.x);
          (S.x.min = m.target.x.min), (S.x.max = S.x.min + z);
          const N = zt(this.layout.layoutBox.y);
          (S.y.min = m.target.y.min), (S.y.max = S.y.min + N);
        }
        Nt(y, S),
          Un(y, O),
          Vr(this.projectionDeltaWithTransform, this.layoutCorrected, y, O);
      }
    }
    registerSharedNode(m, y) {
      this.sharedNodes.has(m) || this.sharedNodes.set(m, new dk()),
        this.sharedNodes.get(m).add(y);
      const T = y.options.initialPromotionConfig;
      y.promote({
        transition: T ? T.transition : void 0,
        preserveFollowOpacity:
          T && T.shouldPreserveFollowOpacity
            ? T.shouldPreserveFollowOpacity(y)
            : void 0,
      });
    }
    isLead() {
      const m = this.getStack();
      return m ? m.lead === this : !0;
    }
    getLead() {
      var m;
      const { layoutId: y } = this.options;
      return y
        ? ((m = this.getStack()) === null || m === void 0 ? void 0 : m.lead) ||
            this
        : this;
    }
    getPrevLead() {
      var m;
      const { layoutId: y } = this.options;
      return y
        ? (m = this.getStack()) === null || m === void 0
          ? void 0
          : m.prevLead
        : void 0;
    }
    getStack() {
      const { layoutId: m } = this.options;
      if (m) return this.root.sharedNodes.get(m);
    }
    promote({ needsReset: m, transition: y, preserveFollowOpacity: S } = {}) {
      const T = this.getStack();
      T && T.promote(this, S),
        m && ((this.projectionDelta = void 0), (this.needsReset = !0)),
        y && this.setOptions({ transition: y });
    }
    relegate() {
      const m = this.getStack();
      return m ? m.relegate(this) : !1;
    }
    resetRotation() {
      const { visualElement: m } = this.options;
      if (!m) return;
      let y = !1;
      const { latestValues: S } = m;
      if (((S.rotate || S.rotateX || S.rotateY || S.rotateZ) && (y = !0), !y))
        return;
      const T = {};
      for (let O = 0; O < Wf.length; O++) {
        const z = "rotate" + Wf[O];
        S[z] && ((T[z] = S[z]), m.setStaticValue(z, 0));
      }
      m.render();
      for (const O in T) m.setStaticValue(O, T[O]);
      m.scheduleRender();
    }
    getProjectionStyles(m = {}) {
      var y, S;
      const T = {};
      if (!this.instance || this.isSVG) return T;
      if (this.isVisible) T.visibility = "";
      else return { visibility: "hidden" };
      const O = this.getTransformTemplate();
      if (this.needsReset)
        return (
          (this.needsReset = !1),
          (T.opacity = ""),
          (T.pointerEvents = ls(m.pointerEvents) || ""),
          (T.transform = O ? O(this.latestValues, "") : "none"),
          T
        );
      const z = this.getLead();
      if (!this.projectionDelta || !this.layout || !z.target) {
        const Y = {};
        return (
          this.options.layoutId &&
            ((Y.opacity =
              this.latestValues.opacity !== void 0
                ? this.latestValues.opacity
                : 1),
            (Y.pointerEvents = ls(m.pointerEvents) || "")),
          this.hasProjected &&
            !cn(this.latestValues) &&
            ((Y.transform = O ? O({}, "") : "none"), (this.hasProjected = !1)),
          Y
        );
      }
      const N = z.animationValues || z.latestValues;
      this.applyTransformsToTarget(),
        (T.transform = Yf(
          this.projectionDeltaWithTransform,
          this.treeScale,
          N
        )),
        O && (T.transform = O(N, T.transform));
      const { x: X, y: V } = this.projectionDelta;
      (T.transformOrigin = `${X.origin * 100}% ${V.origin * 100}% 0`),
        z.animationValues
          ? (T.opacity =
              z === this
                ? (S =
                    (y = N.opacity) !== null && y !== void 0
                      ? y
                      : this.latestValues.opacity) !== null && S !== void 0
                  ? S
                  : 1
                : this.preserveOpacity
                ? this.latestValues.opacity
                : N.opacityExit)
          : (T.opacity =
              z === this
                ? N.opacity !== void 0
                  ? N.opacity
                  : ""
                : N.opacityExit !== void 0
                ? N.opacityExit
                : 0);
      for (const Y in Is) {
        if (N[Y] === void 0) continue;
        const { correct: Q, applyTo: j } = Is[Y],
          L = T.transform === "none" ? N[Y] : Q(N[Y], z);
        if (j) {
          const H = j.length;
          for (let U = 0; U < H; U++) T[j[U]] = L;
        } else T[Y] = L;
      }
      return (
        this.options.layoutId &&
          (T.pointerEvents = z === this ? ls(m.pointerEvents) || "" : "none"),
        T
      );
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    resetTree() {
      this.root.nodes.forEach((m) => {
        var y;
        return (y = m.currentAnimation) === null || y === void 0
          ? void 0
          : y.stop();
      }),
        this.root.nodes.forEach(Uf),
        this.root.sharedNodes.clear();
    }
  };
}
function bk(e) {
  e.updateLayout();
}
function wk(e) {
  var t;
  const r =
    ((t = e.resumeFrom) === null || t === void 0 ? void 0 : t.snapshot) ||
    e.snapshot;
  if (e.isLead() && e.layout && r && e.hasListeners("didUpdate")) {
    const { layoutBox: s, measuredBox: c } = e.layout,
      { animationType: f } = e.options,
      m = r.source !== e.layout.source;
    f === "size"
      ? ni((z) => {
          const N = m ? r.measuredBox[z] : r.layoutBox[z],
            X = zt(N);
          (N.min = s[z].min), (N.max = N.min + X);
        })
      : nv(f, r.layoutBox, s) &&
        ni((z) => {
          const N = m ? r.measuredBox[z] : r.layoutBox[z],
            X = zt(s[z]);
          (N.max = N.min + X),
            e.relativeTarget &&
              !e.currentAnimation &&
              ((e.isProjectionDirty = !0),
              (e.relativeTarget[z].max = e.relativeTarget[z].min + X));
        });
    const y = Gn();
    Vr(y, s, r.layoutBox);
    const S = Gn();
    m ? Vr(S, e.applyTransform(c, !0), r.measuredBox) : Vr(S, s, r.layoutBox);
    const T = !ev(y);
    let O = !1;
    if (!e.resumeFrom) {
      const z = e.getClosestProjectingParent();
      if (z && !z.resumeFrom) {
        const { snapshot: N, layout: X } = z;
        if (N && X) {
          const V = Je();
          Yr(V, r.layoutBox, N.layoutBox);
          const Y = Je();
          Yr(Y, s, X.layoutBox),
            tv(V, Y) || (O = !0),
            z.options.layoutRoot &&
              ((e.relativeTarget = Y),
              (e.relativeTargetOrigin = V),
              (e.relativeParent = z));
        }
      }
    }
    e.notifyListeners("didUpdate", {
      layout: s,
      snapshot: r,
      delta: S,
      layoutDelta: y,
      hasLayoutChanged: T,
      hasRelativeTargetChanged: O,
    });
  } else if (e.isLead()) {
    const { onExitComplete: s } = e.options;
    s && s();
  }
  e.options.transition = void 0;
}
function Sk(e) {
  un.totalNodes++,
    e.parent &&
      (e.isProjecting() || (e.isProjectionDirty = e.parent.isProjectionDirty),
      e.isSharedProjectionDirty ||
        (e.isSharedProjectionDirty = !!(
          e.isProjectionDirty ||
          e.parent.isProjectionDirty ||
          e.parent.isSharedProjectionDirty
        )),
      e.isTransformDirty || (e.isTransformDirty = e.parent.isTransformDirty));
}
function kk(e) {
  e.isProjectionDirty = e.isSharedProjectionDirty = e.isTransformDirty = !1;
}
function Ck(e) {
  e.clearSnapshot();
}
function Uf(e) {
  e.clearMeasurements();
}
function Ak(e) {
  e.isLayoutDirty = !1;
}
function Pk(e) {
  const { visualElement: t } = e.options;
  t && t.getProps().onBeforeLayoutMeasure && t.notify("BeforeLayoutMeasure"),
    e.resetTransform();
}
function $f(e) {
  e.finishAnimation(),
    (e.targetDelta = e.relativeTarget = e.target = void 0),
    (e.isProjectionDirty = !0);
}
function Tk(e) {
  e.resolveTargetDelta();
}
function Lk(e) {
  e.calcProjection();
}
function Ek(e) {
  e.resetRotation();
}
function Mk(e) {
  e.removeLeadSnapshot();
}
function qf(e, t, r) {
  (e.translate = We(t.translate, 0, r)),
    (e.scale = We(t.scale, 1, r)),
    (e.origin = t.origin),
    (e.originPoint = t.originPoint);
}
function Zf(e, t, r, s) {
  (e.min = We(t.min, r.min, s)), (e.max = We(t.max, r.max, s));
}
function Ok(e, t, r, s) {
  Zf(e.x, t.x, r.x, s), Zf(e.y, t.y, r.y, s);
}
function Rk(e) {
  return e.animationValues && e.animationValues.opacityExit !== void 0;
}
const zk = { duration: 0.45, ease: [0.4, 0, 0.1, 1] },
  Kf = (e) =>
    typeof navigator < "u" && navigator.userAgent.toLowerCase().includes(e),
  Qf = Kf("applewebkit/") && !Kf("chrome/") ? Math.round : Ke;
function Jf(e) {
  (e.min = Qf(e.min)), (e.max = Qf(e.max));
}
function Ik(e) {
  Jf(e.x), Jf(e.y);
}
function nv(e, t, r) {
  return (
    e === "position" || (e === "preserve-aspect" && !Fc(Vf(t), Vf(r), 0.2))
  );
}
const Dk = iv({
    attachResizeListener: (e, t) => mi(e, "resize", t),
    measureScroll: () => ({
      x: document.documentElement.scrollLeft || document.body.scrollLeft,
      y: document.documentElement.scrollTop || document.body.scrollTop,
    }),
    checkIsScrollRoot: () => !0,
  }),
  Cl = { current: void 0 },
  rv = iv({
    measureScroll: (e) => ({ x: e.scrollLeft, y: e.scrollTop }),
    defaultParent: () => {
      if (!Cl.current) {
        const e = new Dk({});
        e.mount(window), e.setOptions({ layoutScroll: !0 }), (Cl.current = e);
      }
      return Cl.current;
    },
    resetTransform: (e, t) => {
      e.style.transform = t !== void 0 ? t : "none";
    },
    checkIsScrollRoot: (e) => window.getComputedStyle(e).position === "fixed",
  }),
  Nk = {
    pan: { Feature: JS },
    drag: { Feature: QS, ProjectionNode: rv, MeasureLayout: Kx },
  },
  Fk = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function _k(e) {
  const t = Fk.exec(e);
  if (!t) return [,];
  const [, r, s] = t;
  return [r, s];
}
function jc(e, t, r = 1) {
  const [s, c] = _k(e);
  if (!s) return;
  const f = window.getComputedStyle(t).getPropertyValue(s);
  if (f) {
    const m = f.trim();
    return Xx(m) ? parseFloat(m) : m;
  } else return Ec(c) ? jc(c, t, r + 1) : c;
}
function Hk(e, { ...t }, r) {
  const s = e.current;
  if (!(s instanceof Element)) return { target: t, transitionEnd: r };
  r && (r = { ...r }),
    e.values.forEach((c) => {
      const f = c.get();
      if (!Ec(f)) return;
      const m = jc(f, s);
      m && c.set(m);
    });
  for (const c in t) {
    const f = t[c];
    if (!Ec(f)) continue;
    const m = jc(f, s);
    m && ((t[c] = m), r || (r = {}), r[c] === void 0 && (r[c] = f));
  }
  return { target: t, transitionEnd: r };
}
const Xk = new Set([
    "width",
    "height",
    "top",
    "left",
    "right",
    "bottom",
    "x",
    "y",
    "translateX",
    "translateY",
  ]),
  av = (e) => Xk.has(e),
  jk = (e) => Object.keys(e).some(av),
  ep = (e) => e === Tn || e === ye,
  tp = (e, t) => parseFloat(e.split(", ")[t]),
  ip =
    (e, t) =>
    (r, { transform: s }) => {
      if (s === "none" || !s) return 0;
      const c = s.match(/^matrix3d\((.+)\)$/);
      if (c) return tp(c[1], t);
      {
        const f = s.match(/^matrix\((.+)\)$/);
        return f ? tp(f[1], e) : 0;
      }
    },
  Bk = new Set(["x", "y", "z"]),
  Vk = ya.filter((e) => !Bk.has(e));
function Yk(e) {
  const t = [];
  return (
    Vk.forEach((r) => {
      const s = e.getValue(r);
      s !== void 0 &&
        (t.push([r, s.get()]), s.set(r.startsWith("scale") ? 1 : 0));
    }),
    t.length && e.render(),
    t
  );
}
const cr = {
  width: ({ x: e }, { paddingLeft: t = "0", paddingRight: r = "0" }) =>
    e.max - e.min - parseFloat(t) - parseFloat(r),
  height: ({ y: e }, { paddingTop: t = "0", paddingBottom: r = "0" }) =>
    e.max - e.min - parseFloat(t) - parseFloat(r),
  top: (e, { top: t }) => parseFloat(t),
  left: (e, { left: t }) => parseFloat(t),
  bottom: ({ y: e }, { top: t }) => parseFloat(t) + (e.max - e.min),
  right: ({ x: e }, { left: t }) => parseFloat(t) + (e.max - e.min),
  x: ip(4, 13),
  y: ip(5, 14),
};
cr.translateX = cr.x;
cr.translateY = cr.y;
const Wk = (e, t, r) => {
    const s = t.measureViewportBox(),
      c = t.current,
      f = getComputedStyle(c),
      { display: m } = f,
      y = {};
    m === "none" && t.setStaticValue("display", e.display || "block"),
      r.forEach((T) => {
        y[T] = cr[T](s, f);
      }),
      t.render();
    const S = t.measureViewportBox();
    return (
      r.forEach((T) => {
        const O = t.getValue(T);
        O && O.jump(y[T]), (e[T] = cr[T](S, f));
      }),
      e
    );
  },
  Gk = (e, t, r = {}, s = {}) => {
    (t = { ...t }), (s = { ...s });
    const c = Object.keys(t).filter(av);
    let f = [],
      m = !1;
    const y = [];
    if (
      (c.forEach((S) => {
        const T = e.getValue(S);
        if (!e.hasValue(S)) return;
        let O = r[S],
          z = Cr(O);
        const N = t[S];
        let X;
        if (Ns(N)) {
          const V = N.length,
            Y = N[0] === null ? 1 : 0;
          (O = N[Y]), (z = Cr(O));
          for (let Q = Y; Q < V && N[Q] !== null; Q++)
            X ? hh(Cr(N[Q]) === X) : (X = Cr(N[Q]));
        } else X = Cr(N);
        if (z !== X)
          if (ep(z) && ep(X)) {
            const V = T.get();
            typeof V == "string" && T.set(parseFloat(V)),
              typeof N == "string"
                ? (t[S] = parseFloat(N))
                : Array.isArray(N) && X === ye && (t[S] = N.map(parseFloat));
          } else
            z != null &&
            z.transform &&
            X != null &&
            X.transform &&
            (O === 0 || N === 0)
              ? O === 0
                ? T.set(X.transform(O))
                : (t[S] = z.transform(N))
              : (m || ((f = Yk(e)), (m = !0)),
                y.push(S),
                (s[S] = s[S] !== void 0 ? s[S] : t[S]),
                T.jump(N));
      }),
      y.length)
    ) {
      const S = y.indexOf("height") >= 0 ? window.pageYOffset : null,
        T = Wk(t, e, y);
      return (
        f.length &&
          f.forEach(([O, z]) => {
            e.getValue(O).set(z);
          }),
        e.render(),
        yo && S !== null && window.scrollTo({ top: S }),
        { target: T, transitionEnd: s }
      );
    } else return { target: t, transitionEnd: s };
  };
function Uk(e, t, r, s) {
  return jk(t) ? Gk(e, t, r, s) : { target: t, transitionEnd: s };
}
const $k = (e, t, r, s) => {
    const c = Hk(e, t, s);
    return (t = c.target), (s = c.transitionEnd), Uk(e, t, r, s);
  },
  Bc = { current: null },
  sv = { current: !1 };
function qk() {
  if (((sv.current = !0), !!yo))
    if (window.matchMedia) {
      const e = window.matchMedia("(prefers-reduced-motion)"),
        t = () => (Bc.current = e.matches);
      e.addListener(t), t();
    } else Bc.current = !1;
}
function Zk(e, t, r) {
  const { willChange: s } = t;
  for (const c in t) {
    const f = t[c],
      m = r[c];
    if (Tt(f)) e.addValue(c, f), Xs(s) && s.add(c);
    else if (Tt(m)) e.addValue(c, lr(f, { owner: e })), Xs(s) && s.remove(c);
    else if (m !== f)
      if (e.hasValue(c)) {
        const y = e.getValue(c);
        !y.hasAnimated && y.set(f);
      } else {
        const y = e.getStaticValue(c);
        e.addValue(c, lr(y !== void 0 ? y : f, { owner: e }));
      }
  }
  for (const c in r) t[c] === void 0 && e.removeValue(c);
  return t;
}
const np = new WeakMap(),
  ov = Object.keys(ua),
  Kk = ov.length,
  rp = [
    "AnimationStart",
    "AnimationComplete",
    "Update",
    "BeforeLayoutMeasure",
    "LayoutMeasure",
    "LayoutAnimationStart",
    "LayoutAnimationComplete",
  ],
  Qk = eh.length;
class Jk {
  constructor(
    {
      parent: t,
      props: r,
      presenceContext: s,
      reducedMotionConfig: c,
      visualState: f,
    },
    m = {}
  ) {
    (this.current = null),
      (this.children = new Set()),
      (this.isVariantNode = !1),
      (this.isControllingVariants = !1),
      (this.shouldReduceMotion = null),
      (this.values = new Map()),
      (this.features = {}),
      (this.valueSubscriptions = new Map()),
      (this.prevMotionValues = {}),
      (this.events = {}),
      (this.propEventSubscriptions = {}),
      (this.notifyUpdate = () => this.notify("Update", this.latestValues)),
      (this.render = () => {
        this.current &&
          (this.triggerBuild(),
          this.renderInstance(
            this.current,
            this.renderState,
            this.props.style,
            this.projection
          ));
      }),
      (this.scheduleRender = () => De.render(this.render, !1, !0));
    const { latestValues: y, renderState: S } = f;
    (this.latestValues = y),
      (this.baseTarget = { ...y }),
      (this.initialValues = r.initial ? { ...y } : {}),
      (this.renderState = S),
      (this.parent = t),
      (this.props = r),
      (this.presenceContext = s),
      (this.depth = t ? t.depth + 1 : 0),
      (this.reducedMotionConfig = c),
      (this.options = m),
      (this.isControllingVariants = So(r)),
      (this.isVariantNode = Wm(r)),
      this.isVariantNode && (this.variantChildren = new Set()),
      (this.manuallyAnimateOnMount = !!(t && t.current));
    const { willChange: T, ...O } = this.scrapeMotionValuesFromProps(r, {});
    for (const z in O) {
      const N = O[z];
      y[z] !== void 0 && Tt(N) && (N.set(y[z], !1), Xs(T) && T.add(z));
    }
  }
  scrapeMotionValuesFromProps(t, r) {
    return {};
  }
  mount(t) {
    (this.current = t),
      np.set(t, this),
      this.projection && !this.projection.instance && this.projection.mount(t),
      this.parent &&
        this.isVariantNode &&
        !this.isControllingVariants &&
        (this.removeFromVariantTree = this.parent.addVariantChild(this)),
      this.values.forEach((r, s) => this.bindToMotionValue(s, r)),
      sv.current || qk(),
      (this.shouldReduceMotion =
        this.reducedMotionConfig === "never"
          ? !1
          : this.reducedMotionConfig === "always"
          ? !0
          : Bc.current),
      this.parent && this.parent.children.add(this),
      this.update(this.props, this.presenceContext);
  }
  unmount() {
    np.delete(this.current),
      this.projection && this.projection.unmount(),
      Ci(this.notifyUpdate),
      Ci(this.render),
      this.valueSubscriptions.forEach((t) => t()),
      this.removeFromVariantTree && this.removeFromVariantTree(),
      this.parent && this.parent.children.delete(this);
    for (const t in this.events) this.events[t].clear();
    for (const t in this.features) this.features[t].unmount();
    this.current = null;
  }
  bindToMotionValue(t, r) {
    const s = Pn.has(t),
      c = r.on("change", (m) => {
        (this.latestValues[t] = m),
          this.props.onUpdate && De.update(this.notifyUpdate, !1, !0),
          s && this.projection && (this.projection.isTransformDirty = !0);
      }),
      f = r.on("renderRequest", this.scheduleRender);
    this.valueSubscriptions.set(t, () => {
      c(), f();
    });
  }
  sortNodePosition(t) {
    return !this.current ||
      !this.sortInstanceNodePosition ||
      this.type !== t.type
      ? 0
      : this.sortInstanceNodePosition(this.current, t.current);
  }
  loadFeatures({ children: t, ...r }, s, c, f) {
    let m, y;
    for (let S = 0; S < Kk; S++) {
      const T = ov[S],
        {
          isEnabled: O,
          Feature: z,
          ProjectionNode: N,
          MeasureLayout: X,
        } = ua[T];
      N && (m = N),
        O(r) &&
          (!this.features[T] && z && (this.features[T] = new z(this)),
          X && (y = X));
    }
    if (!this.projection && m) {
      this.projection = new m(
        this.latestValues,
        this.parent && this.parent.projection
      );
      const {
        layoutId: S,
        layout: T,
        drag: O,
        dragConstraints: z,
        layoutScroll: N,
        layoutRoot: X,
      } = r;
      this.projection.setOptions({
        layoutId: S,
        layout: T,
        alwaysMeasureLayout: !!O || (z && Yn(z)),
        visualElement: this,
        scheduleRender: () => this.scheduleRender(),
        animationType: typeof T == "string" ? T : "both",
        initialPromotionConfig: f,
        layoutScroll: N,
        layoutRoot: X,
      });
    }
    return y;
  }
  updateFeatures() {
    for (const t in this.features) {
      const r = this.features[t];
      r.isMounted ? r.update() : (r.mount(), (r.isMounted = !0));
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.options, this.props);
  }
  measureViewportBox() {
    return this.current
      ? this.measureInstanceViewportBox(this.current, this.props)
      : Je();
  }
  getStaticValue(t) {
    return this.latestValues[t];
  }
  setStaticValue(t, r) {
    this.latestValues[t] = r;
  }
  makeTargetAnimatable(t, r = !0) {
    return this.makeTargetAnimatableFromInstance(t, this.props, r);
  }
  update(t, r) {
    (t.transformTemplate || this.props.transformTemplate) &&
      this.scheduleRender(),
      (this.prevProps = this.props),
      (this.props = t),
      (this.prevPresenceContext = this.presenceContext),
      (this.presenceContext = r);
    for (let s = 0; s < rp.length; s++) {
      const c = rp[s];
      this.propEventSubscriptions[c] &&
        (this.propEventSubscriptions[c](),
        delete this.propEventSubscriptions[c]);
      const f = t["on" + c];
      f && (this.propEventSubscriptions[c] = this.on(c, f));
    }
    (this.prevMotionValues = Zk(
      this,
      this.scrapeMotionValuesFromProps(t, this.prevProps),
      this.prevMotionValues
    )),
      this.handleChildMotionValue && this.handleChildMotionValue();
  }
  getProps() {
    return this.props;
  }
  getVariant(t) {
    return this.props.variants ? this.props.variants[t] : void 0;
  }
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode
      ? this
      : this.parent
      ? this.parent.getClosestVariantNode()
      : void 0;
  }
  getVariantContext(t = !1) {
    if (t) return this.parent ? this.parent.getVariantContext() : void 0;
    if (!this.isControllingVariants) {
      const s = this.parent ? this.parent.getVariantContext() || {} : {};
      return (
        this.props.initial !== void 0 && (s.initial = this.props.initial), s
      );
    }
    const r = {};
    for (let s = 0; s < Qk; s++) {
      const c = eh[s],
        f = this.props[c];
      (ca(f) || f === !1) && (r[c] = f);
    }
    return r;
  }
  addVariantChild(t) {
    const r = this.getClosestVariantNode();
    if (r)
      return (
        r.variantChildren && r.variantChildren.add(t),
        () => r.variantChildren.delete(t)
      );
  }
  addValue(t, r) {
    r !== this.values.get(t) &&
      (this.removeValue(t), this.bindToMotionValue(t, r)),
      this.values.set(t, r),
      (this.latestValues[t] = r.get());
  }
  removeValue(t) {
    this.values.delete(t);
    const r = this.valueSubscriptions.get(t);
    r && (r(), this.valueSubscriptions.delete(t)),
      delete this.latestValues[t],
      this.removeValueFromRenderState(t, this.renderState);
  }
  hasValue(t) {
    return this.values.has(t);
  }
  getValue(t, r) {
    if (this.props.values && this.props.values[t]) return this.props.values[t];
    let s = this.values.get(t);
    return (
      s === void 0 &&
        r !== void 0 &&
        ((s = lr(r, { owner: this })), this.addValue(t, s)),
      s
    );
  }
  readValue(t) {
    var r;
    return this.latestValues[t] !== void 0 || !this.current
      ? this.latestValues[t]
      : (r = this.getBaseTargSBFromProps(this.props, t)) !== null &&
        r !== void 0
      ? r
      : this.readValueFromInstance(this.current, t, this.options);
  }
  setBaseTarget(t, r) {
    this.baseTarget[t] = r;
  }
  getBaseTarget(t) {
    var r;
    const { initial: s } = this.props,
      c =
        typeof s == "string" || typeof s == "object"
          ? (r = ch(this.props, s)) === null || r === void 0
            ? void 0
            : r[t]
          : void 0;
    if (s && c !== void 0) return c;
    const f = this.getBaseTargSBFromProps(this.props, t);
    return f !== void 0 && !Tt(f)
      ? f
      : this.initialValues[t] !== void 0 && c === void 0
      ? void 0
      : this.baseTarget[t];
  }
  on(t, r) {
    return this.events[t] || (this.events[t] = new yh()), this.events[t].add(r);
  }
  notify(t, ...r) {
    this.events[t] && this.events[t].notify(...r);
  }
}
class lv extends Jk {
  sortInstanceNodePosition(t, r) {
    return t.compareDocumentPosition(r) & 2 ? 1 : -1;
  }
  getBaseTargSBFromProps(t, r) {
    return t.style ? t.style[r] : void 0;
  }
  removeValueFromRenderState(t, { vars: r, style: s }) {
    delete r[t], delete s[t];
  }
  makeTargetAnimatableFromInstance(
    { transition: t, transitionEnd: r, ...s },
    { transformValues: c },
    f
  ) {
    let m = yS(s, t || {}, this);
    if ((c && (r && (r = c(r)), s && (s = c(s)), m && (m = c(m))), f)) {
      xS(this, s, m);
      const y = $k(this, s, m, r);
      (r = y.transitionEnd), (s = y.target);
    }
    return { transition: t, transitionEnd: r, ...s };
  }
}
function eC(e) {
  return window.getComputedStyle(e);
}
class tC extends lv {
  readValueFromInstance(t, r) {
    if (Pn.has(r)) {
      const s = gh(r);
      return (s && s.default) || 0;
    } else {
      const s = eC(t),
        c = (qm(r) ? s.getPropertyValue(r) : s[r]) || 0;
      return typeof c == "string" ? c.trim() : c;
    }
  }
  measureInstanceViewportBox(t, { transformPagePoint: r }) {
    return Zx(t, r);
  }
  build(t, r, s, c) {
    nh(t, r, s, c.transformTemplate);
  }
  scrapeMotionValuesFromProps(t, r) {
    return lh(t, r);
  }
  handleChildMotionValue() {
    this.childSubscription &&
      (this.childSubscription(), delete this.childSubscription);
    const { children: t } = this.props;
    Tt(t) &&
      (this.childSubscription = t.on("change", (r) => {
        this.current && (this.current.textContent = `${r}`);
      }));
  }
  renderInstance(t, r, s, c) {
    tx(t, r, s, c);
  }
}
class iC extends lv {
  constructor() {
    super(...arguments), (this.isSVGTag = !1);
  }
  getBaseTargSBFromProps(t, r) {
    return t[r];
  }
  readValueFromInstance(t, r) {
    if (Pn.has(r)) {
      const s = gh(r);
      return (s && s.default) || 0;
    }
    return (r = ix.has(r) ? r : oh(r)), t.getAttribute(r);
  }
  measureInstanceViewportBox() {
    return Je();
  }
  scrapeMotionValuesFromProps(t, r) {
    return rx(t, r);
  }
  build(t, r, s, c) {
    ah(t, r, s, this.isSVGTag, c.transformTemplate);
  }
  renderInstance(t, r, s, c) {
    nx(t, r, s, c);
  }
  mount(t) {
    (this.isSVGTag = sh(t.tagName)), super.mount(t);
  }
}
const nC = (e, t) =>
    ih(e)
      ? new iC(t, { enableHardwareAcceleration: !1 })
      : new tC(t, { enableHardwareAcceleration: !0 }),
  rC = { layout: { ProjectionNode: rv, MeasureLayout: Kx } },
  aC = { ...RS, ...Jw, ...Nk, ...rC },
  gr = lw((e, t) => Xw(e, t, aC, nC));
function cv() {
  const e = re.useRef(!1);
  return (
    bo(
      () => (
        (e.current = !0),
        () => {
          e.current = !1;
        }
      ),
      []
    ),
    e
  );
}
function sC() {
  const e = cv(),
    [t, r] = re.useState(0),
    s = re.useCallback(() => {
      e.current && r(t + 1);
    }, [t]);
  return [re.useCallback(() => De.postRender(s), [s]), t];
}
class oC extends re.Component {
  getSnapshotBeforeUpdate(t) {
    const r = this.props.childRef.current;
    if (r && t.isPresent && !this.props.isPresent) {
      const s = this.props.sizeRef.current;
      (s.height = r.offsetHeight || 0),
        (s.width = r.offsetWidth || 0),
        (s.top = r.offsetTop),
        (s.left = r.offsetLeft);
    }
    return null;
  }
  componentDidUpdate() {}
  render() {
    return this.props.children;
  }
}
function lC({ children: e, isPresent: t }) {
  const r = re.useId(),
    s = re.useRef(null),
    c = re.useRef({ width: 0, height: 0, top: 0, left: 0 });
  return (
    re.useInsertionEffect(() => {
      const { width: f, height: m, top: y, left: S } = c.current;
      if (t || !s.current || !f || !m) return;
      s.current.dataset.motionPopId = r;
      const T = document.createElement("style");
      return (
        document.head.appendChild(T),
        T.sheet &&
          T.sheet.insertRule(`
          [data-motion-pop-id="${r}"] {
            position: absolute !important;
            width: ${f}px !important;
            height: ${m}px !important;
            top: ${y}px !important;
            left: ${S}px !important;
          }
        `),
        () => {
          document.head.removeChild(T);
        }
      );
    }, [t]),
    re.createElement(
      oC,
      { isPresent: t, childRef: s, sizeRef: c },
      re.cloneElement(e, { ref: s })
    )
  );
}
const Al = ({
  children: e,
  initial: t,
  isPresent: r,
  onExitComplete: s,
  custom: c,
  presenceAffectsLayout: f,
  mode: m,
}) => {
  const y = uh(cC),
    S = re.useId(),
    T = re.useMemo(
      () => ({
        id: S,
        initial: t,
        isPresent: r,
        custom: c,
        onExitComplete: (O) => {
          y.set(O, !0);
          for (const z of y.values()) if (!z) return;
          s && s();
        },
        register: (O) => (y.set(O, !1), () => y.delete(O)),
      }),
      f ? void 0 : [r]
    );
  return (
    re.useMemo(() => {
      y.forEach((O, z) => y.set(z, !1));
    }, [r]),
    re.useEffect(() => {
      !r && !y.size && s && s();
    }, [r]),
    m === "popLayout" && (e = re.createElement(lC, { isPresent: r }, e)),
    re.createElement(vo.Provider, { value: T }, e)
  );
};
function cC() {
  return new Map();
}
function uC(e) {
  return re.useEffect(() => () => e(), []);
}
const On = (e) => e.key || "";
function hC(e, t) {
  e.forEach((r) => {
    const s = On(r);
    t.set(s, r);
  });
}
function dC(e) {
  const t = [];
  return (
    re.Children.forEach(e, (r) => {
      re.isValidElement(r) && t.push(r);
    }),
    t
  );
}
const fC = ({
  children: e,
  custom: t,
  initial: r = !0,
  onExitComplete: s,
  exitBeforeEnter: c,
  presenceAffectsLayout: f = !0,
  mode: m = "sync",
}) => {
  const y = re.useContext(th).forceRender || sC()[0],
    S = cv(),
    T = dC(e);
  let O = T;
  const z = re.useRef(new Map()).current,
    N = re.useRef(O),
    X = re.useRef(new Map()).current,
    V = re.useRef(!0);
  if (
    (bo(() => {
      (V.current = !1), hC(T, X), (N.current = O);
    }),
    uC(() => {
      (V.current = !0), X.clear(), z.clear();
    }),
    V.current)
  )
    return re.createElement(
      re.Fragment,
      null,
      O.map((L) =>
        re.createElement(
          Al,
          {
            key: On(L),
            isPresent: !0,
            initial: r ? void 0 : !1,
            presenceAffectsLayout: f,
            mode: m,
          },
          L
        )
      )
    );
  O = [...O];
  const Y = N.current.map(On),
    Q = T.map(On),
    j = Y.length;
  for (let L = 0; L < j; L++) {
    const H = Y[L];
    Q.indexOf(H) === -1 && !z.has(H) && z.set(H, void 0);
  }
  return (
    m === "wait" && z.size && (O = []),
    z.forEach((L, H) => {
      if (Q.indexOf(H) !== -1) return;
      const U = X.get(H);
      if (!U) return;
      const B = Y.indexOf(H);
      let K = L;
      if (!K) {
        const te = () => {
          X.delete(H), z.delete(H);
          const q = N.current.findIndex((ie) => ie.key === H);
          if ((N.current.splice(q, 1), !z.size)) {
            if (((N.current = T), S.current === !1)) return;
            y(), s && s();
          }
        };
        (K = re.createElement(
          Al,
          {
            key: On(U),
            isPresent: !1,
            onExitComplete: te,
            custom: t,
            presenceAffectsLayout: f,
            mode: m,
          },
          U
        )),
          z.set(H, K);
      }
      O.splice(B, 0, K);
    }),
    (O = O.map((L) => {
      const H = L.key;
      return z.has(H)
        ? L
        : re.createElement(
            Al,
            { key: On(L), isPresent: !0, presenceAffectsLayout: f, mode: m },
            L
          );
    })),
    re.createElement(
      re.Fragment,
      null,
      z.size ? O : O.map((L) => re.cloneElement(L))
    )
  );
};
function pC(e) {
  e.values.forEach((t) => t.stop());
}
function gC() {
  const e = new Set(),
    t = {
      subscribe(r) {
        return e.add(r), () => void e.delete(r);
      },
      start(r, s) {
        const c = [];
        return (
          e.forEach((f) => {
            c.push(Yx(f, r, { transitionOverride: s }));
          }),
          Promise.all(c)
        );
      },
      set(r) {
        return e.forEach((s) => {
          mS(s, r);
        });
      },
      stop() {
        e.forEach((r) => {
          pC(r);
        });
      },
      mount() {
        return () => {
          t.stop();
        };
      },
    };
  return t;
}
function mC() {
  const e = uh(gC);
  return bo(e.mount, []), e;
}
const xC = mC;
var Vc = new Map(),
  $a = new WeakMap(),
  ap = 0,
  vC = void 0;
function yC(e) {
  return e
    ? ($a.has(e) || ((ap += 1), $a.set(e, ap.toString())), $a.get(e))
    : "0";
}
function bC(e) {
  return Object.keys(e)
    .sort()
    .filter((t) => e[t] !== void 0)
    .map((t) => `${t}_${t === "root" ? yC(e.root) : e[t]}`)
    .toString();
}
function wC(e) {
  let t = bC(e),
    r = Vc.get(t);
  if (!r) {
    const s = new Map();
    let c;
    const f = new IntersectionObserver((m) => {
      m.forEach((y) => {
        var S;
        const T = y.isIntersecting && c.some((O) => y.intersectionRatio >= O);
        e.trackVisibility && typeof y.isVisible > "u" && (y.isVisible = T),
          (S = s.get(y.target)) == null ||
            S.forEach((O) => {
              O(T, y);
            });
      });
    }, e);
    (c =
      f.thresholds ||
      (Array.isArray(e.threshold) ? e.threshold : [e.threshold || 0])),
      (r = { id: t, observer: f, elements: s }),
      Vc.set(t, r);
  }
  return r;
}
function SC(e, t, r = {}, s = vC) {
  if (typeof window.IntersectionObserver > "u" && s !== void 0) {
    const S = e.getBoundingClientRect();
    return (
      t(s, {
        isIntersecting: s,
        target: e,
        intersectionRatio: typeof r.threshold == "number" ? r.threshold : 0,
        time: 0,
        boundingClientRect: S,
        intersectionRect: S,
        rootBounds: S,
      }),
      () => {}
    );
  }
  const { id: c, observer: f, elements: m } = wC(r);
  let y = m.get(e) || [];
  return (
    m.has(e) || m.set(e, y),
    y.push(t),
    f.observe(e),
    function () {
      y.splice(y.indexOf(t), 1),
        y.length === 0 && (m.delete(e), f.unobserve(e)),
        m.size === 0 && (f.disconnect(), Vc.delete(c));
    }
  );
}
function wh({
  threshold: e,
  delay: t,
  trackVisibility: r,
  rootMargin: s,
  root: c,
  triggerOnce: f,
  skip: m,
  initialInView: y,
  fallbackInView: S,
  onChange: T,
} = {}) {
  var O;
  const [z, N] = re.useState(null),
    X = re.useRef(),
    [V, Y] = re.useState({ inView: !!y, entry: void 0 });
  (X.current = T),
    re.useEffect(() => {
      if (m || !z) return;
      let H;
      return (
        (H = SC(
          z,
          (U, B) => {
            Y({ inView: U, entry: B }),
              X.current && X.current(U, B),
              B.isIntersecting && f && H && (H(), (H = void 0));
          },
          {
            root: c,
            rootMargin: s,
            threshold: e,
            trackVisibility: r,
            delay: t,
          },
          S
        )),
        () => {
          H && H();
        }
      );
    }, [Array.isArray(e) ? e.toString() : e, z, c, s, f, m, r, S, t]);
  const Q = (O = V.entry) == null ? void 0 : O.target,
    j = re.useRef();
  !z &&
    Q &&
    !f &&
    !m &&
    j.current !== Q &&
    ((j.current = Q), Y({ inView: !!y, entry: void 0 }));
  const L = [N, V.inView, V.entry];
  return (L.ref = L[0]), (L.inView = L[1]), (L.entry = L[2]), L;
}
const $t = ({ children: e, delay: t }) => {
  const r = {
      triggerOnce: !1,
      threshold: 0.5,
      rootMargin: `${window.innerHeight}px 0px  0px 0px`,
    },
    [s, c] = wh(r);
  return $.jsx(gr.div, {
    initial: { opacity: 0, skew: -30, scaleY: 0, scaleX: 0.5, y: 20 },
    animate: c && { opacity: 1, skew: 0, scaleY: 1, scaleX: 1, y: 0 },
    transition: { duration: 1.5, ease: [0.16, 0.77, 0.47, 0.97], delay: t },
    ref: s,
    className: "origin-top-right",
    children: e,
  });
};
var uv = {},
  Yc = { exports: {} };
/*!
 * ApexCharts v3.44.0
 * (c) 2018-2023 ApexCharts
 * Released under the MIT License.
 */ (function (e, t) {
  function r(M, i) {
    var n = Object.keys(M);
    if (Object.getOwnPropertySymbols) {
      var a = Object.getOwnPropertySymbols(M);
      i &&
        (a = a.filter(function (o) {
          return Object.getOwnPropertyDescriptor(M, o).enumerable;
        })),
        n.push.apply(n, a);
    }
    return n;
  }
  function s(M) {
    for (var i = 1; i < arguments.length; i++) {
      var n = arguments[i] != null ? arguments[i] : {};
      i % 2
        ? r(Object(n), !0).forEach(function (a) {
            S(M, a, n[a]);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(M, Object.getOwnPropertyDescriptors(n))
        : r(Object(n)).forEach(function (a) {
            Object.defineProperty(M, a, Object.getOwnPropertyDescriptor(n, a));
          });
    }
    return M;
  }
  function c(M) {
    return (
      (c =
        typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
          ? function (i) {
              return typeof i;
            }
          : function (i) {
              return i &&
                typeof Symbol == "function" &&
                i.constructor === Symbol &&
                i !== Symbol.prototype
                ? "symbol"
                : typeof i;
            }),
      c(M)
    );
  }
  function f(M, i) {
    if (!(M instanceof i))
      throw new TypeError("Cannot call a class as a function");
  }
  function m(M, i) {
    for (var n = 0; n < i.length; n++) {
      var a = i[n];
      (a.enumerable = a.enumerable || !1),
        (a.configurable = !0),
        "value" in a && (a.writable = !0),
        Object.defineProperty(M, a.key, a);
    }
  }
  function y(M, i, n) {
    return i && m(M.prototype, i), n && m(M, n), M;
  }
  function S(M, i, n) {
    return (
      i in M
        ? Object.defineProperty(M, i, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0,
          })
        : (M[i] = n),
      M
    );
  }
  function T(M, i) {
    if (typeof i != "function" && i !== null)
      throw new TypeError("Super expression must either be null or a function");
    (M.prototype = Object.create(i && i.prototype, {
      constructor: { value: M, writable: !0, configurable: !0 },
    })),
      i && z(M, i);
  }
  function O(M) {
    return (
      (O = Object.setPrototypeOf
        ? Object.getPrototypeOf
        : function (i) {
            return i.__proto__ || Object.getPrototypeOf(i);
          }),
      O(M)
    );
  }
  function z(M, i) {
    return (
      (z =
        Object.setPrototypeOf ||
        function (n, a) {
          return (n.__proto__ = a), n;
        }),
      z(M, i)
    );
  }
  function N(M, i) {
    if (i && (typeof i == "object" || typeof i == "function")) return i;
    if (i !== void 0)
      throw new TypeError(
        "Derived constructors may only return object or undefined"
      );
    return (function (n) {
      if (n === void 0)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called"
        );
      return n;
    })(M);
  }
  function X(M) {
    var i = (function () {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function") return !0;
      try {
        return (
          Boolean.prototype.valueOf.call(
            Reflect.construct(Boolean, [], function () {})
          ),
          !0
        );
      } catch {
        return !1;
      }
    })();
    return function () {
      var n,
        a = O(M);
      if (i) {
        var o = O(this).constructor;
        n = Reflect.construct(a, arguments, o);
      } else n = a.apply(this, arguments);
      return N(this, n);
    };
  }
  function V(M, i) {
    return (
      (function (n) {
        if (Array.isArray(n)) return n;
      })(M) ||
      (function (n, a) {
        var o =
          n == null
            ? null
            : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
        if (o != null) {
          var l,
            u,
            h = [],
            d = !0,
            g = !1;
          try {
            for (
              o = o.call(n);
              !(d = (l = o.next()).done) &&
              (h.push(l.value), !a || h.length !== a);
              d = !0
            );
          } catch (x) {
            (g = !0), (u = x);
          } finally {
            try {
              d || o.return == null || o.return();
            } finally {
              if (g) throw u;
            }
          }
          return h;
        }
      })(M, i) ||
      Q(M, i) ||
      (function () {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      })()
    );
  }
  function Y(M) {
    return (
      (function (i) {
        if (Array.isArray(i)) return j(i);
      })(M) ||
      (function (i) {
        if (
          (typeof Symbol < "u" && i[Symbol.iterator] != null) ||
          i["@@iterator"] != null
        )
          return Array.from(i);
      })(M) ||
      Q(M) ||
      (function () {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      })()
    );
  }
  function Q(M, i) {
    if (M) {
      if (typeof M == "string") return j(M, i);
      var n = Object.prototype.toString.call(M).slice(8, -1);
      return (
        n === "Object" && M.constructor && (n = M.constructor.name),
        n === "Map" || n === "Set"
          ? Array.from(M)
          : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? j(M, i)
          : void 0
      );
    }
  }
  function j(M, i) {
    (i == null || i > M.length) && (i = M.length);
    for (var n = 0, a = new Array(i); n < i; n++) a[n] = M[n];
    return a;
  }
  var L = (function () {
      function M() {
        f(this, M);
      }
      return (
        y(
          M,
          [
            {
              key: "shadeRGBColor",
              value: function (i, n) {
                var a = n.split(","),
                  o = i < 0 ? 0 : 255,
                  l = i < 0 ? -1 * i : i,
                  u = parseInt(a[0].slice(4), 10),
                  h = parseInt(a[1], 10),
                  d = parseInt(a[2], 10);
                return (
                  "rgb(" +
                  (Math.round((o - u) * l) + u) +
                  "," +
                  (Math.round((o - h) * l) + h) +
                  "," +
                  (Math.round((o - d) * l) + d) +
                  ")"
                );
              },
            },
            {
              key: "shadeHexColor",
              value: function (i, n) {
                var a = parseInt(n.slice(1), 16),
                  o = i < 0 ? 0 : 255,
                  l = i < 0 ? -1 * i : i,
                  u = a >> 16,
                  h = (a >> 8) & 255,
                  d = 255 & a;
                return (
                  "#" +
                  (
                    16777216 +
                    65536 * (Math.round((o - u) * l) + u) +
                    256 * (Math.round((o - h) * l) + h) +
                    (Math.round((o - d) * l) + d)
                  )
                    .toString(16)
                    .slice(1)
                );
              },
            },
            {
              key: "shadeColor",
              value: function (i, n) {
                return M.isColorHex(n)
                  ? this.shadeHexColor(i, n)
                  : this.shadeRGBColor(i, n);
              },
            },
          ],
          [
            {
              key: "bind",
              value: function (i, n) {
                return function () {
                  return i.apply(n, arguments);
                };
              },
            },
            {
              key: "isObject",
              value: function (i) {
                return i && c(i) === "object" && !Array.isArray(i) && i != null;
              },
            },
            {
              key: "is",
              value: function (i, n) {
                return (
                  Object.prototype.toString.call(n) === "[object " + i + "]"
                );
              },
            },
            {
              key: "listToArray",
              value: function (i) {
                var n,
                  a = [];
                for (n = 0; n < i.length; n++) a[n] = i[n];
                return a;
              },
            },
            {
              key: "extend",
              value: function (i, n) {
                var a = this;
                typeof Object.assign != "function" &&
                  (Object.assign = function (l) {
                    if (l == null)
                      throw new TypeError(
                        "Cannot convert undefined or null to object"
                      );
                    for (var u = Object(l), h = 1; h < arguments.length; h++) {
                      var d = arguments[h];
                      if (d != null)
                        for (var g in d) d.hasOwnProperty(g) && (u[g] = d[g]);
                    }
                    return u;
                  });
                var o = Object.assign({}, i);
                return (
                  this.isObject(i) &&
                    this.isObject(n) &&
                    Object.keys(n).forEach(function (l) {
                      a.isObject(n[l]) && l in i
                        ? (o[l] = a.extend(i[l], n[l]))
                        : Object.assign(o, S({}, l, n[l]));
                    }),
                  o
                );
              },
            },
            {
              key: "extendArray",
              value: function (i, n) {
                var a = [];
                return (
                  i.map(function (o) {
                    a.push(M.extend(n, o));
                  }),
                  (i = a)
                );
              },
            },
            {
              key: "monthMod",
              value: function (i) {
                return i % 12;
              },
            },
            {
              key: "clone",
              value: function (i) {
                if (M.is("Array", i)) {
                  for (var n = [], a = 0; a < i.length; a++)
                    n[a] = this.clone(i[a]);
                  return n;
                }
                if (M.is("Null", i)) return null;
                if (M.is("Date", i)) return i;
                if (c(i) === "object") {
                  var o = {};
                  for (var l in i)
                    i.hasOwnProperty(l) && (o[l] = this.clone(i[l]));
                  return o;
                }
                return i;
              },
            },
            {
              key: "log10",
              value: function (i) {
                return Math.log(i) / Math.LN10;
              },
            },
            {
              key: "roundToBase10",
              value: function (i) {
                return Math.pow(10, Math.floor(Math.log10(i)));
              },
            },
            {
              key: "roundToBase",
              value: function (i, n) {
                return Math.pow(n, Math.floor(Math.log(i) / Math.log(n)));
              },
            },
            {
              key: "parseNumber",
              value: function (i) {
                return i === null ? i : parseFloat(i);
              },
            },
            {
              key: "stripNumber",
              value: function (i) {
                var n =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : 2;
                return Number.isInteger(i) ? i : parseFloat(i.toPrecision(n));
              },
            },
            {
              key: "randomId",
              value: function () {
                return (Math.random() + 1).toString(36).substring(4);
              },
            },
            {
              key: "noExponents",
              value: function (i) {
                var n = String(i).split(/[eE]/);
                if (n.length === 1) return n[0];
                var a = "",
                  o = i < 0 ? "-" : "",
                  l = n[0].replace(".", ""),
                  u = Number(n[1]) + 1;
                if (u < 0) {
                  for (a = o + "0."; u++; ) a += "0";
                  return a + l.replace(/^-/, "");
                }
                for (u -= l.length; u--; ) a += "0";
                return l + a;
              },
            },
            {
              key: "getDimensions",
              value: function (i) {
                var n = getComputedStyle(i, null),
                  a = i.clientHeight,
                  o = i.clientWidth;
                return (
                  (a -= parseFloat(n.paddingTop) + parseFloat(n.paddingBottom)),
                  [
                    (o -=
                      parseFloat(n.paddingLeft) + parseFloat(n.paddingRight)),
                    a,
                  ]
                );
              },
            },
            {
              key: "getBoundingClientRect",
              value: function (i) {
                var n = i.getBoundingClientRect();
                return {
                  top: n.top,
                  right: n.right,
                  bottom: n.bottom,
                  left: n.left,
                  width: i.clientWidth,
                  height: i.clientHeight,
                  x: n.left,
                  y: n.top,
                };
              },
            },
            {
              key: "getLargestStringFromArr",
              value: function (i) {
                return i.reduce(function (n, a) {
                  return (
                    Array.isArray(a) &&
                      (a = a.reduce(function (o, l) {
                        return o.length > l.length ? o : l;
                      })),
                    n.length > a.length ? n : a
                  );
                }, 0);
              },
            },
            {
              key: "hexToRgba",
              value: function () {
                var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : "#999999",
                  n =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0.6;
                i.substring(0, 1) !== "#" && (i = "#999999");
                var a = i.replace("#", "");
                a = a.match(new RegExp("(.{" + a.length / 3 + "})", "g"));
                for (var o = 0; o < a.length; o++)
                  a[o] = parseInt(a[o].length === 1 ? a[o] + a[o] : a[o], 16);
                return n !== void 0 && a.push(n), "rgba(" + a.join(",") + ")";
              },
            },
            {
              key: "getOpacityFromRGBA",
              value: function (i) {
                return parseFloat(i.replace(/^.*,(.+)\)/, "$1"));
              },
            },
            {
              key: "rgb2hex",
              value: function (i) {
                return (i = i.match(
                  /^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i
                )) && i.length === 4
                  ? "#" +
                      ("0" + parseInt(i[1], 10).toString(16)).slice(-2) +
                      ("0" + parseInt(i[2], 10).toString(16)).slice(-2) +
                      ("0" + parseInt(i[3], 10).toString(16)).slice(-2)
                  : "";
              },
            },
            {
              key: "isColorHex",
              value: function (i) {
                return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(
                  i
                );
              },
            },
            {
              key: "getPolygonPos",
              value: function (i, n) {
                for (var a = [], o = (2 * Math.PI) / n, l = 0; l < n; l++) {
                  var u = {};
                  (u.x = i * Math.sin(l * o)),
                    (u.y = -i * Math.cos(l * o)),
                    a.push(u);
                }
                return a;
              },
            },
            {
              key: "polarToCartesian",
              value: function (i, n, a, o) {
                var l = ((o - 90) * Math.PI) / 180;
                return { x: i + a * Math.cos(l), y: n + a * Math.sin(l) };
              },
            },
            {
              key: "escapeString",
              value: function (i) {
                var n =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : "x",
                  a = i.toString().slice();
                return (a = a.replace(
                  /[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi,
                  n
                ));
              },
            },
            {
              key: "negToZero",
              value: function (i) {
                return i < 0 ? 0 : i;
              },
            },
            {
              key: "moveIndexInArray",
              value: function (i, n, a) {
                if (a >= i.length)
                  for (var o = a - i.length + 1; o--; ) i.push(void 0);
                return i.splice(a, 0, i.splice(n, 1)[0]), i;
              },
            },
            {
              key: "extractNumber",
              value: function (i) {
                return parseFloat(i.replace(/[^\d.]*/g, ""));
              },
            },
            {
              key: "findAncestor",
              value: function (i, n) {
                for (; (i = i.parentElement) && !i.classList.contains(n); );
                return i;
              },
            },
            {
              key: "setELstyles",
              value: function (i, n) {
                for (var a in n) n.hasOwnProperty(a) && (i.style.key = n[a]);
              },
            },
            {
              key: "isNumber",
              value: function (i) {
                return (
                  !isNaN(i) &&
                  parseFloat(Number(i)) === i &&
                  !isNaN(parseInt(i, 10))
                );
              },
            },
            {
              key: "isFloat",
              value: function (i) {
                return Number(i) === i && i % 1 != 0;
              },
            },
            {
              key: "isSafari",
              value: function () {
                return /^((?!chrome|android).)*safari/i.test(
                  navigator.userAgent
                );
              },
            },
            {
              key: "isFirefox",
              value: function () {
                return (
                  navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                );
              },
            },
            {
              key: "isIE11",
              value: function () {
                if (
                  window.navigator.userAgent.indexOf("MSIE") !== -1 ||
                  window.navigator.appVersion.indexOf("Trident/") > -1
                )
                  return !0;
              },
            },
            {
              key: "isIE",
              value: function () {
                var i = window.navigator.userAgent,
                  n = i.indexOf("MSIE ");
                if (n > 0)
                  return parseInt(i.substring(n + 5, i.indexOf(".", n)), 10);
                if (i.indexOf("Trident/") > 0) {
                  var a = i.indexOf("rv:");
                  return parseInt(i.substring(a + 3, i.indexOf(".", a)), 10);
                }
                var o = i.indexOf("Edge/");
                return (
                  o > 0 && parseInt(i.substring(o + 5, i.indexOf(".", o)), 10)
                );
              },
            },
          ]
        ),
        M
      );
    })(),
    H = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w), this.setEasingFunctions();
      }
      return (
        y(M, [
          {
            key: "setEasingFunctions",
            value: function () {
              var i;
              if (!this.w.globals.easing) {
                switch (this.w.config.chart.animations.easing) {
                  case "linear":
                    i = "-";
                    break;
                  case "easein":
                    i = "<";
                    break;
                  case "easeout":
                    i = ">";
                    break;
                  case "easeinout":
                  default:
                    i = "<>";
                    break;
                  case "swing":
                    i = function (n) {
                      var a = 1.70158;
                      return (n -= 1) * n * ((a + 1) * n + a) + 1;
                    };
                    break;
                  case "bounce":
                    i = function (n) {
                      return n < 1 / 2.75
                        ? 7.5625 * n * n
                        : n < 2 / 2.75
                        ? 7.5625 * (n -= 1.5 / 2.75) * n + 0.75
                        : n < 2.5 / 2.75
                        ? 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375
                        : 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;
                    };
                    break;
                  case "elastic":
                    i = function (n) {
                      return n === !!n
                        ? n
                        : Math.pow(2, -10 * n) *
                            Math.sin(((n - 0.075) * (2 * Math.PI)) / 0.3) +
                            1;
                    };
                }
                this.w.globals.easing = i;
              }
            },
          },
          {
            key: "animateLine",
            value: function (i, n, a, o) {
              i.attr(n).animate(o).attr(a);
            },
          },
          {
            key: "animateMarker",
            value: function (i, n, a, o, l, u) {
              n || (n = 0),
                i
                  .attr({ r: n, width: n, height: n })
                  .animate(o, l)
                  .attr({ r: a, width: a.width, height: a.height })
                  .afterAll(function () {
                    u();
                  });
            },
          },
          {
            key: "animateCircle",
            value: function (i, n, a, o, l) {
              i.attr({ r: n.r, cx: n.cx, cy: n.cy })
                .animate(o, l)
                .attr({ r: a.r, cx: a.cx, cy: a.cy });
            },
          },
          {
            key: "animateRect",
            value: function (i, n, a, o, l) {
              i.attr(n)
                .animate(o)
                .attr(a)
                .afterAll(function () {
                  return l();
                });
            },
          },
          {
            key: "animatePathsGradually",
            value: function (i) {
              var n = i.el,
                a = i.realIndex,
                o = i.j,
                l = i.fill,
                u = i.pathFrom,
                h = i.pathTo,
                d = i.speed,
                g = i.delay,
                x = this.w,
                v = 0;
              x.config.chart.animations.animateGradually.enabled &&
                (v = x.config.chart.animations.animateGradually.delay),
                x.config.chart.animations.dynamicAnimation.enabled &&
                  x.globals.dataChanged &&
                  x.config.chart.type !== "bar" &&
                  (v = 0),
                this.morphSVG(
                  n,
                  a,
                  o,
                  x.config.chart.type !== "line" || x.globals.comboCharts
                    ? l
                    : "stroke",
                  u,
                  h,
                  d,
                  g * v
                );
            },
          },
          {
            key: "showDelayedElements",
            value: function () {
              this.w.globals.delayedElements.forEach(function (i) {
                var n = i.el;
                n.classList.remove("apexcharts-element-hidden"),
                  n.classList.add("apexcharts-hidden-element-shown");
              });
            },
          },
          {
            key: "animationCompleted",
            value: function (i) {
              var n = this.w;
              n.globals.animationEnded ||
                ((n.globals.animationEnded = !0),
                this.showDelayedElements(),
                typeof n.config.chart.events.animationEnd == "function" &&
                  n.config.chart.events.animationEnd(this.ctx, {
                    el: i,
                    w: n,
                  }));
            },
          },
          {
            key: "morphSVG",
            value: function (i, n, a, o, l, u, h, d) {
              var g = this,
                x = this.w;
              l || (l = i.attr("pathFrom")), u || (u = i.attr("pathTo"));
              var v = function (w) {
                return (
                  x.config.chart.type === "radar" && (h = 1),
                  "M 0 ".concat(x.globals.gridHeight)
                );
              };
              (!l || l.indexOf("undefined") > -1 || l.indexOf("NaN") > -1) &&
                (l = v()),
                (!u || u.indexOf("undefined") > -1 || u.indexOf("NaN") > -1) &&
                  (u = v()),
                x.globals.shouldAnimate || (h = 1),
                i
                  .plot(l)
                  .animate(1, x.globals.easing, d)
                  .plot(l)
                  .animate(h, x.globals.easing, d)
                  .plot(u)
                  .afterAll(function () {
                    L.isNumber(a)
                      ? a ===
                          x.globals.series[x.globals.maxValsInArrayIndex]
                            .length -
                            2 &&
                        x.globals.shouldAnimate &&
                        g.animationCompleted(i)
                      : o !== "none" &&
                        x.globals.shouldAnimate &&
                        ((!x.globals.comboCharts &&
                          n === x.globals.series.length - 1) ||
                          x.globals.comboCharts) &&
                        g.animationCompleted(i),
                      g.showDelayedElements();
                  });
            },
          },
        ]),
        M
      );
    })(),
    U = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "getDefaultFilter",
            value: function (i, n) {
              var a = this.w;
              i.unfilter(!0),
                new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"),
                a.config.states.normal.filter !== "none"
                  ? this.applyFilter(
                      i,
                      n,
                      a.config.states.normal.filter.type,
                      a.config.states.normal.filter.value
                    )
                  : a.config.chart.dropShadow.enabled &&
                    this.dropShadow(i, a.config.chart.dropShadow, n);
            },
          },
          {
            key: "addNormalFilter",
            value: function (i, n) {
              var a = this.w;
              a.config.chart.dropShadow.enabled &&
                !i.node.classList.contains("apexcharts-marker") &&
                this.dropShadow(i, a.config.chart.dropShadow, n);
            },
          },
          {
            key: "addLightenFilter",
            value: function (i, n, a) {
              var o = this,
                l = this.w,
                u = a.intensity;
              i.unfilter(!0),
                new window.SVG.Filter(),
                i.filter(function (h) {
                  var d = l.config.chart.dropShadow;
                  (d.enabled ? o.addShadow(h, n, d) : h).componentTransfer({
                    rgb: { type: "linear", slope: 1.5, intercept: u },
                  });
                }),
                i.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                this._scaleFilterSize(i.filterer.node);
            },
          },
          {
            key: "addDarkenFilter",
            value: function (i, n, a) {
              var o = this,
                l = this.w,
                u = a.intensity;
              i.unfilter(!0),
                new window.SVG.Filter(),
                i.filter(function (h) {
                  var d = l.config.chart.dropShadow;
                  (d.enabled ? o.addShadow(h, n, d) : h).componentTransfer({
                    rgb: { type: "linear", slope: u },
                  });
                }),
                i.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                this._scaleFilterSize(i.filterer.node);
            },
          },
          {
            key: "applyFilter",
            value: function (i, n, a) {
              var o =
                arguments.length > 3 && arguments[3] !== void 0
                  ? arguments[3]
                  : 0.5;
              switch (a) {
                case "none":
                  this.addNormalFilter(i, n);
                  break;
                case "lighten":
                  this.addLightenFilter(i, n, { intensity: o });
                  break;
                case "darken":
                  this.addDarkenFilter(i, n, { intensity: o });
              }
            },
          },
          {
            key: "addShadow",
            value: function (i, n, a) {
              var o = a.blur,
                l = a.top,
                u = a.left,
                h = a.color,
                d = a.opacity,
                g = i
                  .flood(Array.isArray(h) ? h[n] : h, d)
                  .composite(i.sourceAlpha, "in")
                  .offset(u, l)
                  .gaussianBlur(o)
                  .merge(i.source);
              return i.blend(i.source, g);
            },
          },
          {
            key: "dropShadow",
            value: function (i, n) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 0,
                o = n.top,
                l = n.left,
                u = n.blur,
                h = n.color,
                d = n.opacity,
                g = n.noUserSpaceOnUse,
                x = this.w;
              return (
                i.unfilter(!0),
                (L.isIE() && x.config.chart.type === "radialBar") ||
                  ((h = Array.isArray(h) ? h[a] : h),
                  i.filter(function (v) {
                    var w = null;
                    (w =
                      L.isSafari() || L.isFirefox() || L.isIE()
                        ? v
                            .flood(h, d)
                            .composite(v.sourceAlpha, "in")
                            .offset(l, o)
                            .gaussianBlur(u)
                        : v
                            .flood(h, d)
                            .composite(v.sourceAlpha, "in")
                            .offset(l, o)
                            .gaussianBlur(u)
                            .merge(v.source)),
                      v.blend(v.source, w);
                  }),
                  g ||
                    i.filterer.node.setAttribute(
                      "filterUnits",
                      "userSpaceOnUse"
                    ),
                  this._scaleFilterSize(i.filterer.node)),
                i
              );
            },
          },
          {
            key: "setSelectionFilter",
            value: function (i, n, a) {
              var o = this.w;
              if (
                o.globals.selectedDataPoints[n] !== void 0 &&
                o.globals.selectedDataPoints[n].indexOf(a) > -1
              ) {
                i.node.setAttribute("selected", !0);
                var l = o.config.states.active.filter;
                l !== "none" && this.applyFilter(i, n, l.type, l.value);
              }
            },
          },
          {
            key: "_scaleFilterSize",
            value: function (i) {
              (function (n) {
                for (var a in n) n.hasOwnProperty(a) && i.setAttribute(a, n[a]);
              })({ width: "200%", height: "200%", x: "-50%", y: "-50%" });
            },
          },
        ]),
        M
      );
    })(),
    B = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(
          M,
          [
            {
              key: "roundPathCorners",
              value: function (i, n) {
                function a(_, G, W) {
                  var Z = G.x - _.x,
                    ee = G.y - _.y,
                    J = Math.sqrt(Z * Z + ee * ee);
                  return o(_, G, Math.min(1, W / J));
                }
                function o(_, G, W) {
                  return { x: _.x + (G.x - _.x) * W, y: _.y + (G.y - _.y) * W };
                }
                function l(_, G) {
                  _.length > 2 &&
                    ((_[_.length - 2] = G.x), (_[_.length - 1] = G.y));
                }
                function u(_) {
                  return {
                    x: parseFloat(_[_.length - 2]),
                    y: parseFloat(_[_.length - 1]),
                  };
                }
                i.indexOf("NaN") > -1 && (i = "");
                var h = i
                    .split(/[,\s]/)
                    .reduce(function (_, G) {
                      var W = G.match("([a-zA-Z])(.+)");
                      return W ? (_.push(W[1]), _.push(W[2])) : _.push(G), _;
                    }, [])
                    .reduce(function (_, G) {
                      return (
                        parseFloat(G) == G && _.length
                          ? _[_.length - 1].push(G)
                          : _.push([G]),
                        _
                      );
                    }, []),
                  d = [];
                if (h.length > 1) {
                  var g = u(h[0]),
                    x = null;
                  h[h.length - 1][0] == "Z" &&
                    h[0].length > 2 &&
                    ((x = ["L", g.x, g.y]), (h[h.length - 1] = x)),
                    d.push(h[0]);
                  for (var v = 1; v < h.length; v++) {
                    var w = d[d.length - 1],
                      k = h[v],
                      C = k == x ? h[1] : h[v + 1];
                    if (
                      C &&
                      w &&
                      w.length > 2 &&
                      k[0] == "L" &&
                      C.length > 2 &&
                      C[0] == "L"
                    ) {
                      var P,
                        E,
                        I = u(w),
                        D = u(k),
                        p = u(C);
                      (P = a(D, I, n)),
                        (E = a(D, p, n)),
                        l(k, P),
                        (k.origPoint = D),
                        d.push(k);
                      var b = o(P, D, 0.5),
                        A = o(D, E, 0.5),
                        R = ["C", b.x, b.y, A.x, A.y, E.x, E.y];
                      (R.origPoint = D), d.push(R);
                    } else d.push(k);
                  }
                  if (x) {
                    var F = u(d[d.length - 1]);
                    d.push(["Z"]), l(d[0], F);
                  }
                } else d = h;
                return d.reduce(function (_, G) {
                  return _ + G.join(" ") + " ";
                }, "");
              },
            },
            {
              key: "drawLine",
              value: function (i, n, a, o) {
                var l =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : "#a8a8a8",
                  u =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : 0,
                  h =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : null,
                  d =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : "butt";
                return this.w.globals.dom.Paper.line().attr({
                  x1: i,
                  y1: n,
                  x2: a,
                  y2: o,
                  stroke: l,
                  "stroke-dasharray": u,
                  "stroke-width": h,
                  "stroke-linecap": d,
                });
              },
            },
            {
              key: "drawRect",
              value: function () {
                var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0,
                  n =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0,
                  a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 0,
                  o =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : 0,
                  l =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : 0,
                  u =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : "#fefefe",
                  h =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : 1,
                  d =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : null,
                  g =
                    arguments.length > 8 && arguments[8] !== void 0
                      ? arguments[8]
                      : null,
                  x =
                    arguments.length > 9 && arguments[9] !== void 0
                      ? arguments[9]
                      : 0,
                  v = this.w.globals.dom.Paper.rect();
                return (
                  v.attr({
                    x: i,
                    y: n,
                    width: a > 0 ? a : 0,
                    height: o > 0 ? o : 0,
                    rx: l,
                    ry: l,
                    opacity: h,
                    "stroke-width": d !== null ? d : 0,
                    stroke: g !== null ? g : "none",
                    "stroke-dasharray": x,
                  }),
                  v.node.setAttribute("fill", u),
                  v
                );
              },
            },
            {
              key: "drawPolygon",
              value: function (i) {
                var n =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : "#e1e1e1",
                  a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 1,
                  o =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : "none";
                return this.w.globals.dom.Paper.polygon(i).attr({
                  fill: o,
                  stroke: n,
                  "stroke-width": a,
                });
              },
            },
            {
              key: "drawCircle",
              value: function (i) {
                var n =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null;
                i < 0 && (i = 0);
                var a = this.w.globals.dom.Paper.circle(2 * i);
                return n !== null && a.attr(n), a;
              },
            },
            {
              key: "drawPath",
              value: function (i) {
                var n = i.d,
                  a = n === void 0 ? "" : n,
                  o = i.stroke,
                  l = o === void 0 ? "#a8a8a8" : o,
                  u = i.strokeWidth,
                  h = u === void 0 ? 1 : u,
                  d = i.fill,
                  g = i.fillOpacity,
                  x = g === void 0 ? 1 : g,
                  v = i.strokeOpacity,
                  w = v === void 0 ? 1 : v,
                  k = i.classes,
                  C = i.strokeLinecap,
                  P = C === void 0 ? null : C,
                  E = i.strokeDashArray,
                  I = E === void 0 ? 0 : E,
                  D = this.w;
                return (
                  P === null && (P = D.config.stroke.lineCap),
                  (a.indexOf("undefined") > -1 || a.indexOf("NaN") > -1) &&
                    (a = "M 0 ".concat(D.globals.gridHeight)),
                  D.globals.dom.Paper.path(a).attr({
                    fill: d,
                    "fill-opacity": x,
                    stroke: l,
                    "stroke-opacity": w,
                    "stroke-linecap": P,
                    "stroke-width": h,
                    "stroke-dasharray": I,
                    class: k,
                  })
                );
              },
            },
            {
              key: "group",
              value: function () {
                var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  n = this.w.globals.dom.Paper.group();
                return i !== null && n.attr(i), n;
              },
            },
            {
              key: "move",
              value: function (i, n) {
                var a = ["M", i, n].join(" ");
                return a;
              },
            },
            {
              key: "line",
              value: function (i, n) {
                var a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : null,
                  o = null;
                return (
                  a === null
                    ? (o = [" L", i, n].join(" "))
                    : a === "H"
                    ? (o = [" H", i].join(" "))
                    : a === "V" && (o = [" V", n].join(" ")),
                  o
                );
              },
            },
            {
              key: "curve",
              value: function (i, n, a, o, l, u) {
                var h = ["C", i, n, a, o, l, u].join(" ");
                return h;
              },
            },
            {
              key: "quadraticCurve",
              value: function (i, n, a, o) {
                return ["Q", i, n, a, o].join(" ");
              },
            },
            {
              key: "arc",
              value: function (i, n, a, o, l, u, h) {
                var d = "A";
                arguments.length > 7 &&
                  arguments[7] !== void 0 &&
                  arguments[7] &&
                  (d = "a");
                var g = [d, i, n, a, o, l, u, h].join(" ");
                return g;
              },
            },
            {
              key: "renderPaths",
              value: function (i) {
                var n,
                  a = i.j,
                  o = i.realIndex,
                  l = i.pathFrom,
                  u = i.pathTo,
                  h = i.stroke,
                  d = i.strokeWidth,
                  g = i.strokeLinecap,
                  x = i.fill,
                  v = i.animationDelay,
                  w = i.initialSpeed,
                  k = i.dataChangeSpeed,
                  C = i.className,
                  P = i.shouldClipToGrid,
                  E = P === void 0 || P,
                  I = i.bindEventsOnPaths,
                  D = I === void 0 || I,
                  p = i.drawShadow,
                  b = p === void 0 || p,
                  A = this.w,
                  R = new U(this.ctx),
                  F = new H(this.ctx),
                  _ = this.w.config.chart.animations.enabled,
                  G =
                    _ &&
                    this.w.config.chart.animations.dynamicAnimation.enabled,
                  W = !!(
                    (_ && !A.globals.resized) ||
                    (G && A.globals.dataChanged && A.globals.shouldAnimate)
                  );
                W ? (n = l) : ((n = u), (A.globals.animationEnded = !0));
                var Z = A.config.stroke.dashArray,
                  ee = 0;
                ee = Array.isArray(Z) ? Z[o] : A.config.stroke.dashArray;
                var J = this.drawPath({
                  d: n,
                  stroke: h,
                  strokeWidth: d,
                  fill: x,
                  fillOpacity: 1,
                  classes: C,
                  strokeLinecap: g,
                  strokeDashArray: ee,
                });
                if (
                  (J.attr("index", o),
                  E &&
                    J.attr({
                      "clip-path": "url(#gridRectMask".concat(
                        A.globals.cuid,
                        ")"
                      ),
                    }),
                  A.config.states.normal.filter.type !== "none")
                )
                  R.getDefaultFilter(J, o);
                else if (
                  A.config.chart.dropShadow.enabled &&
                  b &&
                  (!A.config.chart.dropShadow.enabledOnSeries ||
                    (A.config.chart.dropShadow.enabledOnSeries &&
                      A.config.chart.dropShadow.enabledOnSeries.indexOf(o) !==
                        -1))
                ) {
                  var oe = A.config.chart.dropShadow;
                  R.dropShadow(J, oe, o);
                }
                D &&
                  (J.node.addEventListener(
                    "mouseenter",
                    this.pathMouseEnter.bind(this, J)
                  ),
                  J.node.addEventListener(
                    "mouseleave",
                    this.pathMouseLeave.bind(this, J)
                  ),
                  J.node.addEventListener(
                    "mousedown",
                    this.pathMouseDown.bind(this, J)
                  )),
                  J.attr({ pathTo: u, pathFrom: l });
                var ce = {
                  el: J,
                  j: a,
                  realIndex: o,
                  pathFrom: l,
                  pathTo: u,
                  fill: x,
                  strokeWidth: d,
                  delay: v,
                };
                return (
                  !_ || A.globals.resized || A.globals.dataChanged
                    ? (!A.globals.resized && A.globals.dataChanged) ||
                      F.showDelayedElements()
                    : F.animatePathsGradually(s(s({}, ce), {}, { speed: w })),
                  A.globals.dataChanged &&
                    G &&
                    W &&
                    F.animatePathsGradually(s(s({}, ce), {}, { speed: k })),
                  J
                );
              },
            },
            {
              key: "drawPattern",
              value: function (i, n, a) {
                var o =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : "#a8a8a8",
                  l =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : 0;
                return this.w.globals.dom.Paper.pattern(n, a, function (u) {
                  i === "horizontalLines"
                    ? u.line(0, 0, a, 0).stroke({ color: o, width: l + 1 })
                    : i === "verticalLines"
                    ? u.line(0, 0, 0, n).stroke({ color: o, width: l + 1 })
                    : i === "slantedLines"
                    ? u.line(0, 0, n, a).stroke({ color: o, width: l })
                    : i === "squares"
                    ? u.rect(n, a).fill("none").stroke({ color: o, width: l })
                    : i === "circles" &&
                      u.circle(n).fill("none").stroke({ color: o, width: l });
                });
              },
            },
            {
              key: "drawGradient",
              value: function (i, n, a, o, l) {
                var u,
                  h =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : null,
                  d =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : null,
                  g =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : null,
                  x =
                    arguments.length > 8 && arguments[8] !== void 0
                      ? arguments[8]
                      : 0,
                  v = this.w;
                n.length < 9 && n.indexOf("#") === 0 && (n = L.hexToRgba(n, o)),
                  a.length < 9 &&
                    a.indexOf("#") === 0 &&
                    (a = L.hexToRgba(a, l));
                var w = 0,
                  k = 1,
                  C = 1,
                  P = null;
                d !== null &&
                  ((w = d[0] !== void 0 ? d[0] / 100 : 0),
                  (k = d[1] !== void 0 ? d[1] / 100 : 1),
                  (C = d[2] !== void 0 ? d[2] / 100 : 1),
                  (P = d[3] !== void 0 ? d[3] / 100 : null));
                var E = !(
                  v.config.chart.type !== "donut" &&
                  v.config.chart.type !== "pie" &&
                  v.config.chart.type !== "polarArea" &&
                  v.config.chart.type !== "bubble"
                );
                if (
                  ((u =
                    g === null || g.length === 0
                      ? v.globals.dom.Paper.gradient(
                          E ? "radial" : "linear",
                          function (p) {
                            p.at(w, n, o),
                              p.at(k, a, l),
                              p.at(C, a, l),
                              P !== null && p.at(P, n, o);
                          }
                        )
                      : v.globals.dom.Paper.gradient(
                          E ? "radial" : "linear",
                          function (p) {
                            (Array.isArray(g[x]) ? g[x] : g).forEach(function (
                              b
                            ) {
                              p.at(b.offset / 100, b.color, b.opacity);
                            });
                          }
                        )),
                  E)
                ) {
                  var I = v.globals.gridWidth / 2,
                    D = v.globals.gridHeight / 2;
                  v.config.chart.type !== "bubble"
                    ? u.attr({
                        gradientUnits: "userSpaceOnUse",
                        cx: I,
                        cy: D,
                        r: h,
                      })
                    : u.attr({ cx: 0.5, cy: 0.5, r: 0.8, fx: 0.2, fy: 0.2 });
                } else
                  i === "vertical"
                    ? u.from(0, 0).to(0, 1)
                    : i === "diagonal"
                    ? u.from(0, 0).to(1, 1)
                    : i === "horizontal"
                    ? u.from(0, 1).to(1, 1)
                    : i === "diagonal2" && u.from(1, 0).to(0, 1);
                return u;
              },
            },
            {
              key: "getTextBasedOnMaxWidth",
              value: function (i) {
                var n = i.text,
                  a = i.maxWidth,
                  o = i.fontSize,
                  l = i.fontFamily,
                  u = this.getTextRects(n, o, l),
                  h = u.width / n.length,
                  d = Math.floor(a / h);
                return a < u.width ? n.slice(0, d - 3) + "..." : n;
              },
            },
            {
              key: "drawText",
              value: function (i) {
                var n = this,
                  a = i.x,
                  o = i.y,
                  l = i.text,
                  u = i.textAnchor,
                  h = i.fontSize,
                  d = i.fontFamily,
                  g = i.fontWeight,
                  x = i.foreColor,
                  v = i.opacity,
                  w = i.maxWidth,
                  k = i.cssClass,
                  C = k === void 0 ? "" : k,
                  P = i.isPlainText,
                  E = P === void 0 || P,
                  I = this.w;
                l === void 0 && (l = "");
                var D = l;
                u || (u = "start"),
                  (x && x.length) || (x = I.config.chart.foreColor),
                  (d = d || I.config.chart.fontFamily),
                  (g = g || "regular");
                var p,
                  b = {
                    maxWidth: w,
                    fontSize: (h = h || "11px"),
                    fontFamily: d,
                  };
                return (
                  Array.isArray(l)
                    ? (p = I.globals.dom.Paper.text(function (A) {
                        for (var R = 0; R < l.length; R++)
                          (D = l[R]),
                            w &&
                              (D = n.getTextBasedOnMaxWidth(
                                s({ text: l[R] }, b)
                              )),
                            R === 0 ? A.tspan(D) : A.tspan(D).newLine();
                      }))
                    : (w &&
                        (D = this.getTextBasedOnMaxWidth(s({ text: l }, b))),
                      (p = E
                        ? I.globals.dom.Paper.plain(l)
                        : I.globals.dom.Paper.text(function (A) {
                            return A.tspan(D);
                          }))),
                  p.attr({
                    x: a,
                    y: o,
                    "text-anchor": u,
                    "dominant-baseline": "auto",
                    "font-size": h,
                    "font-family": d,
                    "font-weight": g,
                    fill: x,
                    class: "apexcharts-text " + C,
                  }),
                  (p.node.style.fontFamily = d),
                  (p.node.style.opacity = v),
                  p
                );
              },
            },
            {
              key: "drawMarker",
              value: function (i, n, a) {
                i = i || 0;
                var o = a.pSize || 0,
                  l = null;
                if (a.shape === "square" || a.shape === "rect") {
                  var u = a.pRadius === void 0 ? o / 2 : a.pRadius;
                  (n !== null && o) || ((o = 0), (u = 0));
                  var h = 1.2 * o + u,
                    d = this.drawRect(h, h, h, h, u);
                  d.attr({
                    x: i - h / 2,
                    y: n - h / 2,
                    cx: i,
                    cy: n,
                    class: a.class ? a.class : "",
                    fill: a.pointFillColor,
                    "fill-opacity": a.pointFillOpacity ? a.pointFillOpacity : 1,
                    stroke: a.pointStrokeColor,
                    "stroke-width": a.pointStrokeWidth ? a.pointStrokeWidth : 0,
                    "stroke-opacity": a.pointStrokeOpacity
                      ? a.pointStrokeOpacity
                      : 1,
                  }),
                    (l = d);
                } else
                  (a.shape !== "circle" && a.shape) ||
                    (L.isNumber(n) || ((o = 0), (n = 0)),
                    (l = this.drawCircle(o, {
                      cx: i,
                      cy: n,
                      class: a.class ? a.class : "",
                      stroke: a.pointStrokeColor,
                      fill: a.pointFillColor,
                      "fill-opacity": a.pointFillOpacity
                        ? a.pointFillOpacity
                        : 1,
                      "stroke-width": a.pointStrokeWidth
                        ? a.pointStrokeWidth
                        : 0,
                      "stroke-opacity": a.pointStrokeOpacity
                        ? a.pointStrokeOpacity
                        : 1,
                    })));
                return l;
              },
            },
            {
              key: "pathMouseEnter",
              value: function (i, n) {
                var a = this.w,
                  o = new U(this.ctx),
                  l = parseInt(i.node.getAttribute("index"), 10),
                  u = parseInt(i.node.getAttribute("j"), 10);
                if (
                  (typeof a.config.chart.events.dataPointMouseEnter ==
                    "function" &&
                    a.config.chart.events.dataPointMouseEnter(n, this.ctx, {
                      seriesIndex: l,
                      dataPointIndex: u,
                      w: a,
                    }),
                  this.ctx.events.fireEvent("dataPointMouseEnter", [
                    n,
                    this.ctx,
                    { seriesIndex: l, dataPointIndex: u, w: a },
                  ]),
                  (a.config.states.active.filter.type === "none" ||
                    i.node.getAttribute("selected") !== "true") &&
                    a.config.states.hover.filter.type !== "none" &&
                    !a.globals.isTouchDevice)
                ) {
                  var h = a.config.states.hover.filter;
                  o.applyFilter(i, l, h.type, h.value);
                }
              },
            },
            {
              key: "pathMouseLeave",
              value: function (i, n) {
                var a = this.w,
                  o = new U(this.ctx),
                  l = parseInt(i.node.getAttribute("index"), 10),
                  u = parseInt(i.node.getAttribute("j"), 10);
                typeof a.config.chart.events.dataPointMouseLeave ==
                  "function" &&
                  a.config.chart.events.dataPointMouseLeave(n, this.ctx, {
                    seriesIndex: l,
                    dataPointIndex: u,
                    w: a,
                  }),
                  this.ctx.events.fireEvent("dataPointMouseLeave", [
                    n,
                    this.ctx,
                    { seriesIndex: l, dataPointIndex: u, w: a },
                  ]),
                  (a.config.states.active.filter.type !== "none" &&
                    i.node.getAttribute("selected") === "true") ||
                    (a.config.states.hover.filter.type !== "none" &&
                      o.getDefaultFilter(i, l));
              },
            },
            {
              key: "pathMouseDown",
              value: function (i, n) {
                var a = this.w,
                  o = new U(this.ctx),
                  l = parseInt(i.node.getAttribute("index"), 10),
                  u = parseInt(i.node.getAttribute("j"), 10),
                  h = "false";
                if (i.node.getAttribute("selected") === "true") {
                  if (
                    (i.node.setAttribute("selected", "false"),
                    a.globals.selectedDataPoints[l].indexOf(u) > -1)
                  ) {
                    var d = a.globals.selectedDataPoints[l].indexOf(u);
                    a.globals.selectedDataPoints[l].splice(d, 1);
                  }
                } else {
                  if (
                    !a.config.states.active.allowMultipleDataPointsSelection &&
                    a.globals.selectedDataPoints.length > 0
                  ) {
                    a.globals.selectedDataPoints = [];
                    var g = a.globals.dom.Paper.select(
                        ".apexcharts-series path"
                      ).members,
                      x = a.globals.dom.Paper.select(
                        ".apexcharts-series circle, .apexcharts-series rect"
                      ).members,
                      v = function (C) {
                        Array.prototype.forEach.call(C, function (P) {
                          P.node.setAttribute("selected", "false"),
                            o.getDefaultFilter(P, l);
                        });
                      };
                    v(g), v(x);
                  }
                  i.node.setAttribute("selected", "true"),
                    (h = "true"),
                    a.globals.selectedDataPoints[l] === void 0 &&
                      (a.globals.selectedDataPoints[l] = []),
                    a.globals.selectedDataPoints[l].push(u);
                }
                if (h === "true") {
                  var w = a.config.states.active.filter;
                  if (w !== "none") o.applyFilter(i, l, w.type, w.value);
                  else if (
                    a.config.states.hover.filter !== "none" &&
                    !a.globals.isTouchDevice
                  ) {
                    var k = a.config.states.hover.filter;
                    o.applyFilter(i, l, k.type, k.value);
                  }
                } else
                  a.config.states.active.filter.type !== "none" &&
                    (a.config.states.hover.filter.type === "none" ||
                    a.globals.isTouchDevice
                      ? o.getDefaultFilter(i, l)
                      : ((k = a.config.states.hover.filter),
                        o.applyFilter(i, l, k.type, k.value)));
                typeof a.config.chart.events.dataPointSelection == "function" &&
                  a.config.chart.events.dataPointSelection(n, this.ctx, {
                    selectedDataPoints: a.globals.selectedDataPoints,
                    seriesIndex: l,
                    dataPointIndex: u,
                    w: a,
                  }),
                  n &&
                    this.ctx.events.fireEvent("dataPointSelection", [
                      n,
                      this.ctx,
                      {
                        selectedDataPoints: a.globals.selectedDataPoints,
                        seriesIndex: l,
                        dataPointIndex: u,
                        w: a,
                      },
                    ]);
              },
            },
            {
              key: "rotateAroundCenter",
              value: function (i) {
                var n = {};
                return (
                  i && typeof i.getBBox == "function" && (n = i.getBBox()),
                  { x: n.x + n.width / 2, y: n.y + n.height / 2 }
                );
              },
            },
            {
              key: "getTextRects",
              value: function (i, n, a, o) {
                var l =
                    !(arguments.length > 4 && arguments[4] !== void 0) ||
                    arguments[4],
                  u = this.w,
                  h = this.drawText({
                    x: -200,
                    y: -200,
                    text: i,
                    textAnchor: "start",
                    fontSize: n,
                    fontFamily: a,
                    foreColor: "#fff",
                    opacity: 0,
                  });
                o && h.attr("transform", o), u.globals.dom.Paper.add(h);
                var d = h.bbox();
                return (
                  l || (d = h.node.getBoundingClientRect()),
                  h.remove(),
                  { width: d.width, height: d.height }
                );
              },
            },
            {
              key: "placeTextWithEllipsis",
              value: function (i, n, a) {
                if (
                  typeof i.getComputedTextLength == "function" &&
                  ((i.textContent = n),
                  n.length > 0 && i.getComputedTextLength() >= a / 1.1)
                ) {
                  for (var o = n.length - 3; o > 0; o -= 3)
                    if (i.getSubStringLength(0, o) <= a / 1.1)
                      return void (i.textContent = n.substring(0, o) + "...");
                  i.textContent = ".";
                }
              },
            },
          ],
          [
            {
              key: "setAttrs",
              value: function (i, n) {
                for (var a in n) n.hasOwnProperty(a) && i.setAttribute(a, n[a]);
              },
            },
          ]
        ),
        M
      );
    })(),
    K = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(
          M,
          [
            {
              key: "getStackedSeriesTotals",
              value: function () {
                var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  n = this.w,
                  a = [];
                if (n.globals.series.length === 0) return a;
                for (
                  var o = 0;
                  o < n.globals.series[n.globals.maxValsInArrayIndex].length;
                  o++
                ) {
                  for (var l = 0, u = 0; u < n.globals.series.length; u++)
                    n.globals.series[u][o] !== void 0 &&
                      i.indexOf(u) === -1 &&
                      (l += n.globals.series[u][o]);
                  a.push(l);
                }
                return a;
              },
            },
            {
              key: "getSeriesTotalByIndex",
              value: function () {
                var i =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null;
                return i === null
                  ? this.w.config.series.reduce(function (n, a) {
                      return n + a;
                    }, 0)
                  : this.w.globals.series[i].reduce(function (n, a) {
                      return n + a;
                    }, 0);
              },
            },
            {
              key: "isSeriesNull",
              value: function () {
                var i =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null;
                return (
                  (i === null
                    ? this.w.config.series.filter(function (n) {
                        return n !== null;
                      })
                    : this.w.config.series[i].data.filter(function (n) {
                        return n !== null;
                      })
                  ).length === 0
                );
              },
            },
            {
              key: "seriesHaveSameValues",
              value: function (i) {
                return this.w.globals.series[i].every(function (n, a, o) {
                  return n === o[0];
                });
              },
            },
            {
              key: "getCategoryLabels",
              value: function (i) {
                var n = this.w,
                  a = i.slice();
                return (
                  n.config.xaxis.convertedCatToNumeric &&
                    (a = i.map(function (o, l) {
                      return n.config.xaxis.labels.formatter(
                        o - n.globals.minX + 1
                      );
                    })),
                  a
                );
              },
            },
            {
              key: "getLargestSeries",
              value: function () {
                var i = this.w;
                i.globals.maxValsInArrayIndex = i.globals.series
                  .map(function (n) {
                    return n.length;
                  })
                  .indexOf(
                    Math.max.apply(
                      Math,
                      i.globals.series.map(function (n) {
                        return n.length;
                      })
                    )
                  );
              },
            },
            {
              key: "getLargestMarkerSize",
              value: function () {
                var i = this.w,
                  n = 0;
                return (
                  i.globals.markers.size.forEach(function (a) {
                    n = Math.max(n, a);
                  }),
                  i.config.markers.discrete &&
                    i.config.markers.discrete.length &&
                    i.config.markers.discrete.forEach(function (a) {
                      n = Math.max(n, a.size);
                    }),
                  n > 0 && (n += i.config.markers.hover.sizeOffset + 1),
                  (i.globals.markers.largestSize = n),
                  n
                );
              },
            },
            {
              key: "getSeriesTotals",
              value: function () {
                var i = this.w;
                i.globals.seriesTotals = i.globals.series.map(function (n, a) {
                  var o = 0;
                  if (Array.isArray(n))
                    for (var l = 0; l < n.length; l++) o += n[l];
                  else o += n;
                  return o;
                });
              },
            },
            {
              key: "getSeriesTotalsXRange",
              value: function (i, n) {
                var a = this.w;
                return a.globals.series.map(function (o, l) {
                  for (var u = 0, h = 0; h < o.length; h++)
                    a.globals.seriesX[l][h] > i &&
                      a.globals.seriesX[l][h] < n &&
                      (u += o[h]);
                  return u;
                });
              },
            },
            {
              key: "getPercentSeries",
              value: function () {
                var i = this.w;
                i.globals.seriesPercent = i.globals.series.map(function (n, a) {
                  var o = [];
                  if (Array.isArray(n))
                    for (var l = 0; l < n.length; l++) {
                      var u = i.globals.stackedSeriesTotals[l],
                        h = 0;
                      u && (h = (100 * n[l]) / u), o.push(h);
                    }
                  else {
                    var d =
                      (100 * n) /
                      i.globals.seriesTotals.reduce(function (g, x) {
                        return g + x;
                      }, 0);
                    o.push(d);
                  }
                  return o;
                });
              },
            },
            {
              key: "getCalculatedRatios",
              value: function () {
                var i,
                  n,
                  a,
                  o,
                  l = this.w.globals,
                  u = [],
                  h = 0,
                  d = [],
                  g = 0.1,
                  x = 0;
                if (((l.yRange = []), l.isMultipleYAxis))
                  for (var v = 0; v < l.minYArr.length; v++)
                    l.yRange.push(Math.abs(l.minYArr[v] - l.maxYArr[v])),
                      d.push(0);
                else l.yRange.push(Math.abs(l.minY - l.maxY));
                (l.xRange = Math.abs(l.maxX - l.minX)),
                  (l.zRange = Math.abs(l.maxZ - l.minZ));
                for (var w = 0; w < l.yRange.length; w++)
                  u.push(l.yRange[w] / l.gridHeight);
                if (
                  ((n = l.xRange / l.gridWidth),
                  (a = Math.abs(l.initialMaxX - l.initialMinX) / l.gridWidth),
                  (i = l.yRange / l.gridWidth),
                  (o = l.xRange / l.gridHeight),
                  (h = (l.zRange / l.gridHeight) * 16) || (h = 1),
                  l.minY !== Number.MIN_VALUE &&
                    Math.abs(l.minY) !== 0 &&
                    (l.hasNegs = !0),
                  l.isMultipleYAxis)
                ) {
                  d = [];
                  for (var k = 0; k < u.length; k++)
                    d.push(-l.minYArr[k] / u[k]);
                } else
                  d.push(-l.minY / u[0]),
                    l.minY !== Number.MIN_VALUE &&
                      Math.abs(l.minY) !== 0 &&
                      ((g = -l.minY / i), (x = l.minX / n));
                return {
                  yRatio: u,
                  invertedYRatio: i,
                  zRatio: h,
                  xRatio: n,
                  initialXRatio: a,
                  invertedXRatio: o,
                  baseLineInvertedY: g,
                  baseLineY: d,
                  baseLineX: x,
                };
              },
            },
            {
              key: "getLogSeries",
              value: function (i) {
                var n = this,
                  a = this.w;
                return (
                  (a.globals.seriesLog = i.map(function (o, l) {
                    return a.config.yaxis[l] && a.config.yaxis[l].logarithmic
                      ? o.map(function (u) {
                          return u === null
                            ? null
                            : n.getLogVal(a.config.yaxis[l].logBase, u, l);
                        })
                      : o;
                  })),
                  a.globals.invalidLogScale ? i : a.globals.seriesLog
                );
              },
            },
            {
              key: "getBaseLog",
              value: function (i, n) {
                return Math.log(n) / Math.log(i);
              },
            },
            {
              key: "getLogVal",
              value: function (i, n, a) {
                if (n === 0) return 0;
                var o = this.w,
                  l =
                    o.globals.minYArr[a] === 0
                      ? -1
                      : this.getBaseLog(i, o.globals.minYArr[a]),
                  u =
                    (o.globals.maxYArr[a] === 0
                      ? 0
                      : this.getBaseLog(i, o.globals.maxYArr[a])) - l;
                return n < 1 ? n / u : (this.getBaseLog(i, n) - l) / u;
              },
            },
            {
              key: "getLogYRatios",
              value: function (i) {
                var n = this,
                  a = this.w,
                  o = this.w.globals;
                return (
                  (o.yLogRatio = i.slice()),
                  (o.logYRange = o.yRange.map(function (l, u) {
                    if (a.config.yaxis[u] && n.w.config.yaxis[u].logarithmic) {
                      var h,
                        d = -Number.MAX_VALUE,
                        g = Number.MIN_VALUE;
                      return (
                        o.seriesLog.forEach(function (x, v) {
                          x.forEach(function (w) {
                            a.config.yaxis[v] &&
                              a.config.yaxis[v].logarithmic &&
                              ((d = Math.max(w, d)), (g = Math.min(w, g)));
                          });
                        }),
                        (h = Math.pow(
                          o.yRange[u],
                          Math.abs(g - d) / o.yRange[u]
                        )),
                        (o.yLogRatio[u] = h / o.gridHeight),
                        h
                      );
                    }
                  })),
                  o.invalidLogScale ? i.slice() : o.yLogRatio
                );
              },
            },
          ],
          [
            {
              key: "checkComboSeries",
              value: function (i) {
                var n = !1,
                  a = 0,
                  o = 0;
                return (
                  i.length &&
                    i[0].type !== void 0 &&
                    i.forEach(function (l) {
                      (l.type !== "bar" &&
                        l.type !== "column" &&
                        l.type !== "candlestick" &&
                        l.type !== "boxPlot") ||
                        a++,
                        l.type !== void 0 && o++;
                    }),
                  o > 0 && (n = !0),
                  { comboBarCount: a, comboCharts: n }
                );
              },
            },
            {
              key: "extendArrayProps",
              value: function (i, n, a) {
                return (
                  n.yaxis && (n = i.extendYAxis(n, a)),
                  n.annotations &&
                    (n.annotations.yaxis && (n = i.extendYAxisAnnotations(n)),
                    n.annotations.xaxis && (n = i.extendXAxisAnnotations(n)),
                    n.annotations.points && (n = i.extendPointAnnotations(n))),
                  n
                );
              },
            },
          ]
        ),
        M
      );
    })(),
    te = (function () {
      function M(i) {
        f(this, M), (this.w = i.w), (this.annoCtx = i);
      }
      return (
        y(M, [
          {
            key: "setOrientations",
            value: function (i) {
              var n =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null,
                a = this.w;
              if (i.label.orientation === "vertical") {
                var o = n !== null ? n : 0,
                  l = a.globals.dom.baseEl.querySelector(
                    ".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(
                      o,
                      "']"
                    )
                  );
                if (l !== null) {
                  var u = l.getBoundingClientRect();
                  l.setAttribute(
                    "x",
                    parseFloat(l.getAttribute("x")) - u.height + 4
                  ),
                    i.label.position === "top"
                      ? l.setAttribute(
                          "y",
                          parseFloat(l.getAttribute("y")) + u.width
                        )
                      : l.setAttribute(
                          "y",
                          parseFloat(l.getAttribute("y")) - u.width
                        );
                  var h = this.annoCtx.graphics.rotateAroundCenter(l),
                    d = h.x,
                    g = h.y;
                  l.setAttribute(
                    "transform",
                    "rotate(-90 ".concat(d, " ").concat(g, ")")
                  );
                }
              }
            },
          },
          {
            key: "addBackgroundToAnno",
            value: function (i, n) {
              var a = this.w;
              if (
                !i ||
                n.label.text === void 0 ||
                (n.label.text !== void 0 && !String(n.label.text).trim())
              )
                return null;
              var o = a.globals.dom.baseEl
                  .querySelector(".apexcharts-grid")
                  .getBoundingClientRect(),
                l = i.getBoundingClientRect(),
                u = n.label.style.padding.left,
                h = n.label.style.padding.right,
                d = n.label.style.padding.top,
                g = n.label.style.padding.bottom;
              n.label.orientation === "vertical" &&
                ((d = n.label.style.padding.left),
                (g = n.label.style.padding.right),
                (u = n.label.style.padding.top),
                (h = n.label.style.padding.bottom));
              var x = l.left - o.left - u,
                v = l.top - o.top - d,
                w = this.annoCtx.graphics.drawRect(
                  x - a.globals.barPadForNumericAxis,
                  v,
                  l.width + u + h,
                  l.height + d + g,
                  n.label.borderRadius,
                  n.label.style.background,
                  1,
                  n.label.borderWidth,
                  n.label.borderColor,
                  0
                );
              return n.id && w.node.classList.add(n.id), w;
            },
          },
          {
            key: "annotationsBackground",
            value: function () {
              var i = this,
                n = this.w,
                a = function (o, l, u) {
                  var h = n.globals.dom.baseEl.querySelector(
                    ".apexcharts-"
                      .concat(u, "-annotations .apexcharts-")
                      .concat(u, "-annotation-label[rel='")
                      .concat(l, "']")
                  );
                  if (h) {
                    var d = h.parentNode,
                      g = i.addBackgroundToAnno(h, o);
                    g &&
                      (d.insertBefore(g.node, h),
                      o.label.mouseEnter &&
                        g.node.addEventListener(
                          "mouseenter",
                          o.label.mouseEnter.bind(i, o)
                        ),
                      o.label.mouseLeave &&
                        g.node.addEventListener(
                          "mouseleave",
                          o.label.mouseLeave.bind(i, o)
                        ),
                      o.label.click &&
                        g.node.addEventListener(
                          "click",
                          o.label.click.bind(i, o)
                        ));
                  }
                };
              n.config.annotations.xaxis.map(function (o, l) {
                a(o, l, "xaxis");
              }),
                n.config.annotations.yaxis.map(function (o, l) {
                  a(o, l, "yaxis");
                }),
                n.config.annotations.points.map(function (o, l) {
                  a(o, l, "point");
                });
            },
          },
          {
            key: "getY1Y2",
            value: function (i, n) {
              var a,
                o = i === "y1" ? n.y : n.y2,
                l = this.w;
              if (this.annoCtx.invertAxis) {
                var u = l.globals.labels.indexOf(o);
                l.config.xaxis.convertedCatToNumeric &&
                  (u = l.globals.categoryLabels.indexOf(o));
                var h = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-yaxis-texts-g text:nth-child(" + (u + 1) + ")"
                );
                h && (a = parseFloat(h.getAttribute("y")));
              } else {
                var d;
                l.config.yaxis[n.yAxisIndex].logarithmic
                  ? (d =
                      (o = new K(this.annoCtx.ctx).getLogVal(o, n.yAxisIndex)) /
                      l.globals.yLogRatio[n.yAxisIndex])
                  : (d =
                      (o - l.globals.minYArr[n.yAxisIndex]) /
                      (l.globals.yRange[n.yAxisIndex] / l.globals.gridHeight)),
                  (a = l.globals.gridHeight - d),
                  !n.marker || (n.y !== void 0 && n.y !== null) || (a = 0),
                  l.config.yaxis[n.yAxisIndex] &&
                    l.config.yaxis[n.yAxisIndex].reversed &&
                    (a = d);
              }
              return (
                typeof o == "string" &&
                  o.indexOf("px") > -1 &&
                  (a = parseFloat(o)),
                a
              );
            },
          },
          {
            key: "getX1X2",
            value: function (i, n) {
              var a = this.w,
                o = this.annoCtx.invertAxis ? a.globals.minY : a.globals.minX,
                l = this.annoCtx.invertAxis ? a.globals.maxY : a.globals.maxX,
                u = this.annoCtx.invertAxis
                  ? a.globals.yRange[0]
                  : a.globals.xRange,
                h = (n.x - o) / (u / a.globals.gridWidth);
              this.annoCtx.inversedReversedAxis &&
                (h = (l - n.x) / (u / a.globals.gridWidth)),
                (a.config.xaxis.type !== "category" &&
                  !a.config.xaxis.convertedCatToNumeric) ||
                  this.annoCtx.invertAxis ||
                  a.globals.dataFormatXNumeric ||
                  (h = this.getStringX(n.x));
              var d = (n.x2 - o) / (u / a.globals.gridWidth);
              return (
                this.annoCtx.inversedReversedAxis &&
                  (d = (l - n.x2) / (u / a.globals.gridWidth)),
                (a.config.xaxis.type !== "category" &&
                  !a.config.xaxis.convertedCatToNumeric) ||
                  this.annoCtx.invertAxis ||
                  a.globals.dataFormatXNumeric ||
                  (d = this.getStringX(n.x2)),
                (n.x !== void 0 && n.x !== null) ||
                  !n.marker ||
                  (h = a.globals.gridWidth),
                i === "x1" &&
                  typeof n.x == "string" &&
                  n.x.indexOf("px") > -1 &&
                  (h = parseFloat(n.x)),
                i === "x2" &&
                  typeof n.x2 == "string" &&
                  n.x2.indexOf("px") > -1 &&
                  (d = parseFloat(n.x2)),
                i === "x1" ? h : d
              );
            },
          },
          {
            key: "getStringX",
            value: function (i) {
              var n = this.w,
                a = i;
              n.config.xaxis.convertedCatToNumeric &&
                n.globals.categoryLabels.length &&
                (i = n.globals.categoryLabels.indexOf(i) + 1);
              var o = n.globals.labels.indexOf(i),
                l = n.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxis-texts-g text:nth-child(" + (o + 1) + ")"
                );
              return l && (a = parseFloat(l.getAttribute("x"))), a;
            },
          },
        ]),
        M
      );
    })(),
    q = (function () {
      function M(i) {
        f(this, M),
          (this.w = i.w),
          (this.annoCtx = i),
          (this.invertAxis = this.annoCtx.invertAxis),
          (this.helpers = new te(this.annoCtx));
      }
      return (
        y(M, [
          {
            key: "addXaxisAnnotation",
            value: function (i, n, a) {
              var o,
                l = this.w,
                u = this.helpers.getX1X2("x1", i),
                h = i.label.text,
                d = i.strokeDashArray;
              if (L.isNumber(u)) {
                if (i.x2 === null || i.x2 === void 0) {
                  var g = this.annoCtx.graphics.drawLine(
                    u + i.offsetX,
                    0 + i.offsetY,
                    u + i.offsetX,
                    l.globals.gridHeight + i.offsetY,
                    i.borderColor,
                    d,
                    i.borderWidth
                  );
                  n.appendChild(g.node), i.id && g.node.classList.add(i.id);
                } else {
                  if ((o = this.helpers.getX1X2("x2", i)) < u) {
                    var x = u;
                    (u = o), (o = x);
                  }
                  var v = this.annoCtx.graphics.drawRect(
                    u + i.offsetX,
                    0 + i.offsetY,
                    o - u,
                    l.globals.gridHeight + i.offsetY,
                    0,
                    i.fillColor,
                    i.opacity,
                    1,
                    i.borderColor,
                    d
                  );
                  v.node.classList.add("apexcharts-annotation-rect"),
                    v.attr(
                      "clip-path",
                      "url(#gridRectMask".concat(l.globals.cuid, ")")
                    ),
                    n.appendChild(v.node),
                    i.id && v.node.classList.add(i.id);
                }
                var w = this.annoCtx.graphics.getTextRects(
                    h,
                    parseFloat(i.label.style.fontSize)
                  ),
                  k =
                    i.label.position === "top"
                      ? 4
                      : i.label.position === "center"
                      ? l.globals.gridHeight / 2 +
                        (i.label.orientation === "vertical" ? w.width / 2 : 0)
                      : l.globals.gridHeight,
                  C = this.annoCtx.graphics.drawText({
                    x: u + i.label.offsetX,
                    y:
                      k +
                      i.label.offsetY -
                      (i.label.orientation === "vertical"
                        ? i.label.position === "top"
                          ? w.width / 2 - 12
                          : -w.width / 2
                        : 0),
                    text: h,
                    textAnchor: i.label.textAnchor,
                    fontSize: i.label.style.fontSize,
                    fontFamily: i.label.style.fontFamily,
                    fontWeight: i.label.style.fontWeight,
                    foreColor: i.label.style.color,
                    cssClass: "apexcharts-xaxis-annotation-label "
                      .concat(i.label.style.cssClass, " ")
                      .concat(i.id ? i.id : ""),
                  });
                C.attr({ rel: a }),
                  n.appendChild(C.node),
                  this.annoCtx.helpers.setOrientations(i, a);
              }
            },
          },
          {
            key: "drawXAxisAnnotations",
            value: function () {
              var i = this,
                n = this.w,
                a = this.annoCtx.graphics.group({
                  class: "apexcharts-xaxis-annotations",
                });
              return (
                n.config.annotations.xaxis.map(function (o, l) {
                  i.addXaxisAnnotation(o, a.node, l);
                }),
                a
              );
            },
          },
        ]),
        M
      );
    })(),
    ie = (function () {
      function M(i) {
        f(this, M),
          (this.w = i.w),
          (this.annoCtx = i),
          (this.helpers = new te(this.annoCtx));
      }
      return (
        y(M, [
          {
            key: "addYaxisAnnotation",
            value: function (i, n, a) {
              var o,
                l = this.w,
                u = i.strokeDashArray,
                h = this.helpers.getY1Y2("y1", i),
                d = i.label.text;
              if (i.y2 === null || i.y2 === void 0) {
                var g = this.annoCtx.graphics.drawLine(
                  0 + i.offsetX,
                  h + i.offsetY,
                  this._getYAxisAnnotationWidth(i),
                  h + i.offsetY,
                  i.borderColor,
                  u,
                  i.borderWidth
                );
                n.appendChild(g.node), i.id && g.node.classList.add(i.id);
              } else {
                if ((o = this.helpers.getY1Y2("y2", i)) > h) {
                  var x = h;
                  (h = o), (o = x);
                }
                var v = this.annoCtx.graphics.drawRect(
                  0 + i.offsetX,
                  o + i.offsetY,
                  this._getYAxisAnnotationWidth(i),
                  h - o,
                  0,
                  i.fillColor,
                  i.opacity,
                  1,
                  i.borderColor,
                  u
                );
                v.node.classList.add("apexcharts-annotation-rect"),
                  v.attr(
                    "clip-path",
                    "url(#gridRectMask".concat(l.globals.cuid, ")")
                  ),
                  n.appendChild(v.node),
                  i.id && v.node.classList.add(i.id);
              }
              var w =
                  i.label.position === "right"
                    ? l.globals.gridWidth
                    : i.label.position === "center"
                    ? l.globals.gridWidth / 2
                    : 0,
                k = this.annoCtx.graphics.drawText({
                  x: w + i.label.offsetX,
                  y: (o ?? h) + i.label.offsetY - 3,
                  text: d,
                  textAnchor: i.label.textAnchor,
                  fontSize: i.label.style.fontSize,
                  fontFamily: i.label.style.fontFamily,
                  fontWeight: i.label.style.fontWeight,
                  foreColor: i.label.style.color,
                  cssClass: "apexcharts-yaxis-annotation-label "
                    .concat(i.label.style.cssClass, " ")
                    .concat(i.id ? i.id : ""),
                });
              k.attr({ rel: a }), n.appendChild(k.node);
            },
          },
          {
            key: "_getYAxisAnnotationWidth",
            value: function (i) {
              var n = this.w;
              return (
                n.globals.gridWidth,
                (i.width.indexOf("%") > -1
                  ? (n.globals.gridWidth * parseInt(i.width, 10)) / 100
                  : parseInt(i.width, 10)) + i.offsetX
              );
            },
          },
          {
            key: "drawYAxisAnnotations",
            value: function () {
              var i = this,
                n = this.w,
                a = this.annoCtx.graphics.group({
                  class: "apexcharts-yaxis-annotations",
                });
              return (
                n.config.annotations.yaxis.map(function (o, l) {
                  i.addYaxisAnnotation(o, a.node, l);
                }),
                a
              );
            },
          },
        ]),
        M
      );
    })(),
    ae = (function () {
      function M(i) {
        f(this, M),
          (this.w = i.w),
          (this.annoCtx = i),
          (this.helpers = new te(this.annoCtx));
      }
      return (
        y(M, [
          {
            key: "addPointAnnotation",
            value: function (i, n, a) {
              this.w;
              var o = this.helpers.getX1X2("x1", i),
                l = this.helpers.getY1Y2("y1", i);
              if (L.isNumber(o)) {
                var u = {
                    pSize: i.marker.size,
                    pointStrokeWidth: i.marker.strokeWidth,
                    pointFillColor: i.marker.fillColor,
                    pointStrokeColor: i.marker.strokeColor,
                    shape: i.marker.shape,
                    pRadius: i.marker.radius,
                    class: "apexcharts-point-annotation-marker "
                      .concat(i.marker.cssClass, " ")
                      .concat(i.id ? i.id : ""),
                  },
                  h = this.annoCtx.graphics.drawMarker(
                    o + i.marker.offsetX,
                    l + i.marker.offsetY,
                    u
                  );
                n.appendChild(h.node);
                var d = i.label.text ? i.label.text : "",
                  g = this.annoCtx.graphics.drawText({
                    x: o + i.label.offsetX,
                    y:
                      l +
                      i.label.offsetY -
                      i.marker.size -
                      parseFloat(i.label.style.fontSize) / 1.6,
                    text: d,
                    textAnchor: i.label.textAnchor,
                    fontSize: i.label.style.fontSize,
                    fontFamily: i.label.style.fontFamily,
                    fontWeight: i.label.style.fontWeight,
                    foreColor: i.label.style.color,
                    cssClass: "apexcharts-point-annotation-label "
                      .concat(i.label.style.cssClass, " ")
                      .concat(i.id ? i.id : ""),
                  });
                if (
                  (g.attr({ rel: a }), n.appendChild(g.node), i.customSVG.SVG)
                ) {
                  var x = this.annoCtx.graphics.group({
                    class:
                      "apexcharts-point-annotations-custom-svg " +
                      i.customSVG.cssClass,
                  });
                  x.attr({
                    transform: "translate("
                      .concat(o + i.customSVG.offsetX, ", ")
                      .concat(l + i.customSVG.offsetY, ")"),
                  }),
                    (x.node.innerHTML = i.customSVG.SVG),
                    n.appendChild(x.node);
                }
                if (i.image.path) {
                  var v = i.image.width ? i.image.width : 20,
                    w = i.image.height ? i.image.height : 20;
                  h = this.annoCtx.addImage({
                    x: o + i.image.offsetX - v / 2,
                    y: l + i.image.offsetY - w / 2,
                    width: v,
                    height: w,
                    path: i.image.path,
                    appendTo: ".apexcharts-point-annotations",
                  });
                }
                i.mouseEnter &&
                  h.node.addEventListener(
                    "mouseenter",
                    i.mouseEnter.bind(this, i)
                  ),
                  i.mouseLeave &&
                    h.node.addEventListener(
                      "mouseleave",
                      i.mouseLeave.bind(this, i)
                    ),
                  i.click &&
                    h.node.addEventListener("click", i.click.bind(this, i));
              }
            },
          },
          {
            key: "drawPointAnnotations",
            value: function () {
              var i = this,
                n = this.w,
                a = this.annoCtx.graphics.group({
                  class: "apexcharts-point-annotations",
                });
              return (
                n.config.annotations.points.map(function (o, l) {
                  i.addPointAnnotation(o, a.node, l);
                }),
                a
              );
            },
          },
        ]),
        M
      );
    })(),
    pe = {
      name: "en",
      options: {
        months: [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        shortMonths: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
        days: [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        toolbar: {
          exportToSVG: "Download SVG",
          exportToPNG: "Download PNG",
          exportToCSV: "Download CSV",
          menu: "Menu",
          selection: "Selection",
          selectionZoom: "Selection Zoom",
          zoomIn: "Zoom In",
          zoomOut: "Zoom Out",
          pan: "Panning",
          reset: "Reset Zoom",
        },
      },
    },
    le = (function () {
      function M() {
        f(this, M),
          (this.yAxis = {
            show: !0,
            showAlways: !1,
            showForNullSeries: !0,
            seriesName: void 0,
            opposite: !1,
            reversed: !1,
            logarithmic: !1,
            logBase: 10,
            tickAmount: void 0,
            forceNiceScale: !1,
            max: void 0,
            min: void 0,
            floating: !1,
            decimalsInFloat: void 0,
            labels: {
              show: !0,
              minWidth: 0,
              maxWidth: 160,
              offsetX: 0,
              offsetY: 0,
              align: void 0,
              rotate: 0,
              padding: 20,
              style: {
                colors: [],
                fontSize: "11px",
                fontWeight: 400,
                fontFamily: void 0,
                cssClass: "",
              },
              formatter: void 0,
            },
            axisBorder: {
              show: !1,
              color: "#e0e0e0",
              width: 1,
              offsetX: 0,
              offsetY: 0,
            },
            axisTicks: {
              show: !1,
              color: "#e0e0e0",
              width: 6,
              offsetX: 0,
              offsetY: 0,
            },
            title: {
              text: void 0,
              rotate: -90,
              offsetY: 0,
              offsetX: 0,
              style: {
                color: void 0,
                fontSize: "11px",
                fontWeight: 900,
                fontFamily: void 0,
                cssClass: "",
              },
            },
            tooltip: { enabled: !1, offsetX: 0 },
            crosshairs: {
              show: !0,
              position: "front",
              stroke: { color: "#b6b6b6", width: 1, dashArray: 0 },
            },
          }),
          (this.pointAnnotation = {
            id: void 0,
            x: 0,
            y: null,
            yAxisIndex: 0,
            seriesIndex: 0,
            mouseEnter: void 0,
            mouseLeave: void 0,
            click: void 0,
            marker: {
              size: 4,
              fillColor: "#fff",
              strokeWidth: 2,
              strokeColor: "#333",
              shape: "circle",
              offsetX: 0,
              offsetY: 0,
              radius: 2,
              cssClass: "",
            },
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "middle",
              offsetX: 0,
              offsetY: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
            customSVG: {
              SVG: void 0,
              cssClass: void 0,
              offsetX: 0,
              offsetY: 0,
            },
            image: {
              path: void 0,
              width: 20,
              height: 20,
              offsetX: 0,
              offsetY: 0,
            },
          }),
          (this.yAxisAnnotation = {
            id: void 0,
            y: 0,
            y2: null,
            strokeDashArray: 1,
            fillColor: "#c2c2c2",
            borderColor: "#c2c2c2",
            borderWidth: 1,
            opacity: 0.3,
            offsetX: 0,
            offsetY: 0,
            width: "100%",
            yAxisIndex: 0,
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "end",
              position: "right",
              offsetX: 0,
              offsetY: -3,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
          }),
          (this.xAxisAnnotation = {
            id: void 0,
            x: 0,
            x2: null,
            strokeDashArray: 1,
            fillColor: "#c2c2c2",
            borderColor: "#c2c2c2",
            borderWidth: 1,
            opacity: 0.3,
            offsetX: 0,
            offsetY: 0,
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "middle",
              orientation: "vertical",
              position: "top",
              offsetX: 0,
              offsetY: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
          }),
          (this.text = {
            x: 0,
            y: 0,
            text: "",
            textAnchor: "start",
            foreColor: void 0,
            fontSize: "13px",
            fontFamily: void 0,
            fontWeight: 400,
            appendTo: ".apexcharts-annotations",
            backgroundColor: "transparent",
            borderColor: "#c2c2c2",
            borderRadius: 0,
            borderWidth: 0,
            paddingLeft: 4,
            paddingRight: 4,
            paddingTop: 2,
            paddingBottom: 2,
          });
      }
      return (
        y(M, [
          {
            key: "init",
            value: function () {
              return {
                annotations: {
                  yaxis: [this.yAxisAnnotation],
                  xaxis: [this.xAxisAnnotation],
                  points: [this.pointAnnotation],
                  texts: [],
                  images: [],
                  shapes: [],
                },
                chart: {
                  animations: {
                    enabled: !0,
                    easing: "easeinout",
                    speed: 800,
                    animateGradually: { delay: 150, enabled: !0 },
                    dynamicAnimation: { enabled: !0, speed: 350 },
                  },
                  background: "transparent",
                  locales: [pe],
                  defaultLocale: "en",
                  dropShadow: {
                    enabled: !1,
                    enabledOnSeries: void 0,
                    top: 2,
                    left: 2,
                    blur: 4,
                    color: "#000",
                    opacity: 0.35,
                  },
                  events: {
                    animationEnd: void 0,
                    beforeMount: void 0,
                    mounted: void 0,
                    updated: void 0,
                    click: void 0,
                    mouseMove: void 0,
                    mouseLeave: void 0,
                    xAxisLabelClick: void 0,
                    legendClick: void 0,
                    markerClick: void 0,
                    selection: void 0,
                    dataPointSelection: void 0,
                    dataPointMouseEnter: void 0,
                    dataPointMouseLeave: void 0,
                    beforeZoom: void 0,
                    beforeResetZoom: void 0,
                    zoomed: void 0,
                    scrolled: void 0,
                    brushScrolled: void 0,
                  },
                  foreColor: "#373d3f",
                  fontFamily: "Helvetica, Arial, sans-serif",
                  height: "auto",
                  parentHeightOffset: 15,
                  redrawOnParentResize: !0,
                  redrawOnWindowResize: !0,
                  id: void 0,
                  group: void 0,
                  offsetX: 0,
                  offsetY: 0,
                  selection: {
                    enabled: !1,
                    type: "x",
                    fill: { color: "#24292e", opacity: 0.1 },
                    stroke: {
                      width: 1,
                      color: "#24292e",
                      opacity: 0.4,
                      dashArray: 3,
                    },
                    xaxis: { min: void 0, max: void 0 },
                    yaxis: { min: void 0, max: void 0 },
                  },
                  sparkline: { enabled: !1 },
                  brush: {
                    enabled: !1,
                    autoScaleYaxis: !0,
                    target: void 0,
                    targets: void 0,
                  },
                  stacked: !1,
                  stackType: "normal",
                  toolbar: {
                    show: !0,
                    offsetX: 0,
                    offsetY: 0,
                    tools: {
                      download: !0,
                      selection: !0,
                      zoom: !0,
                      zoomin: !0,
                      zoomout: !0,
                      pan: !0,
                      reset: !0,
                      customIcons: [],
                    },
                    export: {
                      csv: {
                        filename: void 0,
                        columnDelimiter: ",",
                        headerCategory: "category",
                        headerValue: "value",
                        dateFormatter: function (i) {
                          return new Date(i).toDateString();
                        },
                      },
                      png: { filename: void 0 },
                      svg: { filename: void 0 },
                    },
                    autoSelected: "zoom",
                  },
                  type: "line",
                  width: "100%",
                  zoom: {
                    enabled: !0,
                    type: "x",
                    autoScaleYaxis: !1,
                    zoomedArea: {
                      fill: { color: "#90CAF9", opacity: 0.4 },
                      stroke: { color: "#0D47A1", opacity: 0.4, width: 1 },
                    },
                  },
                },
                plotOptions: {
                  area: { fillTo: "origin" },
                  bar: {
                    horizontal: !1,
                    columnWidth: "70%",
                    barHeight: "70%",
                    distributed: !1,
                    borderRadius: 0,
                    borderRadiusApplication: "around",
                    borderRadiusWhenStacked: "last",
                    rangeBarOverlap: !0,
                    rangeBarGroupRows: !1,
                    hideZeroBarsWhenGrouped: !1,
                    isDumbbell: !1,
                    dumbbellColors: void 0,
                    isFunnel: !1,
                    isFunnel3d: !0,
                    colors: {
                      ranges: [],
                      backgroundBarColors: [],
                      backgroundBarOpacity: 1,
                      backgroundBarRadius: 0,
                    },
                    dataLabels: {
                      position: "top",
                      maxItems: 100,
                      hideOverflowingLabels: !0,
                      orientation: "horizontal",
                      total: {
                        enabled: !1,
                        formatter: void 0,
                        offsetX: 0,
                        offsetY: 0,
                        style: {
                          color: "#373d3f",
                          fontSize: "12px",
                          fontFamily: void 0,
                          fontWeight: 600,
                        },
                      },
                    },
                  },
                  bubble: {
                    zScaling: !0,
                    minBubbleRadius: void 0,
                    maxBubbleRadius: void 0,
                  },
                  candlestick: {
                    colors: { upward: "#00B746", downward: "#EF403C" },
                    wick: { useFillColor: !0 },
                  },
                  boxPlot: { colors: { upper: "#00E396", lower: "#008FFB" } },
                  heatmap: {
                    radius: 2,
                    enableShades: !0,
                    shadeIntensity: 0.5,
                    reverseNegativeShade: !1,
                    distributed: !1,
                    useFillColorAsStroke: !1,
                    colorScale: {
                      inverse: !1,
                      ranges: [],
                      min: void 0,
                      max: void 0,
                    },
                  },
                  treemap: {
                    enableShades: !0,
                    shadeIntensity: 0.5,
                    distributed: !1,
                    reverseNegativeShade: !1,
                    useFillColorAsStroke: !1,
                    dataLabels: { format: "scale" },
                    colorScale: {
                      inverse: !1,
                      ranges: [],
                      min: void 0,
                      max: void 0,
                    },
                  },
                  radialBar: {
                    inverseOrder: !1,
                    startAngle: 0,
                    endAngle: 360,
                    offsetX: 0,
                    offsetY: 0,
                    hollow: {
                      margin: 5,
                      size: "50%",
                      background: "transparent",
                      image: void 0,
                      imageWidth: 150,
                      imageHeight: 150,
                      imageOffsetX: 0,
                      imageOffsetY: 0,
                      imageClipped: !0,
                      position: "front",
                      dropShadow: {
                        enabled: !1,
                        top: 0,
                        left: 0,
                        blur: 3,
                        color: "#000",
                        opacity: 0.5,
                      },
                    },
                    track: {
                      show: !0,
                      startAngle: void 0,
                      endAngle: void 0,
                      background: "#f2f2f2",
                      strokeWidth: "97%",
                      opacity: 1,
                      margin: 5,
                      dropShadow: {
                        enabled: !1,
                        top: 0,
                        left: 0,
                        blur: 3,
                        color: "#000",
                        opacity: 0.5,
                      },
                    },
                    dataLabels: {
                      show: !0,
                      name: {
                        show: !0,
                        fontSize: "16px",
                        fontFamily: void 0,
                        fontWeight: 600,
                        color: void 0,
                        offsetY: 0,
                        formatter: function (i) {
                          return i;
                        },
                      },
                      value: {
                        show: !0,
                        fontSize: "14px",
                        fontFamily: void 0,
                        fontWeight: 400,
                        color: void 0,
                        offsetY: 16,
                        formatter: function (i) {
                          return i + "%";
                        },
                      },
                      total: {
                        show: !1,
                        label: "Total",
                        fontSize: "16px",
                        fontWeight: 600,
                        fontFamily: void 0,
                        color: void 0,
                        formatter: function (i) {
                          return (
                            i.globals.seriesTotals.reduce(function (n, a) {
                              return n + a;
                            }, 0) /
                              i.globals.series.length +
                            "%"
                          );
                        },
                      },
                    },
                  },
                  pie: {
                    customScale: 1,
                    offsetX: 0,
                    offsetY: 0,
                    startAngle: 0,
                    endAngle: 360,
                    expandOnClick: !0,
                    dataLabels: { offset: 0, minAngleToShowLabel: 10 },
                    donut: {
                      size: "65%",
                      background: "transparent",
                      labels: {
                        show: !1,
                        name: {
                          show: !0,
                          fontSize: "16px",
                          fontFamily: void 0,
                          fontWeight: 600,
                          color: void 0,
                          offsetY: -10,
                          formatter: function (i) {
                            return i;
                          },
                        },
                        value: {
                          show: !0,
                          fontSize: "20px",
                          fontFamily: void 0,
                          fontWeight: 400,
                          color: void 0,
                          offsetY: 10,
                          formatter: function (i) {
                            return i;
                          },
                        },
                        total: {
                          show: !1,
                          showAlways: !1,
                          label: "Total",
                          fontSize: "16px",
                          fontWeight: 400,
                          fontFamily: void 0,
                          color: void 0,
                          formatter: function (i) {
                            return i.globals.seriesTotals.reduce(function (
                              n,
                              a
                            ) {
                              return n + a;
                            },
                            0);
                          },
                        },
                      },
                    },
                  },
                  polarArea: {
                    rings: { strokeWidth: 1, strokeColor: "#e8e8e8" },
                    spokes: { strokeWidth: 1, connectorColors: "#e8e8e8" },
                  },
                  radar: {
                    size: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    polygons: {
                      strokeWidth: 1,
                      strokeColors: "#e8e8e8",
                      connectorColors: "#e8e8e8",
                      fill: { colors: void 0 },
                    },
                  },
                },
                colors: void 0,
                dataLabels: {
                  enabled: !0,
                  enabledOnSeries: void 0,
                  formatter: function (i) {
                    return i !== null ? i : "";
                  },
                  textAnchor: "middle",
                  distributed: !1,
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    fontSize: "12px",
                    fontFamily: void 0,
                    fontWeight: 600,
                    colors: void 0,
                  },
                  background: {
                    enabled: !0,
                    foreColor: "#fff",
                    borderRadius: 2,
                    padding: 4,
                    opacity: 0.9,
                    borderWidth: 1,
                    borderColor: "#fff",
                    dropShadow: {
                      enabled: !1,
                      top: 1,
                      left: 1,
                      blur: 1,
                      color: "#000",
                      opacity: 0.45,
                    },
                  },
                  dropShadow: {
                    enabled: !1,
                    top: 1,
                    left: 1,
                    blur: 1,
                    color: "#000",
                    opacity: 0.45,
                  },
                },
                fill: {
                  type: "solid",
                  colors: void 0,
                  opacity: 0.85,
                  gradient: {
                    shade: "dark",
                    type: "horizontal",
                    shadeIntensity: 0.5,
                    gradientToColors: void 0,
                    inverseColors: !0,
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [0, 50, 100],
                    colorStops: [],
                  },
                  image: { src: [], width: void 0, height: void 0 },
                  pattern: {
                    style: "squares",
                    width: 6,
                    height: 6,
                    strokeWidth: 2,
                  },
                },
                forecastDataPoints: {
                  count: 0,
                  fillOpacity: 0.5,
                  strokeWidth: void 0,
                  dashArray: 4,
                },
                grid: {
                  show: !0,
                  borderColor: "#e0e0e0",
                  strokeDashArray: 0,
                  position: "back",
                  xaxis: { lines: { show: !1 } },
                  yaxis: { lines: { show: !0 } },
                  row: { colors: void 0, opacity: 0.5 },
                  column: { colors: void 0, opacity: 0.5 },
                  padding: { top: 0, right: 10, bottom: 0, left: 12 },
                },
                labels: [],
                legend: {
                  show: !0,
                  showForSingleSeries: !1,
                  showForNullSeries: !0,
                  showForZeroSeries: !0,
                  floating: !1,
                  position: "bottom",
                  horizontalAlign: "center",
                  inverseOrder: !1,
                  fontSize: "12px",
                  fontFamily: void 0,
                  fontWeight: 400,
                  width: void 0,
                  height: void 0,
                  formatter: void 0,
                  tooltipHoverFormatter: void 0,
                  offsetX: -20,
                  offsetY: 4,
                  customLegendItems: [],
                  labels: { colors: void 0, useSeriesColors: !1 },
                  markers: {
                    width: 12,
                    height: 12,
                    strokeWidth: 0,
                    fillColors: void 0,
                    strokeColor: "#fff",
                    radius: 12,
                    customHTML: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    onClick: void 0,
                  },
                  itemMargin: { horizontal: 5, vertical: 2 },
                  onItemClick: { toggleDataSeries: !0 },
                  onItemHover: { highlightDataSeries: !0 },
                },
                markers: {
                  discrete: [],
                  size: 0,
                  colors: void 0,
                  strokeColors: "#fff",
                  strokeWidth: 2,
                  strokeOpacity: 0.9,
                  strokeDashArray: 0,
                  fillOpacity: 1,
                  shape: "circle",
                  width: 8,
                  height: 8,
                  radius: 2,
                  offsetX: 0,
                  offsetY: 0,
                  onClick: void 0,
                  onDblClick: void 0,
                  showNullDataPoints: !0,
                  hover: { size: void 0, sizeOffset: 3 },
                },
                noData: {
                  text: void 0,
                  align: "center",
                  verticalAlign: "middle",
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    color: void 0,
                    fontSize: "14px",
                    fontFamily: void 0,
                  },
                },
                responsive: [],
                series: void 0,
                states: {
                  normal: { filter: { type: "none", value: 0 } },
                  hover: { filter: { type: "lighten", value: 0.1 } },
                  active: {
                    allowMultipleDataPointsSelection: !1,
                    filter: { type: "darken", value: 0.5 },
                  },
                },
                title: {
                  text: void 0,
                  align: "left",
                  margin: 5,
                  offsetX: 0,
                  offsetY: 0,
                  floating: !1,
                  style: {
                    fontSize: "14px",
                    fontWeight: 900,
                    fontFamily: void 0,
                    color: void 0,
                  },
                },
                subtitle: {
                  text: void 0,
                  align: "left",
                  margin: 5,
                  offsetX: 0,
                  offsetY: 30,
                  floating: !1,
                  style: {
                    fontSize: "12px",
                    fontWeight: 400,
                    fontFamily: void 0,
                    color: void 0,
                  },
                },
                stroke: {
                  show: !0,
                  curve: "smooth",
                  lineCap: "butt",
                  width: 2,
                  colors: void 0,
                  dashArray: 0,
                  fill: {
                    type: "solid",
                    colors: void 0,
                    opacity: 0.85,
                    gradient: {
                      shade: "dark",
                      type: "horizontal",
                      shadeIntensity: 0.5,
                      gradientToColors: void 0,
                      inverseColors: !0,
                      opacityFrom: 1,
                      opacityTo: 1,
                      stops: [0, 50, 100],
                      colorStops: [],
                    },
                  },
                },
                tooltip: {
                  enabled: !0,
                  enabledOnSeries: void 0,
                  shared: !0,
                  followCursor: !1,
                  intersect: !1,
                  inverseOrder: !1,
                  custom: void 0,
                  fillSeriesColor: !1,
                  theme: "light",
                  cssClass: "",
                  style: { fontSize: "12px", fontFamily: void 0 },
                  onDatasetHover: { highlightDataSeries: !1 },
                  x: { show: !0, format: "dd MMM", formatter: void 0 },
                  y: {
                    formatter: void 0,
                    title: {
                      formatter: function (i) {
                        return i ? i + ": " : "";
                      },
                    },
                  },
                  z: { formatter: void 0, title: "Size: " },
                  marker: { show: !0, fillColors: void 0 },
                  items: { display: "flex" },
                  fixed: {
                    enabled: !1,
                    position: "topRight",
                    offsetX: 0,
                    offsetY: 0,
                  },
                },
                xaxis: {
                  type: "category",
                  categories: [],
                  convertedCatToNumeric: !1,
                  offsetX: 0,
                  offsetY: 0,
                  overwriteCategories: void 0,
                  labels: {
                    show: !0,
                    rotate: -45,
                    rotateAlways: !1,
                    hideOverlappingLabels: !0,
                    trim: !1,
                    minHeight: void 0,
                    maxHeight: 120,
                    showDuplicates: !0,
                    style: {
                      colors: [],
                      fontSize: "12px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                    offsetX: 0,
                    offsetY: 0,
                    format: void 0,
                    formatter: void 0,
                    datetimeUTC: !0,
                    datetimeFormatter: {
                      year: "yyyy",
                      month: "MMM 'yy",
                      day: "dd MMM",
                      hour: "HH:mm",
                      minute: "HH:mm:ss",
                      second: "HH:mm:ss",
                    },
                  },
                  group: {
                    groups: [],
                    style: {
                      colors: [],
                      fontSize: "12px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                  },
                  axisBorder: {
                    show: !0,
                    color: "#e0e0e0",
                    width: "100%",
                    height: 1,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  axisTicks: {
                    show: !0,
                    color: "#e0e0e0",
                    height: 6,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  tickAmount: void 0,
                  tickPlacement: "on",
                  min: void 0,
                  max: void 0,
                  range: void 0,
                  floating: !1,
                  decimalsInFloat: void 0,
                  position: "bottom",
                  title: {
                    text: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    style: {
                      color: void 0,
                      fontSize: "12px",
                      fontWeight: 900,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                  },
                  crosshairs: {
                    show: !0,
                    width: 1,
                    position: "back",
                    opacity: 0.9,
                    stroke: { color: "#b6b6b6", width: 1, dashArray: 3 },
                    fill: {
                      type: "solid",
                      color: "#B1B9C4",
                      gradient: {
                        colorFrom: "#D8E3F0",
                        colorTo: "#BED1E6",
                        stops: [0, 100],
                        opacityFrom: 0.4,
                        opacityTo: 0.5,
                      },
                    },
                    dropShadow: {
                      enabled: !1,
                      left: 0,
                      top: 0,
                      blur: 1,
                      opacity: 0.4,
                    },
                  },
                  tooltip: {
                    enabled: !0,
                    offsetY: 0,
                    formatter: void 0,
                    style: { fontSize: "12px", fontFamily: void 0 },
                  },
                },
                yaxis: this.yAxis,
                theme: {
                  mode: "light",
                  palette: "palette1",
                  monochrome: {
                    enabled: !1,
                    color: "#008FFB",
                    shadeTo: "light",
                    shadeIntensity: 0.65,
                  },
                },
              };
            },
          },
        ]),
        M
      );
    })(),
    he = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.graphics = new B(this.ctx)),
          this.w.globals.isBarHorizontal && (this.invertAxis = !0),
          (this.helpers = new te(this)),
          (this.xAxisAnnotations = new q(this)),
          (this.yAxisAnnotations = new ie(this)),
          (this.pointsAnnotations = new ae(this)),
          this.w.globals.isBarHorizontal &&
            this.w.config.yaxis[0].reversed &&
            (this.inversedReversedAxis = !0),
          (this.xDivision =
            this.w.globals.gridWidth / this.w.globals.dataPoints);
      }
      return (
        y(M, [
          {
            key: "drawAxesAnnotations",
            value: function () {
              var i = this.w;
              if (i.globals.axisCharts) {
                for (
                  var n = this.yAxisAnnotations.drawYAxisAnnotations(),
                    a = this.xAxisAnnotations.drawXAxisAnnotations(),
                    o = this.pointsAnnotations.drawPointAnnotations(),
                    l = i.config.chart.animations.enabled,
                    u = [n, a, o],
                    h = [a.node, n.node, o.node],
                    d = 0;
                  d < 3;
                  d++
                )
                  i.globals.dom.elGraphical.add(u[d]),
                    !l ||
                      i.globals.resized ||
                      i.globals.dataChanged ||
                      (i.config.chart.type !== "scatter" &&
                        i.config.chart.type !== "bubble" &&
                        i.globals.dataPoints > 1 &&
                        h[d].classList.add("apexcharts-element-hidden")),
                    i.globals.delayedElements.push({ el: h[d], index: 0 });
                this.helpers.annotationsBackground();
              }
            },
          },
          {
            key: "drawImageAnnos",
            value: function () {
              var i = this;
              this.w.config.annotations.images.map(function (n, a) {
                i.addImage(n, a);
              });
            },
          },
          {
            key: "drawTextAnnos",
            value: function () {
              var i = this;
              this.w.config.annotations.texts.map(function (n, a) {
                i.addText(n, a);
              });
            },
          },
          {
            key: "addXaxisAnnotation",
            value: function (i, n, a) {
              this.xAxisAnnotations.addXaxisAnnotation(i, n, a);
            },
          },
          {
            key: "addYaxisAnnotation",
            value: function (i, n, a) {
              this.yAxisAnnotations.addYaxisAnnotation(i, n, a);
            },
          },
          {
            key: "addPointAnnotation",
            value: function (i, n, a) {
              this.pointsAnnotations.addPointAnnotation(i, n, a);
            },
          },
          {
            key: "addText",
            value: function (i, n) {
              var a = i.x,
                o = i.y,
                l = i.text,
                u = i.textAnchor,
                h = i.foreColor,
                d = i.fontSize,
                g = i.fontFamily,
                x = i.fontWeight,
                v = i.cssClass,
                w = i.backgroundColor,
                k = i.borderWidth,
                C = i.strokeDashArray,
                P = i.borderRadius,
                E = i.borderColor,
                I = i.appendTo,
                D = I === void 0 ? ".apexcharts-annotations" : I,
                p = i.paddingLeft,
                b = p === void 0 ? 4 : p,
                A = i.paddingRight,
                R = A === void 0 ? 4 : A,
                F = i.paddingBottom,
                _ = F === void 0 ? 2 : F,
                G = i.paddingTop,
                W = G === void 0 ? 2 : G,
                Z = this.w,
                ee = this.graphics.drawText({
                  x: a,
                  y: o,
                  text: l,
                  textAnchor: u || "start",
                  fontSize: d || "12px",
                  fontWeight: x || "regular",
                  fontFamily: g || Z.config.chart.fontFamily,
                  foreColor: h || Z.config.chart.foreColor,
                  cssClass: v,
                }),
                J = Z.globals.dom.baseEl.querySelector(D);
              J && J.appendChild(ee.node);
              var oe = ee.bbox();
              if (l) {
                var ce = this.graphics.drawRect(
                  oe.x - b,
                  oe.y - W,
                  oe.width + b + R,
                  oe.height + _ + W,
                  P,
                  w || "transparent",
                  1,
                  k,
                  E,
                  C
                );
                J.insertBefore(ce.node, ee.node);
              }
            },
          },
          {
            key: "addImage",
            value: function (i, n) {
              var a = this.w,
                o = i.path,
                l = i.x,
                u = l === void 0 ? 0 : l,
                h = i.y,
                d = h === void 0 ? 0 : h,
                g = i.width,
                x = g === void 0 ? 20 : g,
                v = i.height,
                w = v === void 0 ? 20 : v,
                k = i.appendTo,
                C = k === void 0 ? ".apexcharts-annotations" : k,
                P = a.globals.dom.Paper.image(o);
              P.size(x, w).move(u, d);
              var E = a.globals.dom.baseEl.querySelector(C);
              return E && E.appendChild(P.node), P;
            },
          },
          {
            key: "addXaxisAnnotationExternal",
            value: function (i, n, a) {
              return (
                this.addAnnotationExternal({
                  params: i,
                  pushToMemory: n,
                  context: a,
                  type: "xaxis",
                  contextMethod: a.addXaxisAnnotation,
                }),
                a
              );
            },
          },
          {
            key: "addYaxisAnnotationExternal",
            value: function (i, n, a) {
              return (
                this.addAnnotationExternal({
                  params: i,
                  pushToMemory: n,
                  context: a,
                  type: "yaxis",
                  contextMethod: a.addYaxisAnnotation,
                }),
                a
              );
            },
          },
          {
            key: "addPointAnnotationExternal",
            value: function (i, n, a) {
              return (
                this.invertAxis === void 0 &&
                  (this.invertAxis = a.w.globals.isBarHorizontal),
                this.addAnnotationExternal({
                  params: i,
                  pushToMemory: n,
                  context: a,
                  type: "point",
                  contextMethod: a.addPointAnnotation,
                }),
                a
              );
            },
          },
          {
            key: "addAnnotationExternal",
            value: function (i) {
              var n = i.params,
                a = i.pushToMemory,
                o = i.context,
                l = i.type,
                u = i.contextMethod,
                h = o,
                d = h.w,
                g = d.globals.dom.baseEl.querySelector(
                  ".apexcharts-".concat(l, "-annotations")
                ),
                x = g.childNodes.length + 1,
                v = new le(),
                w = Object.assign(
                  {},
                  l === "xaxis"
                    ? v.xAxisAnnotation
                    : l === "yaxis"
                    ? v.yAxisAnnotation
                    : v.pointAnnotation
                ),
                k = L.extend(w, n);
              switch (l) {
                case "xaxis":
                  this.addXaxisAnnotation(k, g, x);
                  break;
                case "yaxis":
                  this.addYaxisAnnotation(k, g, x);
                  break;
                case "point":
                  this.addPointAnnotation(k, g, x);
              }
              var C = d.globals.dom.baseEl.querySelector(
                  ".apexcharts-"
                    .concat(l, "-annotations .apexcharts-")
                    .concat(l, "-annotation-label[rel='")
                    .concat(x, "']")
                ),
                P = this.helpers.addBackgroundToAnno(C, k);
              return (
                P && g.insertBefore(P.node, C),
                a &&
                  d.globals.memory.methodsToExec.push({
                    context: h,
                    id: k.id ? k.id : L.randomId(),
                    method: u,
                    label: "addAnnotation",
                    params: n,
                  }),
                o
              );
            },
          },
          {
            key: "clearAnnotations",
            value: function (i) {
              var n = i.w,
                a = n.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations"
                );
              n.globals.memory.methodsToExec.map(function (o, l) {
                (o.label !== "addText" && o.label !== "addAnnotation") ||
                  n.globals.memory.methodsToExec.splice(l, 1);
              }),
                (a = L.listToArray(a)),
                Array.prototype.forEach.call(a, function (o) {
                  for (; o.firstChild; ) o.removeChild(o.firstChild);
                });
            },
          },
          {
            key: "removeAnnotation",
            value: function (i, n) {
              var a = i.w,
                o = a.globals.dom.baseEl.querySelectorAll(".".concat(n));
              o &&
                (a.globals.memory.methodsToExec.map(function (l, u) {
                  l.id === n && a.globals.memory.methodsToExec.splice(u, 1);
                }),
                Array.prototype.forEach.call(o, function (l) {
                  l.parentElement.removeChild(l);
                }));
            },
          },
        ]),
        M
      );
    })(),
    xe = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.months31 = [1, 3, 5, 7, 8, 10, 12]),
          (this.months30 = [2, 4, 6, 9, 11]),
          (this.daysCntOfYear = [
            0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,
          ]);
      }
      return (
        y(M, [
          {
            key: "isValidDate",
            value: function (i) {
              return !isNaN(this.parseDate(i));
            },
          },
          {
            key: "getTimeStamp",
            value: function (i) {
              return Date.parse(i)
                ? this.w.config.xaxis.labels.datetimeUTC
                  ? new Date(new Date(i).toISOString().substr(0, 25)).getTime()
                  : new Date(i).getTime()
                : i;
            },
          },
          {
            key: "getDate",
            value: function (i) {
              return this.w.config.xaxis.labels.datetimeUTC
                ? new Date(new Date(i).toUTCString())
                : new Date(i);
            },
          },
          {
            key: "parseDate",
            value: function (i) {
              var n = Date.parse(i);
              if (!isNaN(n)) return this.getTimeStamp(i);
              var a = Date.parse(i.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
              return (a = this.getTimeStamp(a));
            },
          },
          {
            key: "parseDateWithTimezone",
            value: function (i) {
              return Date.parse(i.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
            },
          },
          {
            key: "formatDate",
            value: function (i, n) {
              var a = this.w.globals.locale,
                o = this.w.config.xaxis.labels.datetimeUTC,
                l = ["\0"].concat(Y(a.months)),
                u = [""].concat(Y(a.shortMonths)),
                h = [""].concat(Y(a.days)),
                d = [""].concat(Y(a.shortDays));
              function g(_, G) {
                var W = _ + "";
                for (G = G || 2; W.length < G; ) W = "0" + W;
                return W;
              }
              var x = o ? i.getUTCFullYear() : i.gSBFullYear();
              n = (n = (n = n.replace(/(^|[^\\])yyyy+/g, "$1" + x)).replace(
                /(^|[^\\])yy/g,
                "$1" + x.toString().substr(2, 2)
              )).replace(/(^|[^\\])y/g, "$1" + x);
              var v = (o ? i.getUTCMonth() : i.getMonth()) + 1;
              n = (n = (n = (n = n.replace(
                /(^|[^\\])MMMM+/g,
                "$1" + l[0]
              )).replace(/(^|[^\\])MMM/g, "$1" + u[0])).replace(
                /(^|[^\\])MM/g,
                "$1" + g(v)
              )).replace(/(^|[^\\])M/g, "$1" + v);
              var w = o ? i.getUTCDate() : i.getDate();
              n = (n = (n = (n = n.replace(
                /(^|[^\\])dddd+/g,
                "$1" + h[0]
              )).replace(/(^|[^\\])ddd/g, "$1" + d[0])).replace(
                /(^|[^\\])dd/g,
                "$1" + g(w)
              )).replace(/(^|[^\\])d/g, "$1" + w);
              var k = o ? i.getUTCHours() : i.getHours(),
                C = k > 12 ? k - 12 : k === 0 ? 12 : k;
              n = (n = (n = (n = n.replace(
                /(^|[^\\])HH+/g,
                "$1" + g(k)
              )).replace(/(^|[^\\])H/g, "$1" + k)).replace(
                /(^|[^\\])hh+/g,
                "$1" + g(C)
              )).replace(/(^|[^\\])h/g, "$1" + C);
              var P = o ? i.getUTCMinutes() : i.getMinutes();
              n = (n = n.replace(/(^|[^\\])mm+/g, "$1" + g(P))).replace(
                /(^|[^\\])m/g,
                "$1" + P
              );
              var E = o ? i.getUTCSeconds() : i.getSeconds();
              n = (n = n.replace(/(^|[^\\])ss+/g, "$1" + g(E))).replace(
                /(^|[^\\])s/g,
                "$1" + E
              );
              var I = o ? i.getUTCMilliseconds() : i.getMilliseconds();
              (n = n.replace(/(^|[^\\])fff+/g, "$1" + g(I, 3))),
                (I = Math.round(I / 10)),
                (n = n.replace(/(^|[^\\])ff/g, "$1" + g(I))),
                (I = Math.round(I / 10));
              var D = k < 12 ? "AM" : "PM";
              n = (n = (n = n.replace(/(^|[^\\])f/g, "$1" + I)).replace(
                /(^|[^\\])TT+/g,
                "$1" + D
              )).replace(/(^|[^\\])T/g, "$1" + D.charAt(0));
              var p = D.toLowerCase();
              n = (n = n.replace(/(^|[^\\])tt+/g, "$1" + p)).replace(
                /(^|[^\\])t/g,
                "$1" + p.charAt(0)
              );
              var b = -i.getTimezoneOffset(),
                A = o || !b ? "Z" : b > 0 ? "+" : "-";
              if (!o) {
                var R = (b = Math.abs(b)) % 60;
                A += g(Math.floor(b / 60)) + ":" + g(R);
              }
              n = n.replace(/(^|[^\\])K/g, "$1" + A);
              var F = (o ? i.getUTCDay() : i.getDay()) + 1;
              return (n = (n = (n = (n = (n = n.replace(
                new RegExp(h[0], "g"),
                h[F]
              )).replace(new RegExp(d[0], "g"), d[F])).replace(
                new RegExp(l[0], "g"),
                l[v]
              )).replace(new RegExp(u[0], "g"), u[v])).replace(/\\(.)/g, "$1"));
            },
          },
          {
            key: "getTimeUnitsfromTimestamp",
            value: function (i, n, a) {
              var o = this.w;
              o.config.xaxis.min !== void 0 && (i = o.config.xaxis.min),
                o.config.xaxis.max !== void 0 && (n = o.config.xaxis.max);
              var l = this.getDate(i),
                u = this.getDate(n),
                h = this.formatDate(l, "yyyy MM dd HH mm ss fff").split(" "),
                d = this.formatDate(u, "yyyy MM dd HH mm ss fff").split(" ");
              return {
                minMillisecond: parseInt(h[6], 10),
                maxMillisecond: parseInt(d[6], 10),
                minSecond: parseInt(h[5], 10),
                maxSecond: parseInt(d[5], 10),
                minMinute: parseInt(h[4], 10),
                maxMinute: parseInt(d[4], 10),
                minHour: parseInt(h[3], 10),
                maxHour: parseInt(d[3], 10),
                minDate: parseInt(h[2], 10),
                maxDate: parseInt(d[2], 10),
                minMonth: parseInt(h[1], 10) - 1,
                maxMonth: parseInt(d[1], 10) - 1,
                minYear: parseInt(h[0], 10),
                maxYear: parseInt(d[0], 10),
              };
            },
          },
          {
            key: "isLeapYear",
            value: function (i) {
              return (i % 4 == 0 && i % 100 != 0) || i % 400 == 0;
            },
          },
          {
            key: "calculcateLastDaysOfMonth",
            value: function (i, n, a) {
              return this.determineDaysOfMonths(i, n) - a;
            },
          },
          {
            key: "determineDaysOfYear",
            value: function (i) {
              var n = 365;
              return this.isLeapYear(i) && (n = 366), n;
            },
          },
          {
            key: "determineRemainingDaysOfYear",
            value: function (i, n, a) {
              var o = this.daysCntOfYear[n] + a;
              return n > 1 && this.isLeapYear() && o++, o;
            },
          },
          {
            key: "determineDaysOfMonths",
            value: function (i, n) {
              var a = 30;
              switch (((i = L.monthMod(i)), !0)) {
                case this.months30.indexOf(i) > -1:
                  i === 2 && (a = this.isLeapYear(n) ? 29 : 28);
                  break;
                case this.months31.indexOf(i) > -1:
                default:
                  a = 31;
              }
              return a;
            },
          },
        ]),
        M
      );
    })(),
    we = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.tooltipKeyFormat = "dd MMM");
      }
      return (
        y(M, [
          {
            key: "xLabelFormat",
            value: function (i, n, a, o) {
              var l = this.w;
              if (
                l.config.xaxis.type === "datetime" &&
                l.config.xaxis.labels.formatter === void 0 &&
                l.config.tooltip.x.formatter === void 0
              ) {
                var u = new xe(this.ctx);
                return u.formatDate(u.getDate(n), l.config.tooltip.x.format);
              }
              return i(n, a, o);
            },
          },
          {
            key: "defaultGeneralFormatter",
            value: function (i) {
              return Array.isArray(i)
                ? i.map(function (n) {
                    return n;
                  })
                : i;
            },
          },
          {
            key: "defaultYFormatter",
            value: function (i, n, a) {
              var o = this.w;
              return (
                L.isNumber(i) &&
                  (i =
                    o.globals.yValueDecimal !== 0
                      ? i.toFixed(
                          n.decimalsInFloat !== void 0
                            ? n.decimalsInFloat
                            : o.globals.yValueDecimal
                        )
                      : o.globals.maxYArr[a] - o.globals.minYArr[a] < 5
                      ? i.toFixed(1)
                      : i.toFixed(0)),
                i
              );
            },
          },
          {
            key: "setLabelFormatters",
            value: function () {
              var i = this,
                n = this.w;
              return (
                (n.globals.xaxisTooltipFormatter = function (a) {
                  return i.defaultGeneralFormatter(a);
                }),
                (n.globals.ttKeyFormatter = function (a) {
                  return i.defaultGeneralFormatter(a);
                }),
                (n.globals.ttZFormatter = function (a) {
                  return a;
                }),
                (n.globals.legendFormatter = function (a) {
                  return i.defaultGeneralFormatter(a);
                }),
                n.config.xaxis.labels.formatter !== void 0
                  ? (n.globals.xLabelFormatter =
                      n.config.xaxis.labels.formatter)
                  : (n.globals.xLabelFormatter = function (a) {
                      if (L.isNumber(a)) {
                        if (
                          !n.config.xaxis.convertedCatToNumeric &&
                          n.config.xaxis.type === "numeric"
                        ) {
                          if (L.isNumber(n.config.xaxis.decimalsInFloat))
                            return a.toFixed(n.config.xaxis.decimalsInFloat);
                          var o = n.globals.maxX - n.globals.minX;
                          return o > 0 && o < 100 ? a.toFixed(1) : a.toFixed(0);
                        }
                        return n.globals.isBarHorizontal &&
                          n.globals.maxY - n.globals.minYArr < 4
                          ? a.toFixed(1)
                          : a.toFixed(0);
                      }
                      return a;
                    }),
                typeof n.config.tooltip.x.formatter == "function"
                  ? (n.globals.ttKeyFormatter = n.config.tooltip.x.formatter)
                  : (n.globals.ttKeyFormatter = n.globals.xLabelFormatter),
                typeof n.config.xaxis.tooltip.formatter == "function" &&
                  (n.globals.xaxisTooltipFormatter =
                    n.config.xaxis.tooltip.formatter),
                (Array.isArray(n.config.tooltip.y) ||
                  n.config.tooltip.y.formatter !== void 0) &&
                  (n.globals.ttVal = n.config.tooltip.y),
                n.config.tooltip.z.formatter !== void 0 &&
                  (n.globals.ttZFormatter = n.config.tooltip.z.formatter),
                n.config.legend.formatter !== void 0 &&
                  (n.globals.legendFormatter = n.config.legend.formatter),
                n.config.yaxis.forEach(function (a, o) {
                  a.labels.formatter !== void 0
                    ? (n.globals.yLabelFormatters[o] = a.labels.formatter)
                    : (n.globals.yLabelFormatters[o] = function (l) {
                        return n.globals.xyCharts
                          ? Array.isArray(l)
                            ? l.map(function (u) {
                                return i.defaultYFormatter(u, a, o);
                              })
                            : i.defaultYFormatter(l, a, o)
                          : l;
                      });
                }),
                n.globals
              );
            },
          },
          {
            key: "heatmapLabelFormatters",
            value: function () {
              var i = this.w;
              if (i.config.chart.type === "heatmap") {
                i.globals.yAxisScale[0].result = i.globals.seriesNames.slice();
                var n = i.globals.seriesNames.reduce(function (a, o) {
                  return a.length > o.length ? a : o;
                }, 0);
                (i.globals.yAxisScale[0].niceMax = n),
                  (i.globals.yAxisScale[0].niceMin = n);
              }
            },
          },
        ]),
        M
      );
    })(),
    Me = function (M) {
      var i,
        n = M.isTimeline,
        a = M.ctx,
        o = M.seriesIndex,
        l = M.dataPointIndex,
        u = M.y1,
        h = M.y2,
        d = M.w,
        g = d.globals.seriesRangeStart[o][l],
        x = d.globals.seriesRangeEnd[o][l],
        v = d.globals.labels[l],
        w = d.config.series[o].name ? d.config.series[o].name : "",
        k = d.globals.ttKeyFormatter,
        C = d.config.tooltip.y.title.formatter,
        P = { w: d, seriesIndex: o, dataPointIndex: l, start: g, end: x };
      typeof C == "function" && (w = C(w, P)),
        (i = d.config.series[o].data[l]) !== null &&
          i !== void 0 &&
          i.x &&
          (v = d.config.series[o].data[l].x),
        n ||
          (d.config.xaxis.type === "datetime" &&
            (v = new we(a).xLabelFormat(d.globals.ttKeyFormatter, v, v, {
              i: void 0,
              dateFormatter: new xe(a).formatDate,
              w: d,
            }))),
        typeof k == "function" && (v = k(v, P)),
        Number.isFinite(u) && Number.isFinite(h) && ((g = u), (x = h));
      var E = "",
        I = "",
        D = d.globals.colors[o];
      if (d.config.tooltip.x.formatter === void 0)
        if (d.config.xaxis.type === "datetime") {
          var p = new xe(a);
          (E = p.formatDate(p.getDate(g), d.config.tooltip.x.format)),
            (I = p.formatDate(p.getDate(x), d.config.tooltip.x.format));
        } else (E = g), (I = x);
      else
        (E = d.config.tooltip.x.formatter(g)),
          (I = d.config.tooltip.x.formatter(x));
      return {
        start: g,
        end: x,
        startVal: E,
        endVal: I,
        ylabel: v,
        color: D,
        seriesName: w,
      };
    },
    Xe = function (M) {
      var i = M.color,
        n = M.seriesName,
        a = M.ylabel,
        o = M.start,
        l = M.end,
        u = M.seriesIndex,
        h = M.dataPointIndex,
        d = M.ctx.tooltip.tooltipLabels.gSBFormatters(u);
      (o = d.yLbFormatter(o)), (l = d.yLbFormatter(l));
      var g = d.yLbFormatter(M.w.globals.series[u][h]),
        x = `<span class="value start-value">
  `
          .concat(
            o,
            `
  </span> <span class="separator">-</span> <span class="value end-value">
  `
          )
          .concat(
            l,
            `
  </span>`
          );
      return (
        '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' +
        i +
        '">' +
        (n || "") +
        '</span></div><div> <span class="category">' +
        a +
        ": </span> " +
        (M.w.globals.comboCharts
          ? M.w.config.series[u].type === "rangeArea" ||
            M.w.config.series[u].type === "rangeBar"
            ? x
            : "<span>".concat(g, "</span>")
          : x) +
        " </div></div>"
      );
    },
    se = (function () {
      function M(i) {
        f(this, M), (this.opts = i);
      }
      return (
        y(M, [
          {
            key: "hideYAxis",
            value: function () {
              (this.opts.yaxis[0].show = !1),
                (this.opts.yaxis[0].title.text = ""),
                (this.opts.yaxis[0].axisBorder.show = !1),
                (this.opts.yaxis[0].axisTicks.show = !1),
                (this.opts.yaxis[0].floating = !0);
            },
          },
          {
            key: "line",
            value: function () {
              return {
                chart: { animations: { easing: "swing" } },
                dataLabels: { enabled: !1 },
                stroke: { width: 5, curve: "straight" },
                markers: { size: 0, hover: { sizeOffset: 6 } },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "sparkline",
            value: function (i) {
              return (
                this.hideYAxis(),
                L.extend(i, {
                  grid: {
                    show: !1,
                    padding: { left: 0, right: 0, top: 0, bottom: 0 },
                  },
                  legend: { show: !1 },
                  xaxis: {
                    labels: { show: !1 },
                    tooltip: { enabled: !1 },
                    axisBorder: { show: !1 },
                    axisTicks: { show: !1 },
                  },
                  chart: { toolbar: { show: !1 }, zoom: { enabled: !1 } },
                  dataLabels: { enabled: !1 },
                })
              );
            },
          },
          {
            key: "bar",
            value: function () {
              return {
                chart: { stacked: !1, animations: { easing: "swing" } },
                plotOptions: { bar: { dataLabels: { position: "center" } } },
                dataLabels: {
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                },
                stroke: { width: 0, lineCap: "round" },
                fill: { opacity: 0.85 },
                legend: { markers: { shape: "square", radius: 2, size: 8 } },
                tooltip: { shared: !1, intersect: !0 },
                xaxis: {
                  tooltip: { enabled: !1 },
                  tickPlacement: "between",
                  crosshairs: {
                    width: "barWidth",
                    position: "back",
                    fill: { type: "gradient" },
                    dropShadow: { enabled: !1 },
                    stroke: { width: 0 },
                  },
                },
              };
            },
          },
          {
            key: "funnel",
            value: function () {
              return (
                this.hideYAxis(),
                s(
                  s({}, this.bar()),
                  {},
                  {
                    chart: {
                      animations: {
                        easing: "linear",
                        speed: 800,
                        animateGradually: { enabled: !1 },
                      },
                    },
                    plotOptions: {
                      bar: {
                        horizontal: !0,
                        borderRadiusApplication: "around",
                        borderRadius: 0,
                        dataLabels: { position: "center" },
                      },
                    },
                    grid: { show: !1, padding: { left: 0, right: 0 } },
                    xaxis: {
                      labels: { show: !1 },
                      tooltip: { enabled: !1 },
                      axisBorder: { show: !1 },
                      axisTicks: { show: !1 },
                    },
                  }
                )
              );
            },
          },
          {
            key: "candlestick",
            value: function () {
              var i = this;
              return {
                stroke: { width: 1, colors: ["#333"] },
                fill: { opacity: 1 },
                dataLabels: { enabled: !1 },
                tooltip: {
                  shared: !0,
                  custom: function (n) {
                    var a = n.seriesIndex,
                      o = n.dataPointIndex,
                      l = n.w;
                    return i._getBoxTooltip(
                      l,
                      a,
                      o,
                      ["Open", "High", "", "Low", "Close"],
                      "candlestick"
                    );
                  },
                },
                states: { active: { filter: { type: "none" } } },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "boxPlot",
            value: function () {
              var i = this;
              return {
                chart: { animations: { dynamicAnimation: { enabled: !1 } } },
                stroke: { width: 1, colors: ["#24292e"] },
                dataLabels: { enabled: !1 },
                tooltip: {
                  shared: !0,
                  custom: function (n) {
                    var a = n.seriesIndex,
                      o = n.dataPointIndex,
                      l = n.w;
                    return i._getBoxTooltip(
                      l,
                      a,
                      o,
                      ["Minimum", "Q1", "Median", "Q3", "Maximum"],
                      "boxPlot"
                    );
                  },
                },
                markers: { size: 5, strokeWidth: 1, strokeColors: "#111" },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "rangeBar",
            value: function () {
              return {
                chart: { animations: { animateGradually: !1 } },
                stroke: { width: 0, lineCap: "square" },
                plotOptions: {
                  bar: { borderRadius: 0, dataLabels: { position: "center" } },
                },
                dataLabels: {
                  enabled: !1,
                  formatter: function (i, n) {
                    n.ctx;
                    var a = n.seriesIndex,
                      o = n.dataPointIndex,
                      l = n.w,
                      u = function () {
                        var h = l.globals.seriesRangeStart[a][o];
                        return l.globals.seriesRangeEnd[a][o] - h;
                      };
                    return l.globals.comboCharts
                      ? l.config.series[a].type === "rangeBar" ||
                        l.config.series[a].type === "rangeArea"
                        ? u()
                        : i
                      : u();
                  },
                  background: { enabled: !1 },
                  style: { colors: ["#fff"] },
                },
                markers: { size: 10 },
                tooltip: {
                  shared: !1,
                  followCursor: !0,
                  custom: function (i) {
                    return i.w.config.plotOptions &&
                      i.w.config.plotOptions.bar &&
                      i.w.config.plotOptions.bar.horizontal
                      ? (function (n) {
                          var a = Me(s(s({}, n), {}, { isTimeline: !0 })),
                            o = a.color,
                            l = a.seriesName,
                            u = a.ylabel,
                            h = a.startVal,
                            d = a.endVal;
                          return Xe(
                            s(
                              s({}, n),
                              {},
                              {
                                color: o,
                                seriesName: l,
                                ylabel: u,
                                start: h,
                                end: d,
                              }
                            )
                          );
                        })(i)
                      : (function (n) {
                          var a = Me(n),
                            o = a.color,
                            l = a.seriesName,
                            u = a.ylabel,
                            h = a.start,
                            d = a.end;
                          return Xe(
                            s(
                              s({}, n),
                              {},
                              {
                                color: o,
                                seriesName: l,
                                ylabel: u,
                                start: h,
                                end: d,
                              }
                            )
                          );
                        })(i);
                  },
                },
                xaxis: {
                  tickPlacement: "between",
                  tooltip: { enabled: !1 },
                  crosshairs: { stroke: { width: 0 } },
                },
              };
            },
          },
          {
            key: "dumbbell",
            value: function (i) {
              var n, a;
              return (
                ((n = i.plotOptions.bar) !== null &&
                  n !== void 0 &&
                  n.barHeight) ||
                  (i.plotOptions.bar.barHeight = 2),
                ((a = i.plotOptions.bar) !== null &&
                  a !== void 0 &&
                  a.columnWidth) ||
                  (i.plotOptions.bar.columnWidth = 2),
                i
              );
            },
          },
          {
            key: "area",
            value: function () {
              return {
                stroke: {
                  width: 4,
                  fill: {
                    type: "solid",
                    gradient: {
                      inverseColors: !1,
                      shade: "light",
                      type: "vertical",
                      opacityFrom: 0.65,
                      opacityTo: 0.5,
                      stops: [0, 100, 100],
                    },
                  },
                },
                fill: {
                  type: "gradient",
                  gradient: {
                    inverseColors: !1,
                    shade: "light",
                    type: "vertical",
                    opacityFrom: 0.65,
                    opacityTo: 0.5,
                    stops: [0, 100, 100],
                  },
                },
                markers: { size: 0, hover: { sizeOffset: 6 } },
                tooltip: { followCursor: !1 },
              };
            },
          },
          {
            key: "rangeArea",
            value: function () {
              return {
                stroke: { curve: "straight", width: 0 },
                fill: { type: "solid", opacity: 0.6 },
                markers: { size: 0 },
                states: {
                  hover: { filter: { type: "none" } },
                  active: { filter: { type: "none" } },
                },
                tooltip: {
                  intersect: !1,
                  shared: !0,
                  followCursor: !0,
                  custom: function (i) {
                    return (function (n) {
                      var a = Me(n),
                        o = a.color,
                        l = a.seriesName,
                        u = a.ylabel,
                        h = a.start,
                        d = a.end;
                      return Xe(
                        s(
                          s({}, n),
                          {},
                          {
                            color: o,
                            seriesName: l,
                            ylabel: u,
                            start: h,
                            end: d,
                          }
                        )
                      );
                    })(i);
                  },
                },
              };
            },
          },
          {
            key: "brush",
            value: function (i) {
              return L.extend(i, {
                chart: {
                  toolbar: { autoSelected: "selection", show: !1 },
                  zoom: { enabled: !1 },
                },
                dataLabels: { enabled: !1 },
                stroke: { width: 1 },
                tooltip: { enabled: !1 },
                xaxis: { tooltip: { enabled: !1 } },
              });
            },
          },
          {
            key: "stacked100",
            value: function (i) {
              (i.dataLabels = i.dataLabels || {}),
                (i.dataLabels.formatter = i.dataLabels.formatter || void 0);
              var n = i.dataLabels.formatter;
              return (
                i.yaxis.forEach(function (a, o) {
                  (i.yaxis[o].min = 0), (i.yaxis[o].max = 100);
                }),
                i.chart.type === "bar" &&
                  (i.dataLabels.formatter =
                    n ||
                    function (a) {
                      return typeof a == "number" && a ? a.toFixed(0) + "%" : a;
                    }),
                i
              );
            },
          },
          {
            key: "stackedBars",
            value: function () {
              var i = this.bar();
              return s(
                s({}, i),
                {},
                {
                  plotOptions: s(
                    s({}, i.plotOptions),
                    {},
                    {
                      bar: s(
                        s({}, i.plotOptions.bar),
                        {},
                        {
                          borderRadiusApplication: "end",
                          borderRadiusWhenStacked: "last",
                        }
                      ),
                    }
                  ),
                }
              );
            },
          },
          {
            key: "convertCatToNumeric",
            value: function (i) {
              return (i.xaxis.convertedCatToNumeric = !0), i;
            },
          },
          {
            key: "convertCatToNumericXaxis",
            value: function (i, n, a) {
              (i.xaxis.type = "numeric"),
                (i.xaxis.labels = i.xaxis.labels || {}),
                (i.xaxis.labels.formatter =
                  i.xaxis.labels.formatter ||
                  function (u) {
                    return L.isNumber(u) ? Math.floor(u) : u;
                  });
              var o = i.xaxis.labels.formatter,
                l =
                  i.xaxis.categories && i.xaxis.categories.length
                    ? i.xaxis.categories
                    : i.labels;
              return (
                a &&
                  a.length &&
                  (l = a.map(function (u) {
                    return Array.isArray(u) ? u : String(u);
                  })),
                l &&
                  l.length &&
                  (i.xaxis.labels.formatter = function (u) {
                    return L.isNumber(u) ? o(l[Math.floor(u) - 1]) : o(u);
                  }),
                (i.xaxis.categories = []),
                (i.labels = []),
                (i.xaxis.tickAmount = i.xaxis.tickAmount || "dataPoints"),
                i
              );
            },
          },
          {
            key: "bubble",
            value: function () {
              return {
                dataLabels: { style: { colors: ["#fff"] } },
                tooltip: { shared: !1, intersect: !0 },
                xaxis: { crosshairs: { width: 0 } },
                fill: {
                  type: "solid",
                  gradient: {
                    shade: "light",
                    inverse: !0,
                    shadeIntensity: 0.55,
                    opacityFrom: 0.4,
                    opacityTo: 0.8,
                  },
                },
              };
            },
          },
          {
            key: "scatter",
            value: function () {
              return {
                dataLabels: { enabled: !1 },
                tooltip: { shared: !1, intersect: !0 },
                markers: { size: 6, strokeWidth: 1, hover: { sizeOffset: 2 } },
              };
            },
          },
          {
            key: "heatmap",
            value: function () {
              return {
                chart: { stacked: !1 },
                fill: { opacity: 1 },
                dataLabels: { style: { colors: ["#fff"] } },
                stroke: { colors: ["#fff"] },
                tooltip: {
                  followCursor: !0,
                  marker: { show: !1 },
                  x: { show: !1 },
                },
                legend: {
                  position: "top",
                  markers: { shape: "square", size: 10, offsetY: 2 },
                },
                grid: { padding: { right: 20 } },
              };
            },
          },
          {
            key: "treemap",
            value: function () {
              return {
                chart: { zoom: { enabled: !1 } },
                dataLabels: {
                  style: { fontSize: 14, fontWeight: 600, colors: ["#fff"] },
                },
                stroke: { show: !0, width: 2, colors: ["#fff"] },
                legend: { show: !1 },
                fill: { gradient: { stops: [0, 100] } },
                tooltip: { followCursor: !0, x: { show: !1 } },
                grid: { padding: { left: 0, right: 0 } },
                xaxis: { crosshairs: { show: !1 }, tooltip: { enabled: !1 } },
              };
            },
          },
          {
            key: "pie",
            value: function () {
              return {
                chart: { toolbar: { show: !1 } },
                plotOptions: { pie: { donut: { labels: { show: !1 } } } },
                dataLabels: {
                  formatter: function (i) {
                    return i.toFixed(1) + "%";
                  },
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                  dropShadow: { enabled: !0 },
                },
                stroke: { colors: ["#fff"] },
                fill: {
                  opacity: 1,
                  gradient: { shade: "light", stops: [0, 100] },
                },
                tooltip: { theme: "dark", fillSeriesColor: !0 },
                legend: { position: "right" },
              };
            },
          },
          {
            key: "donut",
            value: function () {
              return {
                chart: { toolbar: { show: !1 } },
                dataLabels: {
                  formatter: function (i) {
                    return i.toFixed(1) + "%";
                  },
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                  dropShadow: { enabled: !0 },
                },
                stroke: { colors: ["#fff"] },
                fill: {
                  opacity: 1,
                  gradient: {
                    shade: "light",
                    shadeIntensity: 0.35,
                    stops: [80, 100],
                    opacityFrom: 1,
                    opacityTo: 1,
                  },
                },
                tooltip: { theme: "dark", fillSeriesColor: !0 },
                legend: { position: "right" },
              };
            },
          },
          {
            key: "polarArea",
            value: function () {
              return (
                (this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount
                  ? this.opts.yaxis[0].tickAmount
                  : 6),
                {
                  chart: { toolbar: { show: !1 } },
                  dataLabels: {
                    formatter: function (i) {
                      return i.toFixed(1) + "%";
                    },
                    enabled: !1,
                  },
                  stroke: { show: !0, width: 2 },
                  fill: { opacity: 0.7 },
                  tooltip: { theme: "dark", fillSeriesColor: !0 },
                  legend: { position: "right" },
                }
              );
            },
          },
          {
            key: "radar",
            value: function () {
              return (
                (this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels
                  .offsetY
                  ? this.opts.yaxis[0].labels.offsetY
                  : 6),
                {
                  dataLabels: { enabled: !1, style: { fontSize: "11px" } },
                  stroke: { width: 2 },
                  markers: { size: 3, strokeWidth: 1, strokeOpacity: 1 },
                  fill: { opacity: 0.2 },
                  tooltip: { shared: !1, intersect: !0, followCursor: !0 },
                  grid: { show: !1 },
                  xaxis: {
                    labels: {
                      formatter: function (i) {
                        return i;
                      },
                      style: { colors: ["#a8a8a8"], fontSize: "11px" },
                    },
                    tooltip: { enabled: !1 },
                    crosshairs: { show: !1 },
                  },
                }
              );
            },
          },
          {
            key: "radialBar",
            value: function () {
              return {
                chart: {
                  animations: { dynamicAnimation: { enabled: !0, speed: 800 } },
                  toolbar: { show: !1 },
                },
                fill: {
                  gradient: {
                    shade: "dark",
                    shadeIntensity: 0.4,
                    inverseColors: !1,
                    type: "diagonal2",
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [70, 98, 100],
                  },
                },
                legend: { show: !1, position: "right" },
                tooltip: { enabled: !1, fillSeriesColor: !0 },
              };
            },
          },
          {
            key: "_getBoxTooltip",
            value: function (i, n, a, o, l) {
              var u = i.globals.seriesCandleO[n][a],
                h = i.globals.seriesCandleH[n][a],
                d = i.globals.seriesCandleM[n][a],
                g = i.globals.seriesCandleL[n][a],
                x = i.globals.seriesCandleC[n][a];
              return i.config.series[n].type && i.config.series[n].type !== l
                ? `<div class="apexcharts-custom-tooltip">
          `
                    .concat(
                      i.config.series[n].name
                        ? i.config.series[n].name
                        : "series-" + (n + 1),
                      ": <strong>"
                    )
                    .concat(
                      i.globals.series[n][a],
                      `</strong>
        </div>`
                    )
                : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(
                    i.config.chart.type,
                    '">'
                  ) +
                    "<div>".concat(o[0], ': <span class="value">') +
                    u +
                    "</span></div>" +
                    "<div>".concat(o[1], ': <span class="value">') +
                    h +
                    "</span></div>" +
                    (d
                      ? "<div>".concat(o[2], ': <span class="value">') +
                        d +
                        "</span></div>"
                      : "") +
                    "<div>".concat(o[3], ': <span class="value">') +
                    g +
                    "</span></div>" +
                    "<div>".concat(o[4], ': <span class="value">') +
                    x +
                    "</span></div></div>";
            },
          },
        ]),
        M
      );
    })(),
    ge = (function () {
      function M(i) {
        f(this, M), (this.opts = i);
      }
      return (
        y(M, [
          {
            key: "init",
            value: function (i) {
              var n = i.responsiveOverride,
                a = this.opts,
                o = new le(),
                l = new se(a);
              (this.chartType = a.chart.type),
                (a = this.extendYAxis(a)),
                (a = this.extendAnnotations(a));
              var u = o.init(),
                h = {};
              if (a && c(a) === "object") {
                var d,
                  g,
                  x,
                  v,
                  w,
                  k,
                  C,
                  P,
                  E,
                  I,
                  D = {};
                (D =
                  [
                    "line",
                    "area",
                    "bar",
                    "candlestick",
                    "boxPlot",
                    "rangeBar",
                    "rangeArea",
                    "bubble",
                    "scatter",
                    "heatmap",
                    "treemap",
                    "pie",
                    "polarArea",
                    "donut",
                    "radar",
                    "radialBar",
                  ].indexOf(a.chart.type) !== -1
                    ? l[a.chart.type]()
                    : l.line()),
                  (d = a.plotOptions) !== null &&
                    d !== void 0 &&
                    (g = d.bar) !== null &&
                    g !== void 0 &&
                    g.isFunnel &&
                    (D = l.funnel()),
                  a.chart.stacked &&
                    a.chart.type === "bar" &&
                    (D = l.stackedBars()),
                  (x = a.chart.brush) !== null &&
                    x !== void 0 &&
                    x.enabled &&
                    (D = l.brush(D)),
                  a.chart.stacked &&
                    a.chart.stackType === "100%" &&
                    (a = l.stacked100(a)),
                  (v = a.plotOptions) !== null &&
                    v !== void 0 &&
                    (w = v.bar) !== null &&
                    w !== void 0 &&
                    w.isDumbbell &&
                    (a = l.dumbbell(a)),
                  ((k = a) === null ||
                  k === void 0 ||
                  (C = k.stroke) === null ||
                  C === void 0
                    ? void 0
                    : C.curve) === "monotoneCubic" &&
                    (a.stroke.curve = "smooth"),
                  this.checkForDarkTheme(window.Apex),
                  this.checkForDarkTheme(a),
                  (a.xaxis = a.xaxis || window.Apex.xaxis || {}),
                  n || (a.xaxis.convertedCatToNumeric = !1),
                  (((P = (a = this.checkForCatToNumericXAxis(
                    this.chartType,
                    D,
                    a
                  )).chart.sparkline) !== null &&
                    P !== void 0 &&
                    P.enabled) ||
                    ((E = window.Apex.chart) !== null &&
                      E !== void 0 &&
                      (I = E.sparkline) !== null &&
                      I !== void 0 &&
                      I.enabled)) &&
                    (D = l.sparkline(D)),
                  (h = L.extend(u, D));
              }
              var p = L.extend(h, window.Apex);
              return (u = L.extend(p, a)), (u = this.handleUserInputErrors(u));
            },
          },
          {
            key: "checkForCatToNumericXAxis",
            value: function (i, n, a) {
              var o,
                l,
                u = new se(a),
                h =
                  (i === "bar" || i === "boxPlot") &&
                  ((o = a.plotOptions) === null ||
                  o === void 0 ||
                  (l = o.bar) === null ||
                  l === void 0
                    ? void 0
                    : l.horizontal),
                d =
                  i === "pie" ||
                  i === "polarArea" ||
                  i === "donut" ||
                  i === "radar" ||
                  i === "radialBar" ||
                  i === "heatmap",
                g = a.xaxis.type !== "datetime" && a.xaxis.type !== "numeric",
                x = a.xaxis.tickPlacement
                  ? a.xaxis.tickPlacement
                  : n.xaxis && n.xaxis.tickPlacement;
              return (
                h ||
                  d ||
                  !g ||
                  x === "between" ||
                  (a = u.convertCatToNumeric(a)),
                a
              );
            },
          },
          {
            key: "extendYAxis",
            value: function (i, n) {
              var a = new le();
              (i.yaxis === void 0 ||
                !i.yaxis ||
                (Array.isArray(i.yaxis) && i.yaxis.length === 0)) &&
                (i.yaxis = {}),
                i.yaxis.constructor !== Array &&
                  window.Apex.yaxis &&
                  window.Apex.yaxis.constructor !== Array &&
                  (i.yaxis = L.extend(i.yaxis, window.Apex.yaxis)),
                i.yaxis.constructor !== Array
                  ? (i.yaxis = [L.extend(a.yAxis, i.yaxis)])
                  : (i.yaxis = L.extendArray(i.yaxis, a.yAxis));
              var o = !1;
              i.yaxis.forEach(function (u) {
                u.logarithmic && (o = !0);
              });
              var l = i.series;
              return (
                n && !l && (l = n.config.series),
                o &&
                  l.length !== i.yaxis.length &&
                  l.length &&
                  (i.yaxis = l.map(function (u, h) {
                    if (
                      (u.name || (l[h].name = "series-".concat(h + 1)),
                      i.yaxis[h])
                    )
                      return (i.yaxis[h].seriesName = l[h].name), i.yaxis[h];
                    var d = L.extend(a.yAxis, i.yaxis[0]);
                    return (d.show = !1), d;
                  })),
                o &&
                  l.length > 1 &&
                  l.length !== i.yaxis.length &&
                  console.warn(
                    "A multi-series logarithmic chart should have equal number of series and y-axes"
                  ),
                i
              );
            },
          },
          {
            key: "extendAnnotations",
            value: function (i) {
              return (
                i.annotations === void 0 &&
                  ((i.annotations = {}),
                  (i.annotations.yaxis = []),
                  (i.annotations.xaxis = []),
                  (i.annotations.points = [])),
                (i = this.extendYAxisAnnotations(i)),
                (i = this.extendXAxisAnnotations(i)),
                (i = this.extendPointAnnotations(i))
              );
            },
          },
          {
            key: "extendYAxisAnnotations",
            value: function (i) {
              var n = new le();
              return (
                (i.annotations.yaxis = L.extendArray(
                  i.annotations.yaxis !== void 0 ? i.annotations.yaxis : [],
                  n.yAxisAnnotation
                )),
                i
              );
            },
          },
          {
            key: "extendXAxisAnnotations",
            value: function (i) {
              var n = new le();
              return (
                (i.annotations.xaxis = L.extendArray(
                  i.annotations.xaxis !== void 0 ? i.annotations.xaxis : [],
                  n.xAxisAnnotation
                )),
                i
              );
            },
          },
          {
            key: "extendPointAnnotations",
            value: function (i) {
              var n = new le();
              return (
                (i.annotations.points = L.extendArray(
                  i.annotations.points !== void 0 ? i.annotations.points : [],
                  n.pointAnnotation
                )),
                i
              );
            },
          },
          {
            key: "checkForDarkTheme",
            value: function (i) {
              i.theme &&
                i.theme.mode === "dark" &&
                (i.tooltip || (i.tooltip = {}),
                i.tooltip.theme !== "light" && (i.tooltip.theme = "dark"),
                i.chart.foreColor || (i.chart.foreColor = "#f6f7f8"),
                i.chart.background || (i.chart.background = "#424242"),
                i.theme.palette || (i.theme.palette = "palette4"));
            },
          },
          {
            key: "handleUserInputErrors",
            value: function (i) {
              var n = i;
              if (n.tooltip.shared && n.tooltip.intersect)
                throw new Error(
                  "tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false."
                );
              if (n.chart.type === "bar" && n.plotOptions.bar.horizontal) {
                if (n.yaxis.length > 1)
                  throw new Error(
                    "Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false"
                  );
                n.yaxis[0].reversed && (n.yaxis[0].opposite = !0),
                  (n.xaxis.tooltip.enabled = !1),
                  (n.yaxis[0].tooltip.enabled = !1),
                  (n.chart.zoom.enabled = !1);
              }
              return (
                (n.chart.type !== "bar" && n.chart.type !== "rangeBar") ||
                  (n.tooltip.shared &&
                    n.xaxis.crosshairs.width === "barWidth" &&
                    n.series.length > 1 &&
                    (n.xaxis.crosshairs.width = "tickWidth")),
                (n.chart.type !== "candlestick" &&
                  n.chart.type !== "boxPlot") ||
                  (n.yaxis[0].reversed &&
                    (console.warn(
                      "Reversed y-axis in ".concat(
                        n.chart.type,
                        " chart is not supported."
                      )
                    ),
                    (n.yaxis[0].reversed = !1))),
                n
              );
            },
          },
        ]),
        M
      );
    })(),
    me = (function () {
      function M() {
        f(this, M);
      }
      return (
        y(M, [
          {
            key: "initGlobalVars",
            value: function (i) {
              (i.series = []),
                (i.seriesCandleO = []),
                (i.seriesCandleH = []),
                (i.seriesCandleM = []),
                (i.seriesCandleL = []),
                (i.seriesCandleC = []),
                (i.seriesRangeStart = []),
                (i.seriesRangeEnd = []),
                (i.seriesRange = []),
                (i.seriesPercent = []),
                (i.seriesGoals = []),
                (i.seriesX = []),
                (i.seriesZ = []),
                (i.seriesNames = []),
                (i.seriesTotals = []),
                (i.seriesLog = []),
                (i.seriesColors = []),
                (i.stackedSeriesTotals = []),
                (i.seriesXvalues = []),
                (i.seriesYvalues = []),
                (i.labels = []),
                (i.hasXaxisGroups = !1),
                (i.groups = []),
                (i.hasSeriesGroups = !1),
                (i.seriesGroups = []),
                (i.categoryLabels = []),
                (i.timescaleLabels = []),
                (i.noLabelsProvided = !1),
                (i.resizeTimer = null),
                (i.selectionResizeTimer = null),
                (i.delayedElements = []),
                (i.pointsArray = []),
                (i.dataLabelsRects = []),
                (i.isXNumeric = !1),
                (i.skipLastTimelinelabel = !1),
                (i.skipFirstTimelinelabel = !1),
                (i.isDataXYZ = !1),
                (i.isMultiLineX = !1),
                (i.isMultipleYAxis = !1),
                (i.maxY = -Number.MAX_VALUE),
                (i.minY = Number.MIN_VALUE),
                (i.minYArr = []),
                (i.maxYArr = []),
                (i.maxX = -Number.MAX_VALUE),
                (i.minX = Number.MAX_VALUE),
                (i.initialMaxX = -Number.MAX_VALUE),
                (i.initialMinX = Number.MAX_VALUE),
                (i.maxDate = 0),
                (i.minDate = Number.MAX_VALUE),
                (i.minZ = Number.MAX_VALUE),
                (i.maxZ = -Number.MAX_VALUE),
                (i.minXDiff = Number.MAX_VALUE),
                (i.yAxisScale = []),
                (i.xAxisScale = null),
                (i.xAxisTicksPositions = []),
                (i.yLabelsCoords = []),
                (i.yTitleCoords = []),
                (i.barPadForNumericAxis = 0),
                (i.padHorizontal = 0),
                (i.xRange = 0),
                (i.yRange = []),
                (i.zRange = 0),
                (i.dataPoints = 0),
                (i.xTickAmount = 0);
            },
          },
          {
            key: "globalVars",
            value: function (i) {
              return {
                chartID: null,
                cuid: null,
                events: {
                  beforeMount: [],
                  mounted: [],
                  updated: [],
                  clicked: [],
                  selection: [],
                  dataPointSelection: [],
                  zoomed: [],
                  scrolled: [],
                },
                colors: [],
                clientX: null,
                clientY: null,
                fill: { colors: [] },
                stroke: { colors: [] },
                dataLabels: { style: { colors: [] } },
                radarPolygons: { fill: { colors: [] } },
                markers: { colors: [], size: i.markers.size, largestSize: 0 },
                animationEnded: !1,
                isTouchDevice:
                  "ontouchstart" in window || navigator.msMaxTouchPoints,
                isDirty: !1,
                isExecCalled: !1,
                initialConfig: null,
                initialSeries: [],
                lastXAxis: [],
                lastYAxis: [],
                columnSeries: null,
                labels: [],
                timescaleLabels: [],
                noLabelsProvided: !1,
                allSeriesCollapsed: !1,
                collapsedSeries: [],
                collapsedSeriesIndices: [],
                ancillaryCollapsedSeries: [],
                ancillaryCollapsedSeriesIndices: [],
                risingSeries: [],
                dataFormatXNumeric: !1,
                capturedSeriesIndex: -1,
                capturedDataPointIndex: -1,
                selectedDataPoints: [],
                goldenPadding: 35,
                invalidLogScale: !1,
                ignoreYAxisIndexes: [],
                yAxisSameScaleIndices: [],
                maxValsInArrayIndex: 0,
                radialSize: 0,
                selection: void 0,
                zoomEnabled:
                  i.chart.toolbar.autoSelected === "zoom" &&
                  i.chart.toolbar.tools.zoom &&
                  i.chart.zoom.enabled,
                panEnabled:
                  i.chart.toolbar.autoSelected === "pan" &&
                  i.chart.toolbar.tools.pan,
                selectionEnabled:
                  i.chart.toolbar.autoSelected === "selection" &&
                  i.chart.toolbar.tools.selection,
                yaxis: null,
                mousedown: !1,
                lastClientPosition: {},
                visibleXRange: void 0,
                yValueDecimal: 0,
                total: 0,
                SVGNS: "http://www.w3.org/2000/svg",
                svgWidth: 0,
                svgHeight: 0,
                noData: !1,
                locale: {},
                dom: {},
                memory: { methodsToExec: [] },
                shouldAnimate: !0,
                skipLastTimelinelabel: !1,
                skipFirstTimelinelabel: !1,
                delayedElements: [],
                axisCharts: !0,
                isDataXYZ: !1,
                resized: !1,
                resizeTimer: null,
                comboCharts: !1,
                dataChanged: !1,
                previousPaths: [],
                allSeriesHasEqualX: !0,
                pointsArray: [],
                dataLabelsRects: [],
                lastDrawnDataLabelsIndexes: [],
                hasNullValues: !1,
                easing: null,
                zoomed: !1,
                gridWidth: 0,
                gridHeight: 0,
                rotateXLabels: !1,
                defaultLabels: !1,
                xLabelFormatter: void 0,
                yLabelFormatters: [],
                xaxisTooltipFormatter: void 0,
                ttKeyFormatter: void 0,
                ttVal: void 0,
                ttZFormatter: void 0,
                LINE_HEIGHT_RATIO: 1.618,
                xAxisLabelsHeight: 0,
                xAxisGroupLabelsHeight: 0,
                xAxisLabelsWidth: 0,
                yAxisLabelsWidth: 0,
                scaleX: 1,
                scaleY: 1,
                translateX: 0,
                translateY: 0,
                translateYAxisX: [],
                yAxisWidths: [],
                translateXAxisY: 0,
                translateXAxisX: 0,
                tooltip: null,
              };
            },
          },
          {
            key: "init",
            value: function (i) {
              var n = this.globalVars(i);
              return (
                this.initGlobalVars(n),
                (n.initialConfig = L.extend({}, i)),
                (n.initialSeries = L.clone(i.series)),
                (n.lastXAxis = L.clone(n.initialConfig.xaxis)),
                (n.lastYAxis = L.clone(n.initialConfig.yaxis)),
                n
              );
            },
          },
        ]),
        M
      );
    })(),
    fe = (function () {
      function M(i) {
        f(this, M), (this.opts = i);
      }
      return (
        y(M, [
          {
            key: "init",
            value: function () {
              var i = new ge(this.opts).init({ responsiveOverride: !1 });
              return { config: i, globals: new me().init(i) };
            },
          },
        ]),
        M
      );
    })(),
    be = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.opts = null),
          (this.seriesIndex = 0);
      }
      return (
        y(M, [
          {
            key: "clippedImgArea",
            value: function (i) {
              var n = this.w,
                a = n.config,
                o = parseInt(n.globals.gridWidth, 10),
                l = parseInt(n.globals.gridHeight, 10),
                u = o > l ? o : l,
                h = i.image,
                d = 0,
                g = 0;
              i.width === void 0 && i.height === void 0
                ? a.fill.image.width !== void 0 &&
                  a.fill.image.height !== void 0
                  ? ((d = a.fill.image.width + 1), (g = a.fill.image.height))
                  : ((d = u + 1), (g = u))
                : ((d = i.width), (g = i.height));
              var x = document.createElementNS(n.globals.SVGNS, "pattern");
              B.setAttrs(x, {
                id: i.patternID,
                patternUnits: i.patternUnits
                  ? i.patternUnits
                  : "userSpaceOnUse",
                width: d + "px",
                height: g + "px",
              });
              var v = document.createElementNS(n.globals.SVGNS, "image");
              x.appendChild(v),
                v.setAttributeNS(window.SVG.xlink, "href", h),
                B.setAttrs(v, {
                  x: 0,
                  y: 0,
                  preserveAspectRatio: "none",
                  width: d + "px",
                  height: g + "px",
                }),
                (v.style.opacity = i.opacity),
                n.globals.dom.elDefs.node.appendChild(x);
            },
          },
          {
            key: "getSeriesIndex",
            value: function (i) {
              var n = this.w,
                a = n.config.chart.type;
              return (
                ((a === "bar" || a === "rangeBar") &&
                  n.config.plotOptions.bar.distributed) ||
                a === "heatmap" ||
                a === "treemap"
                  ? (this.seriesIndex = i.seriesNumber)
                  : (this.seriesIndex =
                      i.seriesNumber % n.globals.series.length),
                this.seriesIndex
              );
            },
          },
          {
            key: "fillPath",
            value: function (i) {
              var n = this.w;
              this.opts = i;
              var a,
                o,
                l,
                u = this.w.config;
              this.seriesIndex = this.getSeriesIndex(i);
              var h = this.gSBFillColors()[this.seriesIndex];
              n.globals.seriesColors[this.seriesIndex] !== void 0 &&
                (h = n.globals.seriesColors[this.seriesIndex]),
                typeof h == "function" &&
                  (h = h({
                    seriesIndex: this.seriesIndex,
                    dataPointIndex: i.dataPointIndex,
                    value: i.value,
                    w: n,
                  }));
              var d = i.fillType
                  ? i.fillType
                  : this.gSBFillType(this.seriesIndex),
                g = Array.isArray(u.fill.opacity)
                  ? u.fill.opacity[this.seriesIndex]
                  : u.fill.opacity;
              i.color && (h = i.color),
                h ||
                  ((h = "#fff"), console.warn("undefined color - ApexCharts"));
              var x = h;
              if (
                (h.indexOf("rgb") === -1
                  ? h.length < 9 && (x = L.hexToRgba(h, g))
                  : h.indexOf("rgba") > -1 && (g = L.getOpacityFromRGBA(h)),
                i.opacity && (g = i.opacity),
                d === "pattern" &&
                  (o = this.handlePatternFill({
                    fillConfig: i.fillConfig,
                    patternFill: o,
                    fillColor: h,
                    fillOpacity: g,
                    defaultColor: x,
                  })),
                d === "gradient" &&
                  (l = this.handleGradientFill({
                    fillConfig: i.fillConfig,
                    fillColor: h,
                    fillOpacity: g,
                    i: this.seriesIndex,
                  })),
                d === "image")
              ) {
                var v = u.fill.image.src,
                  w = i.patternID ? i.patternID : "";
                this.clippedImgArea({
                  opacity: g,
                  image: Array.isArray(v)
                    ? i.seriesNumber < v.length
                      ? v[i.seriesNumber]
                      : v[0]
                    : v,
                  width: i.width ? i.width : void 0,
                  height: i.height ? i.height : void 0,
                  patternUnits: i.patternUnits,
                  patternID: "pattern"
                    .concat(n.globals.cuid)
                    .concat(i.seriesNumber + 1)
                    .concat(w),
                }),
                  (a = "url(#pattern"
                    .concat(n.globals.cuid)
                    .concat(i.seriesNumber + 1)
                    .concat(w, ")"));
              } else a = d === "gradient" ? l : d === "pattern" ? o : x;
              return i.solid && (a = x), a;
            },
          },
          {
            key: "gSBFillType",
            value: function (i) {
              var n = this.w;
              return Array.isArray(n.config.fill.type)
                ? n.config.fill.type[i]
                : n.config.fill.type;
            },
          },
          {
            key: "gSBFillColors",
            value: function () {
              var i = this.w,
                n = i.config,
                a = this.opts,
                o = [];
              return (
                i.globals.comboCharts
                  ? i.config.series[this.seriesIndex].type === "line"
                    ? Array.isArray(i.globals.stroke.colors)
                      ? (o = i.globals.stroke.colors)
                      : o.push(i.globals.stroke.colors)
                    : Array.isArray(i.globals.fill.colors)
                    ? (o = i.globals.fill.colors)
                    : o.push(i.globals.fill.colors)
                  : n.chart.type === "line"
                  ? Array.isArray(i.globals.stroke.colors)
                    ? (o = i.globals.stroke.colors)
                    : o.push(i.globals.stroke.colors)
                  : Array.isArray(i.globals.fill.colors)
                  ? (o = i.globals.fill.colors)
                  : o.push(i.globals.fill.colors),
                a.fillColors !== void 0 &&
                  ((o = []),
                  Array.isArray(a.fillColors)
                    ? (o = a.fillColors.slice())
                    : o.push(a.fillColors)),
                o
              );
            },
          },
          {
            key: "handlePatternFill",
            value: function (i) {
              var n = i.fillConfig,
                a = i.patternFill,
                o = i.fillColor,
                l = i.fillOpacity,
                u = i.defaultColor,
                h = this.w.config.fill;
              n && (h = n);
              var d = this.opts,
                g = new B(this.ctx),
                x = Array.isArray(h.pattern.strokeWidth)
                  ? h.pattern.strokeWidth[this.seriesIndex]
                  : h.pattern.strokeWidth,
                v = o;
              return (
                Array.isArray(h.pattern.style)
                  ? (a =
                      h.pattern.style[d.seriesNumber] !== void 0
                        ? g.drawPattern(
                            h.pattern.style[d.seriesNumber],
                            h.pattern.width,
                            h.pattern.height,
                            v,
                            x,
                            l
                          )
                        : u)
                  : (a = g.drawPattern(
                      h.pattern.style,
                      h.pattern.width,
                      h.pattern.height,
                      v,
                      x,
                      l
                    )),
                a
              );
            },
          },
          {
            key: "handleGradientFill",
            value: function (i) {
              var n = i.fillColor,
                a = i.fillOpacity,
                o = i.fillConfig,
                l = i.i,
                u = this.w.config.fill;
              o && (u = s(s({}, u), o));
              var h,
                d = this.opts,
                g = new B(this.ctx),
                x = new L(),
                v = u.gradient.type,
                w = n,
                k =
                  u.gradient.opacityFrom === void 0
                    ? a
                    : Array.isArray(u.gradient.opacityFrom)
                    ? u.gradient.opacityFrom[l]
                    : u.gradient.opacityFrom;
              w.indexOf("rgba") > -1 && (k = L.getOpacityFromRGBA(w));
              var C =
                u.gradient.opacityTo === void 0
                  ? a
                  : Array.isArray(u.gradient.opacityTo)
                  ? u.gradient.opacityTo[l]
                  : u.gradient.opacityTo;
              if (
                u.gradient.gradientToColors === void 0 ||
                u.gradient.gradientToColors.length === 0
              )
                h =
                  u.gradient.shade === "dark"
                    ? x.shadeColor(
                        -1 * parseFloat(u.gradient.shadeIntensity),
                        n.indexOf("rgb") > -1 ? L.rgb2hex(n) : n
                      )
                    : x.shadeColor(
                        parseFloat(u.gradient.shadeIntensity),
                        n.indexOf("rgb") > -1 ? L.rgb2hex(n) : n
                      );
              else if (u.gradient.gradientToColors[d.seriesNumber]) {
                var P = u.gradient.gradientToColors[d.seriesNumber];
                (h = P),
                  P.indexOf("rgba") > -1 && (C = L.getOpacityFromRGBA(P));
              } else h = n;
              if (
                (u.gradient.gradientFrom && (w = u.gradient.gradientFrom),
                u.gradient.gradientTo && (h = u.gradient.gradientTo),
                u.gradient.inverseColors)
              ) {
                var E = w;
                (w = h), (h = E);
              }
              return (
                w.indexOf("rgb") > -1 && (w = L.rgb2hex(w)),
                h.indexOf("rgb") > -1 && (h = L.rgb2hex(h)),
                g.drawGradient(
                  v,
                  w,
                  h,
                  k,
                  C,
                  d.size,
                  u.gradient.stops,
                  u.gradient.colorStops,
                  l
                )
              );
            },
          },
        ]),
        M
      );
    })(),
    je = (function () {
      function M(i, n) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "setGlobalMarkerSize",
            value: function () {
              var i = this.w;
              if (
                ((i.globals.markers.size = Array.isArray(i.config.markers.size)
                  ? i.config.markers.size
                  : [i.config.markers.size]),
                i.globals.markers.size.length > 0)
              ) {
                if (i.globals.markers.size.length < i.globals.series.length + 1)
                  for (var n = 0; n <= i.globals.series.length; n++)
                    i.globals.markers.size[n] === void 0 &&
                      i.globals.markers.size.push(i.globals.markers.size[0]);
              } else
                i.globals.markers.size = i.config.series.map(function (a) {
                  return i.config.markers.size;
                });
            },
          },
          {
            key: "plotChartMarkers",
            value: function (i, n, a, o) {
              var l,
                u =
                  arguments.length > 4 &&
                  arguments[4] !== void 0 &&
                  arguments[4],
                h = this.w,
                d = n,
                g = i,
                x = null,
                v = new B(this.ctx),
                w =
                  h.config.markers.discrete && h.config.markers.discrete.length;
              if (
                ((h.globals.markers.size[n] > 0 || u || w) &&
                  (x = v.group({
                    class: u || w ? "" : "apexcharts-series-markers",
                  })).attr(
                    "clip-path",
                    "url(#gridRectMarkerMask".concat(h.globals.cuid, ")")
                  ),
                Array.isArray(g.x))
              )
                for (var k = 0; k < g.x.length; k++) {
                  var C = a;
                  a === 1 && k === 0 && (C = 0), a === 1 && k === 1 && (C = 1);
                  var P = "apexcharts-marker";
                  if (
                    ((h.config.chart.type !== "line" &&
                      h.config.chart.type !== "area") ||
                      h.globals.comboCharts ||
                      h.config.tooltip.intersect ||
                      (P += " no-pointer-events"),
                    (Array.isArray(h.config.markers.size)
                      ? h.globals.markers.size[n] > 0
                      : h.config.markers.size > 0) ||
                      u ||
                      w)
                  ) {
                    L.isNumber(g.y[k])
                      ? (P += " w".concat(L.randomId()))
                      : (P = "apexcharts-nullpoint");
                    var E = this.getMarkerConfig({
                      cssClass: P,
                      seriesIndex: n,
                      dataPointIndex: C,
                    });
                    h.config.series[d].data[C] &&
                      (h.config.series[d].data[C].fillColor &&
                        (E.pointFillColor =
                          h.config.series[d].data[C].fillColor),
                      h.config.series[d].data[C].strokeColor &&
                        (E.pointStrokeColor =
                          h.config.series[d].data[C].strokeColor)),
                      o && (E.pSize = o),
                      (g.x[k] < 0 ||
                        g.x[k] > h.globals.gridWidth ||
                        g.y[k] < -h.globals.markers.largestSize ||
                        g.y[k] >
                          h.globals.gridHeight +
                            h.globals.markers.largestSize) &&
                        (E.pSize = 0),
                      (l = v.drawMarker(g.x[k], g.y[k], E)).attr("rel", C),
                      l.attr("j", C),
                      l.attr("index", n),
                      l.node.setAttribute("default-marker-size", E.pSize),
                      new U(this.ctx).setSelectionFilter(l, n, C),
                      this.addEvents(l),
                      x && x.add(l);
                  } else
                    h.globals.pointsArray[n] === void 0 &&
                      (h.globals.pointsArray[n] = []),
                      h.globals.pointsArray[n].push([g.x[k], g.y[k]]);
                }
              return x;
            },
          },
          {
            key: "getMarkerConfig",
            value: function (i) {
              var n = i.cssClass,
                a = i.seriesIndex,
                o = i.dataPointIndex,
                l = o === void 0 ? null : o,
                u = i.finishRadius,
                h = u === void 0 ? null : u,
                d = this.w,
                g = this.getMarkerStyle(a),
                x = d.globals.markers.size[a],
                v = d.config.markers;
              return (
                l !== null &&
                  v.discrete.length &&
                  v.discrete.map(function (w) {
                    w.seriesIndex === a &&
                      w.dataPointIndex === l &&
                      ((g.pointStrokeColor = w.strokeColor),
                      (g.pointFillColor = w.fillColor),
                      (x = w.size),
                      (g.pointShape = w.shape));
                  }),
                {
                  pSize: h === null ? x : h,
                  pRadius: v.radius,
                  width: Array.isArray(v.width) ? v.width[a] : v.width,
                  height: Array.isArray(v.height) ? v.height[a] : v.height,
                  pointStrokeWidth: Array.isArray(v.strokeWidth)
                    ? v.strokeWidth[a]
                    : v.strokeWidth,
                  pointStrokeColor: g.pointStrokeColor,
                  pointFillColor: g.pointFillColor,
                  shape:
                    g.pointShape ||
                    (Array.isArray(v.shape) ? v.shape[a] : v.shape),
                  class: n,
                  pointStrokeOpacity: Array.isArray(v.strokeOpacity)
                    ? v.strokeOpacity[a]
                    : v.strokeOpacity,
                  pointStrokeDashArray: Array.isArray(v.strokeDashArray)
                    ? v.strokeDashArray[a]
                    : v.strokeDashArray,
                  pointFillOpacity: Array.isArray(v.fillOpacity)
                    ? v.fillOpacity[a]
                    : v.fillOpacity,
                  seriesIndex: a,
                }
              );
            },
          },
          {
            key: "addEvents",
            value: function (i) {
              var n = this.w,
                a = new B(this.ctx);
              i.node.addEventListener(
                "mouseenter",
                a.pathMouseEnter.bind(this.ctx, i)
              ),
                i.node.addEventListener(
                  "mouseleave",
                  a.pathMouseLeave.bind(this.ctx, i)
                ),
                i.node.addEventListener(
                  "mousedown",
                  a.pathMouseDown.bind(this.ctx, i)
                ),
                i.node.addEventListener("click", n.config.markers.onClick),
                i.node.addEventListener(
                  "dblclick",
                  n.config.markers.onDblClick
                ),
                i.node.addEventListener(
                  "touchstart",
                  a.pathMouseDown.bind(this.ctx, i),
                  { passive: !0 }
                );
            },
          },
          {
            key: "getMarkerStyle",
            value: function (i) {
              var n = this.w,
                a = n.globals.markers.colors,
                o =
                  n.config.markers.strokeColor || n.config.markers.strokeColors;
              return {
                pointStrokeColor: Array.isArray(o) ? o[i] : o,
                pointFillColor: Array.isArray(a) ? a[i] : a,
              };
            },
          },
        ]),
        M
      );
    })(),
    Oe = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled);
      }
      return (
        y(M, [
          {
            key: "draw",
            value: function (i, n, a) {
              var o = this.w,
                l = new B(this.ctx),
                u = a.realIndex,
                h = a.pointsPos,
                d = a.zRatio,
                g = a.elParent,
                x = l.group({
                  class: "apexcharts-series-markers apexcharts-series-".concat(
                    o.config.chart.type
                  ),
                });
              if (
                (x.attr(
                  "clip-path",
                  "url(#gridRectMarkerMask".concat(o.globals.cuid, ")")
                ),
                Array.isArray(h.x))
              )
                for (var v = 0; v < h.x.length; v++) {
                  var w = n + 1,
                    k = !0;
                  n === 0 && v === 0 && (w = 0), n === 0 && v === 1 && (w = 1);
                  var C = 0,
                    P = o.globals.markers.size[u];
                  if (d !== 1 / 0) {
                    var E = o.config.plotOptions.bubble;
                    (P = o.globals.seriesZ[u][w]),
                      E.zScaling && (P /= d),
                      E.minBubbleRadius &&
                        P < E.minBubbleRadius &&
                        (P = E.minBubbleRadius),
                      E.maxBubbleRadius &&
                        P > E.maxBubbleRadius &&
                        (P = E.maxBubbleRadius);
                  }
                  o.config.chart.animations.enabled || (C = P);
                  var I = h.x[v],
                    D = h.y[v];
                  if (
                    ((C = C || 0),
                    (D !== null && o.globals.series[u][w] !== void 0) ||
                      (k = !1),
                    k)
                  ) {
                    var p = this.drawPoint(I, D, C, P, u, w, n);
                    x.add(p);
                  }
                  g.add(x);
                }
            },
          },
          {
            key: "drawPoint",
            value: function (i, n, a, o, l, u, h) {
              var d = this.w,
                g = l,
                x = new H(this.ctx),
                v = new U(this.ctx),
                w = new be(this.ctx),
                k = new je(this.ctx),
                C = new B(this.ctx),
                P = k.getMarkerConfig({
                  cssClass: "apexcharts-marker",
                  seriesIndex: g,
                  dataPointIndex: u,
                  finishRadius:
                    d.config.chart.type === "bubble" ||
                    (d.globals.comboCharts &&
                      d.config.series[l] &&
                      d.config.series[l].type === "bubble")
                      ? o
                      : null,
                });
              o = P.pSize;
              var E,
                I = w.fillPath({
                  seriesNumber: l,
                  dataPointIndex: u,
                  color: P.pointFillColor,
                  patternUnits: "objectBoundingBox",
                  value: d.globals.series[l][h],
                });
              if (
                (P.shape === "circle"
                  ? (E = C.drawCircle(a))
                  : (P.shape !== "square" && P.shape !== "rect") ||
                    (E = C.drawRect(
                      0,
                      0,
                      P.width - P.pointStrokeWidth / 2,
                      P.height - P.pointStrokeWidth / 2,
                      P.pRadius
                    )),
                d.config.series[g].data[u] &&
                  d.config.series[g].data[u].fillColor &&
                  (I = d.config.series[g].data[u].fillColor),
                E.attr({
                  x: i - P.width / 2 - P.pointStrokeWidth / 2,
                  y: n - P.height / 2 - P.pointStrokeWidth / 2,
                  cx: i,
                  cy: n,
                  fill: I,
                  "fill-opacity": P.pointFillOpacity,
                  stroke: P.pointStrokeColor,
                  r: o,
                  "stroke-width": P.pointStrokeWidth,
                  "stroke-dasharray": P.pointStrokeDashArray,
                  "stroke-opacity": P.pointStrokeOpacity,
                }),
                d.config.chart.dropShadow.enabled)
              ) {
                var D = d.config.chart.dropShadow;
                v.dropShadow(E, D, l);
              }
              if (
                !this.initialAnim ||
                d.globals.dataChanged ||
                d.globals.resized
              )
                d.globals.animationEnded = !0;
              else {
                var p = d.config.chart.animations.speed;
                x.animateMarker(
                  E,
                  0,
                  P.shape === "circle"
                    ? o
                    : { width: P.width, height: P.height },
                  p,
                  d.globals.easing,
                  function () {
                    window.setTimeout(function () {
                      x.animationCompleted(E);
                    }, 100);
                  }
                );
              }
              if (d.globals.dataChanged && P.shape === "circle")
                if (this.dynamicAnim) {
                  var b,
                    A,
                    R,
                    F,
                    _ = d.config.chart.animations.dynamicAnimation.speed;
                  (F =
                    d.globals.previousPaths[l] &&
                    d.globals.previousPaths[l][h]) != null &&
                    ((b = F.x), (A = F.y), (R = F.r !== void 0 ? F.r : o));
                  for (var G = 0; G < d.globals.collapsedSeries.length; G++)
                    d.globals.collapsedSeries[G].index === l &&
                      ((_ = 1), (o = 0));
                  i === 0 && n === 0 && (o = 0),
                    x.animateCircle(
                      E,
                      { cx: b, cy: A, r: R },
                      { cx: i, cy: n, r: o },
                      _,
                      d.globals.easing
                    );
                } else E.attr({ r: o });
              return (
                E.attr({ rel: u, j: u, index: l, "default-marker-size": o }),
                v.setSelectionFilter(E, l, u),
                k.addEvents(E),
                E.node.classList.add("apexcharts-marker"),
                E
              );
            },
          },
          {
            key: "centerTextInBubble",
            value: function (i) {
              var n = this.w;
              return {
                y: (i += parseInt(n.config.dataLabels.style.fontSize, 10) / 4),
              };
            },
          },
        ]),
        M
      );
    })(),
    Lt = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "dataLabelsCorrection",
            value: function (i, n, a, o, l, u, h) {
              var d = this.w,
                g = !1,
                x = new B(this.ctx).getTextRects(a, h),
                v = x.width,
                w = x.height;
              n < 0 && (n = 0),
                n > d.globals.gridHeight + w &&
                  (n = d.globals.gridHeight + w / 2),
                d.globals.dataLabelsRects[o] === void 0 &&
                  (d.globals.dataLabelsRects[o] = []),
                d.globals.dataLabelsRects[o].push({
                  x: i,
                  y: n,
                  width: v,
                  height: w,
                });
              var k = d.globals.dataLabelsRects[o].length - 2,
                C =
                  d.globals.lastDrawnDataLabelsIndexes[o] !== void 0
                    ? d.globals.lastDrawnDataLabelsIndexes[o][
                        d.globals.lastDrawnDataLabelsIndexes[o].length - 1
                      ]
                    : 0;
              if (d.globals.dataLabelsRects[o][k] !== void 0) {
                var P = d.globals.dataLabelsRects[o][C];
                (i > P.x + P.width ||
                  n > P.y + P.height ||
                  n + w < P.y ||
                  i + v < P.x) &&
                  (g = !0);
              }
              return (
                (l === 0 || u) && (g = !0),
                { x: i, y: n, textRects: x, drawnextLabel: g }
              );
            },
          },
          {
            key: "drawDataLabel",
            value: function (i) {
              var n = this,
                a = i.type,
                o = i.pos,
                l = i.i,
                u = i.j,
                h = i.isRangeStart,
                d = i.strokeWidth,
                g = d === void 0 ? 2 : d,
                x = this.w,
                v = new B(this.ctx),
                w = x.config.dataLabels,
                k = 0,
                C = 0,
                P = u,
                E = null;
              if (!w.enabled || !Array.isArray(o.x)) return E;
              E = v.group({ class: "apexcharts-data-labels" });
              for (var I = 0; I < o.x.length; I++)
                if (
                  ((k = o.x[I] + w.offsetX),
                  (C = o.y[I] + w.offsetY + g),
                  !isNaN(k))
                ) {
                  u === 1 && I === 0 && (P = 0), u === 1 && I === 1 && (P = 1);
                  var D = x.globals.series[l][P];
                  a === "rangeArea" &&
                    (D = h
                      ? x.globals.seriesRangeStart[l][P]
                      : x.globals.seriesRangeEnd[l][P]);
                  var p = "",
                    b = function (A) {
                      return x.config.dataLabels.formatter(A, {
                        ctx: n.ctx,
                        seriesIndex: l,
                        dataPointIndex: P,
                        w: x,
                      });
                    };
                  x.config.chart.type === "bubble"
                    ? ((p = b((D = x.globals.seriesZ[l][P]))),
                      (C = o.y[I]),
                      (C = new Oe(this.ctx).centerTextInBubble(C, l, P).y))
                    : D !== void 0 && (p = b(D)),
                    this.plotDataLabelsText({
                      x: k,
                      y: C,
                      text: p,
                      i: l,
                      j: P,
                      parent: E,
                      offsetCorrection: !0,
                      dataLabelsConfig: x.config.dataLabels,
                    });
                }
              return E;
            },
          },
          {
            key: "plotDataLabelsText",
            value: function (i) {
              var n = this.w,
                a = new B(this.ctx),
                o = i.x,
                l = i.y,
                u = i.i,
                h = i.j,
                d = i.text,
                g = i.textAnchor,
                x = i.fontSize,
                v = i.parent,
                w = i.dataLabelsConfig,
                k = i.color,
                C = i.alwaysDrawDataLabel,
                P = i.offsetCorrection;
              if (
                !(
                  Array.isArray(n.config.dataLabels.enabledOnSeries) &&
                  n.config.dataLabels.enabledOnSeries.indexOf(u) < 0
                )
              ) {
                var E = { x: o, y: l, drawnextLabel: !0, textRects: null };
                P &&
                  (E = this.dataLabelsCorrection(
                    o,
                    l,
                    d,
                    u,
                    h,
                    C,
                    parseInt(w.style.fontSize, 10)
                  )),
                  n.globals.zoomed || ((o = E.x), (l = E.y)),
                  E.textRects &&
                    (o < -10 - E.textRects.width ||
                      o > n.globals.gridWidth + E.textRects.width + 10) &&
                    (d = "");
                var I = n.globals.dataLabels.style.colors[u];
                (((n.config.chart.type === "bar" ||
                  n.config.chart.type === "rangeBar") &&
                  n.config.plotOptions.bar.distributed) ||
                  n.config.dataLabels.distributed) &&
                  (I = n.globals.dataLabels.style.colors[h]),
                  typeof I == "function" &&
                    (I = I({
                      series: n.globals.series,
                      seriesIndex: u,
                      dataPointIndex: h,
                      w: n,
                    })),
                  k && (I = k);
                var D = w.offsetX,
                  p = w.offsetY;
                if (
                  ((n.config.chart.type !== "bar" &&
                    n.config.chart.type !== "rangeBar") ||
                    ((D = 0), (p = 0)),
                  E.drawnextLabel)
                ) {
                  var b = a.drawText({
                    width: 100,
                    height: parseInt(w.style.fontSize, 10),
                    x: o + D,
                    y: l + p,
                    foreColor: I,
                    textAnchor: g || w.textAnchor,
                    text: d,
                    fontSize: x || w.style.fontSize,
                    fontFamily: w.style.fontFamily,
                    fontWeight: w.style.fontWeight || "normal",
                  });
                  if (
                    (b.attr({ class: "apexcharts-datalabel", cx: o, cy: l }),
                    w.dropShadow.enabled)
                  ) {
                    var A = w.dropShadow;
                    new U(this.ctx).dropShadow(b, A);
                  }
                  v.add(b),
                    n.globals.lastDrawnDataLabelsIndexes[u] === void 0 &&
                      (n.globals.lastDrawnDataLabelsIndexes[u] = []),
                    n.globals.lastDrawnDataLabelsIndexes[u].push(h);
                }
              }
            },
          },
          {
            key: "addBackgroundToDataLabel",
            value: function (i, n) {
              var a = this.w,
                o = a.config.dataLabels.background,
                l = o.padding,
                u = o.padding / 2,
                h = n.width,
                d = n.height,
                g = new B(this.ctx).drawRect(
                  n.x - l,
                  n.y - u / 2,
                  h + 2 * l,
                  d + u,
                  o.borderRadius,
                  a.config.chart.background === "transparent"
                    ? "#fff"
                    : a.config.chart.background,
                  o.opacity,
                  o.borderWidth,
                  o.borderColor
                );
              return (
                o.dropShadow.enabled &&
                  new U(this.ctx).dropShadow(g, o.dropShadow),
                g
              );
            },
          },
          {
            key: "dataLabelsBackground",
            value: function () {
              var i = this.w;
              if (i.config.chart.type !== "bubble")
                for (
                  var n = i.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-datalabels text"
                    ),
                    a = 0;
                  a < n.length;
                  a++
                ) {
                  var o = n[a],
                    l = o.getBBox(),
                    u = null;
                  if (
                    (l.width &&
                      l.height &&
                      (u = this.addBackgroundToDataLabel(o, l)),
                    u)
                  ) {
                    o.parentNode.insertBefore(u.node, o);
                    var h = o.getAttribute("fill");
                    i.config.chart.animations.enabled &&
                    !i.globals.resized &&
                    !i.globals.dataChanged
                      ? u.animate().attr({ fill: h })
                      : u.attr({ fill: h }),
                      o.setAttribute(
                        "fill",
                        i.config.dataLabels.background.foreColor
                      );
                  }
                }
            },
          },
          {
            key: "bringForward",
            value: function () {
              for (
                var i = this.w,
                  n = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-datalabels"
                  ),
                  a = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-plot-series:last-child"
                  ),
                  o = 0;
                o < n.length;
                o++
              )
                a && a.insertBefore(n[o], a.nextSibling);
            },
          },
        ]),
        M
      );
    })(),
    Re = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.legendInactiveClass = "legend-mouseover-inactive");
      }
      return (
        y(M, [
          {
            key: "getAllSeriesEls",
            value: function () {
              return this.w.globals.dom.baseEl.getElementsByClassName(
                "apexcharts-series"
              );
            },
          },
          {
            key: "getSeriesByName",
            value: function (i) {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-inner .apexcharts-series[seriesName='".concat(
                  L.escapeString(i),
                  "']"
                )
              );
            },
          },
          {
            key: "isSeriesHidden",
            value: function (i) {
              var n = this.getSeriesByName(i),
                a = parseInt(n.getAttribute("data:realIndex"), 10);
              return {
                isHidden: n.classList.contains("apexcharts-series-collapsed"),
                realIndex: a,
              };
            },
          },
          {
            key: "addCollapsedClassToSeries",
            value: function (i, n) {
              var a = this.w;
              function o(l) {
                for (var u = 0; u < l.length; u++)
                  l[u].index === n &&
                    i.node.classList.add("apexcharts-series-collapsed");
              }
              o(a.globals.collapsedSeries),
                o(a.globals.ancillaryCollapsedSeries);
            },
          },
          {
            key: "toggleSeries",
            value: function (i) {
              var n = this.isSeriesHidden(i);
              return (
                this.ctx.legend.legendHelpers.toggleDataSeries(
                  n.realIndex,
                  n.isHidden
                ),
                n.isHidden
              );
            },
          },
          {
            key: "showSeries",
            value: function (i) {
              var n = this.isSeriesHidden(i);
              n.isHidden &&
                this.ctx.legend.legendHelpers.toggleDataSeries(n.realIndex, !0);
            },
          },
          {
            key: "hideSeries",
            value: function (i) {
              var n = this.isSeriesHidden(i);
              n.isHidden ||
                this.ctx.legend.legendHelpers.toggleDataSeries(n.realIndex, !1);
            },
          },
          {
            key: "resetSeries",
            value: function () {
              var i =
                  !(arguments.length > 0 && arguments[0] !== void 0) ||
                  arguments[0],
                n =
                  !(arguments.length > 1 && arguments[1] !== void 0) ||
                  arguments[1],
                a =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2],
                o = this.w,
                l = L.clone(o.globals.initialSeries);
              (o.globals.previousPaths = []),
                a
                  ? ((o.globals.collapsedSeries = []),
                    (o.globals.ancillaryCollapsedSeries = []),
                    (o.globals.collapsedSeriesIndices = []),
                    (o.globals.ancillaryCollapsedSeriesIndices = []))
                  : (l = this.emptyCollapsedSeries(l)),
                (o.config.series = l),
                i &&
                  (n &&
                    ((o.globals.zoomed = !1),
                    this.ctx.updateHelpers.revertDefaultAxisMinMax()),
                  this.ctx.updateHelpers._updateSeries(
                    l,
                    o.config.chart.animations.dynamicAnimation.enabled
                  ));
            },
          },
          {
            key: "emptyCollapsedSeries",
            value: function (i) {
              for (var n = this.w, a = 0; a < i.length; a++)
                n.globals.collapsedSeriesIndices.indexOf(a) > -1 &&
                  (i[a].data = []);
              return i;
            },
          },
          {
            key: "toggleSeriesOnHover",
            value: function (i, n) {
              var a = this.w;
              n || (n = i.target);
              var o = a.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series, .apexcharts-datalabels"
              );
              if (i.type === "mousemove") {
                var l = parseInt(n.getAttribute("rel"), 10) - 1,
                  u = null,
                  h = null;
                a.globals.axisCharts || a.config.chart.type === "radialBar"
                  ? a.globals.axisCharts
                    ? ((u = a.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(l, "']")
                      )),
                      (h = a.globals.dom.baseEl.querySelector(
                        ".apexcharts-datalabels[data\\:realIndex='".concat(
                          l,
                          "']"
                        )
                      )))
                    : (u = a.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(l + 1, "']")
                      ))
                  : (u = a.globals.dom.baseEl.querySelector(
                      ".apexcharts-series[rel='".concat(l + 1, "'] path")
                    ));
                for (var d = 0; d < o.length; d++)
                  o[d].classList.add(this.legendInactiveClass);
                u !== null &&
                  (a.globals.axisCharts ||
                    u.parentNode.classList.remove(this.legendInactiveClass),
                  u.classList.remove(this.legendInactiveClass),
                  h !== null && h.classList.remove(this.legendInactiveClass));
              } else if (i.type === "mouseout")
                for (var g = 0; g < o.length; g++)
                  o[g].classList.remove(this.legendInactiveClass);
            },
          },
          {
            key: "highlightRangeInSeries",
            value: function (i, n) {
              var a = this,
                o = this.w,
                l = o.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-heatmap-rect"
                ),
                u = function (d) {
                  for (var g = 0; g < l.length; g++)
                    l[g].classList[d](a.legendInactiveClass);
                };
              if (i.type === "mousemove") {
                var h = parseInt(n.getAttribute("rel"), 10) - 1;
                u("add"),
                  (function (d) {
                    for (var g = 0; g < l.length; g++) {
                      var x = parseInt(l[g].getAttribute("val"), 10);
                      x >= d.from &&
                        x <= d.to &&
                        l[g].classList.remove(a.legendInactiveClass);
                    }
                  })(o.config.plotOptions.heatmap.colorScale.ranges[h]);
              } else i.type === "mouseout" && u("remove");
            },
          },
          {
            key: "getActiveConfigSeriesIndex",
            value: function () {
              var i =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : "asc",
                n =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : [],
                a = this.w,
                o = 0;
              if (a.config.series.length > 1) {
                for (
                  var l = a.config.series.map(function (h, d) {
                      return h.data &&
                        h.data.length > 0 &&
                        a.globals.collapsedSeriesIndices.indexOf(d) === -1 &&
                        (!a.globals.comboCharts ||
                          n.length === 0 ||
                          (n.length && n.indexOf(a.config.series[d].type) > -1))
                        ? d
                        : -1;
                    }),
                    u = i === "asc" ? 0 : l.length - 1;
                  i === "asc" ? u < l.length : u >= 0;
                  i === "asc" ? u++ : u--
                )
                  if (l[u] !== -1) {
                    o = l[u];
                    break;
                  }
              }
              return o;
            },
          },
          {
            key: "getBarSeriesIndices",
            value: function () {
              return this.w.globals.comboCharts
                ? this.w.config.series
                    .map(function (i, n) {
                      return i.type === "bar" || i.type === "column" ? n : -1;
                    })
                    .filter(function (i) {
                      return i !== -1;
                    })
                : this.w.config.series.map(function (i, n) {
                    return n;
                  });
            },
          },
          {
            key: "getPreviousPaths",
            value: function () {
              var i = this.w;
              function n(u, h, d) {
                for (
                  var g = u[h].childNodes,
                    x = {
                      type: d,
                      paths: [],
                      realIndex: u[h].getAttribute("data:realIndex"),
                    },
                    v = 0;
                  v < g.length;
                  v++
                )
                  if (g[v].hasAttribute("pathTo")) {
                    var w = g[v].getAttribute("pathTo");
                    x.paths.push({ d: w });
                  }
                i.globals.previousPaths.push(x);
              }
              (i.globals.previousPaths = []),
                [
                  "line",
                  "area",
                  "bar",
                  "rangebar",
                  "rangeArea",
                  "candlestick",
                  "radar",
                ].forEach(function (u) {
                  for (
                    var h,
                      d =
                        ((h = u),
                        i.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-".concat(h, "-series .apexcharts-series")
                        )),
                      g = 0;
                    g < d.length;
                    g++
                  )
                    n(d, g, u);
                }),
                this.handlePrevBubbleScatterPaths("bubble"),
                this.handlePrevBubbleScatterPaths("scatter");
              var a = i.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-".concat(
                  i.config.chart.type,
                  " .apexcharts-series"
                )
              );
              if (a.length > 0)
                for (
                  var o = function (u) {
                      for (
                        var h = i.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-"
                              .concat(
                                i.config.chart.type,
                                " .apexcharts-series[data\\:realIndex='"
                              )
                              .concat(u, "'] rect")
                          ),
                          d = [],
                          g = function (v) {
                            var w = function (C) {
                                return h[v].getAttribute(C);
                              },
                              k = {
                                x: parseFloat(w("x")),
                                y: parseFloat(w("y")),
                                width: parseFloat(w("width")),
                                height: parseFloat(w("height")),
                              };
                            d.push({
                              rect: k,
                              color: h[v].getAttribute("color"),
                            });
                          },
                          x = 0;
                        x < h.length;
                        x++
                      )
                        g(x);
                      i.globals.previousPaths.push(d);
                    },
                    l = 0;
                  l < a.length;
                  l++
                )
                  o(l);
              i.globals.axisCharts ||
                (i.globals.previousPaths = i.globals.series);
            },
          },
          {
            key: "handlePrevBubbleScatterPaths",
            value: function (i) {
              var n = this.w,
                a = n.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-".concat(i, "-series .apexcharts-series")
                );
              if (a.length > 0)
                for (var o = 0; o < a.length; o++) {
                  for (
                    var l = n.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-"
                          .concat(
                            i,
                            "-series .apexcharts-series[data\\:realIndex='"
                          )
                          .concat(o, "'] circle")
                      ),
                      u = [],
                      h = 0;
                    h < l.length;
                    h++
                  )
                    u.push({
                      x: l[h].getAttribute("cx"),
                      y: l[h].getAttribute("cy"),
                      r: l[h].getAttribute("r"),
                    });
                  n.globals.previousPaths.push(u);
                }
            },
          },
          {
            key: "clearPreviousPaths",
            value: function () {
              var i = this.w;
              (i.globals.previousPaths = []),
                (i.globals.allSeriesCollapsed = !1);
            },
          },
          {
            key: "handleNoData",
            value: function () {
              var i = this.w,
                n = i.config.noData,
                a = new B(this.ctx),
                o = i.globals.svgWidth / 2,
                l = i.globals.svgHeight / 2,
                u = "middle";
              if (
                ((i.globals.noData = !0),
                (i.globals.animationEnded = !0),
                n.align === "left"
                  ? ((o = 10), (u = "start"))
                  : n.align === "right" &&
                    ((o = i.globals.svgWidth - 10), (u = "end")),
                n.verticalAlign === "top"
                  ? (l = 50)
                  : n.verticalAlign === "bottom" &&
                    (l = i.globals.svgHeight - 50),
                (o += n.offsetX),
                (l = l + parseInt(n.style.fontSize, 10) + 2 + n.offsetY),
                n.text !== void 0 && n.text !== "")
              ) {
                var h = a.drawText({
                  x: o,
                  y: l,
                  text: n.text,
                  textAnchor: u,
                  fontSize: n.style.fontSize,
                  fontFamily: n.style.fontFamily,
                  foreColor: n.style.color,
                  opacity: 1,
                  class: "apexcharts-text-nodata",
                });
                i.globals.dom.Paper.add(h);
              }
            },
          },
          {
            key: "setNullSeriesToZeroValues",
            value: function (i) {
              for (var n = this.w, a = 0; a < i.length; a++)
                if (i[a].length === 0)
                  for (
                    var o = 0;
                    o < i[n.globals.maxValsInArrayIndex].length;
                    o++
                  )
                    i[a].push(0);
              return i;
            },
          },
          {
            key: "hasAllSeriesEqualX",
            value: function () {
              for (
                var i = !0, n = this.w, a = this.filteredSeriesX(), o = 0;
                o < a.length - 1;
                o++
              )
                if (a[o][0] !== a[o + 1][0]) {
                  i = !1;
                  break;
                }
              return (n.globals.allSeriesHasEqualX = i), i;
            },
          },
          {
            key: "filteredSeriesX",
            value: function () {
              var i = this.w.globals.seriesX.map(function (n) {
                return n.length > 0 ? n : [];
              });
              return i;
            },
          },
        ]),
        M
      );
    })(),
    Qt = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.twoDSeries = []),
          (this.threeDSeries = []),
          (this.twoDSeriesX = []),
          (this.seriesGoals = []),
          (this.coreUtils = new K(this.ctx));
      }
      return (
        y(M, [
          {
            key: "isMultiFormat",
            value: function () {
              return this.isFormatXY() || this.isFormat2DArray();
            },
          },
          {
            key: "isFormatXY",
            value: function () {
              var i = this.w.config.series.slice(),
                n = new Re(this.ctx);
              if (
                ((this.activeSeriesIndex = n.getActiveConfigSeriesIndex()),
                i[this.activeSeriesIndex].data !== void 0 &&
                  i[this.activeSeriesIndex].data.length > 0 &&
                  i[this.activeSeriesIndex].data[0] !== null &&
                  i[this.activeSeriesIndex].data[0].x !== void 0 &&
                  i[this.activeSeriesIndex].data[0] !== null)
              )
                return !0;
            },
          },
          {
            key: "isFormat2DArray",
            value: function () {
              var i = this.w.config.series.slice(),
                n = new Re(this.ctx);
              if (
                ((this.activeSeriesIndex = n.getActiveConfigSeriesIndex()),
                i[this.activeSeriesIndex].data !== void 0 &&
                  i[this.activeSeriesIndex].data.length > 0 &&
                  i[this.activeSeriesIndex].data[0] !== void 0 &&
                  i[this.activeSeriesIndex].data[0] !== null &&
                  i[this.activeSeriesIndex].data[0].constructor === Array)
              )
                return !0;
            },
          },
          {
            key: "handleFormat2DArray",
            value: function (i, n) {
              for (
                var a = this.w.config,
                  o = this.w.globals,
                  l =
                    a.chart.type === "boxPlot" ||
                    a.series[n].type === "boxPlot",
                  u = 0;
                u < i[n].data.length;
                u++
              )
                if (
                  (i[n].data[u][1] !== void 0 &&
                    (Array.isArray(i[n].data[u][1]) &&
                    i[n].data[u][1].length === 4 &&
                    !l
                      ? this.twoDSeries.push(L.parseNumber(i[n].data[u][1][3]))
                      : i[n].data[u].length >= 5
                      ? this.twoDSeries.push(L.parseNumber(i[n].data[u][4]))
                      : this.twoDSeries.push(L.parseNumber(i[n].data[u][1])),
                    (o.dataFormatXNumeric = !0)),
                  a.xaxis.type === "datetime")
                ) {
                  var h = new Date(i[n].data[u][0]);
                  (h = new Date(h).getTime()), this.twoDSeriesX.push(h);
                } else this.twoDSeriesX.push(i[n].data[u][0]);
              for (var d = 0; d < i[n].data.length; d++)
                i[n].data[d][2] !== void 0 &&
                  (this.threeDSeries.push(i[n].data[d][2]), (o.isDataXYZ = !0));
            },
          },
          {
            key: "handleFormatXY",
            value: function (i, n) {
              var a = this.w.config,
                o = this.w.globals,
                l = new xe(this.ctx),
                u = n;
              o.collapsedSeriesIndices.indexOf(n) > -1 &&
                (u = this.activeSeriesIndex);
              for (var h = 0; h < i[n].data.length; h++)
                i[n].data[h].y !== void 0 &&
                  (Array.isArray(i[n].data[h].y)
                    ? this.twoDSeries.push(
                        L.parseNumber(i[n].data[h].y[i[n].data[h].y.length - 1])
                      )
                    : this.twoDSeries.push(L.parseNumber(i[n].data[h].y))),
                  i[n].data[h].goals !== void 0 &&
                  Array.isArray(i[n].data[h].goals)
                    ? (this.seriesGoals[n] === void 0 &&
                        (this.seriesGoals[n] = []),
                      this.seriesGoals[n].push(i[n].data[h].goals))
                    : (this.seriesGoals[n] === void 0 &&
                        (this.seriesGoals[n] = []),
                      this.seriesGoals[n].push(null));
              for (var d = 0; d < i[u].data.length; d++) {
                var g = typeof i[u].data[d].x == "string",
                  x = Array.isArray(i[u].data[d].x),
                  v = !x && !!l.isValidDate(i[u].data[d].x.toString());
                if (g || v)
                  if (g || a.xaxis.convertedCatToNumeric) {
                    var w = o.isBarHorizontal && o.isRangeData;
                    a.xaxis.type !== "datetime" || w
                      ? ((this.fallbackToCategory = !0),
                        this.twoDSeriesX.push(i[u].data[d].x),
                        isNaN(i[u].data[d].x) ||
                          this.w.config.xaxis.type === "category" ||
                          typeof i[u].data[d].x == "string" ||
                          (o.isXNumeric = !0))
                      : this.twoDSeriesX.push(l.parseDate(i[u].data[d].x));
                  } else
                    a.xaxis.type === "datetime"
                      ? this.twoDSeriesX.push(
                          l.parseDate(i[u].data[d].x.toString())
                        )
                      : ((o.dataFormatXNumeric = !0),
                        (o.isXNumeric = !0),
                        this.twoDSeriesX.push(parseFloat(i[u].data[d].x)));
                else
                  x
                    ? ((this.fallbackToCategory = !0),
                      this.twoDSeriesX.push(i[u].data[d].x))
                    : ((o.isXNumeric = !0),
                      (o.dataFormatXNumeric = !0),
                      this.twoDSeriesX.push(i[u].data[d].x));
              }
              if (i[n].data[0] && i[n].data[0].z !== void 0) {
                for (var k = 0; k < i[n].data.length; k++)
                  this.threeDSeries.push(i[n].data[k].z);
                o.isDataXYZ = !0;
              }
            },
          },
          {
            key: "handleRangeData",
            value: function (i, n) {
              var a = this.w.globals,
                o = {};
              return (
                this.isFormat2DArray()
                  ? (o = this.handleRangeDataFormat("array", i, n))
                  : this.isFormatXY() &&
                    (o = this.handleRangeDataFormat("xy", i, n)),
                a.seriesRangeStart.push(o.start),
                a.seriesRangeEnd.push(o.end),
                a.seriesRange.push(o.rangeUniques),
                a.seriesRange.forEach(function (l, u) {
                  l &&
                    l.forEach(function (h, d) {
                      h.y.forEach(function (g, x) {
                        for (var v = 0; v < h.y.length; v++)
                          if (x !== v) {
                            var w = g.y1,
                              k = g.y2,
                              C = h.y[v].y1;
                            w <= h.y[v].y2 &&
                              C <= k &&
                              (h.overlaps.indexOf(g.rangeName) < 0 &&
                                h.overlaps.push(g.rangeName),
                              h.overlaps.indexOf(h.y[v].rangeName) < 0 &&
                                h.overlaps.push(h.y[v].rangeName));
                          }
                      });
                    });
                }),
                o
              );
            },
          },
          {
            key: "handleCandleStickBoxData",
            value: function (i, n) {
              var a = this.w.globals,
                o = {};
              return (
                this.isFormat2DArray()
                  ? (o = this.handleCandleStickBoxDataFormat("array", i, n))
                  : this.isFormatXY() &&
                    (o = this.handleCandleStickBoxDataFormat("xy", i, n)),
                (a.seriesCandleO[n] = o.o),
                (a.seriesCandleH[n] = o.h),
                (a.seriesCandleM[n] = o.m),
                (a.seriesCandleL[n] = o.l),
                (a.seriesCandleC[n] = o.c),
                o
              );
            },
          },
          {
            key: "handleRangeDataFormat",
            value: function (i, n, a) {
              var o = [],
                l = [],
                u = n[a].data
                  .filter(function (x, v, w) {
                    return (
                      v ===
                      w.findIndex(function (k) {
                        return k.x === x.x;
                      })
                    );
                  })
                  .map(function (x, v) {
                    return { x: x.x, overlaps: [], y: [] };
                  });
              if (i === "array")
                for (var h = 0; h < n[a].data.length; h++)
                  Array.isArray(n[a].data[h])
                    ? (o.push(n[a].data[h][1][0]), l.push(n[a].data[h][1][1]))
                    : (o.push(n[a].data[h]), l.push(n[a].data[h]));
              else if (i === "xy")
                for (
                  var d = function (x) {
                      var v = Array.isArray(n[a].data[x].y),
                        w = L.randomId(),
                        k = n[a].data[x].x,
                        C = {
                          y1: v ? n[a].data[x].y[0] : n[a].data[x].y,
                          y2: v ? n[a].data[x].y[1] : n[a].data[x].y,
                          rangeName: w,
                        };
                      n[a].data[x].rangeName = w;
                      var P = u.findIndex(function (E) {
                        return E.x === k;
                      });
                      u[P].y.push(C), o.push(C.y1), l.push(C.y2);
                    },
                    g = 0;
                  g < n[a].data.length;
                  g++
                )
                  d(g);
              return { start: o, end: l, rangeUniques: u };
            },
          },
          {
            key: "handleCandleStickBoxDataFormat",
            value: function (i, n, a) {
              var o = this.w,
                l =
                  o.config.chart.type === "boxPlot" ||
                  o.config.series[a].type === "boxPlot",
                u = [],
                h = [],
                d = [],
                g = [],
                x = [];
              if (i === "array")
                if (
                  (l && n[a].data[0].length === 6) ||
                  (!l && n[a].data[0].length === 5)
                )
                  for (var v = 0; v < n[a].data.length; v++)
                    u.push(n[a].data[v][1]),
                      h.push(n[a].data[v][2]),
                      l
                        ? (d.push(n[a].data[v][3]),
                          g.push(n[a].data[v][4]),
                          x.push(n[a].data[v][5]))
                        : (g.push(n[a].data[v][3]), x.push(n[a].data[v][4]));
                else
                  for (var w = 0; w < n[a].data.length; w++)
                    Array.isArray(n[a].data[w][1]) &&
                      (u.push(n[a].data[w][1][0]),
                      h.push(n[a].data[w][1][1]),
                      l
                        ? (d.push(n[a].data[w][1][2]),
                          g.push(n[a].data[w][1][3]),
                          x.push(n[a].data[w][1][4]))
                        : (g.push(n[a].data[w][1][2]),
                          x.push(n[a].data[w][1][3])));
              else if (i === "xy")
                for (var k = 0; k < n[a].data.length; k++)
                  Array.isArray(n[a].data[k].y) &&
                    (u.push(n[a].data[k].y[0]),
                    h.push(n[a].data[k].y[1]),
                    l
                      ? (d.push(n[a].data[k].y[2]),
                        g.push(n[a].data[k].y[3]),
                        x.push(n[a].data[k].y[4]))
                      : (g.push(n[a].data[k].y[2]), x.push(n[a].data[k].y[3])));
              return { o: u, h, m: d, l: g, c: x };
            },
          },
          {
            key: "parseDataAxisCharts",
            value: function (i) {
              var n,
                a = this,
                o =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : this.ctx,
                l = this.w.config,
                u = this.w.globals,
                h = new xe(o),
                d =
                  l.labels.length > 0
                    ? l.labels.slice()
                    : l.xaxis.categories.slice();
              if (
                ((u.isRangeBar =
                  l.chart.type === "rangeBar" && u.isBarHorizontal),
                (u.hasXaxisGroups =
                  l.xaxis.type === "category" &&
                  l.xaxis.group.groups.length > 0),
                u.hasXaxisGroups && (u.groups = l.xaxis.group.groups),
                (u.hasSeriesGroups =
                  (n = i[0]) === null || n === void 0 ? void 0 : n.group),
                u.hasSeriesGroups)
              ) {
                var g = [],
                  x = Y(
                    new Set(
                      i.map(function (C) {
                        return C.group;
                      })
                    )
                  );
                i.forEach(function (C, P) {
                  var E = x.indexOf(C.group);
                  g[E] || (g[E] = []), g[E].push(C.name);
                }),
                  (u.seriesGroups = g);
              }
              for (
                var v = function () {
                    for (var C = 0; C < d.length; C++)
                      if (typeof d[C] == "string") {
                        if (!h.isValidDate(d[C]))
                          throw new Error(
                            "You have provided invalid Date format. Please provide a valid JavaScript Date"
                          );
                        a.twoDSeriesX.push(h.parseDate(d[C]));
                      } else a.twoDSeriesX.push(d[C]);
                  },
                  w = 0;
                w < i.length;
                w++
              ) {
                if (
                  ((this.twoDSeries = []),
                  (this.twoDSeriesX = []),
                  (this.threeDSeries = []),
                  i[w].data === void 0)
                )
                  return void console.error(
                    "It is a possibility that you may have not included 'data' property in series."
                  );
                if (
                  ((l.chart.type !== "rangeBar" &&
                    l.chart.type !== "rangeArea" &&
                    i[w].type !== "rangeBar" &&
                    i[w].type !== "rangeArea") ||
                    ((u.isRangeData = !0),
                    u.isComboCharts
                      ? (i[w].type !== "rangeBar" &&
                          i[w].type !== "rangeArea") ||
                        this.handleRangeData(i, w)
                      : (l.chart.type !== "rangeBar" &&
                          l.chart.type !== "rangeArea") ||
                        this.handleRangeData(i, w)),
                  this.isMultiFormat())
                )
                  this.isFormat2DArray()
                    ? this.handleFormat2DArray(i, w)
                    : this.isFormatXY() && this.handleFormatXY(i, w),
                    (l.chart.type !== "candlestick" &&
                      i[w].type !== "candlestick" &&
                      l.chart.type !== "boxPlot" &&
                      i[w].type !== "boxPlot") ||
                      this.handleCandleStickBoxData(i, w),
                    u.series.push(this.twoDSeries),
                    u.labels.push(this.twoDSeriesX),
                    u.seriesX.push(this.twoDSeriesX),
                    (u.seriesGoals = this.seriesGoals),
                    w !== this.activeSeriesIndex ||
                      this.fallbackToCategory ||
                      (u.isXNumeric = !0);
                else {
                  l.xaxis.type === "datetime"
                    ? ((u.isXNumeric = !0),
                      v(),
                      u.seriesX.push(this.twoDSeriesX))
                    : l.xaxis.type === "numeric" &&
                      ((u.isXNumeric = !0),
                      d.length > 0 &&
                        ((this.twoDSeriesX = d),
                        u.seriesX.push(this.twoDSeriesX))),
                    u.labels.push(this.twoDSeriesX);
                  var k = i[w].data.map(function (C) {
                    return L.parseNumber(C);
                  });
                  u.series.push(k);
                }
                u.seriesZ.push(this.threeDSeries),
                  i[w].name !== void 0
                    ? u.seriesNames.push(i[w].name)
                    : u.seriesNames.push("series-" + parseInt(w + 1, 10)),
                  i[w].color !== void 0
                    ? u.seriesColors.push(i[w].color)
                    : u.seriesColors.push(void 0);
              }
              return this.w;
            },
          },
          {
            key: "parseDataNonAxisCharts",
            value: function (i) {
              var n = this.w.globals,
                a = this.w.config;
              (n.series = i.slice()), (n.seriesNames = a.labels.slice());
              for (var o = 0; o < n.series.length; o++)
                n.seriesNames[o] === void 0 &&
                  n.seriesNames.push("series-" + (o + 1));
              return this.w;
            },
          },
          {
            key: "handleExternalLabelsData",
            value: function (i) {
              var n = this.w.config,
                a = this.w.globals;
              n.xaxis.categories.length > 0
                ? (a.labels = n.xaxis.categories)
                : n.labels.length > 0
                ? (a.labels = n.labels.slice())
                : this.fallbackToCategory
                ? ((a.labels = a.labels[0]),
                  a.seriesRange.length &&
                    (a.seriesRange.map(function (o) {
                      o.forEach(function (l) {
                        a.labels.indexOf(l.x) < 0 && l.x && a.labels.push(l.x);
                      });
                    }),
                    (a.labels = Array.from(
                      new Set(a.labels.map(JSON.stringify)),
                      JSON.parse
                    ))),
                  n.xaxis.convertedCatToNumeric &&
                    (new se(n).convertCatToNumericXaxis(
                      n,
                      this.ctx,
                      a.seriesX[0]
                    ),
                    this._generateExternalLabels(i)))
                : this._generateExternalLabels(i);
            },
          },
          {
            key: "_generateExternalLabels",
            value: function (i) {
              var n = this.w.globals,
                a = this.w.config,
                o = [];
              if (n.axisCharts) {
                if (n.series.length > 0)
                  if (this.isFormatXY())
                    for (
                      var l = a.series.map(function (v, w) {
                          return v.data.filter(function (k, C, P) {
                            return (
                              P.findIndex(function (E) {
                                return E.x === k.x;
                              }) === C
                            );
                          });
                        }),
                        u = l.reduce(function (v, w, k, C) {
                          return C[v].length > w.length ? v : k;
                        }, 0),
                        h = 0;
                      h < l[u].length;
                      h++
                    )
                      o.push(h + 1);
                  else
                    for (
                      var d = 0;
                      d < n.series[n.maxValsInArrayIndex].length;
                      d++
                    )
                      o.push(d + 1);
                n.seriesX = [];
                for (var g = 0; g < i.length; g++) n.seriesX.push(o);
                this.w.globals.isBarHorizontal || (n.isXNumeric = !0);
              }
              if (o.length === 0) {
                o = n.axisCharts
                  ? []
                  : n.series.map(function (v, w) {
                      return w + 1;
                    });
                for (var x = 0; x < i.length; x++) n.seriesX.push(o);
              }
              (n.labels = o),
                a.xaxis.convertedCatToNumeric &&
                  (n.categoryLabels = o.map(function (v) {
                    return a.xaxis.labels.formatter(v);
                  })),
                (n.noLabelsProvided = !0);
            },
          },
          {
            key: "parseData",
            value: function (i) {
              var n = this.w,
                a = n.config,
                o = n.globals;
              if (
                (this.excludeCollapsedSeriesInYAxis(),
                (this.fallbackToCategory = !1),
                this.ctx.core.resetGlobals(),
                this.ctx.core.isMultipleY(),
                o.axisCharts
                  ? (this.parseDataAxisCharts(i),
                    this.coreUtils.getLargestSeries())
                  : this.parseDataNonAxisCharts(i),
                a.chart.stacked)
              ) {
                var l = new Re(this.ctx);
                o.series = l.setNullSeriesToZeroValues(o.series);
              }
              this.coreUtils.getSeriesTotals(),
                o.axisCharts &&
                  (o.stackedSeriesTotals =
                    this.coreUtils.getStackedSeriesTotals()),
                this.coreUtils.getPercentSeries(),
                o.dataFormatXNumeric ||
                  (o.isXNumeric &&
                    (a.xaxis.type !== "numeric" ||
                      a.labels.length !== 0 ||
                      a.xaxis.categories.length !== 0)) ||
                  this.handleExternalLabelsData(i);
              for (
                var u = this.coreUtils.getCategoryLabels(o.labels), h = 0;
                h < u.length;
                h++
              )
                if (Array.isArray(u[h])) {
                  o.isMultiLineX = !0;
                  break;
                }
            },
          },
          {
            key: "excludeCollapsedSeriesInYAxis",
            value: function () {
              var i = this,
                n = this.w;
              n.globals.ignoreYAxisIndexes = n.globals.collapsedSeries.map(
                function (a, o) {
                  if (i.w.globals.isMultipleYAxis && !n.config.chart.stacked)
                    return a.index;
                }
              );
            },
          },
        ]),
        M
      );
    })(),
    ci = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "getLabel",
            value: function (i, n, a, o) {
              var l =
                  arguments.length > 4 && arguments[4] !== void 0
                    ? arguments[4]
                    : [],
                u =
                  arguments.length > 5 && arguments[5] !== void 0
                    ? arguments[5]
                    : "12px",
                h =
                  !(arguments.length > 6 && arguments[6] !== void 0) ||
                  arguments[6],
                d = this.w,
                g = i[o] === void 0 ? "" : i[o],
                x = g,
                v = d.globals.xLabelFormatter,
                w = d.config.xaxis.labels.formatter,
                k = !1,
                C = new we(this.ctx),
                P = g;
              h &&
                ((x = C.xLabelFormat(v, g, P, {
                  i: o,
                  dateFormatter: new xe(this.ctx).formatDate,
                  w: d,
                })),
                w !== void 0 &&
                  (x = w(g, i[o], {
                    i: o,
                    dateFormatter: new xe(this.ctx).formatDate,
                    w: d,
                  })));
              var E, I;
              n.length > 0
                ? ((E = n[o].unit),
                  (I = null),
                  n.forEach(function (A) {
                    A.unit === "month"
                      ? (I = "year")
                      : A.unit === "day"
                      ? (I = "month")
                      : A.unit === "hour"
                      ? (I = "day")
                      : A.unit === "minute" && (I = "hour");
                  }),
                  (k = I === E),
                  (a = n[o].position),
                  (x = n[o].value))
                : d.config.xaxis.type === "datetime" &&
                  w === void 0 &&
                  (x = ""),
                x === void 0 && (x = ""),
                (x = Array.isArray(x) ? x : x.toString());
              var D = new B(this.ctx),
                p = {};
              p =
                d.globals.rotateXLabels && h
                  ? D.getTextRects(
                      x,
                      parseInt(u, 10),
                      null,
                      "rotate(".concat(d.config.xaxis.labels.rotate, " 0 0)"),
                      !1
                    )
                  : D.getTextRects(x, parseInt(u, 10));
              var b =
                !d.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
              return (
                !Array.isArray(x) &&
                  (x.indexOf("NaN") === 0 ||
                    x.toLowerCase().indexOf("invalid") === 0 ||
                    x.toLowerCase().indexOf("infinity") >= 0 ||
                    (l.indexOf(x) >= 0 && b)) &&
                  (x = ""),
                { x: a, text: x, textRect: p, isBold: k }
              );
            },
          },
          {
            key: "checkLabelBasedOnTickamount",
            value: function (i, n, a) {
              var o = this.w,
                l = o.config.xaxis.tickAmount;
              return (
                l === "dataPoints" &&
                  (l = Math.round(o.globals.gridWidth / 120)),
                l > a || i % Math.round(a / (l + 1)) == 0 || (n.text = ""),
                n
              );
            },
          },
          {
            key: "checkForOverflowingLabels",
            value: function (i, n, a, o, l) {
              var u = this.w;
              if (
                (i === 0 && u.globals.skipFirstTimelinelabel && (n.text = ""),
                i === a - 1 && u.globals.skipLastTimelinelabel && (n.text = ""),
                u.config.xaxis.labels.hideOverlappingLabels && o.length > 0)
              ) {
                var h = l[l.length - 1];
                n.x <
                  h.textRect.width /
                    (u.globals.rotateXLabels
                      ? Math.abs(u.config.xaxis.labels.rotate) / 12
                      : 1.01) +
                    h.x && (n.text = "");
              }
              return n;
            },
          },
          {
            key: "checkForReversedLabels",
            value: function (i, n) {
              var a = this.w;
              return (
                a.config.yaxis[i] && a.config.yaxis[i].reversed && n.reverse(),
                n
              );
            },
          },
          {
            key: "isYAxisHidden",
            value: function (i) {
              var n = this.w,
                a = new K(this.ctx);
              return (
                !n.config.yaxis[i].show ||
                (!n.config.yaxis[i].showForNullSeries &&
                  a.isSeriesNull(i) &&
                  n.globals.collapsedSeriesIndices.indexOf(i) === -1)
              );
            },
          },
          {
            key: "getYAxisForeColor",
            value: function (i, n) {
              var a = this.w;
              return (
                Array.isArray(i) &&
                  a.globals.yAxisScale[n] &&
                  this.ctx.theme.pushExtraColors(
                    i,
                    a.globals.yAxisScale[n].result.length,
                    !1
                  ),
                i
              );
            },
          },
          {
            key: "drawYAxisTicks",
            value: function (i, n, a, o, l, u, h) {
              var d = this.w,
                g = new B(this.ctx),
                x = d.globals.translateY;
              if (o.show && n > 0) {
                d.config.yaxis[l].opposite === !0 && (i += o.width);
                for (var v = n; v >= 0; v--) {
                  var w = x + n / 10 + d.config.yaxis[l].labels.offsetY - 1;
                  d.globals.isBarHorizontal && (w = u * v),
                    d.config.chart.type === "heatmap" && (w += u / 2);
                  var k = g.drawLine(
                    i + a.offsetX - o.width + o.offsetX,
                    w + o.offsetY,
                    i + a.offsetX + o.offsetX,
                    w + o.offsetY,
                    o.color
                  );
                  h.add(k), (x += u);
                }
              }
            },
          },
        ]),
        M
      );
    })(),
    Pi = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "scaleSvgNode",
            value: function (i, n) {
              var a = parseFloat(i.getAttributeNS(null, "width")),
                o = parseFloat(i.getAttributeNS(null, "height"));
              i.setAttributeNS(null, "width", a * n),
                i.setAttributeNS(null, "height", o * n),
                i.setAttributeNS(null, "viewBox", "0 0 " + a + " " + o);
            },
          },
          {
            key: "fixSvgStringForIe11",
            value: function (i) {
              if (!L.isIE11()) return i.replace(/&nbsp;/g, "&#160;");
              var n = 0,
                a = i.replace(
                  /xmlns="http:\/\/www.w3.org\/2000\/svg"/g,
                  function (o) {
                    return ++n === 2
                      ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"'
                      : o;
                  }
                );
              return (a = (a = a.replace(/xmlns:NS\d+=""/g, "")).replace(
                /NS\d+:(\w+:\w+=")/g,
                "$1"
              ));
            },
          },
          {
            key: "getSvgString",
            value: function (i) {
              i == null && (i = 1);
              var n = this.w.globals.dom.Paper.svg();
              if (i !== 1) {
                var a = this.w.globals.dom.Paper.node.cloneNode(!0);
                this.scaleSvgNode(a, i),
                  (n = new XMLSerializer().serializeToString(a));
              }
              return this.fixSvgStringForIe11(n);
            },
          },
          {
            key: "cleanup",
            value: function () {
              var i = this.w,
                n = i.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-xcrosshairs"
                ),
                a = i.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-ycrosshairs"
                ),
                o = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-zoom-rect, .apexcharts-selection-rect"
                );
              Array.prototype.forEach.call(o, function (l) {
                l.setAttribute("width", 0);
              }),
                n &&
                  n[0] &&
                  (n[0].setAttribute("x", -500),
                  n[0].setAttribute("x1", -500),
                  n[0].setAttribute("x2", -500)),
                a &&
                  a[0] &&
                  (a[0].setAttribute("y", -100),
                  a[0].setAttribute("y1", -100),
                  a[0].setAttribute("y2", -100));
            },
          },
          {
            key: "svgUrl",
            value: function () {
              this.cleanup();
              var i = this.getSvgString(),
                n = new Blob([i], { type: "image/svg+xml;charset=utf-8" });
              return URL.createObjectURL(n);
            },
          },
          {
            key: "dataURI",
            value: function (i) {
              var n = this;
              return new Promise(function (a) {
                var o = n.w,
                  l = i ? i.scale || i.width / o.globals.svgWidth : 1;
                n.cleanup();
                var u = document.createElement("canvas");
                (u.width = o.globals.svgWidth * l),
                  (u.height =
                    parseInt(o.globals.dom.elWrap.style.height, 10) * l);
                var h =
                    o.config.chart.background === "transparent"
                      ? "#fff"
                      : o.config.chart.background,
                  d = u.getContext("2d");
                (d.fillStyle = h), d.fillRect(0, 0, u.width * l, u.height * l);
                var g = n.getSvgString(l);
                if (window.canvg && L.isIE11()) {
                  var x = window.canvg.Canvg.fromString(d, g, {
                    ignoreClear: !0,
                    ignoreDimensions: !0,
                  });
                  x.start();
                  var v = u.msToBlob();
                  x.stop(), a({ blob: v });
                } else {
                  var w = "data:image/svg+xml," + encodeURIComponent(g),
                    k = new Image();
                  (k.crossOrigin = "anonymous"),
                    (k.onload = function () {
                      if ((d.drawImage(k, 0, 0), u.msToBlob)) {
                        var C = u.msToBlob();
                        a({ blob: C });
                      } else {
                        var P = u.toDataURL("image/png");
                        a({ imgURI: P });
                      }
                    }),
                    (k.src = w);
                }
              });
            },
          },
          {
            key: "exportToSVG",
            value: function () {
              this.triggerDownload(
                this.svgUrl(),
                this.w.config.chart.toolbar.export.svg.filename,
                ".svg"
              );
            },
          },
          {
            key: "exportToPng",
            value: function () {
              var i = this;
              this.dataURI().then(function (n) {
                var a = n.imgURI,
                  o = n.blob;
                o
                  ? navigator.msSaveOrOpenBlob(o, i.w.globals.chartID + ".png")
                  : i.triggerDownload(
                      a,
                      i.w.config.chart.toolbar.export.png.filename,
                      ".png"
                    );
              });
            },
          },
          {
            key: "exportToCSV",
            value: function (i) {
              var n = this,
                a = i.series,
                o = i.fileName,
                l = i.columnDelimiter,
                u = l === void 0 ? "," : l,
                h = i.lineDelimiter,
                d =
                  h === void 0
                    ? `
`
                    : h,
                g = this.w;
              a || (a = g.config.series);
              var x = [],
                v = [],
                w = "",
                k = g.globals.series.map(function (p, b) {
                  return g.globals.collapsedSeriesIndices.indexOf(b) === -1
                    ? p
                    : [];
                }),
                C = Math.max.apply(
                  Math,
                  Y(
                    a.map(function (p) {
                      return p.data ? p.data.length : 0;
                    })
                  )
                ),
                P = new Qt(this.ctx),
                E = new ci(this.ctx),
                I = function (p) {
                  var b = "";
                  if (g.globals.axisCharts) {
                    if (
                      g.config.xaxis.type === "category" ||
                      g.config.xaxis.convertedCatToNumeric
                    )
                      if (g.globals.isBarHorizontal) {
                        var A = g.globals.yLabelFormatters[0],
                          R = new Re(n.ctx).getActiveConfigSeriesIndex();
                        b = A(g.globals.labels[p], {
                          seriesIndex: R,
                          dataPointIndex: p,
                          w: g,
                        });
                      } else
                        b = E.getLabel(
                          g.globals.labels,
                          g.globals.timescaleLabels,
                          0,
                          p
                        ).text;
                    g.config.xaxis.type === "datetime" &&
                      (g.config.xaxis.categories.length
                        ? (b = g.config.xaxis.categories[p])
                        : g.config.labels.length && (b = g.config.labels[p]));
                  } else b = g.config.labels[p];
                  return (
                    Array.isArray(b) && (b = b.join(" ")),
                    L.isNumber(b) ? b : b.split(u).join("")
                  );
                },
                D = function (p, b) {
                  if ((x.length && b === 0 && v.push(x.join(u)), p.data)) {
                    p.data =
                      (p.data.length && p.data) ||
                      Y(Array(C)).map(function () {
                        return "";
                      });
                    for (var A = 0; A < p.data.length; A++) {
                      x = [];
                      var R = I(A);
                      if (
                        (R ||
                          (P.isFormatXY()
                            ? (R = a[b].data[A].x)
                            : P.isFormat2DArray() &&
                              (R = a[b].data[A] ? a[b].data[A][0] : "")),
                        b === 0)
                      ) {
                        x.push(
                          ((G = R),
                          g.config.xaxis.type === "datetime" &&
                          String(G).length >= 10
                            ? g.config.chart.toolbar.export.csv.dateFormatter(R)
                            : L.isNumber(R)
                            ? R
                            : R.split(u).join(""))
                        );
                        for (var F = 0; F < g.globals.series.length; F++) {
                          var _;
                          P.isFormatXY()
                            ? x.push(
                                (_ = a[F].data[A]) === null || _ === void 0
                                  ? void 0
                                  : _.y
                              )
                            : x.push(k[F][A]);
                        }
                      }
                      (g.config.chart.type === "candlestick" ||
                        (p.type && p.type === "candlestick")) &&
                        (x.pop(),
                        x.push(g.globals.seriesCandleO[b][A]),
                        x.push(g.globals.seriesCandleH[b][A]),
                        x.push(g.globals.seriesCandleL[b][A]),
                        x.push(g.globals.seriesCandleC[b][A])),
                        (g.config.chart.type === "boxPlot" ||
                          (p.type && p.type === "boxPlot")) &&
                          (x.pop(),
                          x.push(g.globals.seriesCandleO[b][A]),
                          x.push(g.globals.seriesCandleH[b][A]),
                          x.push(g.globals.seriesCandleM[b][A]),
                          x.push(g.globals.seriesCandleL[b][A]),
                          x.push(g.globals.seriesCandleC[b][A])),
                        g.config.chart.type === "rangeBar" &&
                          (x.pop(),
                          x.push(g.globals.seriesRangeStart[b][A]),
                          x.push(g.globals.seriesRangeEnd[b][A])),
                        x.length && v.push(x.join(u));
                    }
                  }
                  var G;
                };
              x.push(g.config.chart.toolbar.export.csv.headerCategory),
                g.config.chart.type === "boxPlot"
                  ? (x.push("minimum"),
                    x.push("q1"),
                    x.push("median"),
                    x.push("q3"),
                    x.push("maximum"))
                  : g.config.chart.type === "candlestick"
                  ? (x.push("open"),
                    x.push("high"),
                    x.push("low"),
                    x.push("close"))
                  : g.config.chart.type === "rangeBar"
                  ? (x.push("minimum"), x.push("maximum"))
                  : a.map(function (p, b) {
                      var A = (p.name ? p.name : "series-".concat(b)) + "";
                      g.globals.axisCharts &&
                        x.push(
                          A.split(u).join("")
                            ? A.split(u).join("")
                            : "series-".concat(b)
                        );
                    }),
                g.globals.axisCharts ||
                  (x.push(g.config.chart.toolbar.export.csv.headerValue),
                  v.push(x.join(u))),
                a.map(function (p, b) {
                  g.globals.axisCharts
                    ? D(p, b)
                    : ((x = []).push(g.globals.labels[b].split(u).join("")),
                      x.push(k[b]),
                      v.push(x.join(u)));
                }),
                (w += v.join(d)),
                this.triggerDownload(
                  "data:text/csv; charset=utf-8," +
                    encodeURIComponent("\uFEFF" + w),
                  o || g.config.chart.toolbar.export.csv.filename,
                  ".csv"
                );
            },
          },
          {
            key: "triggerDownload",
            value: function (i, n, a) {
              var o = document.createElement("a");
              (o.href = i),
                (o.download = (n || this.w.globals.chartID) + a),
                document.body.appendChild(o),
                o.click(),
                document.body.removeChild(o);
            },
          },
        ]),
        M
      );
    })(),
    Jt = (function () {
      function M(i, n) {
        f(this, M), (this.ctx = i), (this.elgrid = n), (this.w = i.w);
        var a = this.w;
        (this.axesUtils = new ci(i)),
          (this.xaxisLabels = a.globals.labels.slice()),
          a.globals.timescaleLabels.length > 0 &&
            !a.globals.isBarHorizontal &&
            (this.xaxisLabels = a.globals.timescaleLabels.slice()),
          a.config.xaxis.overwriteCategories &&
            (this.xaxisLabels = a.config.xaxis.overwriteCategories),
          (this.drawnLabels = []),
          (this.drawnLabelsRects = []),
          a.config.xaxis.position === "top"
            ? (this.offY = 0)
            : (this.offY = a.globals.gridHeight + 1),
          (this.offY = this.offY + a.config.xaxis.axisBorder.offsetY),
          (this.isCategoryBarHorizontal =
            a.config.chart.type === "bar" &&
            a.config.plotOptions.bar.horizontal),
          (this.xaxisFontSize = a.config.xaxis.labels.style.fontSize),
          (this.xaxisFontFamily = a.config.xaxis.labels.style.fontFamily),
          (this.xaxisForeColors = a.config.xaxis.labels.style.colors),
          (this.xaxisBorderWidth = a.config.xaxis.axisBorder.width),
          this.isCategoryBarHorizontal &&
            (this.xaxisBorderWidth =
              a.config.yaxis[0].axisBorder.width.toString()),
          this.xaxisBorderWidth.indexOf("%") > -1
            ? (this.xaxisBorderWidth =
                (a.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10)) /
                100)
            : (this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10)),
          (this.xaxisBorderHeight = a.config.xaxis.axisBorder.height),
          (this.yaxis = a.config.yaxis[0]);
      }
      return (
        y(M, [
          {
            key: "drawXaxis",
            value: function () {
              var i = this.w,
                n = new B(this.ctx),
                a = n.group({
                  class: "apexcharts-xaxis",
                  transform: "translate("
                    .concat(i.config.xaxis.offsetX, ", ")
                    .concat(i.config.xaxis.offsetY, ")"),
                }),
                o = n.group({
                  class: "apexcharts-xaxis-texts-g",
                  transform: "translate("
                    .concat(i.globals.translateXAxisX, ", ")
                    .concat(i.globals.translateXAxisY, ")"),
                });
              a.add(o);
              for (var l = [], u = 0; u < this.xaxisLabels.length; u++)
                l.push(this.xaxisLabels[u]);
              if (
                (this.drawXAxisLabelAndGroup(
                  !0,
                  n,
                  o,
                  l,
                  i.globals.isXNumeric,
                  function (C, P) {
                    return P;
                  }
                ),
                i.globals.hasXaxisGroups)
              ) {
                var h = i.globals.groups;
                l = [];
                for (var d = 0; d < h.length; d++) l.push(h[d].title);
                var g = {};
                i.config.xaxis.group.style &&
                  ((g.xaxisFontSize = i.config.xaxis.group.style.fontSize),
                  (g.xaxisFontFamily = i.config.xaxis.group.style.fontFamily),
                  (g.xaxisForeColors = i.config.xaxis.group.style.colors),
                  (g.fontWeight = i.config.xaxis.group.style.fontWeight),
                  (g.cssClass = i.config.xaxis.group.style.cssClass)),
                  this.drawXAxisLabelAndGroup(
                    !1,
                    n,
                    o,
                    l,
                    !1,
                    function (C, P) {
                      return h[C].cols * P;
                    },
                    g
                  );
              }
              if (i.config.xaxis.title.text !== void 0) {
                var x = n.group({ class: "apexcharts-xaxis-title" }),
                  v = n.drawText({
                    x: i.globals.gridWidth / 2 + i.config.xaxis.title.offsetX,
                    y:
                      this.offY +
                      parseFloat(this.xaxisFontSize) +
                      (i.config.xaxis.position === "bottom"
                        ? i.globals.xAxisLabelsHeight
                        : -i.globals.xAxisLabelsHeight - 10) +
                      i.config.xaxis.title.offsetY,
                    text: i.config.xaxis.title.text,
                    textAnchor: "middle",
                    fontSize: i.config.xaxis.title.style.fontSize,
                    fontFamily: i.config.xaxis.title.style.fontFamily,
                    fontWeight: i.config.xaxis.title.style.fontWeight,
                    foreColor: i.config.xaxis.title.style.color,
                    cssClass:
                      "apexcharts-xaxis-title-text " +
                      i.config.xaxis.title.style.cssClass,
                  });
                x.add(v), a.add(x);
              }
              if (i.config.xaxis.axisBorder.show) {
                var w = i.globals.barPadForNumericAxis,
                  k = n.drawLine(
                    i.globals.padHorizontal +
                      i.config.xaxis.axisBorder.offsetX -
                      w,
                    this.offY,
                    this.xaxisBorderWidth + w,
                    this.offY,
                    i.config.xaxis.axisBorder.color,
                    0,
                    this.xaxisBorderHeight
                  );
                this.elgrid && this.elgrid.elGridBorders && i.config.grid.show
                  ? this.elgrid.elGridBorders.add(k)
                  : a.add(k);
              }
              return a;
            },
          },
          {
            key: "drawXAxisLabelAndGroup",
            value: function (i, n, a, o, l, u) {
              var h,
                d = this,
                g =
                  arguments.length > 6 && arguments[6] !== void 0
                    ? arguments[6]
                    : {},
                x = [],
                v = [],
                w = this.w,
                k = g.xaxisFontSize || this.xaxisFontSize,
                C = g.xaxisFontFamily || this.xaxisFontFamily,
                P = g.xaxisForeColors || this.xaxisForeColors,
                E = g.fontWeight || w.config.xaxis.labels.style.fontWeight,
                I = g.cssClass || w.config.xaxis.labels.style.cssClass,
                D = w.globals.padHorizontal,
                p = o.length,
                b =
                  w.config.xaxis.type === "category" ? w.globals.dataPoints : p;
              if ((b === 0 && p > b && (b = p), l)) {
                var A = b > 1 ? b - 1 : b;
                (h = w.globals.gridWidth / Math.min(A, p - 1)),
                  (D = D + u(0, h) / 2 + w.config.xaxis.labels.offsetX);
              } else
                (h = w.globals.gridWidth / b),
                  (D = D + u(0, h) + w.config.xaxis.labels.offsetX);
              for (
                var R = function (_) {
                    var G = D - u(_, h) / 2 + w.config.xaxis.labels.offsetX;
                    _ === 0 &&
                      p === 1 &&
                      h / 2 === D &&
                      b === 1 &&
                      (G = w.globals.gridWidth / 2);
                    var W = d.axesUtils.getLabel(
                        o,
                        w.globals.timescaleLabels,
                        G,
                        _,
                        x,
                        k,
                        i
                      ),
                      Z = 28;
                    if (
                      (w.globals.rotateXLabels && i && (Z = 22),
                      w.config.xaxis.title.text &&
                        w.config.xaxis.position === "top" &&
                        (Z +=
                          parseFloat(w.config.xaxis.title.style.fontSize) + 2),
                      i ||
                        (Z =
                          Z +
                          parseFloat(k) +
                          (w.globals.xAxisLabelsHeight -
                            w.globals.xAxisGroupLabelsHeight) +
                          (w.globals.rotateXLabels ? 10 : 0)),
                      (W =
                        w.config.xaxis.tickAmount !== void 0 &&
                        w.config.xaxis.tickAmount !== "dataPoints" &&
                        w.config.xaxis.type !== "datetime"
                          ? d.axesUtils.checkLabelBasedOnTickamount(_, W, p)
                          : d.axesUtils.checkForOverflowingLabels(
                              _,
                              W,
                              p,
                              x,
                              v
                            )),
                      w.config.xaxis.labels.show)
                    ) {
                      var ee = n.drawText({
                        x: W.x,
                        y:
                          d.offY +
                          w.config.xaxis.labels.offsetY +
                          Z -
                          (w.config.xaxis.position === "top"
                            ? w.globals.xAxisHeight +
                              w.config.xaxis.axisTicks.height -
                              2
                            : 0),
                        text: W.text,
                        textAnchor: "middle",
                        fontWeight: W.isBold ? 600 : E,
                        fontSize: k,
                        fontFamily: C,
                        foreColor: Array.isArray(P)
                          ? i && w.config.xaxis.convertedCatToNumeric
                            ? P[w.globals.minX + _ - 1]
                            : P[_]
                          : P,
                        isPlainText: !1,
                        cssClass:
                          (i
                            ? "apexcharts-xaxis-label "
                            : "apexcharts-xaxis-group-label ") + I,
                      });
                      if (
                        (a.add(ee),
                        ee.on("click", function (oe) {
                          if (
                            typeof w.config.chart.events.xAxisLabelClick ==
                            "function"
                          ) {
                            var ce = Object.assign({}, w, { labelIndex: _ });
                            w.config.chart.events.xAxisLabelClick(
                              oe,
                              d.ctx,
                              ce
                            );
                          }
                        }),
                        i)
                      ) {
                        var J = document.createElementNS(
                          w.globals.SVGNS,
                          "title"
                        );
                        (J.textContent = Array.isArray(W.text)
                          ? W.text.join(" ")
                          : W.text),
                          ee.node.appendChild(J),
                          W.text !== "" && (x.push(W.text), v.push(W));
                      }
                    }
                    _ < p - 1 && (D += u(_ + 1, h));
                  },
                  F = 0;
                F <= p - 1;
                F++
              )
                R(F);
            },
          },
          {
            key: "drawXaxisInversed",
            value: function (i) {
              var n,
                a,
                o = this,
                l = this.w,
                u = new B(this.ctx),
                h = l.config.yaxis[0].opposite
                  ? l.globals.translateYAxisX[i]
                  : 0,
                d = u.group({
                  class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                  rel: i,
                }),
                g = u.group({
                  class:
                    "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                  transform: "translate(" + h + ", 0)",
                });
              d.add(g);
              var x = [];
              if (l.config.yaxis[i].show)
                for (var v = 0; v < this.xaxisLabels.length; v++)
                  x.push(this.xaxisLabels[v]);
              (n = l.globals.gridHeight / x.length), (a = -n / 2.2);
              var w = l.globals.yLabelFormatters[0],
                k = l.config.yaxis[0].labels;
              if (k.show)
                for (
                  var C = function (A) {
                      var R = x[A] === void 0 ? "" : x[A];
                      R = w(R, { seriesIndex: i, dataPointIndex: A, w: l });
                      var F = o.axesUtils.getYAxisForeColor(k.style.colors, i),
                        _ = 0;
                      Array.isArray(R) &&
                        (_ = (R.length / 2) * parseInt(k.style.fontSize, 10));
                      var G = k.offsetX - 15,
                        W = "end";
                      o.yaxis.opposite && (W = "start"),
                        l.config.yaxis[0].labels.align === "left"
                          ? ((G = k.offsetX), (W = "start"))
                          : l.config.yaxis[0].labels.align === "center"
                          ? ((G = k.offsetX), (W = "middle"))
                          : l.config.yaxis[0].labels.align === "right" &&
                            (W = "end");
                      var Z = u.drawText({
                        x: G,
                        y: a + n + k.offsetY - _,
                        text: R,
                        textAnchor: W,
                        foreColor: Array.isArray(F) ? F[A] : F,
                        fontSize: k.style.fontSize,
                        fontFamily: k.style.fontFamily,
                        fontWeight: k.style.fontWeight,
                        isPlainText: !1,
                        cssClass: "apexcharts-yaxis-label " + k.style.cssClass,
                        maxWidth: k.maxWidth,
                      });
                      g.add(Z),
                        Z.on("click", function (oe) {
                          if (
                            typeof l.config.chart.events.xAxisLabelClick ==
                            "function"
                          ) {
                            var ce = Object.assign({}, l, { labelIndex: A });
                            l.config.chart.events.xAxisLabelClick(
                              oe,
                              o.ctx,
                              ce
                            );
                          }
                        });
                      var ee = document.createElementNS(
                        l.globals.SVGNS,
                        "title"
                      );
                      if (
                        ((ee.textContent = Array.isArray(R) ? R.join(" ") : R),
                        Z.node.appendChild(ee),
                        l.config.yaxis[i].labels.rotate !== 0)
                      ) {
                        var J = u.rotateAroundCenter(Z.node);
                        Z.node.setAttribute(
                          "transform",
                          "rotate("
                            .concat(l.config.yaxis[i].labels.rotate, " 0 ")
                            .concat(J.y, ")")
                        );
                      }
                      a += n;
                    },
                    P = 0;
                  P <= x.length - 1;
                  P++
                )
                  C(P);
              if (l.config.yaxis[0].title.text !== void 0) {
                var E = u.group({
                    class:
                      "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                    transform: "translate(" + h + ", 0)",
                  }),
                  I = u.drawText({
                    x: l.config.yaxis[0].title.offsetX,
                    y:
                      l.globals.gridHeight / 2 +
                      l.config.yaxis[0].title.offsetY,
                    text: l.config.yaxis[0].title.text,
                    textAnchor: "middle",
                    foreColor: l.config.yaxis[0].title.style.color,
                    fontSize: l.config.yaxis[0].title.style.fontSize,
                    fontWeight: l.config.yaxis[0].title.style.fontWeight,
                    fontFamily: l.config.yaxis[0].title.style.fontFamily,
                    cssClass:
                      "apexcharts-yaxis-title-text " +
                      l.config.yaxis[0].title.style.cssClass,
                  });
                E.add(I), d.add(E);
              }
              var D = 0;
              this.isCategoryBarHorizontal &&
                l.config.yaxis[0].opposite &&
                (D = l.globals.gridWidth);
              var p = l.config.xaxis.axisBorder;
              if (p.show) {
                var b = u.drawLine(
                  l.globals.padHorizontal + p.offsetX + D,
                  1 + p.offsetY,
                  l.globals.padHorizontal + p.offsetX + D,
                  l.globals.gridHeight + p.offsetY,
                  p.color,
                  0
                );
                this.elgrid && this.elgrid.elGridBorders && l.config.grid.show
                  ? this.elgrid.elGridBorders.add(b)
                  : d.add(b);
              }
              return (
                l.config.yaxis[0].axisTicks.show &&
                  this.axesUtils.drawYAxisTicks(
                    D,
                    x.length,
                    l.config.yaxis[0].axisBorder,
                    l.config.yaxis[0].axisTicks,
                    0,
                    n,
                    d
                  ),
                d
              );
            },
          },
          {
            key: "drawXaxisTicks",
            value: function (i, n, a) {
              var o = this.w,
                l = i;
              if (!(i < 0 || i - 2 > o.globals.gridWidth)) {
                var u = this.offY + o.config.xaxis.axisTicks.offsetY;
                if (
                  ((n = n + u + o.config.xaxis.axisTicks.height),
                  o.config.xaxis.position === "top" &&
                    (n = u - o.config.xaxis.axisTicks.height),
                  o.config.xaxis.axisTicks.show)
                ) {
                  var h = new B(this.ctx).drawLine(
                    i + o.config.xaxis.axisTicks.offsetX,
                    u + o.config.xaxis.offsetY,
                    l + o.config.xaxis.axisTicks.offsetX,
                    n + o.config.xaxis.offsetY,
                    o.config.xaxis.axisTicks.color
                  );
                  a.add(h), h.node.classList.add("apexcharts-xaxis-tick");
                }
              }
            },
          },
          {
            key: "getXAxisTicksPositions",
            value: function () {
              var i = this.w,
                n = [],
                a = this.xaxisLabels.length,
                o = i.globals.padHorizontal;
              if (i.globals.timescaleLabels.length > 0)
                for (var l = 0; l < a; l++)
                  (o = this.xaxisLabels[l].position), n.push(o);
              else
                for (var u = a, h = 0; h < u; h++) {
                  var d = u;
                  i.globals.isXNumeric &&
                    i.config.chart.type !== "bar" &&
                    (d -= 1),
                    (o += i.globals.gridWidth / d),
                    n.push(o);
                }
              return n;
            },
          },
          {
            key: "xAxisLabelCorrections",
            value: function () {
              var i = this.w,
                n = new B(this.ctx),
                a = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxis-texts-g"
                ),
                o = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"
                ),
                l = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxis-inversed text"
                ),
                u = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-xaxis-inversed-texts-g text tspan"
                );
              if (i.globals.rotateXLabels || i.config.xaxis.labels.rotateAlways)
                for (var h = 0; h < o.length; h++) {
                  var d = n.rotateAroundCenter(o[h]);
                  (d.y = d.y - 1),
                    (d.x = d.x + 1),
                    o[h].setAttribute(
                      "transform",
                      "rotate("
                        .concat(i.config.xaxis.labels.rotate, " ")
                        .concat(d.x, " ")
                        .concat(d.y, ")")
                    ),
                    o[h].setAttribute("text-anchor", "end"),
                    a.setAttribute(
                      "transform",
                      "translate(0, ".concat(-10, ")")
                    );
                  var g = o[h].childNodes;
                  i.config.xaxis.labels.trim &&
                    Array.prototype.forEach.call(g, function (k) {
                      n.placeTextWithEllipsis(
                        k,
                        k.textContent,
                        i.globals.xAxisLabelsHeight -
                          (i.config.legend.position === "bottom" ? 20 : 10)
                      );
                    });
                }
              else
                (function () {
                  for (
                    var k = i.globals.gridWidth / (i.globals.labels.length + 1),
                      C = 0;
                    C < o.length;
                    C++
                  ) {
                    var P = o[C].childNodes;
                    i.config.xaxis.labels.trim &&
                      i.config.xaxis.type !== "datetime" &&
                      Array.prototype.forEach.call(P, function (E) {
                        n.placeTextWithEllipsis(E, E.textContent, k);
                      });
                  }
                })();
              if (l.length > 0) {
                var x = l[l.length - 1].getBBox(),
                  v = l[0].getBBox();
                x.x < -20 &&
                  l[l.length - 1].parentNode.removeChild(l[l.length - 1]),
                  v.x + v.width > i.globals.gridWidth &&
                    !i.globals.isBarHorizontal &&
                    l[0].parentNode.removeChild(l[0]);
                for (var w = 0; w < u.length; w++)
                  n.placeTextWithEllipsis(
                    u[w],
                    u[w].textContent,
                    i.config.yaxis[0].labels.maxWidth -
                      (i.config.yaxis[0].title.text
                        ? 2 * parseFloat(i.config.yaxis[0].title.style.fontSize)
                        : 0) -
                      15
                  );
              }
            },
          },
        ]),
        M
      );
    })(),
    ei = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
        var n = this.w;
        (this.xaxisLabels = n.globals.labels.slice()),
          (this.axesUtils = new ci(i)),
          (this.isRangeBar =
            n.globals.seriesRange.length && n.globals.isBarHorizontal),
          n.globals.timescaleLabels.length > 0 &&
            (this.xaxisLabels = n.globals.timescaleLabels.slice());
      }
      return (
        y(M, [
          {
            key: "drawGridArea",
            value: function () {
              var i =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null,
                n = this.w,
                a = new B(this.ctx);
              i === null && (i = a.group({ class: "apexcharts-grid" }));
              var o = a.drawLine(
                  n.globals.padHorizontal,
                  1,
                  n.globals.padHorizontal,
                  n.globals.gridHeight,
                  "transparent"
                ),
                l = a.drawLine(
                  n.globals.padHorizontal,
                  n.globals.gridHeight,
                  n.globals.gridWidth,
                  n.globals.gridHeight,
                  "transparent"
                );
              return i.add(l), i.add(o), i;
            },
          },
          {
            key: "drawGrid",
            value: function () {
              var i = null;
              return (
                this.w.globals.axisCharts &&
                  ((i = this.renderGrid()), this.drawGridArea(i.el)),
                i
              );
            },
          },
          {
            key: "createGridMask",
            value: function () {
              var i = this.w,
                n = i.globals,
                a = new B(this.ctx),
                o = Array.isArray(i.config.stroke.width)
                  ? 0
                  : i.config.stroke.width;
              if (Array.isArray(i.config.stroke.width)) {
                var l = 0;
                i.config.stroke.width.forEach(function (v) {
                  l = Math.max(l, v);
                }),
                  (o = l);
              }
              (n.dom.elGridRectMask = document.createElementNS(
                n.SVGNS,
                "clipPath"
              )),
                n.dom.elGridRectMask.setAttribute(
                  "id",
                  "gridRectMask".concat(n.cuid)
                ),
                (n.dom.elGridRectMarkerMask = document.createElementNS(
                  n.SVGNS,
                  "clipPath"
                )),
                n.dom.elGridRectMarkerMask.setAttribute(
                  "id",
                  "gridRectMarkerMask".concat(n.cuid)
                ),
                (n.dom.elForecastMask = document.createElementNS(
                  n.SVGNS,
                  "clipPath"
                )),
                n.dom.elForecastMask.setAttribute(
                  "id",
                  "forecastMask".concat(n.cuid)
                ),
                (n.dom.elNonForecastMask = document.createElementNS(
                  n.SVGNS,
                  "clipPath"
                )),
                n.dom.elNonForecastMask.setAttribute(
                  "id",
                  "nonForecastMask".concat(n.cuid)
                );
              var u = i.config.chart.type,
                h = 0,
                d = 0;
              (u === "bar" ||
                u === "rangeBar" ||
                u === "candlestick" ||
                u === "boxPlot" ||
                i.globals.comboBarCount > 0) &&
                i.globals.isXNumeric &&
                !i.globals.isBarHorizontal &&
                ((h = i.config.grid.padding.left),
                (d = i.config.grid.padding.right),
                n.barPadForNumericAxis > h &&
                  ((h = n.barPadForNumericAxis), (d = n.barPadForNumericAxis))),
                (n.dom.elGridRect = a.drawRect(
                  -o - h - 2,
                  2 * -o - 2,
                  n.gridWidth + o + d + h + 4,
                  n.gridHeight + 4 * o + 4,
                  0,
                  "#fff"
                ));
              var g = i.globals.markers.largestSize + 1;
              (n.dom.elGridRectMarker = a.drawRect(
                2 * -g,
                2 * -g,
                n.gridWidth + 4 * g,
                n.gridHeight + 4 * g,
                0,
                "#fff"
              )),
                n.dom.elGridRectMask.appendChild(n.dom.elGridRect.node),
                n.dom.elGridRectMarkerMask.appendChild(
                  n.dom.elGridRectMarker.node
                );
              var x = n.dom.baseEl.querySelector("defs");
              x.appendChild(n.dom.elGridRectMask),
                x.appendChild(n.dom.elForecastMask),
                x.appendChild(n.dom.elNonForecastMask),
                x.appendChild(n.dom.elGridRectMarkerMask);
            },
          },
          {
            key: "_drawGridLines",
            value: function (i) {
              var n = i.i,
                a = i.x1,
                o = i.y1,
                l = i.x2,
                u = i.y2,
                h = i.xCount,
                d = i.parent,
                g = this.w;
              if (
                !(
                  (n === 0 && g.globals.skipFirstTimelinelabel) ||
                  (n === h - 1 &&
                    g.globals.skipLastTimelinelabel &&
                    !g.config.xaxis.labels.formatter) ||
                  g.config.chart.type === "radar"
                )
              ) {
                g.config.grid.xaxis.lines.show &&
                  this._drawGridLine({
                    i: n,
                    x1: a,
                    y1: o,
                    x2: l,
                    y2: u,
                    xCount: h,
                    parent: d,
                  });
                var x = 0;
                if (
                  g.globals.hasXaxisGroups &&
                  g.config.xaxis.tickPlacement === "between"
                ) {
                  var v = g.globals.groups;
                  if (v) {
                    for (var w = 0, k = 0; w < n && k < v.length; k++)
                      w += v[k].cols;
                    w === n && (x = 0.6 * g.globals.xAxisLabelsHeight);
                  }
                }
                new Jt(this.ctx).drawXaxisTicks(
                  a,
                  x,
                  g.globals.dom.elGraphical
                );
              }
            },
          },
          {
            key: "_drawGridLine",
            value: function (i) {
              var n = i.i,
                a = i.x1,
                o = i.y1,
                l = i.x2,
                u = i.y2,
                h = i.xCount,
                d = i.parent,
                g = this.w,
                x = !1,
                v = d.node.classList.contains(
                  "apexcharts-gridlines-horizontal"
                ),
                w = g.config.grid.strokeDashArray,
                k = g.globals.barPadForNumericAxis;
              ((o === 0 && u === 0) || (a === 0 && l === 0)) && (x = !0),
                o === g.globals.gridHeight &&
                  u === g.globals.gridHeight &&
                  (x = !0),
                !g.globals.isBarHorizontal ||
                  (n !== 0 && n !== h - 1) ||
                  (x = !0);
              var C = new B(this).drawLine(
                a - (v ? k : 0),
                o,
                l + (v ? k : 0),
                u,
                g.config.grid.borderColor,
                w
              );
              C.node.classList.add("apexcharts-gridline"),
                x && g.config.grid.show ? this.elGridBorders.add(C) : d.add(C);
            },
          },
          {
            key: "_drawGridBandRect",
            value: function (i) {
              var n = i.c,
                a = i.x1,
                o = i.y1,
                l = i.x2,
                u = i.y2,
                h = i.type,
                d = this.w,
                g = new B(this.ctx),
                x = d.globals.barPadForNumericAxis;
              if (h !== "column" || d.config.xaxis.type !== "datetime") {
                var v = d.config.grid[h].colors[n],
                  w = g.drawRect(
                    a - (h === "row" ? x : 0),
                    o,
                    l + (h === "row" ? 2 * x : 0),
                    u,
                    0,
                    v,
                    d.config.grid[h].opacity
                  );
                this.elg.add(w),
                  w.attr(
                    "clip-path",
                    "url(#gridRectMask".concat(d.globals.cuid, ")")
                  ),
                  w.node.classList.add("apexcharts-grid-".concat(h));
              }
            },
          },
          {
            key: "_drawXYLines",
            value: function (i) {
              var n = this,
                a = i.xCount,
                o = i.tickAmount,
                l = this.w;
              if (
                l.config.grid.xaxis.lines.show ||
                l.config.xaxis.axisTicks.show
              ) {
                var u,
                  h = l.globals.padHorizontal,
                  d = l.globals.gridHeight;
                l.globals.timescaleLabels.length
                  ? (function (C) {
                      for (
                        var P = C.xC,
                          E = C.x1,
                          I = C.y1,
                          D = C.x2,
                          p = C.y2,
                          b = 0;
                        b < P;
                        b++
                      )
                        (E = n.xaxisLabels[b].position),
                          (D = n.xaxisLabels[b].position),
                          n._drawGridLines({
                            i: b,
                            x1: E,
                            y1: I,
                            x2: D,
                            y2: p,
                            xCount: a,
                            parent: n.elgridLinesV,
                          });
                    })({ xC: a, x1: h, y1: 0, x2: u, y2: d })
                  : (l.globals.isXNumeric &&
                      (a = l.globals.xAxisScale.result.length),
                    (function (C) {
                      for (
                        var P = C.xC,
                          E = C.x1,
                          I = C.y1,
                          D = C.x2,
                          p = C.y2,
                          b = 0;
                        b < P + (l.globals.isXNumeric ? 0 : 1);
                        b++
                      )
                        b === 0 &&
                          P === 1 &&
                          l.globals.dataPoints === 1 &&
                          (D = E = l.globals.gridWidth / 2),
                          n._drawGridLines({
                            i: b,
                            x1: E,
                            y1: I,
                            x2: D,
                            y2: p,
                            xCount: a,
                            parent: n.elgridLinesV,
                          }),
                          (D = E +=
                            l.globals.gridWidth /
                            (l.globals.isXNumeric ? P - 1 : P));
                    })({ xC: a, x1: h, y1: 0, x2: u, y2: d }));
              }
              if (l.config.grid.yaxis.lines.show) {
                var g = 0,
                  x = 0,
                  v = l.globals.gridWidth,
                  w = o + 1;
                this.isRangeBar && (w = l.globals.labels.length);
                for (var k = 0; k < w + (this.isRangeBar ? 1 : 0); k++)
                  this._drawGridLine({
                    i: k,
                    xCount: w + (this.isRangeBar ? 1 : 0),
                    x1: 0,
                    y1: g,
                    x2: v,
                    y2: x,
                    parent: this.elgridLinesH,
                  }),
                    (x = g += l.globals.gridHeight / (this.isRangeBar ? w : o));
              }
            },
          },
          {
            key: "_drawInvertedXYLines",
            value: function (i) {
              var n = i.xCount,
                a = this.w;
              if (
                a.config.grid.xaxis.lines.show ||
                a.config.xaxis.axisTicks.show
              )
                for (
                  var o,
                    l = a.globals.padHorizontal,
                    u = a.globals.gridHeight,
                    h = 0;
                  h < n + 1;
                  h++
                )
                  a.config.grid.xaxis.lines.show &&
                    this._drawGridLine({
                      i: h,
                      xCount: n + 1,
                      x1: l,
                      y1: 0,
                      x2: o,
                      y2: u,
                      parent: this.elgridLinesV,
                    }),
                    new Jt(this.ctx).drawXaxisTicks(
                      l,
                      0,
                      a.globals.dom.elGraphical
                    ),
                    (o = l = l + a.globals.gridWidth / n + 0.3);
              if (a.config.grid.yaxis.lines.show)
                for (
                  var d = 0, g = 0, x = a.globals.gridWidth, v = 0;
                  v < a.globals.dataPoints + 1;
                  v++
                )
                  this._drawGridLine({
                    i: v,
                    xCount: a.globals.dataPoints + 1,
                    x1: 0,
                    y1: d,
                    x2: x,
                    y2: g,
                    parent: this.elgridLinesH,
                  }),
                    (g = d += a.globals.gridHeight / a.globals.dataPoints);
            },
          },
          {
            key: "renderGrid",
            value: function () {
              var i = this.w,
                n = new B(this.ctx);
              (this.elg = n.group({ class: "apexcharts-grid" })),
                (this.elgridLinesH = n.group({
                  class: "apexcharts-gridlines-horizontal",
                })),
                (this.elgridLinesV = n.group({
                  class: "apexcharts-gridlines-vertical",
                })),
                (this.elGridBorders = n.group({
                  class: "apexcharts-grid-borders",
                })),
                this.elg.add(this.elgridLinesH),
                this.elg.add(this.elgridLinesV),
                i.config.grid.show ||
                  (this.elgridLinesV.hide(),
                  this.elgridLinesH.hide(),
                  this.elGridBorders.hide());
              for (
                var a,
                  o = i.globals.yAxisScale.length
                    ? i.globals.yAxisScale[0].result.length - 1
                    : 5,
                  l = 0;
                l < i.globals.series.length &&
                (i.globals.yAxisScale[l] !== void 0 &&
                  (o = i.globals.yAxisScale[l].result.length - 1),
                !(o > 2));
                l++
              );
              return (
                !i.globals.isBarHorizontal || this.isRangeBar
                  ? ((a = this.xaxisLabels.length),
                    this.isRangeBar &&
                      (a--,
                      (o = i.globals.labels.length),
                      i.config.xaxis.tickAmount &&
                        i.config.xaxis.labels.formatter &&
                        (a = i.config.xaxis.tickAmount)),
                    this._drawXYLines({ xCount: a, tickAmount: o }))
                  : ((a = o),
                    (o = i.globals.xTickAmount),
                    this._drawInvertedXYLines({ xCount: a, tickAmount: o })),
                this.drawGridBands(a, o),
                {
                  el: this.elg,
                  elGridBorders: this.elGridBorders,
                  xAxisTickWidth: i.globals.gridWidth / a,
                }
              );
            },
          },
          {
            key: "drawGridBands",
            value: function (i, n) {
              var a = this.w;
              if (
                a.config.grid.row.colors !== void 0 &&
                a.config.grid.row.colors.length > 0
              )
                for (
                  var o = 0,
                    l = a.globals.gridHeight / n,
                    u = a.globals.gridWidth,
                    h = 0,
                    d = 0;
                  h < n;
                  h++, d++
                )
                  d >= a.config.grid.row.colors.length && (d = 0),
                    this._drawGridBandRect({
                      c: d,
                      x1: 0,
                      y1: o,
                      x2: u,
                      y2: l,
                      type: "row",
                    }),
                    (o += a.globals.gridHeight / n);
              if (
                a.config.grid.column.colors !== void 0 &&
                a.config.grid.column.colors.length > 0
              )
                for (
                  var g =
                      a.globals.isBarHorizontal ||
                      a.config.xaxis.tickPlacement !== "on" ||
                      (a.config.xaxis.type !== "category" &&
                        !a.config.xaxis.convertedCatToNumeric)
                        ? i
                        : i - 1,
                    x = a.globals.padHorizontal,
                    v = a.globals.padHorizontal + a.globals.gridWidth / g,
                    w = a.globals.gridHeight,
                    k = 0,
                    C = 0;
                  k < i;
                  k++, C++
                )
                  C >= a.config.grid.column.colors.length && (C = 0),
                    this._drawGridBandRect({
                      c: C,
                      x1: x,
                      y1: 0,
                      x2: v,
                      y2: w,
                      type: "column",
                    }),
                    (x += a.globals.gridWidth / g);
            },
          },
        ]),
        M
      );
    })(),
    ui = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "niceScale",
            value: function (i, n) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 10,
                o =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : 0,
                l = arguments.length > 4 ? arguments[4] : void 0,
                u = this.w,
                h = Math.abs(n - i);
              if (
                ((a = this._adjustTicksForSmallRange(a, o, h)) ===
                  "dataPoints" && (a = u.globals.dataPoints - 1),
                (i === Number.MIN_VALUE && n === 0) ||
                  (!L.isNumber(i) && !L.isNumber(n)) ||
                  (i === Number.MIN_VALUE && n === -Number.MAX_VALUE))
              )
                return (i = 0), (n = a), this.linearScale(i, n, a);
              i > n
                ? (console.warn("axis.min cannot be greater than axis.max"),
                  (n = i + 0.1))
                : i === n &&
                  ((i = i === 0 ? 0 : i - 0.5), (n = n === 0 ? 2 : n + 0.5));
              var d = [];
              h < 1 &&
                l &&
                (u.config.chart.type === "candlestick" ||
                  u.config.series[o].type === "candlestick" ||
                  u.config.chart.type === "boxPlot" ||
                  u.config.series[o].type === "boxPlot" ||
                  u.globals.isRangeData) &&
                (n *= 1.01);
              var g = a + 1;
              g < 2 ? (g = 2) : g > 2 && (g -= 2);
              var x = h / g,
                v = Math.floor(L.log10(x)),
                w = Math.pow(10, v),
                k = Math.round(x / w);
              k < 1 && (k = 1);
              var C = k * w,
                P = C * Math.floor(i / C),
                E = C * Math.ceil(n / C),
                I = P;
              if (l && h > 2) {
                for (; d.push(L.stripNumber(I, 7)), !((I += C) > E); );
                return { result: d, niceMin: d[0], niceMax: d[d.length - 1] };
              }
              var D = i;
              (d = []).push(L.stripNumber(D, 7));
              for (var p = Math.abs(n - i) / a, b = 0; b <= a; b++)
                (D += p), d.push(D);
              return (
                d[d.length - 2] >= n && d.pop(),
                { result: d, niceMin: d[0], niceMax: d[d.length - 1] }
              );
            },
          },
          {
            key: "linearScale",
            value: function (i, n) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 10,
                o = arguments.length > 3 ? arguments[3] : void 0,
                l = Math.abs(n - i);
              (a = this._adjustTicksForSmallRange(a, o, l)) === "dataPoints" &&
                (a = this.w.globals.dataPoints - 1);
              var u = l / a;
              a === Number.MAX_VALUE && ((a = 10), (u = 1));
              for (var h = [], d = i; a >= 0; ) h.push(d), (d += u), (a -= 1);
              return { result: h, niceMin: h[0], niceMax: h[h.length - 1] };
            },
          },
          {
            key: "logarithmicScaleNice",
            value: function (i, n, a) {
              n <= 0 && (n = Math.max(i, a)), i <= 0 && (i = Math.min(n, a));
              for (
                var o = [],
                  l = Math.ceil(Math.log(n) / Math.log(a) + 1),
                  u = Math.floor(Math.log(i) / Math.log(a));
                u < l;
                u++
              )
                o.push(Math.pow(a, u));
              return { result: o, niceMin: o[0], niceMax: o[o.length - 1] };
            },
          },
          {
            key: "logarithmicScale",
            value: function (i, n, a) {
              n <= 0 && (n = Math.max(i, a)), i <= 0 && (i = Math.min(n, a));
              for (
                var o = [],
                  l = Math.log(n) / Math.log(a),
                  u = Math.log(i) / Math.log(a),
                  h = l - u,
                  d = Math.round(h),
                  g = h / d,
                  x = 0,
                  v = u;
                x < d;
                x++, v += g
              )
                o.push(Math.pow(a, v));
              return (
                o.push(Math.pow(a, l)), { result: o, niceMin: i, niceMax: n }
              );
            },
          },
          {
            key: "_adjustTicksForSmallRange",
            value: function (i, n, a) {
              var o = i;
              if (
                n !== void 0 &&
                this.w.config.yaxis[n].labels.formatter &&
                this.w.config.yaxis[n].tickAmount === void 0
              ) {
                var l = Number(this.w.config.yaxis[n].labels.formatter(1));
                L.isNumber(l) &&
                  this.w.globals.yValueDecimal === 0 &&
                  (o = Math.ceil(a));
              }
              return o < i ? o : i;
            },
          },
          {
            key: "setYScaleForIndex",
            value: function (i, n, a) {
              var o = this.w.globals,
                l = this.w.config,
                u = o.isBarHorizontal ? l.xaxis : l.yaxis[i];
              o.yAxisScale[i] === void 0 && (o.yAxisScale[i] = []);
              var h = Math.abs(a - n);
              if (
                (u.logarithmic && h <= 5 && (o.invalidLogScale = !0),
                u.logarithmic && h > 5)
              )
                (o.allSeriesCollapsed = !1),
                  (o.yAxisScale[i] = this.logarithmicScale(n, a, u.logBase)),
                  (o.yAxisScale[i] = u.forceNiceScale
                    ? this.logarithmicScaleNice(n, a, u.logBase)
                    : this.logarithmicScale(n, a, u.logBase));
              else if (a !== -Number.MAX_VALUE && L.isNumber(a))
                if (
                  ((o.allSeriesCollapsed = !1),
                  (u.min === void 0 && u.max === void 0) || u.forceNiceScale)
                ) {
                  var d =
                    (l.yaxis[i].max === void 0 && l.yaxis[i].min === void 0) ||
                    l.yaxis[i].forceNiceScale;
                  o.yAxisScale[i] = this.niceScale(
                    n,
                    a,
                    u.tickAmount ? u.tickAmount : h < 5 && h > 1 ? h + 1 : 5,
                    i,
                    d
                  );
                } else
                  o.yAxisScale[i] = this.linearScale(n, a, u.tickAmount, i);
              else o.yAxisScale[i] = this.linearScale(0, 5, 5);
            },
          },
          {
            key: "setXScale",
            value: function (i, n) {
              var a = this.w,
                o = a.globals,
                l = a.config.xaxis,
                u = Math.abs(n - i);
              return (
                n !== -Number.MAX_VALUE && L.isNumber(n)
                  ? (o.xAxisScale = this.linearScale(
                      i,
                      n,
                      l.tickAmount ? l.tickAmount : u < 5 && u > 1 ? u + 1 : 5,
                      0
                    ))
                  : (o.xAxisScale = this.linearScale(0, 5, 5)),
                o.xAxisScale
              );
            },
          },
          {
            key: "setMultipleYScales",
            value: function () {
              var i = this,
                n = this.w.globals,
                a = this.w.config,
                o = n.minYArr.concat([]),
                l = n.maxYArr.concat([]),
                u = [];
              a.yaxis.forEach(function (h, d) {
                var g = d;
                a.series.forEach(function (w, k) {
                  w.name === h.seriesName &&
                    ((g = k),
                    d !== k
                      ? u.push({ index: k, similarIndex: d, alreadyExists: !0 })
                      : u.push({ index: k }));
                });
                var x = o[g],
                  v = l[g];
                i.setYScaleForIndex(d, x, v);
              }),
                this.sameScaleInMultipleAxes(o, l, u);
            },
          },
          {
            key: "sameScaleInMultipleAxes",
            value: function (i, n, a) {
              var o = this,
                l = this.w.config,
                u = this.w.globals,
                h = [];
              a.forEach(function (P) {
                P.alreadyExists &&
                  (h[P.index] === void 0 && (h[P.index] = []),
                  h[P.index].push(P.index),
                  h[P.index].push(P.similarIndex));
              }),
                (u.yAxisSameScaleIndices = h),
                h.forEach(function (P, E) {
                  h.forEach(function (I, D) {
                    var p, b;
                    E !== D &&
                      ((p = P),
                      (b = I),
                      p.filter(function (A) {
                        return b.indexOf(A) !== -1;
                      })).length > 0 &&
                      (h[E] = h[E].concat(h[D]));
                  });
                });
              var d = h
                .map(function (P) {
                  return P.filter(function (E, I) {
                    return P.indexOf(E) === I;
                  });
                })
                .map(function (P) {
                  return P.sort();
                });
              h = h.filter(function (P) {
                return !!P;
              });
              var g = d.slice(),
                x = g.map(function (P) {
                  return JSON.stringify(P);
                });
              g = g.filter(function (P, E) {
                return x.indexOf(JSON.stringify(P)) === E;
              });
              var v = [],
                w = [];
              i.forEach(function (P, E) {
                g.forEach(function (I, D) {
                  I.indexOf(E) > -1 &&
                    (v[D] === void 0 && ((v[D] = []), (w[D] = [])),
                    v[D].push({ key: E, value: P }),
                    w[D].push({ key: E, value: n[E] }));
                });
              });
              var k = Array.apply(null, Array(g.length)).map(
                  Number.prototype.valueOf,
                  Number.MIN_VALUE
                ),
                C = Array.apply(null, Array(g.length)).map(
                  Number.prototype.valueOf,
                  -Number.MAX_VALUE
                );
              v.forEach(function (P, E) {
                P.forEach(function (I, D) {
                  k[E] = Math.min(I.value, k[E]);
                });
              }),
                w.forEach(function (P, E) {
                  P.forEach(function (I, D) {
                    C[E] = Math.max(I.value, C[E]);
                  });
                }),
                i.forEach(function (P, E) {
                  w.forEach(function (I, D) {
                    var p = k[D],
                      b = C[D];
                    l.chart.stacked &&
                      ((b = 0),
                      I.forEach(function (A, R) {
                        A.value !== -Number.MAX_VALUE && (b += A.value),
                          p !== Number.MIN_VALUE && (p += v[D][R].value);
                      })),
                      I.forEach(function (A, R) {
                        I[R].key === E &&
                          (l.yaxis[E].min !== void 0 &&
                            (p =
                              typeof l.yaxis[E].min == "function"
                                ? l.yaxis[E].min(u.minY)
                                : l.yaxis[E].min),
                          l.yaxis[E].max !== void 0 &&
                            (b =
                              typeof l.yaxis[E].max == "function"
                                ? l.yaxis[E].max(u.maxY)
                                : l.yaxis[E].max),
                          o.setYScaleForIndex(E, p, b));
                      });
                  });
                });
            },
          },
          {
            key: "autoScaleY",
            value: function (i, n, a) {
              i || (i = this);
              var o = i.w;
              if (o.globals.isMultipleYAxis || o.globals.collapsedSeries.length)
                return (
                  console.warn(
                    "autoScaleYaxis not supported in a multi-yaxis chart."
                  ),
                  n
                );
              var l = o.globals.seriesX[0],
                u = o.config.chart.stacked;
              return (
                n.forEach(function (h, d) {
                  for (var g = 0, x = 0; x < l.length; x++)
                    if (l[x] >= a.xaxis.min) {
                      g = x;
                      break;
                    }
                  var v,
                    w,
                    k = o.globals.minYArr[d],
                    C = o.globals.maxYArr[d],
                    P = o.globals.stackedSeriesTotals;
                  o.globals.series.forEach(function (E, I) {
                    var D = E[g];
                    u
                      ? ((D = P[g]),
                        (v = w = D),
                        P.forEach(function (p, b) {
                          l[b] <= a.xaxis.max &&
                            l[b] >= a.xaxis.min &&
                            (p > w && p !== null && (w = p),
                            E[b] < v && E[b] !== null && (v = E[b]));
                        }))
                      : ((v = w = D),
                        E.forEach(function (p, b) {
                          if (l[b] <= a.xaxis.max && l[b] >= a.xaxis.min) {
                            var A = p,
                              R = p;
                            o.globals.series.forEach(function (F, _) {
                              p !== null &&
                                ((A = Math.min(F[b], A)),
                                (R = Math.max(F[b], R)));
                            }),
                              R > w && R !== null && (w = R),
                              A < v && A !== null && (v = A);
                          }
                        })),
                      v === void 0 && w === void 0 && ((v = k), (w = C)),
                      (w *= w < 0 ? 0.9 : 1.1),
                      (v *= v < 0 ? 1.1 : 0.9) === 0 &&
                        w === 0 &&
                        ((v = -1), (w = 1)),
                      w < 0 && w < C && (w = C),
                      v < 0 && v > k && (v = k),
                      n.length > 1
                        ? ((n[I].min = h.min === void 0 ? v : h.min),
                          (n[I].max = h.max === void 0 ? w : h.max))
                        : ((n[0].min = h.min === void 0 ? v : h.min),
                          (n[0].max = h.max === void 0 ? w : h.max));
                  });
                }),
                n
              );
            },
          },
        ]),
        M
      );
    })(),
    Ln = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w), (this.scales = new ui(i));
      }
      return (
        y(M, [
          {
            key: "init",
            value: function () {
              this.setYRange(), this.setXRange(), this.setZRange();
            },
          },
          {
            key: "getMinYMaxY",
            value: function (i) {
              var n =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : Number.MAX_VALUE,
                a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : -Number.MAX_VALUE,
                o =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : null,
                l = this.w.config,
                u = this.w.globals,
                h = -Number.MAX_VALUE,
                d = Number.MIN_VALUE;
              o === null && (o = i + 1);
              var g = u.series,
                x = g,
                v = g;
              l.chart.type === "candlestick"
                ? ((x = u.seriesCandleL), (v = u.seriesCandleH))
                : l.chart.type === "boxPlot"
                ? ((x = u.seriesCandleO), (v = u.seriesCandleC))
                : u.isRangeData &&
                  ((x = u.seriesRangeStart), (v = u.seriesRangeEnd));
              for (var w = i; w < o; w++) {
                (u.dataPoints = Math.max(u.dataPoints, g[w].length)),
                  u.categoryLabels.length &&
                    (u.dataPoints = u.categoryLabels.filter(function (P) {
                      return P !== void 0;
                    }).length),
                  u.labels.length &&
                    l.xaxis.type !== "datetime" &&
                    u.series.reduce(function (P, E) {
                      return P + E.length;
                    }, 0) !== 0 &&
                    (u.dataPoints = Math.max(u.dataPoints, u.labels.length));
                for (var k = 0; k < u.series[w].length; k++) {
                  var C = g[w][k];
                  C !== null && L.isNumber(C)
                    ? (v[w][k] !== void 0 &&
                        ((h = Math.max(h, v[w][k])),
                        (n = Math.min(n, v[w][k]))),
                      x[w][k] !== void 0 &&
                        ((n = Math.min(n, x[w][k])),
                        (a = Math.max(a, x[w][k]))),
                      (this.w.config.chart.type !== "candlestick" &&
                        this.w.config.chart.type !== "boxPlot" &&
                        this.w.config.chart.type === "rangeArea" &&
                        this.w.config.chart.type === "rangeBar") ||
                        ((this.w.config.chart.type !== "candlestick" &&
                          this.w.config.chart.type !== "boxPlot") ||
                          (u.seriesCandleC[w][k] !== void 0 &&
                            ((h = Math.max(h, u.seriesCandleO[w][k])),
                            (h = Math.max(h, u.seriesCandleH[w][k])),
                            (h = Math.max(h, u.seriesCandleL[w][k])),
                            (h = Math.max(h, u.seriesCandleC[w][k])),
                            this.w.config.chart.type === "boxPlot" &&
                              (h = Math.max(h, u.seriesCandleM[w][k])))),
                        !l.series[w].type ||
                          (l.series[w].type === "candlestick" &&
                            l.series[w].type === "boxPlot" &&
                            l.series[w].type === "rangeArea" &&
                            l.series[w].type === "rangeBar") ||
                          ((h = Math.max(h, u.series[w][k])),
                          (n = Math.min(n, u.series[w][k]))),
                        (a = h)),
                      u.seriesGoals[w] &&
                        u.seriesGoals[w][k] &&
                        Array.isArray(u.seriesGoals[w][k]) &&
                        u.seriesGoals[w][k].forEach(function (P) {
                          d !== Number.MIN_VALUE &&
                            ((d = Math.min(d, P.value)), (n = d)),
                            (h = Math.max(h, P.value)),
                            (a = h);
                        }),
                      L.isFloat(C) &&
                        ((C = L.noExponents(C)),
                        (u.yValueDecimal = Math.max(
                          u.yValueDecimal,
                          C.toString().split(".")[1].length
                        ))),
                      d > x[w][k] && x[w][k] < 0 && (d = x[w][k]))
                    : (u.hasNullValues = !0);
                }
              }
              return (
                l.chart.type === "rangeBar" &&
                  u.seriesRangeStart.length &&
                  u.isBarHorizontal &&
                  (d = n),
                l.chart.type === "bar" &&
                  (d < 0 && h < 0 && (h = 0),
                  d === Number.MIN_VALUE && (d = 0)),
                { minY: d, maxY: h, lowestY: n, highestY: a }
              );
            },
          },
          {
            key: "setYRange",
            value: function () {
              var i = this.w.globals,
                n = this.w.config;
              (i.maxY = -Number.MAX_VALUE), (i.minY = Number.MIN_VALUE);
              var a = Number.MAX_VALUE;
              if (i.isMultipleYAxis)
                for (var o = 0; o < i.series.length; o++) {
                  var l = this.getMinYMaxY(o, a, null, o + 1);
                  i.minYArr.push(l.minY),
                    i.maxYArr.push(l.maxY),
                    (a = l.lowestY);
                }
              var u = this.getMinYMaxY(0, a, null, i.series.length);
              if (
                ((i.minY = u.minY),
                (i.maxY = u.maxY),
                (a = u.lowestY),
                n.chart.stacked && this._setStackedMinMax(),
                (n.chart.type === "line" ||
                  n.chart.type === "area" ||
                  n.chart.type === "candlestick" ||
                  n.chart.type === "boxPlot" ||
                  (n.chart.type === "rangeBar" && !i.isBarHorizontal)) &&
                  i.minY === Number.MIN_VALUE &&
                  a !== -Number.MAX_VALUE &&
                  a !== i.maxY)
              ) {
                var h = i.maxY - a;
                ((a >= 0 && a <= 10) ||
                  n.yaxis[0].min !== void 0 ||
                  n.yaxis[0].max !== void 0) &&
                  (h = 0),
                  (i.minY = a - (5 * h) / 100),
                  a > 0 && i.minY < 0 && (i.minY = 0),
                  (i.maxY = i.maxY + (5 * h) / 100);
              }
              return (
                n.yaxis.forEach(function (d, g) {
                  d.max !== void 0 &&
                    (typeof d.max == "number"
                      ? (i.maxYArr[g] = d.max)
                      : typeof d.max == "function" &&
                        (i.maxYArr[g] = d.max(
                          i.isMultipleYAxis ? i.maxYArr[g] : i.maxY
                        )),
                    (i.maxY = i.maxYArr[g])),
                    d.min !== void 0 &&
                      (typeof d.min == "number"
                        ? (i.minYArr[g] = d.min)
                        : typeof d.min == "function" &&
                          (i.minYArr[g] = d.min(
                            i.isMultipleYAxis
                              ? i.minYArr[g] === Number.MIN_VALUE
                                ? 0
                                : i.minYArr[g]
                              : i.minY
                          )),
                      (i.minY = i.minYArr[g]));
                }),
                i.isBarHorizontal &&
                  ["min", "max"].forEach(function (d) {
                    n.xaxis[d] !== void 0 &&
                      typeof n.xaxis[d] == "number" &&
                      (d === "min"
                        ? (i.minY = n.xaxis[d])
                        : (i.maxY = n.xaxis[d]));
                  }),
                i.isMultipleYAxis
                  ? (this.scales.setMultipleYScales(),
                    (i.minY = a),
                    i.yAxisScale.forEach(function (d, g) {
                      (i.minYArr[g] = d.niceMin), (i.maxYArr[g] = d.niceMax);
                    }))
                  : (this.scales.setYScaleForIndex(0, i.minY, i.maxY),
                    (i.minY = i.yAxisScale[0].niceMin),
                    (i.maxY = i.yAxisScale[0].niceMax),
                    (i.minYArr[0] = i.yAxisScale[0].niceMin),
                    (i.maxYArr[0] = i.yAxisScale[0].niceMax)),
                {
                  minY: i.minY,
                  maxY: i.maxY,
                  minYArr: i.minYArr,
                  maxYArr: i.maxYArr,
                  yAxisScale: i.yAxisScale,
                }
              );
            },
          },
          {
            key: "setXRange",
            value: function () {
              var i = this.w.globals,
                n = this.w.config,
                a =
                  n.xaxis.type === "numeric" ||
                  n.xaxis.type === "datetime" ||
                  (n.xaxis.type === "category" && !i.noLabelsProvided) ||
                  i.noLabelsProvided ||
                  i.isXNumeric;
              if (
                (i.isXNumeric &&
                  (function () {
                    for (var h = 0; h < i.series.length; h++)
                      if (i.labels[h])
                        for (var d = 0; d < i.labels[h].length; d++)
                          i.labels[h][d] !== null &&
                            L.isNumber(i.labels[h][d]) &&
                            ((i.maxX = Math.max(i.maxX, i.labels[h][d])),
                            (i.initialMaxX = Math.max(i.maxX, i.labels[h][d])),
                            (i.minX = Math.min(i.minX, i.labels[h][d])),
                            (i.initialMinX = Math.min(i.minX, i.labels[h][d])));
                  })(),
                i.noLabelsProvided &&
                  n.xaxis.categories.length === 0 &&
                  ((i.maxX = i.labels[i.labels.length - 1]),
                  (i.initialMaxX = i.labels[i.labels.length - 1]),
                  (i.minX = 1),
                  (i.initialMinX = 1)),
                i.isXNumeric || i.noLabelsProvided || i.dataFormatXNumeric)
              ) {
                var o;
                if (
                  (n.xaxis.tickAmount === void 0
                    ? ((o = Math.round(i.svgWidth / 150)),
                      n.xaxis.type === "numeric" &&
                        i.dataPoints < 30 &&
                        (o = i.dataPoints - 1),
                      o > i.dataPoints &&
                        i.dataPoints !== 0 &&
                        (o = i.dataPoints - 1))
                    : n.xaxis.tickAmount === "dataPoints"
                    ? (i.series.length > 1 &&
                        (o = i.series[i.maxValsInArrayIndex].length - 1),
                      i.isXNumeric && (o = i.maxX - i.minX - 1))
                    : (o = n.xaxis.tickAmount),
                  (i.xTickAmount = o),
                  n.xaxis.max !== void 0 &&
                    typeof n.xaxis.max == "number" &&
                    (i.maxX = n.xaxis.max),
                  n.xaxis.min !== void 0 &&
                    typeof n.xaxis.min == "number" &&
                    (i.minX = n.xaxis.min),
                  n.xaxis.range !== void 0 && (i.minX = i.maxX - n.xaxis.range),
                  i.minX !== Number.MAX_VALUE && i.maxX !== -Number.MAX_VALUE)
                )
                  if (n.xaxis.convertedCatToNumeric && !i.dataFormatXNumeric) {
                    for (var l = [], u = i.minX - 1; u < i.maxX; u++)
                      l.push(u + 1);
                    i.xAxisScale = {
                      result: l,
                      niceMin: l[0],
                      niceMax: l[l.length - 1],
                    };
                  } else i.xAxisScale = this.scales.setXScale(i.minX, i.maxX);
                else
                  (i.xAxisScale = this.scales.linearScale(0, o, o)),
                    i.noLabelsProvided &&
                      i.labels.length > 0 &&
                      ((i.xAxisScale = this.scales.linearScale(
                        1,
                        i.labels.length,
                        o - 1
                      )),
                      (i.seriesX = i.labels.slice()));
                a && (i.labels = i.xAxisScale.result.slice());
              }
              return (
                i.isBarHorizontal &&
                  i.labels.length &&
                  (i.xTickAmount = i.labels.length),
                this._handleSingleDataPoint(),
                this._getMinXDiff(),
                { minX: i.minX, maxX: i.maxX }
              );
            },
          },
          {
            key: "setZRange",
            value: function () {
              var i = this.w.globals;
              if (i.isDataXYZ) {
                for (var n = 0; n < i.series.length; n++)
                  if (i.seriesZ[n] !== void 0)
                    for (var a = 0; a < i.seriesZ[n].length; a++)
                      i.seriesZ[n][a] !== null &&
                        L.isNumber(i.seriesZ[n][a]) &&
                        ((i.maxZ = Math.max(i.maxZ, i.seriesZ[n][a])),
                        (i.minZ = Math.min(i.minZ, i.seriesZ[n][a])));
              }
            },
          },
          {
            key: "_handleSingleDataPoint",
            value: function () {
              var i = this.w.globals,
                n = this.w.config;
              if (i.minX === i.maxX) {
                var a = new xe(this.ctx);
                if (n.xaxis.type === "datetime") {
                  var o = a.getDate(i.minX);
                  n.xaxis.labels.datetimeUTC
                    ? o.setUTCDate(o.getUTCDate() - 2)
                    : o.setDate(o.getDate() - 2),
                    (i.minX = new Date(o).getTime());
                  var l = a.getDate(i.maxX);
                  n.xaxis.labels.datetimeUTC
                    ? l.setUTCDate(l.getUTCDate() + 2)
                    : l.setDate(l.getDate() + 2),
                    (i.maxX = new Date(l).getTime());
                } else
                  (n.xaxis.type === "numeric" ||
                    (n.xaxis.type === "category" && !i.noLabelsProvided)) &&
                    ((i.minX = i.minX - 2),
                    (i.initialMinX = i.minX),
                    (i.maxX = i.maxX + 2),
                    (i.initialMaxX = i.maxX));
              }
            },
          },
          {
            key: "_getMinXDiff",
            value: function () {
              var i = this.w.globals;
              i.isXNumeric &&
                i.seriesX.forEach(function (n, a) {
                  n.length === 1 &&
                    n.push(
                      i.seriesX[i.maxValsInArrayIndex][
                        i.seriesX[i.maxValsInArrayIndex].length - 1
                      ]
                    );
                  var o = n.slice();
                  o.sort(function (l, u) {
                    return l - u;
                  }),
                    o.forEach(function (l, u) {
                      if (u > 0) {
                        var h = l - o[u - 1];
                        h > 0 && (i.minXDiff = Math.min(h, i.minXDiff));
                      }
                    }),
                    (i.dataPoints !== 1 && i.minXDiff !== Number.MAX_VALUE) ||
                      (i.minXDiff = 0.5);
                });
            },
          },
          {
            key: "_setStackedMinMax",
            value: function () {
              var i = this,
                n = this.w.globals;
              if (n.series.length) {
                var a = n.seriesGroups;
                a.length ||
                  (a = [
                    this.w.config.series.map(function (u) {
                      return u.name;
                    }),
                  ]);
                var o = {},
                  l = {};
                a.forEach(function (u) {
                  (o[u] = []),
                    (l[u] = []),
                    i.w.config.series
                      .map(function (h, d) {
                        return u.indexOf(h.name) > -1 ? d : null;
                      })
                      .filter(function (h) {
                        return h !== null;
                      })
                      .forEach(function (h) {
                        for (
                          var d = 0;
                          d < n.series[n.maxValsInArrayIndex].length;
                          d++
                        )
                          o[u][d] === void 0 && ((o[u][d] = 0), (l[u][d] = 0)),
                            n.series[h][d] !== null &&
                              L.isNumber(n.series[h][d]) &&
                              (n.series[h][d] > 0
                                ? (o[u][d] += parseFloat(n.series[h][d]) + 1e-4)
                                : (l[u][d] += parseFloat(n.series[h][d])));
                      });
                }),
                  Object.entries(o).forEach(function (u) {
                    var h = V(u, 1)[0];
                    o[h].forEach(function (d, g) {
                      (n.maxY = Math.max(n.maxY, o[h][g])),
                        (n.minY = Math.min(n.minY, l[h][g]));
                    });
                  });
              }
            },
          },
        ]),
        M
      );
    })(),
    Ro = (function () {
      function M(i, n) {
        f(this, M), (this.ctx = i), (this.elgrid = n), (this.w = i.w);
        var a = this.w;
        (this.xaxisFontSize = a.config.xaxis.labels.style.fontSize),
          (this.axisFontFamily = a.config.xaxis.labels.style.fontFamily),
          (this.xaxisForeColors = a.config.xaxis.labels.style.colors),
          (this.isCategoryBarHorizontal =
            a.config.chart.type === "bar" &&
            a.config.plotOptions.bar.horizontal),
          (this.xAxisoffX = 0),
          a.config.xaxis.position === "bottom" &&
            (this.xAxisoffX = a.globals.gridHeight),
          (this.drawnLabels = []),
          (this.axesUtils = new ci(i));
      }
      return (
        y(M, [
          {
            key: "drawYaxis",
            value: function (i) {
              var n = this,
                a = this.w,
                o = new B(this.ctx),
                l = a.config.yaxis[i].labels.style,
                u = l.fontSize,
                h = l.fontFamily,
                d = l.fontWeight,
                g = o.group({
                  class: "apexcharts-yaxis",
                  rel: i,
                  transform:
                    "translate(" + a.globals.translateYAxisX[i] + ", 0)",
                });
              if (this.axesUtils.isYAxisHidden(i)) return g;
              var x = o.group({ class: "apexcharts-yaxis-texts-g" });
              g.add(x);
              var v = a.globals.yAxisScale[i].result.length - 1,
                w = a.globals.gridHeight / v,
                k = a.globals.translateY,
                C = a.globals.yLabelFormatters[i],
                P = a.globals.yAxisScale[i].result.slice();
              P = this.axesUtils.checkForReversedLabels(i, P);
              var E = "";
              if (a.config.yaxis[i].labels.show)
                for (
                  var I = function (G) {
                      var W = P[G];
                      W = C(W, G, a);
                      var Z = a.config.yaxis[i].labels.padding;
                      a.config.yaxis[i].opposite &&
                        a.config.yaxis.length !== 0 &&
                        (Z *= -1);
                      var ee = "end";
                      a.config.yaxis[i].opposite && (ee = "start"),
                        a.config.yaxis[i].labels.align === "left"
                          ? (ee = "start")
                          : a.config.yaxis[i].labels.align === "center"
                          ? (ee = "middle")
                          : a.config.yaxis[i].labels.align === "right" &&
                            (ee = "end");
                      var J = n.axesUtils.getYAxisForeColor(l.colors, i),
                        oe = a.config.yaxis[i].labels.offsetY;
                      a.config.chart.type === "heatmap" &&
                        (oe -=
                          (a.globals.gridHeight / a.globals.series.length - 1) /
                          2);
                      var ce = o.drawText({
                        x: Z,
                        y: k + v / 10 + oe + 1,
                        text: W,
                        textAnchor: ee,
                        fontSize: u,
                        fontFamily: h,
                        fontWeight: d,
                        maxWidth: a.config.yaxis[i].labels.maxWidth,
                        foreColor: Array.isArray(J) ? J[G] : J,
                        isPlainText: !1,
                        cssClass: "apexcharts-yaxis-label " + l.cssClass,
                      });
                      G === v && (E = ce), x.add(ce);
                      var Se = document.createElementNS(
                        a.globals.SVGNS,
                        "title"
                      );
                      if (
                        ((Se.textContent = Array.isArray(W) ? W.join(" ") : W),
                        ce.node.appendChild(Se),
                        a.config.yaxis[i].labels.rotate !== 0)
                      ) {
                        var ke = o.rotateAroundCenter(E.node),
                          Le = o.rotateAroundCenter(ce.node);
                        ce.node.setAttribute(
                          "transform",
                          "rotate("
                            .concat(a.config.yaxis[i].labels.rotate, " ")
                            .concat(ke.x, " ")
                            .concat(Le.y, ")")
                        );
                      }
                      k += w;
                    },
                    D = v;
                  D >= 0;
                  D--
                )
                  I(D);
              if (a.config.yaxis[i].title.text !== void 0) {
                var p = o.group({ class: "apexcharts-yaxis-title" }),
                  b = 0;
                a.config.yaxis[i].opposite &&
                  (b = a.globals.translateYAxisX[i]);
                var A = o.drawText({
                  x: b,
                  y:
                    a.globals.gridHeight / 2 +
                    a.globals.translateY +
                    a.config.yaxis[i].title.offsetY,
                  text: a.config.yaxis[i].title.text,
                  textAnchor: "end",
                  foreColor: a.config.yaxis[i].title.style.color,
                  fontSize: a.config.yaxis[i].title.style.fontSize,
                  fontWeight: a.config.yaxis[i].title.style.fontWeight,
                  fontFamily: a.config.yaxis[i].title.style.fontFamily,
                  cssClass:
                    "apexcharts-yaxis-title-text " +
                    a.config.yaxis[i].title.style.cssClass,
                });
                p.add(A), g.add(p);
              }
              var R = a.config.yaxis[i].axisBorder,
                F = 31 + R.offsetX;
              if (
                (a.config.yaxis[i].opposite && (F = -31 - R.offsetX), R.show)
              ) {
                var _ = o.drawLine(
                  F,
                  a.globals.translateY + R.offsetY - 2,
                  F,
                  a.globals.gridHeight + a.globals.translateY + R.offsetY + 2,
                  R.color,
                  0,
                  R.width
                );
                g.add(_);
              }
              return (
                a.config.yaxis[i].axisTicks.show &&
                  this.axesUtils.drawYAxisTicks(
                    F,
                    v,
                    R,
                    a.config.yaxis[i].axisTicks,
                    i,
                    w,
                    g
                  ),
                g
              );
            },
          },
          {
            key: "drawYaxisInversed",
            value: function (i) {
              var n = this.w,
                a = new B(this.ctx),
                o = a.group({
                  class: "apexcharts-xaxis apexcharts-yaxis-inversed",
                }),
                l = a.group({
                  class: "apexcharts-xaxis-texts-g",
                  transform: "translate("
                    .concat(n.globals.translateXAxisX, ", ")
                    .concat(n.globals.translateXAxisY, ")"),
                });
              o.add(l);
              var u = n.globals.yAxisScale[i].result.length - 1,
                h = n.globals.gridWidth / u + 0.1,
                d = h + n.config.xaxis.labels.offsetX,
                g = n.globals.xLabelFormatter,
                x = n.globals.yAxisScale[i].result.slice(),
                v = n.globals.timescaleLabels;
              v.length > 0 &&
                ((this.xaxisLabels = v.slice()), (u = (x = v.slice()).length)),
                (x = this.axesUtils.checkForReversedLabels(i, x));
              var w = v.length;
              if (n.config.xaxis.labels.show)
                for (var k = w ? 0 : u; w ? k < w : k >= 0; w ? k++ : k--) {
                  var C = x[k];
                  C = g(C, k, n);
                  var P =
                    n.globals.gridWidth +
                    n.globals.padHorizontal -
                    (d - h + n.config.xaxis.labels.offsetX);
                  if (v.length) {
                    var E = this.axesUtils.getLabel(
                      x,
                      v,
                      P,
                      k,
                      this.drawnLabels,
                      this.xaxisFontSize
                    );
                    (P = E.x),
                      (C = E.text),
                      this.drawnLabels.push(E.text),
                      k === 0 && n.globals.skipFirstTimelinelabel && (C = ""),
                      k === x.length - 1 &&
                        n.globals.skipLastTimelinelabel &&
                        (C = "");
                  }
                  var I = a.drawText({
                    x: P,
                    y:
                      this.xAxisoffX +
                      n.config.xaxis.labels.offsetY +
                      30 -
                      (n.config.xaxis.position === "top"
                        ? n.globals.xAxisHeight +
                          n.config.xaxis.axisTicks.height -
                          2
                        : 0),
                    text: C,
                    textAnchor: "middle",
                    foreColor: Array.isArray(this.xaxisForeColors)
                      ? this.xaxisForeColors[i]
                      : this.xaxisForeColors,
                    fontSize: this.xaxisFontSize,
                    fontFamily: this.xaxisFontFamily,
                    fontWeight: n.config.xaxis.labels.style.fontWeight,
                    isPlainText: !1,
                    cssClass:
                      "apexcharts-xaxis-label " +
                      n.config.xaxis.labels.style.cssClass,
                  });
                  l.add(I), I.tspan(C);
                  var D = document.createElementNS(n.globals.SVGNS, "title");
                  (D.textContent = C), I.node.appendChild(D), (d += h);
                }
              return (
                this.inversedYAxisTitleText(o), this.inversedYAxisBorder(o), o
              );
            },
          },
          {
            key: "inversedYAxisBorder",
            value: function (i) {
              var n = this.w,
                a = new B(this.ctx),
                o = n.config.xaxis.axisBorder;
              if (o.show) {
                var l = 0;
                n.config.chart.type === "bar" &&
                  n.globals.isXNumeric &&
                  (l -= 15);
                var u = a.drawLine(
                  n.globals.padHorizontal + l + o.offsetX,
                  this.xAxisoffX,
                  n.globals.gridWidth,
                  this.xAxisoffX,
                  o.color,
                  0,
                  o.height
                );
                this.elgrid && this.elgrid.elGridBorders && n.config.grid.show
                  ? this.elgrid.elGridBorders.add(u)
                  : i.add(u);
              }
            },
          },
          {
            key: "inversedYAxisTitleText",
            value: function (i) {
              var n = this.w,
                a = new B(this.ctx);
              if (n.config.xaxis.title.text !== void 0) {
                var o = a.group({
                    class:
                      "apexcharts-xaxis-title apexcharts-yaxis-title-inversed",
                  }),
                  l = a.drawText({
                    x: n.globals.gridWidth / 2 + n.config.xaxis.title.offsetX,
                    y:
                      this.xAxisoffX +
                      parseFloat(this.xaxisFontSize) +
                      parseFloat(n.config.xaxis.title.style.fontSize) +
                      n.config.xaxis.title.offsetY +
                      20,
                    text: n.config.xaxis.title.text,
                    textAnchor: "middle",
                    fontSize: n.config.xaxis.title.style.fontSize,
                    fontFamily: n.config.xaxis.title.style.fontFamily,
                    fontWeight: n.config.xaxis.title.style.fontWeight,
                    foreColor: n.config.xaxis.title.style.color,
                    cssClass:
                      "apexcharts-xaxis-title-text " +
                      n.config.xaxis.title.style.cssClass,
                  });
                o.add(l), i.add(o);
              }
            },
          },
          {
            key: "yAxisTitleRotate",
            value: function (i, n) {
              var a = this.w,
                o = new B(this.ctx),
                l = { width: 0, height: 0 },
                u = { width: 0, height: 0 },
                h = a.globals.dom.baseEl.querySelector(
                  " .apexcharts-yaxis[rel='".concat(
                    i,
                    "'] .apexcharts-yaxis-texts-g"
                  )
                );
              h !== null && (l = h.getBoundingClientRect());
              var d = a.globals.dom.baseEl.querySelector(
                ".apexcharts-yaxis[rel='".concat(
                  i,
                  "'] .apexcharts-yaxis-title text"
                )
              );
              if ((d !== null && (u = d.getBoundingClientRect()), d !== null)) {
                var g = this.xPaddingForYAxisTitle(i, l, u, n);
                d.setAttribute("x", g.xPos - (n ? 10 : 0));
              }
              if (d !== null) {
                var x = o.rotateAroundCenter(d);
                d.setAttribute(
                  "transform",
                  "rotate("
                    .concat(
                      n
                        ? -1 * a.config.yaxis[i].title.rotate
                        : a.config.yaxis[i].title.rotate,
                      " "
                    )
                    .concat(x.x, " ")
                    .concat(x.y, ")")
                );
              }
            },
          },
          {
            key: "xPaddingForYAxisTitle",
            value: function (i, n, a, o) {
              var l = this.w,
                u = 0,
                h = 0,
                d = 10;
              return l.config.yaxis[i].title.text === void 0 || i < 0
                ? { xPos: h, padd: 0 }
                : (o
                    ? ((h =
                        n.width +
                        l.config.yaxis[i].title.offsetX +
                        a.width / 2 +
                        d / 2),
                      (u += 1) === 0 && (h -= d / 2))
                    : ((h =
                        -1 * n.width +
                        l.config.yaxis[i].title.offsetX +
                        d / 2 +
                        a.width / 2),
                      l.globals.isBarHorizontal &&
                        ((d = 25),
                        (h =
                          -1 * n.width - l.config.yaxis[i].title.offsetX - d))),
                  { xPos: h, padd: d });
            },
          },
          {
            key: "setYAxisXPosition",
            value: function (i, n) {
              var a = this.w,
                o = 0,
                l = 0,
                u = 18,
                h = 1;
              a.config.yaxis.length > 1 && (this.multipleYs = !0),
                a.config.yaxis.map(function (d, g) {
                  var x =
                      a.globals.ignoreYAxisIndexes.indexOf(g) > -1 ||
                      !d.show ||
                      d.floating ||
                      i[g].width === 0,
                    v = i[g].width + n[g].width;
                  d.opposite
                    ? a.globals.isBarHorizontal
                      ? ((l = a.globals.gridWidth + a.globals.translateX - 1),
                        (a.globals.translateYAxisX[g] = l - d.labels.offsetX))
                      : ((l = a.globals.gridWidth + a.globals.translateX + h),
                        x || (h = h + v + 20),
                        (a.globals.translateYAxisX[g] =
                          l - d.labels.offsetX + 20))
                    : ((o = a.globals.translateX - u),
                      x || (u = u + v + 20),
                      (a.globals.translateYAxisX[g] = o + d.labels.offsetX));
                });
            },
          },
          {
            key: "setYAxisTextAlignments",
            value: function () {
              var i = this.w,
                n =
                  i.globals.dom.baseEl.getElementsByClassName(
                    "apexcharts-yaxis"
                  );
              (n = L.listToArray(n)).forEach(function (a, o) {
                var l = i.config.yaxis[o];
                if (l && !l.floating && l.labels.align !== void 0) {
                  var u = i.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxis[rel='".concat(
                        o,
                        "'] .apexcharts-yaxis-texts-g"
                      )
                    ),
                    h = i.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-yaxis[rel='".concat(
                        o,
                        "'] .apexcharts-yaxis-label"
                      )
                    );
                  h = L.listToArray(h);
                  var d = u.getBoundingClientRect();
                  l.labels.align === "left"
                    ? (h.forEach(function (g, x) {
                        g.setAttribute("text-anchor", "start");
                      }),
                      l.opposite ||
                        u.setAttribute(
                          "transform",
                          "translate(-".concat(d.width, ", 0)")
                        ))
                    : l.labels.align === "center"
                    ? (h.forEach(function (g, x) {
                        g.setAttribute("text-anchor", "middle");
                      }),
                      u.setAttribute(
                        "transform",
                        "translate(".concat(
                          (d.width / 2) * (l.opposite ? 1 : -1),
                          ", 0)"
                        )
                      ))
                    : l.labels.align === "right" &&
                      (h.forEach(function (g, x) {
                        g.setAttribute("text-anchor", "end");
                      }),
                      l.opposite &&
                        u.setAttribute(
                          "transform",
                          "translate(".concat(d.width, ", 0)")
                        ));
                }
              });
            },
          },
        ]),
        M
      );
    })(),
    Gv = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.documentEvent = L.bind(this.documentEvent, this));
      }
      return (
        y(M, [
          {
            key: "addEventListener",
            value: function (i, n) {
              var a = this.w;
              a.globals.events.hasOwnProperty(i)
                ? a.globals.events[i].push(n)
                : (a.globals.events[i] = [n]);
            },
          },
          {
            key: "removeEventListener",
            value: function (i, n) {
              var a = this.w;
              if (a.globals.events.hasOwnProperty(i)) {
                var o = a.globals.events[i].indexOf(n);
                o !== -1 && a.globals.events[i].splice(o, 1);
              }
            },
          },
          {
            key: "fireEvent",
            value: function (i, n) {
              var a = this.w;
              if (a.globals.events.hasOwnProperty(i)) {
                (n && n.length) || (n = []);
                for (
                  var o = a.globals.events[i], l = o.length, u = 0;
                  u < l;
                  u++
                )
                  o[u].apply(null, n);
              }
            },
          },
          {
            key: "setupEventHandlers",
            value: function () {
              var i = this,
                n = this.w,
                a = this.ctx,
                o = n.globals.dom.baseEl.querySelector(n.globals.chartClass);
              this.ctx.eventList.forEach(function (l) {
                o.addEventListener(
                  l,
                  function (u) {
                    var h = Object.assign({}, n, {
                      seriesIndex: n.globals.capturedSeriesIndex,
                      dataPointIndex: n.globals.capturedDataPointIndex,
                    });
                    u.type === "mousemove" || u.type === "touchmove"
                      ? typeof n.config.chart.events.mouseMove == "function" &&
                        n.config.chart.events.mouseMove(u, a, h)
                      : u.type === "mouseleave" || u.type === "touchleave"
                      ? typeof n.config.chart.events.mouseLeave == "function" &&
                        n.config.chart.events.mouseLeave(u, a, h)
                      : ((u.type === "mouseup" && u.which === 1) ||
                          u.type === "touchend") &&
                        (typeof n.config.chart.events.click == "function" &&
                          n.config.chart.events.click(u, a, h),
                        a.ctx.events.fireEvent("click", [u, a, h]));
                  },
                  { capture: !1, passive: !0 }
                );
              }),
                this.ctx.eventList.forEach(function (l) {
                  n.globals.dom.baseEl.addEventListener(l, i.documentEvent, {
                    passive: !0,
                  });
                }),
                this.ctx.core.setupBrushHandler();
            },
          },
          {
            key: "documentEvent",
            value: function (i) {
              var n = this.w,
                a = i.target.className;
              if (i.type === "click") {
                var o = n.globals.dom.baseEl.querySelector(".apexcharts-menu");
                o &&
                  o.classList.contains("apexcharts-menu-open") &&
                  a !== "apexcharts-menu-icon" &&
                  o.classList.remove("apexcharts-menu-open");
              }
              (n.globals.clientX =
                i.type === "touchmove" ? i.touches[0].clientX : i.clientX),
                (n.globals.clientY =
                  i.type === "touchmove" ? i.touches[0].clientY : i.clientY);
            },
          },
        ]),
        M
      );
    })(),
    Uv = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "setCurrentLocaleValues",
            value: function (i) {
              var n = this.w.config.chart.locales;
              window.Apex.chart &&
                window.Apex.chart.locales &&
                window.Apex.chart.locales.length > 0 &&
                (n = this.w.config.chart.locales.concat(
                  window.Apex.chart.locales
                ));
              var a = n.filter(function (l) {
                return l.name === i;
              })[0];
              if (!a)
                throw new Error(
                  "Wrong locale name provided. Please make sure you set the correct locale name in options"
                );
              var o = L.extend(pe, a);
              this.w.globals.locale = o.options;
            },
          },
        ]),
        M
      );
    })(),
    $v = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "drawAxis",
            value: function (i, n) {
              var a,
                o,
                l = this,
                u = this.w.globals,
                h = this.w.config,
                d = new Jt(this.ctx, n),
                g = new Ro(this.ctx, n);
              u.axisCharts &&
                i !== "radar" &&
                (u.isBarHorizontal
                  ? ((o = g.drawYaxisInversed(0)),
                    (a = d.drawXaxisInversed(0)),
                    u.dom.elGraphical.add(a),
                    u.dom.elGraphical.add(o))
                  : ((a = d.drawXaxis()),
                    u.dom.elGraphical.add(a),
                    h.yaxis.map(function (x, v) {
                      if (
                        u.ignoreYAxisIndexes.indexOf(v) === -1 &&
                        ((o = g.drawYaxis(v)),
                        u.dom.Paper.add(o),
                        l.w.config.grid.position === "back")
                      ) {
                        var w = u.dom.Paper.children()[1];
                        w.remove(), u.dom.Paper.add(w);
                      }
                    })));
            },
          },
        ]),
        M
      );
    })(),
    zo = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "drawXCrosshairs",
            value: function () {
              var i = this.w,
                n = new B(this.ctx),
                a = new U(this.ctx),
                o = i.config.xaxis.crosshairs.fill.gradient,
                l = i.config.xaxis.crosshairs.dropShadow,
                u = i.config.xaxis.crosshairs.fill.type,
                h = o.colorFrom,
                d = o.colorTo,
                g = o.opacityFrom,
                x = o.opacityTo,
                v = o.stops,
                w = l.enabled,
                k = l.left,
                C = l.top,
                P = l.blur,
                E = l.color,
                I = l.opacity,
                D = i.config.xaxis.crosshairs.fill.color;
              if (i.config.xaxis.crosshairs.show) {
                u === "gradient" &&
                  (D = n.drawGradient("vertical", h, d, g, x, null, v, null));
                var p = n.drawRect();
                i.config.xaxis.crosshairs.width === 1 && (p = n.drawLine());
                var b = i.globals.gridHeight;
                (!L.isNumber(b) || b < 0) && (b = 0);
                var A = i.config.xaxis.crosshairs.width;
                (!L.isNumber(A) || A < 0) && (A = 0),
                  p.attr({
                    class: "apexcharts-xcrosshairs",
                    x: 0,
                    y: 0,
                    y2: b,
                    width: A,
                    height: b,
                    fill: D,
                    filter: "none",
                    "fill-opacity": i.config.xaxis.crosshairs.opacity,
                    stroke: i.config.xaxis.crosshairs.stroke.color,
                    "stroke-width": i.config.xaxis.crosshairs.stroke.width,
                    "stroke-dasharray":
                      i.config.xaxis.crosshairs.stroke.dashArray,
                  }),
                  w &&
                    (p = a.dropShadow(p, {
                      left: k,
                      top: C,
                      blur: P,
                      color: E,
                      opacity: I,
                    })),
                  i.globals.dom.elGraphical.add(p);
              }
            },
          },
          {
            key: "drawYCrosshairs",
            value: function () {
              var i = this.w,
                n = new B(this.ctx),
                a = i.config.yaxis[0].crosshairs,
                o = i.globals.barPadForNumericAxis;
              if (i.config.yaxis[0].crosshairs.show) {
                var l = n.drawLine(
                  -o,
                  0,
                  i.globals.gridWidth + o,
                  0,
                  a.stroke.color,
                  a.stroke.dashArray,
                  a.stroke.width
                );
                l.attr({ class: "apexcharts-ycrosshairs" }),
                  i.globals.dom.elGraphical.add(l);
              }
              var u = n.drawLine(
                -o,
                0,
                i.globals.gridWidth + o,
                0,
                a.stroke.color,
                0,
                0
              );
              u.attr({ class: "apexcharts-ycrosshairs-hidden" }),
                i.globals.dom.elGraphical.add(u);
            },
          },
        ]),
        M
      );
    })(),
    qv = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "checkResponsiveConfig",
            value: function (i) {
              var n = this,
                a = this.w,
                o = a.config;
              if (o.responsive.length !== 0) {
                var l = o.responsive.slice();
                l.sort(function (g, x) {
                  return g.breakpoint > x.breakpoint
                    ? 1
                    : x.breakpoint > g.breakpoint
                    ? -1
                    : 0;
                }).reverse();
                var u = new ge({}),
                  h = function () {
                    var g =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : {},
                      x = l[0].breakpoint,
                      v =
                        window.innerWidth > 0
                          ? window.innerWidth
                          : screen.width;
                    if (v > x) {
                      var w = K.extendArrayProps(u, a.globals.initialConfig, a);
                      (g = L.extend(w, g)),
                        (g = L.extend(a.config, g)),
                        n.overrideResponsiveOptions(g);
                    } else
                      for (var k = 0; k < l.length; k++)
                        v < l[k].breakpoint &&
                          ((g = K.extendArrayProps(u, l[k].options, a)),
                          (g = L.extend(a.config, g)),
                          n.overrideResponsiveOptions(g));
                  };
                if (i) {
                  var d = K.extendArrayProps(u, i, a);
                  (d = L.extend(a.config, d)), h((d = L.extend(d, i)));
                } else h({});
              }
            },
          },
          {
            key: "overrideResponsiveOptions",
            value: function (i) {
              var n = new ge(i).init({ responsiveOverride: !0 });
              this.w.config = n;
            },
          },
        ]),
        M
      );
    })(),
    Zv = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.colors = []), (this.w = i.w);
        var n = this.w;
        (this.isColorFn = !1),
          (this.isHeatmapDistributed =
            (n.config.chart.type === "treemap" &&
              n.config.plotOptions.treemap.distributed) ||
            (n.config.chart.type === "heatmap" &&
              n.config.plotOptions.heatmap.distributed)),
          (this.isBarDistributed =
            n.config.plotOptions.bar.distributed &&
            (n.config.chart.type === "bar" ||
              n.config.chart.type === "rangeBar"));
      }
      return (
        y(M, [
          {
            key: "init",
            value: function () {
              this.setDefaultColors();
            },
          },
          {
            key: "setDefaultColors",
            value: function () {
              var i,
                n = this,
                a = this.w,
                o = new L();
              if (
                (a.globals.dom.elWrap.classList.add(
                  "apexcharts-theme-".concat(a.config.theme.mode)
                ),
                a.config.colors === void 0 ||
                ((i = a.config.colors) === null || i === void 0
                  ? void 0
                  : i.length) === 0
                  ? (a.globals.colors = this.predefined())
                  : ((a.globals.colors = a.config.colors),
                    Array.isArray(a.config.colors) &&
                      a.config.colors.length > 0 &&
                      typeof a.config.colors[0] == "function" &&
                      (a.globals.colors = a.config.series.map(function (C, P) {
                        var E = a.config.colors[P];
                        return (
                          E || (E = a.config.colors[0]),
                          typeof E == "function"
                            ? ((n.isColorFn = !0),
                              E({
                                value: a.globals.axisCharts
                                  ? a.globals.series[P][0]
                                    ? a.globals.series[P][0]
                                    : 0
                                  : a.globals.series[P],
                                seriesIndex: P,
                                dataPointIndex: P,
                                w: a,
                              }))
                            : E
                        );
                      }))),
                a.globals.seriesColors.map(function (C, P) {
                  C && (a.globals.colors[P] = C);
                }),
                a.config.theme.monochrome.enabled)
              ) {
                var l = [],
                  u = a.globals.series.length;
                (this.isBarDistributed || this.isHeatmapDistributed) &&
                  (u = a.globals.series[0].length * a.globals.series.length);
                for (
                  var h = a.config.theme.monochrome.color,
                    d = 1 / (u / a.config.theme.monochrome.shadeIntensity),
                    g = a.config.theme.monochrome.shadeTo,
                    x = 0,
                    v = 0;
                  v < u;
                  v++
                ) {
                  var w = void 0;
                  g === "dark"
                    ? ((w = o.shadeColor(-1 * x, h)), (x += d))
                    : ((w = o.shadeColor(x, h)), (x += d)),
                    l.push(w);
                }
                a.globals.colors = l.slice();
              }
              var k = a.globals.colors.slice();
              this.pushExtraColors(a.globals.colors),
                ["fill", "stroke"].forEach(function (C) {
                  a.config[C].colors === void 0
                    ? (a.globals[C].colors = n.isColorFn ? a.config.colors : k)
                    : (a.globals[C].colors = a.config[C].colors.slice()),
                    n.pushExtraColors(a.globals[C].colors);
                }),
                a.config.dataLabels.style.colors === void 0
                  ? (a.globals.dataLabels.style.colors = k)
                  : (a.globals.dataLabels.style.colors =
                      a.config.dataLabels.style.colors.slice()),
                this.pushExtraColors(a.globals.dataLabels.style.colors, 50),
                a.config.plotOptions.radar.polygons.fill.colors === void 0
                  ? (a.globals.radarPolygons.fill.colors = [
                      a.config.theme.mode === "dark" ? "#424242" : "none",
                    ])
                  : (a.globals.radarPolygons.fill.colors =
                      a.config.plotOptions.radar.polygons.fill.colors.slice()),
                this.pushExtraColors(a.globals.radarPolygons.fill.colors, 20),
                a.config.markers.colors === void 0
                  ? (a.globals.markers.colors = k)
                  : (a.globals.markers.colors =
                      a.config.markers.colors.slice()),
                this.pushExtraColors(a.globals.markers.colors);
            },
          },
          {
            key: "pushExtraColors",
            value: function (i, n) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                o = this.w,
                l = n || o.globals.series.length;
              if (
                (a === null &&
                  (a =
                    this.isBarDistributed ||
                    this.isHeatmapDistributed ||
                    (o.config.chart.type === "heatmap" &&
                      o.config.plotOptions.heatmap.colorScale.inverse)),
                a &&
                  o.globals.series.length &&
                  (l =
                    o.globals.series[o.globals.maxValsInArrayIndex].length *
                    o.globals.series.length),
                i.length < l)
              )
                for (var u = l - i.length, h = 0; h < u; h++) i.push(i[h]);
            },
          },
          {
            key: "updateThemeOptions",
            value: function (i) {
              (i.chart = i.chart || {}), (i.tooltip = i.tooltip || {});
              var n = i.theme.mode || "light",
                a = i.theme.palette
                  ? i.theme.palette
                  : n === "dark"
                  ? "palette4"
                  : "palette1",
                o = i.chart.foreColor
                  ? i.chart.foreColor
                  : n === "dark"
                  ? "#f6f7f8"
                  : "#373d3f";
              return (
                (i.tooltip.theme = n),
                (i.chart.foreColor = o),
                (i.theme.palette = a),
                i
              );
            },
          },
          {
            key: "predefined",
            value: function () {
              switch (this.w.config.theme.palette) {
                case "palette1":
                default:
                  this.colors = [
                    "#008FFB",
                    "#00E396",
                    "#FEB019",
                    "#FF4560",
                    "#775DD0",
                  ];
                  break;
                case "palette2":
                  this.colors = [
                    "#3f51b5",
                    "#03a9f4",
                    "#4caf50",
                    "#f9ce1d",
                    "#FF9800",
                  ];
                  break;
                case "palette3":
                  this.colors = [
                    "#33b2df",
                    "#546E7A",
                    "#d4526e",
                    "#13d8aa",
                    "#A5978B",
                  ];
                  break;
                case "palette4":
                  this.colors = [
                    "#4ecdc4",
                    "#c7f464",
                    "#81D4FA",
                    "#fd6a6a",
                    "#546E7A",
                  ];
                  break;
                case "palette5":
                  this.colors = [
                    "#2b908f",
                    "#f9a3a4",
                    "#90ee7e",
                    "#fa4443",
                    "#69d2e7",
                  ];
                  break;
                case "palette6":
                  this.colors = [
                    "#449DD1",
                    "#F86624",
                    "#EA3546",
                    "#662E9B",
                    "#C5D86D",
                  ];
                  break;
                case "palette7":
                  this.colors = [
                    "#D7263D",
                    "#1B998B",
                    "#2E294E",
                    "#F46036",
                    "#E2C044",
                  ];
                  break;
                case "palette8":
                  this.colors = [
                    "#662E9B",
                    "#F86624",
                    "#F9C80E",
                    "#EA3546",
                    "#43BCCD",
                  ];
                  break;
                case "palette9":
                  this.colors = [
                    "#5C4742",
                    "#A5978B",
                    "#8D5B4C",
                    "#5A2A27",
                    "#C4BBAF",
                  ];
                  break;
                case "palette10":
                  this.colors = [
                    "#A300D6",
                    "#7D02EB",
                    "#5653FE",
                    "#2983FF",
                    "#00B1F2",
                  ];
              }
              return this.colors;
            },
          },
        ]),
        M
      );
    })(),
    Kv = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "draw",
            value: function () {
              this.drawTitleSubtitle("title"),
                this.drawTitleSubtitle("subtitle");
            },
          },
          {
            key: "drawTitleSubtitle",
            value: function (i) {
              var n = this.w,
                a = i === "title" ? n.config.title : n.config.subtitle,
                o = n.globals.svgWidth / 2,
                l = a.offsetY,
                u = "middle";
              if (
                (a.align === "left"
                  ? ((o = 10), (u = "start"))
                  : a.align === "right" &&
                    ((o = n.globals.svgWidth - 10), (u = "end")),
                (o += a.offsetX),
                (l = l + parseInt(a.style.fontSize, 10) + a.margin / 2),
                a.text !== void 0)
              ) {
                var h = new B(this.ctx).drawText({
                  x: o,
                  y: l,
                  text: a.text,
                  textAnchor: u,
                  fontSize: a.style.fontSize,
                  fontFamily: a.style.fontFamily,
                  fontWeight: a.style.fontWeight,
                  foreColor: a.style.color,
                  opacity: 1,
                });
                h.node.setAttribute("class", "apexcharts-".concat(i, "-text")),
                  n.globals.dom.Paper.add(h);
              }
            },
          },
        ]),
        M
      );
    })(),
    Qv = (function () {
      function M(i) {
        f(this, M), (this.w = i.w), (this.dCtx = i);
      }
      return (
        y(M, [
          {
            key: "getTitleSubtitleCoords",
            value: function (i) {
              var n = this.w,
                a = 0,
                o = 0,
                l =
                  i === "title"
                    ? n.config.title.floating
                    : n.config.subtitle.floating,
                u = n.globals.dom.baseEl.querySelector(
                  ".apexcharts-".concat(i, "-text")
                );
              if (u !== null && !l) {
                var h = u.getBoundingClientRect();
                (a = h.width),
                  (o = n.globals.axisCharts ? h.height + 5 : h.height);
              }
              return { width: a, height: o };
            },
          },
          {
            key: "getLegendsRect",
            value: function () {
              var i = this.w,
                n = i.globals.dom.elLegendWrap;
              i.config.legend.height ||
                (i.config.legend.position !== "top" &&
                  i.config.legend.position !== "bottom") ||
                (n.style.maxHeight = i.globals.svgHeight / 2 + "px");
              var a = Object.assign({}, L.getBoundingClientRect(n));
              return (
                n !== null && !i.config.legend.floating && i.config.legend.show
                  ? (this.dCtx.lgRect = {
                      x: a.x,
                      y: a.y,
                      height: a.height,
                      width: a.height === 0 ? 0 : a.width,
                    })
                  : (this.dCtx.lgRect = { x: 0, y: 0, height: 0, width: 0 }),
                (i.config.legend.position !== "left" &&
                  i.config.legend.position !== "right") ||
                  (1.5 * this.dCtx.lgRect.width > i.globals.svgWidth &&
                    (this.dCtx.lgRect.width = i.globals.svgWidth / 1.5)),
                this.dCtx.lgRect
              );
            },
          },
          {
            key: "getLargestStringFromMultiArr",
            value: function (i, n) {
              var a = i;
              if (this.w.globals.isMultiLineX) {
                var o = n.map(function (u, h) {
                    return Array.isArray(u) ? u.length : 1;
                  }),
                  l = Math.max.apply(Math, Y(o));
                a = n[o.indexOf(l)];
              }
              return a;
            },
          },
        ]),
        M
      );
    })(),
    Jv = (function () {
      function M(i) {
        f(this, M), (this.w = i.w), (this.dCtx = i);
      }
      return (
        y(M, [
          {
            key: "getxAxisLabelsCoords",
            value: function () {
              var i,
                n = this.w,
                a = n.globals.labels.slice();
              if (
                (n.config.xaxis.convertedCatToNumeric &&
                  a.length === 0 &&
                  (a = n.globals.categoryLabels),
                n.globals.timescaleLabels.length > 0)
              ) {
                var o = this.getxAxisTimeScaleLabelsCoords();
                (i = { width: o.width, height: o.height }),
                  (n.globals.rotateXLabels = !1);
              } else {
                this.dCtx.lgWidthForSideLegends =
                  (n.config.legend.position !== "left" &&
                    n.config.legend.position !== "right") ||
                  n.config.legend.floating
                    ? 0
                    : this.dCtx.lgRect.width;
                var l = n.globals.xLabelFormatter,
                  u = L.getLargestStringFromArr(a),
                  h = this.dCtx.dimHelpers.getLargestStringFromMultiArr(u, a);
                n.globals.isBarHorizontal &&
                  (h = u =
                    n.globals.yAxisScale[0].result.reduce(function (C, P) {
                      return C.length > P.length ? C : P;
                    }, 0));
                var d = new we(this.dCtx.ctx),
                  g = u;
                (u = d.xLabelFormat(l, u, g, {
                  i: void 0,
                  dateFormatter: new xe(this.dCtx.ctx).formatDate,
                  w: n,
                })),
                  (h = d.xLabelFormat(l, h, g, {
                    i: void 0,
                    dateFormatter: new xe(this.dCtx.ctx).formatDate,
                    w: n,
                  })),
                  ((n.config.xaxis.convertedCatToNumeric && u === void 0) ||
                    String(u).trim() === "") &&
                    (h = u = "1");
                var x = new B(this.dCtx.ctx),
                  v = x.getTextRects(u, n.config.xaxis.labels.style.fontSize),
                  w = v;
                if (
                  (u !== h &&
                    (w = x.getTextRects(
                      h,
                      n.config.xaxis.labels.style.fontSize
                    )),
                  ((i = {
                    width: v.width >= w.width ? v.width : w.width,
                    height: v.height >= w.height ? v.height : w.height,
                  }).width *
                    a.length >
                    n.globals.svgWidth -
                      this.dCtx.lgWidthForSideLegends -
                      this.dCtx.yAxisWidth -
                      this.dCtx.gridPad.left -
                      this.dCtx.gridPad.right &&
                    n.config.xaxis.labels.rotate !== 0) ||
                    n.config.xaxis.labels.rotateAlways)
                ) {
                  if (!n.globals.isBarHorizontal) {
                    n.globals.rotateXLabels = !0;
                    var k = function (C) {
                      return x.getTextRects(
                        C,
                        n.config.xaxis.labels.style.fontSize,
                        n.config.xaxis.labels.style.fontFamily,
                        "rotate(".concat(n.config.xaxis.labels.rotate, " 0 0)"),
                        !1
                      );
                    };
                    (v = k(u)),
                      u !== h && (w = k(h)),
                      (i.height =
                        (v.height > w.height ? v.height : w.height) / 1.5),
                      (i.width = v.width > w.width ? v.width : w.width);
                  }
                } else n.globals.rotateXLabels = !1;
              }
              return (
                n.config.xaxis.labels.show || (i = { width: 0, height: 0 }),
                { width: i.width, height: i.height }
              );
            },
          },
          {
            key: "getxAxisGroupLabelsCoords",
            value: function () {
              var i,
                n = this.w;
              if (!n.globals.hasXaxisGroups) return { width: 0, height: 0 };
              var a,
                o =
                  ((i = n.config.xaxis.group.style) === null || i === void 0
                    ? void 0
                    : i.fontSize) || n.config.xaxis.labels.style.fontSize,
                l = n.globals.groups.map(function (v) {
                  return v.title;
                }),
                u = L.getLargestStringFromArr(l),
                h = this.dCtx.dimHelpers.getLargestStringFromMultiArr(u, l),
                d = new B(this.dCtx.ctx),
                g = d.getTextRects(u, o),
                x = g;
              return (
                u !== h && (x = d.getTextRects(h, o)),
                (a = {
                  width: g.width >= x.width ? g.width : x.width,
                  height: g.height >= x.height ? g.height : x.height,
                }),
                n.config.xaxis.labels.show || (a = { width: 0, height: 0 }),
                { width: a.width, height: a.height }
              );
            },
          },
          {
            key: "getxAxisTitleCoords",
            value: function () {
              var i = this.w,
                n = 0,
                a = 0;
              if (i.config.xaxis.title.text !== void 0) {
                var o = new B(this.dCtx.ctx).getTextRects(
                  i.config.xaxis.title.text,
                  i.config.xaxis.title.style.fontSize
                );
                (n = o.width), (a = o.height);
              }
              return { width: n, height: a };
            },
          },
          {
            key: "getxAxisTimeScaleLabelsCoords",
            value: function () {
              var i,
                n = this.w;
              this.dCtx.timescaleLabels = n.globals.timescaleLabels.slice();
              var a = this.dCtx.timescaleLabels.map(function (l) {
                  return l.value;
                }),
                o = a.reduce(function (l, u) {
                  return l === void 0
                    ? (console.error(
                        "You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"
                      ),
                      0)
                    : l.length > u.length
                    ? l
                    : u;
                }, 0);
              return (
                1.05 *
                  (i = new B(this.dCtx.ctx).getTextRects(
                    o,
                    n.config.xaxis.labels.style.fontSize
                  )).width *
                  a.length >
                  n.globals.gridWidth &&
                  n.config.xaxis.labels.rotate !== 0 &&
                  (n.globals.overlappingXLabels = !0),
                i
              );
            },
          },
          {
            key: "additionalPaddingXLabels",
            value: function (i) {
              var n = this,
                a = this.w,
                o = a.globals,
                l = a.config,
                u = l.xaxis.type,
                h = i.width;
              (o.skipLastTimelinelabel = !1), (o.skipFirstTimelinelabel = !1);
              var d = a.config.yaxis[0].opposite && a.globals.isBarHorizontal,
                g = function (x, v) {
                  (l.yaxis.length > 1 &&
                    (function (w) {
                      return o.collapsedSeriesIndices.indexOf(w) !== -1;
                    })(v)) ||
                    (function (w) {
                      if (
                        n.dCtx.timescaleLabels &&
                        n.dCtx.timescaleLabels.length
                      ) {
                        var k = n.dCtx.timescaleLabels[0],
                          C =
                            n.dCtx.timescaleLabels[
                              n.dCtx.timescaleLabels.length - 1
                            ].position +
                            h / 1.75 -
                            n.dCtx.yAxisWidthRight,
                          P = k.position - h / 1.75 + n.dCtx.yAxisWidthLeft,
                          E =
                            a.config.legend.position === "right" &&
                            n.dCtx.lgRect.width > 0
                              ? n.dCtx.lgRect.width
                              : 0;
                        C > o.svgWidth - o.translateX - E &&
                          (o.skipLastTimelinelabel = !0),
                          P <
                            -((w.show && !w.floating) ||
                            (l.chart.type !== "bar" &&
                              l.chart.type !== "candlestick" &&
                              l.chart.type !== "rangeBar" &&
                              l.chart.type !== "boxPlot")
                              ? 10
                              : h / 1.75) && (o.skipFirstTimelinelabel = !0);
                      } else
                        u === "datetime"
                          ? n.dCtx.gridPad.right < h &&
                            !o.rotateXLabels &&
                            (o.skipLastTimelinelabel = !0)
                          : u !== "datetime" &&
                            n.dCtx.gridPad.right <
                              h / 2 - n.dCtx.yAxisWidthRight &&
                            !o.rotateXLabels &&
                            !a.config.xaxis.labels.trim &&
                            (a.config.xaxis.tickPlacement !== "between" ||
                              a.globals.isBarHorizontal) &&
                            (n.dCtx.xPadRight = h / 2 + 1);
                    })(x);
                };
              l.yaxis.forEach(function (x, v) {
                d
                  ? (n.dCtx.gridPad.left < h && (n.dCtx.xPadLeft = h / 2 + 1),
                    (n.dCtx.xPadRight = h / 2 + 1))
                  : g(x, v);
              });
            },
          },
        ]),
        M
      );
    })(),
    ey = (function () {
      function M(i) {
        f(this, M), (this.w = i.w), (this.dCtx = i);
      }
      return (
        y(M, [
          {
            key: "getyAxisLabelsCoords",
            value: function () {
              var i = this,
                n = this.w,
                a = [],
                o = 10,
                l = new ci(this.dCtx.ctx);
              return (
                n.config.yaxis.map(function (u, h) {
                  var d = { seriesIndex: h, dataPointIndex: -1, w: n },
                    g = n.globals.yAxisScale[h],
                    x = 0;
                  if (
                    (!l.isYAxisHidden(h) &&
                      u.labels.show &&
                      u.labels.minWidth !== void 0 &&
                      (x = u.labels.minWidth),
                    !l.isYAxisHidden(h) && u.labels.show && g.result.length)
                  ) {
                    var v = n.globals.yLabelFormatters[h],
                      w = g.niceMin === Number.MIN_VALUE ? 0 : g.niceMin,
                      k = g.result.reduce(function (b, A) {
                        var R, F;
                        return ((R = String(v(b, d))) === null || R === void 0
                          ? void 0
                          : R.length) >
                          ((F = String(v(A, d))) === null || F === void 0
                            ? void 0
                            : F.length)
                          ? b
                          : A;
                      }, w),
                      C = (k = v(k, d));
                    if (
                      ((k !== void 0 && k.length !== 0) || (k = g.niceMax),
                      n.globals.isBarHorizontal)
                    ) {
                      o = 0;
                      var P = n.globals.labels.slice();
                      (k = L.getLargestStringFromArr(P)),
                        (k = v(k, {
                          seriesIndex: h,
                          dataPointIndex: -1,
                          w: n,
                        })),
                        (C = i.dCtx.dimHelpers.getLargestStringFromMultiArr(
                          k,
                          P
                        ));
                    }
                    var E = new B(i.dCtx.ctx),
                      I = "rotate(".concat(u.labels.rotate, " 0 0)"),
                      D = E.getTextRects(
                        k,
                        u.labels.style.fontSize,
                        u.labels.style.fontFamily,
                        I,
                        !1
                      ),
                      p = D;
                    k !== C &&
                      (p = E.getTextRects(
                        C,
                        u.labels.style.fontSize,
                        u.labels.style.fontFamily,
                        I,
                        !1
                      )),
                      a.push({
                        width:
                          (x > p.width || x > D.width
                            ? x
                            : p.width > D.width
                            ? p.width
                            : D.width) + o,
                        height: p.height > D.height ? p.height : D.height,
                      });
                  } else a.push({ width: 0, height: 0 });
                }),
                a
              );
            },
          },
          {
            key: "getyAxisTitleCoords",
            value: function () {
              var i = this,
                n = this.w,
                a = [];
              return (
                n.config.yaxis.map(function (o, l) {
                  if (o.show && o.title.text !== void 0) {
                    var u = new B(i.dCtx.ctx),
                      h = "rotate(".concat(o.title.rotate, " 0 0)"),
                      d = u.getTextRects(
                        o.title.text,
                        o.title.style.fontSize,
                        o.title.style.fontFamily,
                        h,
                        !1
                      );
                    a.push({ width: d.width, height: d.height });
                  } else a.push({ width: 0, height: 0 });
                }),
                a
              );
            },
          },
          {
            key: "getTotalYAxisWidth",
            value: function () {
              var i = this.w,
                n = 0,
                a = 0,
                o = 0,
                l = i.globals.yAxisScale.length > 1 ? 10 : 0,
                u = new ci(this.dCtx.ctx),
                h = function (d, g) {
                  var x = i.config.yaxis[g].floating,
                    v = 0;
                  d.width > 0 && !x
                    ? ((v = d.width + l),
                      (function (w) {
                        return i.globals.ignoreYAxisIndexes.indexOf(w) > -1;
                      })(g) && (v = v - d.width - l))
                    : (v = x || u.isYAxisHidden(g) ? 0 : 5),
                    i.config.yaxis[g].opposite ? (o += v) : (a += v),
                    (n += v);
                };
              return (
                i.globals.yLabelsCoords.map(function (d, g) {
                  h(d, g);
                }),
                i.globals.yTitleCoords.map(function (d, g) {
                  h(d, g);
                }),
                i.globals.isBarHorizontal &&
                  !i.config.yaxis[0].floating &&
                  (n =
                    i.globals.yLabelsCoords[0].width +
                    i.globals.yTitleCoords[0].width +
                    15),
                (this.dCtx.yAxisWidthLeft = a),
                (this.dCtx.yAxisWidthRight = o),
                n
              );
            },
          },
        ]),
        M
      );
    })(),
    ty = (function () {
      function M(i) {
        f(this, M), (this.w = i.w), (this.dCtx = i);
      }
      return (
        y(M, [
          {
            key: "gridPadForColumnsInNumericAxis",
            value: function (i) {
              var n = this.w;
              if (n.globals.noData || n.globals.allSeriesCollapsed) return 0;
              var a = function (x) {
                  return (
                    x === "bar" ||
                    x === "rangeBar" ||
                    x === "candlestick" ||
                    x === "boxPlot"
                  );
                },
                o = n.config.chart.type,
                l = 0,
                u = a(o) ? n.config.series.length : 1;
              if (
                (n.globals.comboBarCount > 0 && (u = n.globals.comboBarCount),
                n.globals.collapsedSeries.forEach(function (x) {
                  a(x.type) && (u -= 1);
                }),
                n.config.chart.stacked && (u = 1),
                (a(o) || n.globals.comboBarCount > 0) &&
                  n.globals.isXNumeric &&
                  !n.globals.isBarHorizontal &&
                  u > 0)
              ) {
                var h,
                  d,
                  g = Math.abs(n.globals.initialMaxX - n.globals.initialMinX);
                g <= 3 && (g = n.globals.dataPoints),
                  (h = g / i),
                  n.globals.minXDiff &&
                    n.globals.minXDiff / h > 0 &&
                    (d = n.globals.minXDiff / h),
                  d > i / 2 && (d /= 2),
                  (l =
                    ((d / u) *
                      parseInt(n.config.plotOptions.bar.columnWidth, 10)) /
                    100) < 1 && (l = 1),
                  (l = l / (u > 1 ? 1 : 1.5) + 5),
                  (n.globals.barPadForNumericAxis = l);
              }
              return l;
            },
          },
          {
            key: "gridPadFortitleSubtitle",
            value: function () {
              var i = this,
                n = this.w,
                a = n.globals,
                o = this.dCtx.isSparkline || !n.globals.axisCharts ? 0 : 10;
              ["title", "subtitle"].forEach(function (h) {
                n.config[h].text !== void 0
                  ? (o += n.config[h].margin)
                  : (o += i.dCtx.isSparkline || !n.globals.axisCharts ? 0 : 5);
              }),
                !n.config.legend.show ||
                  n.config.legend.position !== "bottom" ||
                  n.config.legend.floating ||
                  n.globals.axisCharts ||
                  (o += 10);
              var l = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
                u = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
              (a.gridHeight = a.gridHeight - l.height - u.height - o),
                (a.translateY = a.translateY + l.height + u.height + o);
            },
          },
          {
            key: "setGridXPosForDualYAxis",
            value: function (i, n) {
              var a = this.w,
                o = new ci(this.dCtx.ctx);
              a.config.yaxis.map(function (l, u) {
                a.globals.ignoreYAxisIndexes.indexOf(u) !== -1 ||
                  l.floating ||
                  o.isYAxisHidden(u) ||
                  (l.opposite &&
                    (a.globals.translateX =
                      a.globals.translateX -
                      (n[u].width + i[u].width) -
                      parseInt(a.config.yaxis[u].labels.style.fontSize, 10) /
                        1.2 -
                      12),
                  a.globals.translateX < 2 && (a.globals.translateX = 2));
              });
            },
          },
        ]),
        M
      );
    })(),
    Ca = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.lgRect = {}),
          (this.yAxisWidth = 0),
          (this.yAxisWidthLeft = 0),
          (this.yAxisWidthRight = 0),
          (this.xAxisHeight = 0),
          (this.isSparkline = this.w.config.chart.sparkline.enabled),
          (this.dimHelpers = new Qv(this)),
          (this.dimYAxis = new ey(this)),
          (this.dimXAxis = new Jv(this)),
          (this.dimGrid = new ty(this)),
          (this.lgWidthForSideLegends = 0),
          (this.gridPad = this.w.config.grid.padding),
          (this.xPadRight = 0),
          (this.xPadLeft = 0);
      }
      return (
        y(M, [
          {
            key: "plotCoords",
            value: function () {
              var i = this,
                n = this.w,
                a = n.globals;
              (this.lgRect = this.dimHelpers.getLegendsRect()),
                this.isSparkline &&
                  ((n.config.markers.discrete.length > 0 ||
                    n.config.markers.size > 0) &&
                    Object.entries(this.gridPad).forEach(function (l) {
                      var u = V(l, 2),
                        h = u[0],
                        d = u[1];
                      i.gridPad[h] = Math.max(
                        d,
                        i.w.globals.markers.largestSize / 1.5
                      );
                    }),
                  (this.gridPad.top = Math.max(
                    n.config.stroke.width / 2,
                    this.gridPad.top
                  )),
                  (this.gridPad.bottom = Math.max(
                    n.config.stroke.width / 2,
                    this.gridPad.bottom
                  ))),
                a.axisCharts
                  ? this.setDimensionsForAxisCharts()
                  : this.setDimensionsForNonAxisCharts(),
                this.dimGrid.gridPadFortitleSubtitle(),
                (a.gridHeight =
                  a.gridHeight - this.gridPad.top - this.gridPad.bottom),
                (a.gridWidth =
                  a.gridWidth -
                  this.gridPad.left -
                  this.gridPad.right -
                  this.xPadRight -
                  this.xPadLeft);
              var o = this.dimGrid.gridPadForColumnsInNumericAxis(a.gridWidth);
              (a.gridWidth = a.gridWidth - 2 * o),
                (a.translateX =
                  a.translateX +
                  this.gridPad.left +
                  this.xPadLeft +
                  (o > 0 ? o + 4 : 0)),
                (a.translateY = a.translateY + this.gridPad.top);
            },
          },
          {
            key: "setDimensionsForAxisCharts",
            value: function () {
              var i = this,
                n = this.w,
                a = n.globals,
                o = this.dimYAxis.getyAxisLabelsCoords(),
                l = this.dimYAxis.getyAxisTitleCoords();
              (n.globals.yLabelsCoords = []),
                (n.globals.yTitleCoords = []),
                n.config.yaxis.map(function (k, C) {
                  n.globals.yLabelsCoords.push({ width: o[C].width, index: C }),
                    n.globals.yTitleCoords.push({
                      width: l[C].width,
                      index: C,
                    });
                }),
                (this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth());
              var u = this.dimXAxis.getxAxisLabelsCoords(),
                h = this.dimXAxis.getxAxisGroupLabelsCoords(),
                d = this.dimXAxis.getxAxisTitleCoords();
              this.conditionalChecksForAxisCoords(u, d, h),
                (a.translateXAxisY = n.globals.rotateXLabels
                  ? this.xAxisHeight / 8
                  : -4),
                (a.translateXAxisX =
                  n.globals.rotateXLabels &&
                  n.globals.isXNumeric &&
                  n.config.xaxis.labels.rotate <= -45
                    ? -this.xAxisWidth / 4
                    : 0),
                n.globals.isBarHorizontal &&
                  ((a.rotateXLabels = !1),
                  (a.translateXAxisY =
                    (parseInt(n.config.xaxis.labels.style.fontSize, 10) / 1.5) *
                    -1)),
                (a.translateXAxisY =
                  a.translateXAxisY + n.config.xaxis.labels.offsetY),
                (a.translateXAxisX =
                  a.translateXAxisX + n.config.xaxis.labels.offsetX);
              var g = this.yAxisWidth,
                x = this.xAxisHeight;
              (a.xAxisLabelsHeight = this.xAxisHeight - d.height),
                (a.xAxisGroupLabelsHeight = a.xAxisLabelsHeight - u.height),
                (a.xAxisLabelsWidth = this.xAxisWidth),
                (a.xAxisHeight = this.xAxisHeight);
              var v = 10;
              (n.config.chart.type === "radar" || this.isSparkline) &&
                ((g = 0), (x = a.goldenPadding)),
                this.isSparkline && (this.lgRect = { height: 0, width: 0 }),
                (this.isSparkline || n.config.chart.type === "treemap") &&
                  ((g = 0), (x = 0), (v = 0)),
                this.isSparkline || this.dimXAxis.additionalPaddingXLabels(u);
              var w = function () {
                (a.translateX = g),
                  (a.gridHeight =
                    a.svgHeight -
                    i.lgRect.height -
                    x -
                    (i.isSparkline || n.config.chart.type === "treemap"
                      ? 0
                      : n.globals.rotateXLabels
                      ? 10
                      : 15)),
                  (a.gridWidth = a.svgWidth - g);
              };
              switch (
                (n.config.xaxis.position === "top" &&
                  (v = a.xAxisHeight - n.config.xaxis.axisTicks.height - 5),
                n.config.legend.position)
              ) {
                case "bottom":
                  (a.translateY = v), w();
                  break;
                case "top":
                  (a.translateY = this.lgRect.height + v), w();
                  break;
                case "left":
                  (a.translateY = v),
                    (a.translateX = this.lgRect.width + g),
                    (a.gridHeight = a.svgHeight - x - 12),
                    (a.gridWidth = a.svgWidth - this.lgRect.width - g);
                  break;
                case "right":
                  (a.translateY = v),
                    (a.translateX = g),
                    (a.gridHeight = a.svgHeight - x - 12),
                    (a.gridWidth = a.svgWidth - this.lgRect.width - g - 5);
                  break;
                default:
                  throw new Error("Legend position not supported");
              }
              this.dimGrid.setGridXPosForDualYAxis(l, o),
                new Ro(this.ctx).setYAxisXPosition(o, l);
            },
          },
          {
            key: "setDimensionsForNonAxisCharts",
            value: function () {
              var i = this.w,
                n = i.globals,
                a = i.config,
                o = 0;
              i.config.legend.show && !i.config.legend.floating && (o = 20);
              var l =
                  a.chart.type === "pie" ||
                  a.chart.type === "polarArea" ||
                  a.chart.type === "donut"
                    ? "pie"
                    : "radialBar",
                u = a.plotOptions[l].offsetY,
                h = a.plotOptions[l].offsetX;
              if (!a.legend.show || a.legend.floating)
                return (
                  (n.gridHeight =
                    n.svgHeight - a.grid.padding.left + a.grid.padding.right),
                  (n.gridWidth = n.gridHeight),
                  (n.translateY = u),
                  void (n.translateX = h + (n.svgWidth - n.gridWidth) / 2)
                );
              switch (a.legend.position) {
                case "bottom":
                  (n.gridHeight =
                    n.svgHeight - this.lgRect.height - n.goldenPadding),
                    (n.gridWidth = n.svgWidth),
                    (n.translateY = u - 10),
                    (n.translateX = h + (n.svgWidth - n.gridWidth) / 2);
                  break;
                case "top":
                  (n.gridHeight =
                    n.svgHeight - this.lgRect.height - n.goldenPadding),
                    (n.gridWidth = n.svgWidth),
                    (n.translateY = this.lgRect.height + u + 10),
                    (n.translateX = h + (n.svgWidth - n.gridWidth) / 2);
                  break;
                case "left":
                  (n.gridWidth = n.svgWidth - this.lgRect.width - o),
                    (n.gridHeight =
                      a.chart.height !== "auto" ? n.svgHeight : n.gridWidth),
                    (n.translateY = u),
                    (n.translateX = h + this.lgRect.width + o);
                  break;
                case "right":
                  (n.gridWidth = n.svgWidth - this.lgRect.width - o - 5),
                    (n.gridHeight =
                      a.chart.height !== "auto" ? n.svgHeight : n.gridWidth),
                    (n.translateY = u),
                    (n.translateX = h + 10);
                  break;
                default:
                  throw new Error("Legend position not supported");
              }
            },
          },
          {
            key: "conditionalChecksForAxisCoords",
            value: function (i, n, a) {
              var o = this.w,
                l = o.globals.hasXaxisGroups ? 2 : 1,
                u = a.height + i.height + n.height,
                h = o.globals.isMultiLineX ? 1.2 : o.globals.LINE_HEIGHT_RATIO,
                d = o.globals.rotateXLabels ? 22 : 10,
                g =
                  o.globals.rotateXLabels &&
                  o.config.legend.position === "bottom"
                    ? 10
                    : 0;
              (this.xAxisHeight = u * h + l * d + g),
                (this.xAxisWidth = i.width),
                this.xAxisHeight - n.height > o.config.xaxis.labels.maxHeight &&
                  (this.xAxisHeight = o.config.xaxis.labels.maxHeight),
                o.config.xaxis.labels.minHeight &&
                  this.xAxisHeight < o.config.xaxis.labels.minHeight &&
                  (this.xAxisHeight = o.config.xaxis.labels.minHeight),
                o.config.xaxis.floating && (this.xAxisHeight = 0);
              var x = 0,
                v = 0;
              o.config.yaxis.forEach(function (w) {
                (x += w.labels.minWidth), (v += w.labels.maxWidth);
              }),
                this.yAxisWidth < x && (this.yAxisWidth = x),
                this.yAxisWidth > v && (this.yAxisWidth = v);
            },
          },
        ]),
        M
      );
    })(),
    iy = (function () {
      function M(i) {
        f(this, M), (this.w = i.w), (this.lgCtx = i);
      }
      return (
        y(M, [
          {
            key: "getLegendStyles",
            value: function () {
              var i = document.createElement("style");
              i.setAttribute("type", "text/css");
              var n = document.createTextNode(`	
    	
      .apexcharts-legend {	
        display: flex;	
        overflow: auto;	
        padding: 0 10px;	
      }	
      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {	
        flex-wrap: wrap	
      }	
      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        flex-direction: column;	
        bottom: 0;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        justify-content: flex-start;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {	
        justify-content: center;  	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {	
        justify-content: flex-end;	
      }	
      .apexcharts-legend-series {	
        cursor: pointer;	
        line-height: normal;	
      }	
      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{	
        display: flex;	
        align-items: center;	
      }	
      .apexcharts-legend-text {	
        position: relative;	
        font-size: 14px;	
      }	
      .apexcharts-legend-text *, .apexcharts-legend-marker * {	
        pointer-events: none;	
      }	
      .apexcharts-legend-marker {	
        position: relative;	
        display: inline-block;	
        cursor: pointer;	
        margin-right: 3px;	
        border-style: solid;
      }	
      	
      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{	
        display: inline-block;	
      }	
      .apexcharts-legend-series.apexcharts-no-click {	
        cursor: auto;	
      }	
      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {	
        display: none !important;	
      }	
      .apexcharts-inactive-legend {	
        opacity: 0.45;	
      }`);
              return i.appendChild(n), i;
            },
          },
          {
            key: "getLegendBBox",
            value: function () {
              var i = this.w.globals.dom.baseEl
                  .querySelector(".apexcharts-legend")
                  .getBoundingClientRect(),
                n = i.width;
              return { clwh: i.height, clww: n };
            },
          },
          {
            key: "appendToForeignObject",
            value: function () {
              this.w.globals.dom.elLegendForeign.appendChild(
                this.getLegendStyles()
              );
            },
          },
          {
            key: "toggleDataSeries",
            value: function (i, n) {
              var a = this,
                o = this.w;
              if (o.globals.axisCharts || o.config.chart.type === "radialBar") {
                o.globals.resized = !0;
                var l = null,
                  u = null;
                (o.globals.risingSeries = []),
                  o.globals.axisCharts
                    ? ((l = o.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(i, "']")
                      )),
                      (u = parseInt(l.getAttribute("data:realIndex"), 10)))
                    : ((l = o.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(i + 1, "']")
                      )),
                      (u = parseInt(l.getAttribute("rel"), 10) - 1)),
                  n
                    ? [
                        {
                          cs: o.globals.collapsedSeries,
                          csi: o.globals.collapsedSeriesIndices,
                        },
                        {
                          cs: o.globals.ancillaryCollapsedSeries,
                          csi: o.globals.ancillaryCollapsedSeriesIndices,
                        },
                      ].forEach(function (x) {
                        a.riseCollapsedSeries(x.cs, x.csi, u);
                      })
                    : this.hideSeries({ seriesEl: l, realIndex: u });
              } else {
                var h = o.globals.dom.Paper.select(
                    " .apexcharts-series[rel='".concat(i + 1, "'] path")
                  ),
                  d = o.config.chart.type;
                if (d === "pie" || d === "polarArea" || d === "donut") {
                  var g = o.config.plotOptions.pie.donut.labels;
                  new B(this.lgCtx.ctx).pathMouseDown(h.members[0], null),
                    this.lgCtx.ctx.pie.printDataLabelsInner(
                      h.members[0].node,
                      g
                    );
                }
                h.fire("click");
              }
            },
          },
          {
            key: "hideSeries",
            value: function (i) {
              var n = i.seriesEl,
                a = i.realIndex,
                o = this.w,
                l = L.clone(o.config.series);
              if (o.globals.axisCharts) {
                var u = !1;
                if (
                  (o.config.yaxis[a] &&
                    o.config.yaxis[a].show &&
                    o.config.yaxis[a].showAlways &&
                    ((u = !0),
                    o.globals.ancillaryCollapsedSeriesIndices.indexOf(a) < 0 &&
                      (o.globals.ancillaryCollapsedSeries.push({
                        index: a,
                        data: l[a].data.slice(),
                        type: n.parentNode.className.baseVal.split("-")[1],
                      }),
                      o.globals.ancillaryCollapsedSeriesIndices.push(a))),
                  !u)
                ) {
                  o.globals.collapsedSeries.push({
                    index: a,
                    data: l[a].data.slice(),
                    type: n.parentNode.className.baseVal.split("-")[1],
                  }),
                    o.globals.collapsedSeriesIndices.push(a);
                  var h = o.globals.risingSeries.indexOf(a);
                  o.globals.risingSeries.splice(h, 1);
                }
              } else
                o.globals.collapsedSeries.push({ index: a, data: l[a] }),
                  o.globals.collapsedSeriesIndices.push(a);
              for (var d = n.childNodes, g = 0; g < d.length; g++)
                d[g].classList.contains("apexcharts-series-markers-wrap") &&
                  (d[g].classList.contains("apexcharts-hide")
                    ? d[g].classList.remove("apexcharts-hide")
                    : d[g].classList.add("apexcharts-hide"));
              (o.globals.allSeriesCollapsed =
                o.globals.collapsedSeries.length === o.config.series.length),
                (l = this._getSeriesBasedOnCollapsedState(l)),
                this.lgCtx.ctx.updateHelpers._updateSeries(
                  l,
                  o.config.chart.animations.dynamicAnimation.enabled
                );
            },
          },
          {
            key: "riseCollapsedSeries",
            value: function (i, n, a) {
              var o = this.w,
                l = L.clone(o.config.series);
              if (i.length > 0) {
                for (var u = 0; u < i.length; u++)
                  i[u].index === a &&
                    (o.globals.axisCharts
                      ? ((l[a].data = i[u].data.slice()),
                        i.splice(u, 1),
                        n.splice(u, 1),
                        o.globals.risingSeries.push(a))
                      : ((l[a] = i[u].data),
                        i.splice(u, 1),
                        n.splice(u, 1),
                        o.globals.risingSeries.push(a)));
                (l = this._getSeriesBasedOnCollapsedState(l)),
                  this.lgCtx.ctx.updateHelpers._updateSeries(
                    l,
                    o.config.chart.animations.dynamicAnimation.enabled
                  );
              }
            },
          },
          {
            key: "_getSeriesBasedOnCollapsedState",
            value: function (i) {
              var n = this.w;
              return (
                n.globals.axisCharts
                  ? i.forEach(function (a, o) {
                      n.globals.collapsedSeriesIndices.indexOf(o) > -1 &&
                        (i[o].data = []);
                    })
                  : i.forEach(function (a, o) {
                      n.globals.collapsedSeriesIndices.indexOf(o) > -1 &&
                        (i[o] = 0);
                    }),
                i
              );
            },
          },
        ]),
        M
      );
    })(),
    Oh = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.onLegendClick = this.onLegendClick.bind(this)),
          (this.onLegendHovered = this.onLegendHovered.bind(this)),
          (this.isBarsDistributed =
            this.w.config.chart.type === "bar" &&
            this.w.config.plotOptions.bar.distributed &&
            this.w.config.series.length === 1),
          (this.legendHelpers = new iy(this));
      }
      return (
        y(M, [
          {
            key: "init",
            value: function () {
              var i = this.w,
                n = i.globals,
                a = i.config;
              if (
                ((a.legend.showForSingleSeries && n.series.length === 1) ||
                  this.isBarsDistributed ||
                  n.series.length > 1 ||
                  !n.axisCharts) &&
                a.legend.show
              ) {
                for (; n.dom.elLegendWrap.firstChild; )
                  n.dom.elLegendWrap.removeChild(n.dom.elLegendWrap.firstChild);
                this.drawLegends(),
                  L.isIE11()
                    ? document
                        .getElementsByTagName("head")[0]
                        .appendChild(this.legendHelpers.getLegendStyles())
                    : this.legendHelpers.appendToForeignObject(),
                  a.legend.position === "bottom" || a.legend.position === "top"
                    ? this.legendAlignHorizontal()
                    : (a.legend.position !== "right" &&
                        a.legend.position !== "left") ||
                      this.legendAlignVertical();
              }
            },
          },
          {
            key: "drawLegends",
            value: function () {
              var i = this,
                n = this.w,
                a = n.config.legend.fontFamily,
                o = n.globals.seriesNames,
                l = n.globals.colors.slice();
              if (n.config.chart.type === "heatmap") {
                var u = n.config.plotOptions.heatmap.colorScale.ranges;
                (o = u.map(function (J) {
                  return J.name ? J.name : J.from + " - " + J.to;
                })),
                  (l = u.map(function (J) {
                    return J.color;
                  }));
              } else this.isBarsDistributed && (o = n.globals.labels.slice());
              n.config.legend.customLegendItems.length &&
                (o = n.config.legend.customLegendItems);
              for (
                var h = n.globals.legendFormatter,
                  d = n.config.legend.inverseOrder,
                  g = d ? o.length - 1 : 0;
                d ? g >= 0 : g <= o.length - 1;
                d ? g-- : g++
              ) {
                var x,
                  v = h(o[g], { seriesIndex: g, w: n }),
                  w = !1,
                  k = !1;
                if (n.globals.collapsedSeries.length > 0)
                  for (var C = 0; C < n.globals.collapsedSeries.length; C++)
                    n.globals.collapsedSeries[C].index === g && (w = !0);
                if (n.globals.ancillaryCollapsedSeriesIndices.length > 0)
                  for (
                    var P = 0;
                    P < n.globals.ancillaryCollapsedSeriesIndices.length;
                    P++
                  )
                    n.globals.ancillaryCollapsedSeriesIndices[P] === g &&
                      (k = !0);
                var E = document.createElement("span");
                E.classList.add("apexcharts-legend-marker");
                var I = n.config.legend.markers.offsetX,
                  D = n.config.legend.markers.offsetY,
                  p = n.config.legend.markers.height,
                  b = n.config.legend.markers.width,
                  A = n.config.legend.markers.strokeWidth,
                  R = n.config.legend.markers.strokeColor,
                  F = n.config.legend.markers.radius,
                  _ = E.style;
                (_.background = l[g]),
                  (_.color = l[g]),
                  _.setProperty("background", l[g], "important"),
                  n.config.legend.markers.fillColors &&
                    n.config.legend.markers.fillColors[g] &&
                    (_.background = n.config.legend.markers.fillColors[g]),
                  n.globals.seriesColors[g] !== void 0 &&
                    ((_.background = n.globals.seriesColors[g]),
                    (_.color = n.globals.seriesColors[g])),
                  (_.height = Array.isArray(p)
                    ? parseFloat(p[g]) + "px"
                    : parseFloat(p) + "px"),
                  (_.width = Array.isArray(b)
                    ? parseFloat(b[g]) + "px"
                    : parseFloat(b) + "px"),
                  (_.left =
                    (Array.isArray(I) ? parseFloat(I[g]) : parseFloat(I)) +
                    "px"),
                  (_.top =
                    (Array.isArray(D) ? parseFloat(D[g]) : parseFloat(D)) +
                    "px"),
                  (_.borderWidth = Array.isArray(A) ? A[g] : A),
                  (_.borderColor = Array.isArray(R) ? R[g] : R),
                  (_.borderRadius = Array.isArray(F)
                    ? parseFloat(F[g]) + "px"
                    : parseFloat(F) + "px"),
                  n.config.legend.markers.customHTML &&
                    (Array.isArray(n.config.legend.markers.customHTML)
                      ? n.config.legend.markers.customHTML[g] &&
                        (E.innerHTML = n.config.legend.markers.customHTML[g]())
                      : (E.innerHTML = n.config.legend.markers.customHTML())),
                  B.setAttrs(E, { rel: g + 1, "data:collapsed": w || k }),
                  (w || k) && E.classList.add("apexcharts-inactive-legend");
                var G = document.createElement("div"),
                  W = document.createElement("span");
                W.classList.add("apexcharts-legend-text"),
                  (W.innerHTML = Array.isArray(v) ? v.join(" ") : v);
                var Z = n.config.legend.labels.useSeriesColors
                  ? n.globals.colors[g]
                  : Array.isArray(n.config.legend.labels.colors)
                  ? (x = n.config.legend.labels.colors) === null || x === void 0
                    ? void 0
                    : x[g]
                  : n.config.legend.labels.colors;
                Z || (Z = n.config.chart.foreColor),
                  (W.style.color = Z),
                  (W.style.fontSize =
                    parseFloat(n.config.legend.fontSize) + "px"),
                  (W.style.fontWeight = n.config.legend.fontWeight),
                  (W.style.fontFamily = a || n.config.chart.fontFamily),
                  B.setAttrs(W, {
                    rel: g + 1,
                    i: g,
                    "data:default-text": encodeURIComponent(v),
                    "data:collapsed": w || k,
                  }),
                  G.appendChild(E),
                  G.appendChild(W);
                var ee = new K(this.ctx);
                n.config.legend.showForZeroSeries ||
                  (ee.getSeriesTotalByIndex(g) === 0 &&
                    ee.seriesHaveSameValues(g) &&
                    !ee.isSeriesNull(g) &&
                    n.globals.collapsedSeriesIndices.indexOf(g) === -1 &&
                    n.globals.ancillaryCollapsedSeriesIndices.indexOf(g) ===
                      -1 &&
                    G.classList.add("apexcharts-hidden-zero-series")),
                  n.config.legend.showForNullSeries ||
                    (ee.isSeriesNull(g) &&
                      n.globals.collapsedSeriesIndices.indexOf(g) === -1 &&
                      n.globals.ancillaryCollapsedSeriesIndices.indexOf(g) ===
                        -1 &&
                      G.classList.add("apexcharts-hidden-null-series")),
                  n.globals.dom.elLegendWrap.appendChild(G),
                  n.globals.dom.elLegendWrap.classList.add(
                    "apexcharts-align-".concat(n.config.legend.horizontalAlign)
                  ),
                  n.globals.dom.elLegendWrap.classList.add(
                    "apx-legend-position-" + n.config.legend.position
                  ),
                  G.classList.add("apexcharts-legend-series"),
                  (G.style.margin = ""
                    .concat(n.config.legend.itemMargin.vertical, "px ")
                    .concat(n.config.legend.itemMargin.horizontal, "px")),
                  (n.globals.dom.elLegendWrap.style.width = n.config.legend
                    .width
                    ? n.config.legend.width + "px"
                    : ""),
                  (n.globals.dom.elLegendWrap.style.height = n.config.legend
                    .height
                    ? n.config.legend.height + "px"
                    : ""),
                  B.setAttrs(G, {
                    rel: g + 1,
                    seriesName: L.escapeString(o[g]),
                    "data:collapsed": w || k,
                  }),
                  (w || k) && G.classList.add("apexcharts-inactive-legend"),
                  n.config.legend.onItemClick.toggleDataSeries ||
                    G.classList.add("apexcharts-no-click");
              }
              n.globals.dom.elWrap.addEventListener(
                "click",
                i.onLegendClick,
                !0
              ),
                n.config.legend.onItemHover.highlightDataSeries &&
                  n.config.legend.customLegendItems.length === 0 &&
                  (n.globals.dom.elWrap.addEventListener(
                    "mousemove",
                    i.onLegendHovered,
                    !0
                  ),
                  n.globals.dom.elWrap.addEventListener(
                    "mouseout",
                    i.onLegendHovered,
                    !0
                  ));
            },
          },
          {
            key: "setLegendWrapXY",
            value: function (i, n) {
              var a = this.w,
                o = a.globals.dom.elLegendWrap,
                l = o.getBoundingClientRect(),
                u = 0,
                h = 0;
              if (a.config.legend.position === "bottom")
                h += a.globals.svgHeight - l.height / 2;
              else if (a.config.legend.position === "top") {
                var d = new Ca(this.ctx),
                  g = d.dimHelpers.getTitleSubtitleCoords("title").height,
                  x = d.dimHelpers.getTitleSubtitleCoords("subtitle").height;
                h = h + (g > 0 ? g - 10 : 0) + (x > 0 ? x - 10 : 0);
              }
              (o.style.position = "absolute"),
                (u = u + i + a.config.legend.offsetX),
                (h = h + n + a.config.legend.offsetY),
                (o.style.left = u + "px"),
                (o.style.top = h + "px"),
                a.config.legend.position === "bottom"
                  ? ((o.style.top = "auto"),
                    (o.style.bottom = 5 - a.config.legend.offsetY + "px"))
                  : a.config.legend.position === "right" &&
                    ((o.style.left = "auto"),
                    (o.style.right = 25 + a.config.legend.offsetX + "px")),
                ["width", "height"].forEach(function (v) {
                  o.style[v] &&
                    (o.style[v] = parseInt(a.config.legend[v], 10) + "px");
                });
            },
          },
          {
            key: "legendAlignHorizontal",
            value: function () {
              var i = this.w;
              i.globals.dom.elLegendWrap.style.right = 0;
              var n = this.legendHelpers.getLegendBBox(),
                a = new Ca(this.ctx),
                o = a.dimHelpers.getTitleSubtitleCoords("title"),
                l = a.dimHelpers.getTitleSubtitleCoords("subtitle"),
                u = 0;
              i.config.legend.position === "bottom"
                ? (u = -n.clwh / 1.8)
                : i.config.legend.position === "top" &&
                  (u =
                    o.height +
                    l.height +
                    i.config.title.margin +
                    i.config.subtitle.margin -
                    10),
                this.setLegendWrapXY(20, u);
            },
          },
          {
            key: "legendAlignVertical",
            value: function () {
              var i = this.w,
                n = this.legendHelpers.getLegendBBox(),
                a = 0;
              i.config.legend.position === "left" && (a = 20),
                i.config.legend.position === "right" &&
                  (a = i.globals.svgWidth - n.clww - 10),
                this.setLegendWrapXY(a, 20);
            },
          },
          {
            key: "onLegendHovered",
            value: function (i) {
              var n = this.w,
                a =
                  i.target.classList.contains("apexcharts-legend-series") ||
                  i.target.classList.contains("apexcharts-legend-text") ||
                  i.target.classList.contains("apexcharts-legend-marker");
              if (n.config.chart.type === "heatmap" || this.isBarsDistributed) {
                if (a) {
                  var o = parseInt(i.target.getAttribute("rel"), 10) - 1;
                  this.ctx.events.fireEvent("legendHover", [
                    this.ctx,
                    o,
                    this.w,
                  ]),
                    new Re(this.ctx).highlightRangeInSeries(i, i.target);
                }
              } else
                !i.target.classList.contains("apexcharts-inactive-legend") &&
                  a &&
                  new Re(this.ctx).toggleSeriesOnHover(i, i.target);
            },
          },
          {
            key: "onLegendClick",
            value: function (i) {
              var n = this.w;
              if (
                !n.config.legend.customLegendItems.length &&
                (i.target.classList.contains("apexcharts-legend-series") ||
                  i.target.classList.contains("apexcharts-legend-text") ||
                  i.target.classList.contains("apexcharts-legend-marker"))
              ) {
                var a = parseInt(i.target.getAttribute("rel"), 10) - 1,
                  o = i.target.getAttribute("data:collapsed") === "true",
                  l = this.w.config.chart.events.legendClick;
                typeof l == "function" && l(this.ctx, a, this.w),
                  this.ctx.events.fireEvent("legendClick", [
                    this.ctx,
                    a,
                    this.w,
                  ]);
                var u = this.w.config.legend.markers.onClick;
                typeof u == "function" &&
                  i.target.classList.contains("apexcharts-legend-marker") &&
                  (u(this.ctx, a, this.w),
                  this.ctx.events.fireEvent("legendMarkerClick", [
                    this.ctx,
                    a,
                    this.w,
                  ])),
                  n.config.chart.type !== "treemap" &&
                    n.config.chart.type !== "heatmap" &&
                    !this.isBarsDistributed &&
                    n.config.legend.onItemClick.toggleDataSeries &&
                    this.legendHelpers.toggleDataSeries(a, o);
              }
            },
          },
        ]),
        M
      );
    })(),
    Rh = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
        var n = this.w;
        (this.ev = this.w.config.chart.events),
          (this.selectedClass = "apexcharts-selected"),
          (this.localeValues = this.w.globals.locale.toolbar),
          (this.minX = n.globals.minX),
          (this.maxX = n.globals.maxX);
      }
      return (
        y(M, [
          {
            key: "createToolbar",
            value: function () {
              var i = this,
                n = this.w,
                a = function () {
                  return document.createElement("div");
                },
                o = a();
              if (
                (o.setAttribute("class", "apexcharts-toolbar"),
                (o.style.top = n.config.chart.toolbar.offsetY + "px"),
                (o.style.right = 3 - n.config.chart.toolbar.offsetX + "px"),
                n.globals.dom.elWrap.appendChild(o),
                (this.elZoom = a()),
                (this.elZoomIn = a()),
                (this.elZoomOut = a()),
                (this.elPan = a()),
                (this.elSelection = a()),
                (this.elZoomReset = a()),
                (this.elMenuIcon = a()),
                (this.elMenu = a()),
                (this.elCustomIcons = []),
                (this.t = n.config.chart.toolbar.tools),
                Array.isArray(this.t.customIcons))
              )
                for (var l = 0; l < this.t.customIcons.length; l++)
                  this.elCustomIcons.push(a());
              var u = [],
                h = function (v, w, k) {
                  var C = v.toLowerCase();
                  i.t[C] &&
                    n.config.chart.zoom.enabled &&
                    u.push({
                      el: w,
                      icon: typeof i.t[C] == "string" ? i.t[C] : k,
                      title: i.localeValues[v],
                      class: "apexcharts-".concat(C, "-icon"),
                    });
                };
              h(
                "zoomIn",
                this.elZoomIn,
                `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`
              ),
                h(
                  "zoomOut",
                  this.elZoomOut,
                  `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`
                );
              var d = function (v) {
                i.t[v] &&
                  n.config.chart[v].enabled &&
                  u.push({
                    el: v === "zoom" ? i.elZoom : i.elSelection,
                    icon:
                      typeof i.t[v] == "string"
                        ? i.t[v]
                        : v === "zoom"
                        ? `<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
    <path d="M0 0h24v24H0V0z" fill="none"/>
    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>
</svg>`
                        : `<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>
</svg>`,
                    title:
                      i.localeValues[
                        v === "zoom" ? "selectionZoom" : "selection"
                      ],
                    class: n.globals.isTouchDevice
                      ? "apexcharts-element-hidden"
                      : "apexcharts-".concat(v, "-icon"),
                  });
              };
              d("zoom"),
                d("selection"),
                this.t.pan &&
                  n.config.chart.zoom.enabled &&
                  u.push({
                    el: this.elPan,
                    icon:
                      typeof this.t.pan == "string"
                        ? this.t.pan
                        : `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <defs>
        <path d="M0 0h24v24H0z" id="a"/>
    </defs>
    <clipPath id="b">
        <use overflow="visible" xlink:href="#a"/>
    </clipPath>
    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>
</svg>`,
                    title: this.localeValues.pan,
                    class: n.globals.isTouchDevice
                      ? "apexcharts-element-hidden"
                      : "apexcharts-pan-icon",
                  }),
                h(
                  "reset",
                  this.elZoomReset,
                  `<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
    <path d="M0 0h24v24H0z" fill="none"/>
</svg>`
                ),
                this.t.download &&
                  u.push({
                    el: this.elMenuIcon,
                    icon:
                      typeof this.t.download == "string"
                        ? this.t.download
                        : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                    title: this.localeValues.menu,
                    class: "apexcharts-menu-icon",
                  });
              for (var g = 0; g < this.elCustomIcons.length; g++)
                u.push({
                  el: this.elCustomIcons[g],
                  icon: this.t.customIcons[g].icon,
                  title: this.t.customIcons[g].title,
                  index: this.t.customIcons[g].index,
                  class:
                    "apexcharts-toolbar-custom-icon " +
                    this.t.customIcons[g].class,
                });
              u.forEach(function (v, w) {
                v.index && L.moveIndexInArray(u, w, v.index);
              });
              for (var x = 0; x < u.length; x++)
                B.setAttrs(u[x].el, { class: u[x].class, title: u[x].title }),
                  (u[x].el.innerHTML = u[x].icon),
                  o.appendChild(u[x].el);
              this._createHamburgerMenu(o),
                n.globals.zoomEnabled
                  ? this.elZoom.classList.add(this.selectedClass)
                  : n.globals.panEnabled
                  ? this.elPan.classList.add(this.selectedClass)
                  : n.globals.selectionEnabled &&
                    this.elSelection.classList.add(this.selectedClass),
                this.addToolbarEventListeners();
            },
          },
          {
            key: "_createHamburgerMenu",
            value: function (i) {
              (this.elMenuItems = []),
                i.appendChild(this.elMenu),
                B.setAttrs(this.elMenu, { class: "apexcharts-menu" });
              var n = [
                { name: "exportSVG", title: this.localeValues.exportToSVG },
                { name: "exportPNG", title: this.localeValues.exportToPNG },
                { name: "exportCSV", title: this.localeValues.exportToCSV },
              ];
              this.w.globals.allSeriesHasEqualX || n.splice(2, 1);
              for (var a = 0; a < n.length; a++)
                this.elMenuItems.push(document.createElement("div")),
                  (this.elMenuItems[a].innerHTML = n[a].title),
                  B.setAttrs(this.elMenuItems[a], {
                    class: "apexcharts-menu-item ".concat(n[a].name),
                    title: n[a].title,
                  }),
                  this.elMenu.appendChild(this.elMenuItems[a]);
            },
          },
          {
            key: "addToolbarEventListeners",
            value: function () {
              var i = this;
              this.elZoomReset.addEventListener(
                "click",
                this.handleZoomReset.bind(this)
              ),
                this.elSelection.addEventListener(
                  "click",
                  this.toggleZoomSelection.bind(this, "selection")
                ),
                this.elZoom.addEventListener(
                  "click",
                  this.toggleZoomSelection.bind(this, "zoom")
                ),
                this.elZoomIn.addEventListener(
                  "click",
                  this.handleZoomIn.bind(this)
                ),
                this.elZoomOut.addEventListener(
                  "click",
                  this.handleZoomOut.bind(this)
                ),
                this.elPan.addEventListener(
                  "click",
                  this.togglePanning.bind(this)
                ),
                this.elMenuIcon.addEventListener(
                  "click",
                  this.toggleMenu.bind(this)
                ),
                this.elMenuItems.forEach(function (a) {
                  a.classList.contains("exportSVG")
                    ? a.addEventListener(
                        "click",
                        i.handleDownload.bind(i, "svg")
                      )
                    : a.classList.contains("exportPNG")
                    ? a.addEventListener(
                        "click",
                        i.handleDownload.bind(i, "png")
                      )
                    : a.classList.contains("exportCSV") &&
                      a.addEventListener(
                        "click",
                        i.handleDownload.bind(i, "csv")
                      );
                });
              for (var n = 0; n < this.t.customIcons.length; n++)
                this.elCustomIcons[n].addEventListener(
                  "click",
                  this.t.customIcons[n].click.bind(this, this.ctx, this.ctx.w)
                );
            },
          },
          {
            key: "toggleZoomSelection",
            value: function (i) {
              this.ctx.getSyncedCharts().forEach(function (n) {
                n.ctx.toolbar.toggleOtherControls();
                var a =
                    i === "selection"
                      ? n.ctx.toolbar.elSelection
                      : n.ctx.toolbar.elZoom,
                  o = i === "selection" ? "selectionEnabled" : "zoomEnabled";
                (n.w.globals[o] = !n.w.globals[o]),
                  a.classList.contains(n.ctx.toolbar.selectedClass)
                    ? a.classList.remove(n.ctx.toolbar.selectedClass)
                    : a.classList.add(n.ctx.toolbar.selectedClass);
              });
            },
          },
          {
            key: "getToolbarIconsReference",
            value: function () {
              var i = this.w;
              this.elZoom ||
                (this.elZoom = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-zoom-icon"
                )),
                this.elPan ||
                  (this.elPan = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-pan-icon"
                  )),
                this.elSelection ||
                  (this.elSelection = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-selection-icon"
                  ));
            },
          },
          {
            key: "enableZoomPanFromToolbar",
            value: function (i) {
              this.toggleOtherControls(),
                i === "pan"
                  ? (this.w.globals.panEnabled = !0)
                  : (this.w.globals.zoomEnabled = !0);
              var n = i === "pan" ? this.elPan : this.elZoom,
                a = i === "pan" ? this.elZoom : this.elPan;
              n && n.classList.add(this.selectedClass),
                a && a.classList.remove(this.selectedClass);
            },
          },
          {
            key: "togglePanning",
            value: function () {
              this.ctx.getSyncedCharts().forEach(function (i) {
                i.ctx.toolbar.toggleOtherControls(),
                  (i.w.globals.panEnabled = !i.w.globals.panEnabled),
                  i.ctx.toolbar.elPan.classList.contains(
                    i.ctx.toolbar.selectedClass
                  )
                    ? i.ctx.toolbar.elPan.classList.remove(
                        i.ctx.toolbar.selectedClass
                      )
                    : i.ctx.toolbar.elPan.classList.add(
                        i.ctx.toolbar.selectedClass
                      );
              });
            },
          },
          {
            key: "toggleOtherControls",
            value: function () {
              var i = this,
                n = this.w;
              (n.globals.panEnabled = !1),
                (n.globals.zoomEnabled = !1),
                (n.globals.selectionEnabled = !1),
                this.getToolbarIconsReference(),
                [this.elPan, this.elSelection, this.elZoom].forEach(function (
                  a
                ) {
                  a && a.classList.remove(i.selectedClass);
                });
            },
          },
          {
            key: "handleZoomIn",
            value: function () {
              var i = this.w;
              i.globals.isRangeBar &&
                ((this.minX = i.globals.minY), (this.maxX = i.globals.maxY));
              var n = (this.minX + this.maxX) / 2,
                a = (this.minX + n) / 2,
                o = (this.maxX + n) / 2,
                l = this._getNewMinXMaxX(a, o);
              i.globals.disableZoomIn || this.zoomUpdateOptions(l.minX, l.maxX);
            },
          },
          {
            key: "handleZoomOut",
            value: function () {
              var i = this.w;
              if (
                (i.globals.isRangeBar &&
                  ((this.minX = i.globals.minY), (this.maxX = i.globals.maxY)),
                !(
                  i.config.xaxis.type === "datetime" &&
                  new Date(this.minX).getUTCFullYear() < 1e3
                ))
              ) {
                var n = (this.minX + this.maxX) / 2,
                  a = this.minX - (n - this.minX),
                  o = this.maxX - (n - this.maxX),
                  l = this._getNewMinXMaxX(a, o);
                i.globals.disableZoomOut ||
                  this.zoomUpdateOptions(l.minX, l.maxX);
              }
            },
          },
          {
            key: "_getNewMinXMaxX",
            value: function (i, n) {
              var a = this.w.config.xaxis.convertedCatToNumeric;
              return {
                minX: a ? Math.floor(i) : i,
                maxX: a ? Math.floor(n) : n,
              };
            },
          },
          {
            key: "zoomUpdateOptions",
            value: function (i, n) {
              var a = this.w;
              if (i !== void 0 || n !== void 0) {
                if (
                  !(
                    a.config.xaxis.convertedCatToNumeric &&
                    (i < 1 && ((i = 1), (n = a.globals.dataPoints)), n - i < 2)
                  )
                ) {
                  var o = { min: i, max: n },
                    l = this.getBeforeZoomRange(o);
                  l && (o = l.xaxis);
                  var u = { xaxis: o },
                    h = L.clone(a.globals.initialConfig.yaxis);
                  a.config.chart.zoom.autoScaleYaxis &&
                    (h = new ui(this.ctx).autoScaleY(this.ctx, h, {
                      xaxis: o,
                    })),
                    a.config.chart.group || (u.yaxis = h),
                    (this.w.globals.zoomed = !0),
                    this.ctx.updateHelpers._updateOptions(
                      u,
                      !1,
                      this.w.config.chart.animations.dynamicAnimation.enabled
                    ),
                    this.zoomCallback(o, h);
                }
              } else this.handleZoomReset();
            },
          },
          {
            key: "zoomCallback",
            value: function (i, n) {
              typeof this.ev.zoomed == "function" &&
                this.ev.zoomed(this.ctx, { xaxis: i, yaxis: n });
            },
          },
          {
            key: "getBeforeZoomRange",
            value: function (i, n) {
              var a = null;
              return (
                typeof this.ev.beforeZoom == "function" &&
                  (a = this.ev.beforeZoom(this, { xaxis: i, yaxis: n })),
                a
              );
            },
          },
          {
            key: "toggleMenu",
            value: function () {
              var i = this;
              window.setTimeout(function () {
                i.elMenu.classList.contains("apexcharts-menu-open")
                  ? i.elMenu.classList.remove("apexcharts-menu-open")
                  : i.elMenu.classList.add("apexcharts-menu-open");
              }, 0);
            },
          },
          {
            key: "handleDownload",
            value: function (i) {
              var n = this.w,
                a = new Pi(this.ctx);
              switch (i) {
                case "svg":
                  a.exportToSVG(this.ctx);
                  break;
                case "png":
                  a.exportToPng(this.ctx);
                  break;
                case "csv":
                  a.exportToCSV({
                    series: n.config.series,
                    columnDelimiter:
                      n.config.chart.toolbar.export.csv.columnDelimiter,
                  });
              }
            },
          },
          {
            key: "handleZoomReset",
            value: function (i) {
              this.ctx.getSyncedCharts().forEach(function (n) {
                var a = n.w;
                if (
                  ((a.globals.lastXAxis.min =
                    a.globals.initialConfig.xaxis.min),
                  (a.globals.lastXAxis.max = a.globals.initialConfig.xaxis.max),
                  n.updateHelpers.revertDefaultAxisMinMax(),
                  typeof a.config.chart.events.beforeResetZoom == "function")
                ) {
                  var o = a.config.chart.events.beforeResetZoom(n, a);
                  o && n.updateHelpers.revertDefaultAxisMinMax(o);
                }
                typeof a.config.chart.events.zoomed == "function" &&
                  n.ctx.toolbar.zoomCallback({
                    min: a.config.xaxis.min,
                    max: a.config.xaxis.max,
                  }),
                  (a.globals.zoomed = !1);
                var l = n.ctx.series.emptyCollapsedSeries(
                  L.clone(a.globals.initialSeries)
                );
                n.updateHelpers._updateSeries(
                  l,
                  a.config.chart.animations.dynamicAnimation.enabled
                );
              });
            },
          },
          {
            key: "destroy",
            value: function () {
              (this.elZoom = null),
                (this.elZoomIn = null),
                (this.elZoomOut = null),
                (this.elPan = null),
                (this.elSelection = null),
                (this.elZoomReset = null),
                (this.elMenuIcon = null);
            },
          },
        ]),
        M
      );
    })(),
    ny = (function (M) {
      T(n, Rh);
      var i = X(n);
      function n(a) {
        var o;
        return (
          f(this, n),
          ((o = i.call(this, a)).ctx = a),
          (o.w = a.w),
          (o.dragged = !1),
          (o.graphics = new B(o.ctx)),
          (o.eventList = [
            "mousedown",
            "mouseleave",
            "mousemove",
            "touchstart",
            "touchmove",
            "mouseup",
            "touchend",
          ]),
          (o.clientX = 0),
          (o.clientY = 0),
          (o.startX = 0),
          (o.endX = 0),
          (o.dragX = 0),
          (o.startY = 0),
          (o.endY = 0),
          (o.dragY = 0),
          (o.moveDirection = "none"),
          o
        );
      }
      return (
        y(n, [
          {
            key: "init",
            value: function (a) {
              var o = this,
                l = a.xyRatios,
                u = this.w,
                h = this;
              (this.xyRatios = l),
                (this.zoomRect = this.graphics.drawRect(0, 0, 0, 0)),
                (this.selectionRect = this.graphics.drawRect(0, 0, 0, 0)),
                (this.gridRect =
                  u.globals.dom.baseEl.querySelector(".apexcharts-grid")),
                this.zoomRect.node.classList.add("apexcharts-zoom-rect"),
                this.selectionRect.node.classList.add(
                  "apexcharts-selection-rect"
                ),
                u.globals.dom.elGraphical.add(this.zoomRect),
                u.globals.dom.elGraphical.add(this.selectionRect),
                u.config.chart.selection.type === "x"
                  ? (this.slDraggableRect = this.selectionRect
                      .draggable({
                        minX: 0,
                        minY: 0,
                        maxX: u.globals.gridWidth,
                        maxY: u.globals.gridHeight,
                      })
                      .on(
                        "dragmove",
                        this.selectionDragging.bind(this, "dragging")
                      ))
                  : u.config.chart.selection.type === "y"
                  ? (this.slDraggableRect = this.selectionRect
                      .draggable({ minX: 0, maxX: u.globals.gridWidth })
                      .on(
                        "dragmove",
                        this.selectionDragging.bind(this, "dragging")
                      ))
                  : (this.slDraggableRect = this.selectionRect
                      .draggable()
                      .on(
                        "dragmove",
                        this.selectionDragging.bind(this, "dragging")
                      )),
                this.preselectedSelection(),
                (this.hoverArea = u.globals.dom.baseEl.querySelector(
                  "".concat(u.globals.chartClass, " .apexcharts-svg")
                )),
                this.hoverArea.classList.add("apexcharts-zoomable"),
                this.eventList.forEach(function (d) {
                  o.hoverArea.addEventListener(d, h.svgMouseEvents.bind(h, l), {
                    capture: !1,
                    passive: !0,
                  });
                });
            },
          },
          {
            key: "destroy",
            value: function () {
              this.slDraggableRect &&
                (this.slDraggableRect.draggable(!1),
                this.slDraggableRect.off(),
                this.selectionRect.off()),
                (this.selectionRect = null),
                (this.zoomRect = null),
                (this.gridRect = null);
            },
          },
          {
            key: "svgMouseEvents",
            value: function (a, o) {
              var l = this.w,
                u = this,
                h = this.ctx.toolbar,
                d = l.globals.zoomEnabled
                  ? l.config.chart.zoom.type
                  : l.config.chart.selection.type,
                g = l.config.chart.toolbar.autoSelected;
              if (
                (o.shiftKey
                  ? ((this.shiftWasPressed = !0),
                    h.enableZoomPanFromToolbar(g === "pan" ? "zoom" : "pan"))
                  : this.shiftWasPressed &&
                    (h.enableZoomPanFromToolbar(g),
                    (this.shiftWasPressed = !1)),
                o.target)
              ) {
                var x,
                  v = o.target.classList;
                if (
                  (o.target.parentNode &&
                    o.target.parentNode !== null &&
                    (x = o.target.parentNode.classList),
                  !(
                    v.contains("apexcharts-selection-rect") ||
                    v.contains("apexcharts-legend-marker") ||
                    v.contains("apexcharts-legend-text") ||
                    (x && x.contains("apexcharts-toolbar"))
                  ))
                ) {
                  if (
                    ((u.clientX =
                      o.type === "touchmove" || o.type === "touchstart"
                        ? o.touches[0].clientX
                        : o.type === "touchend"
                        ? o.changedTouches[0].clientX
                        : o.clientX),
                    (u.clientY =
                      o.type === "touchmove" || o.type === "touchstart"
                        ? o.touches[0].clientY
                        : o.type === "touchend"
                        ? o.changedTouches[0].clientY
                        : o.clientY),
                    o.type === "mousedown" && o.which === 1)
                  ) {
                    var w = u.gridRect.getBoundingClientRect();
                    (u.startX = u.clientX - w.left),
                      (u.startY = u.clientY - w.top),
                      (u.dragged = !1),
                      (u.w.globals.mousedown = !0);
                  }
                  if (
                    (((o.type === "mousemove" && o.which === 1) ||
                      o.type === "touchmove") &&
                      ((u.dragged = !0),
                      l.globals.panEnabled
                        ? ((l.globals.selection = null),
                          u.w.globals.mousedown &&
                            u.panDragging({
                              context: u,
                              zoomtype: d,
                              xyRatios: a,
                            }))
                        : ((u.w.globals.mousedown && l.globals.zoomEnabled) ||
                            (u.w.globals.mousedown &&
                              l.globals.selectionEnabled)) &&
                          (u.selection = u.selectionDrawing({
                            context: u,
                            zoomtype: d,
                          }))),
                    o.type === "mouseup" ||
                      o.type === "touchend" ||
                      o.type === "mouseleave")
                  ) {
                    var k = u.gridRect.getBoundingClientRect();
                    u.w.globals.mousedown &&
                      ((u.endX = u.clientX - k.left),
                      (u.endY = u.clientY - k.top),
                      (u.dragX = Math.abs(u.endX - u.startX)),
                      (u.dragY = Math.abs(u.endY - u.startY)),
                      (l.globals.zoomEnabled || l.globals.selectionEnabled) &&
                        u.selectionDrawn({ context: u, zoomtype: d }),
                      l.globals.panEnabled &&
                        l.config.xaxis.convertedCatToNumeric &&
                        u.delayedPanScrolled()),
                      l.globals.zoomEnabled &&
                        u.hideSelectionRect(this.selectionRect),
                      (u.dragged = !1),
                      (u.w.globals.mousedown = !1);
                  }
                  this.makeSelectionRectDraggable();
                }
              }
            },
          },
          {
            key: "makeSelectionRectDraggable",
            value: function () {
              var a = this.w;
              if (this.selectionRect) {
                var o = this.selectionRect.node.getBoundingClientRect();
                o.width > 0 &&
                  o.height > 0 &&
                  this.slDraggableRect
                    .selectize({
                      points: "l, r",
                      pointSize: 8,
                      pointType: "rect",
                    })
                    .resize({
                      constraint: {
                        minX: 0,
                        minY: 0,
                        maxX: a.globals.gridWidth,
                        maxY: a.globals.gridHeight,
                      },
                    })
                    .on(
                      "resizing",
                      this.selectionDragging.bind(this, "resizing")
                    );
              }
            },
          },
          {
            key: "preselectedSelection",
            value: function () {
              var a = this.w,
                o = this.xyRatios;
              if (!a.globals.zoomEnabled) {
                if (
                  a.globals.selection !== void 0 &&
                  a.globals.selection !== null
                )
                  this.drawSelectionRect(a.globals.selection);
                else if (
                  a.config.chart.selection.xaxis.min !== void 0 &&
                  a.config.chart.selection.xaxis.max !== void 0
                ) {
                  var l =
                      (a.config.chart.selection.xaxis.min - a.globals.minX) /
                      o.xRatio,
                    u = {
                      x: l,
                      y: 0,
                      width:
                        a.globals.gridWidth -
                        (a.globals.maxX - a.config.chart.selection.xaxis.max) /
                          o.xRatio -
                        l,
                      height: a.globals.gridHeight,
                      translateX: 0,
                      translateY: 0,
                      selectionEnabled: !0,
                    };
                  this.drawSelectionRect(u),
                    this.makeSelectionRectDraggable(),
                    typeof a.config.chart.events.selection == "function" &&
                      a.config.chart.events.selection(this.ctx, {
                        xaxis: {
                          min: a.config.chart.selection.xaxis.min,
                          max: a.config.chart.selection.xaxis.max,
                        },
                        yaxis: {},
                      });
                }
              }
            },
          },
          {
            key: "drawSelectionRect",
            value: function (a) {
              var o = a.x,
                l = a.y,
                u = a.width,
                h = a.height,
                d = a.translateX,
                g = d === void 0 ? 0 : d,
                x = a.translateY,
                v = x === void 0 ? 0 : x,
                w = this.w,
                k = this.zoomRect,
                C = this.selectionRect;
              if (this.dragged || w.globals.selection !== null) {
                var P = { transform: "translate(" + g + ", " + v + ")" };
                w.globals.zoomEnabled &&
                  this.dragged &&
                  (u < 0 && (u = 1),
                  k.attr({
                    x: o,
                    y: l,
                    width: u,
                    height: h,
                    fill: w.config.chart.zoom.zoomedArea.fill.color,
                    "fill-opacity": w.config.chart.zoom.zoomedArea.fill.opacity,
                    stroke: w.config.chart.zoom.zoomedArea.stroke.color,
                    "stroke-width": w.config.chart.zoom.zoomedArea.stroke.width,
                    "stroke-opacity":
                      w.config.chart.zoom.zoomedArea.stroke.opacity,
                  }),
                  B.setAttrs(k.node, P)),
                  w.globals.selectionEnabled &&
                    (C.attr({
                      x: o,
                      y: l,
                      width: u > 0 ? u : 0,
                      height: h > 0 ? h : 0,
                      fill: w.config.chart.selection.fill.color,
                      "fill-opacity": w.config.chart.selection.fill.opacity,
                      stroke: w.config.chart.selection.stroke.color,
                      "stroke-width": w.config.chart.selection.stroke.width,
                      "stroke-dasharray":
                        w.config.chart.selection.stroke.dashArray,
                      "stroke-opacity": w.config.chart.selection.stroke.opacity,
                    }),
                    B.setAttrs(C.node, P));
              }
            },
          },
          {
            key: "hideSelectionRect",
            value: function (a) {
              a && a.attr({ x: 0, y: 0, width: 0, height: 0 });
            },
          },
          {
            key: "selectionDrawing",
            value: function (a) {
              var o = a.context,
                l = a.zoomtype,
                u = this.w,
                h = o,
                d = this.gridRect.getBoundingClientRect(),
                g = h.startX - 1,
                x = h.startY,
                v = !1,
                w = !1,
                k = h.clientX - d.left - g,
                C = h.clientY - d.top - x,
                P = {};
              return (
                Math.abs(k + g) > u.globals.gridWidth
                  ? (k = u.globals.gridWidth - g)
                  : h.clientX - d.left < 0 && (k = g),
                g > h.clientX - d.left && ((v = !0), (k = Math.abs(k))),
                x > h.clientY - d.top && ((w = !0), (C = Math.abs(C))),
                (P =
                  l === "x"
                    ? {
                        x: v ? g - k : g,
                        y: 0,
                        width: k,
                        height: u.globals.gridHeight,
                      }
                    : l === "y"
                    ? {
                        x: 0,
                        y: w ? x - C : x,
                        width: u.globals.gridWidth,
                        height: C,
                      }
                    : {
                        x: v ? g - k : g,
                        y: w ? x - C : x,
                        width: k,
                        height: C,
                      }),
                h.drawSelectionRect(P),
                h.selectionDragging("resizing"),
                P
              );
            },
          },
          {
            key: "selectionDragging",
            value: function (a, o) {
              var l = this,
                u = this.w,
                h = this.xyRatios,
                d = this.selectionRect,
                g = 0;
              a === "resizing" && (g = 30);
              var x = function (w) {
                  return parseFloat(d.node.getAttribute(w));
                },
                v = {
                  x: x("x"),
                  y: x("y"),
                  width: x("width"),
                  height: x("height"),
                };
              (u.globals.selection = v),
                typeof u.config.chart.events.selection == "function" &&
                  u.globals.selectionEnabled &&
                  (clearTimeout(this.w.globals.selectionResizeTimer),
                  (this.w.globals.selectionResizeTimer = window.setTimeout(
                    function () {
                      var w = l.gridRect.getBoundingClientRect(),
                        k = d.node.getBoundingClientRect(),
                        C = {
                          xaxis: {
                            min:
                              u.globals.xAxisScale.niceMin +
                              (k.left - w.left) * h.xRatio,
                            max:
                              u.globals.xAxisScale.niceMin +
                              (k.right - w.left) * h.xRatio,
                          },
                          yaxis: {
                            min:
                              u.globals.yAxisScale[0].niceMin +
                              (w.bottom - k.bottom) * h.yRatio[0],
                            max:
                              u.globals.yAxisScale[0].niceMax -
                              (k.top - w.top) * h.yRatio[0],
                          },
                        };
                      u.config.chart.events.selection(l.ctx, C),
                        u.config.chart.brush.enabled &&
                          u.config.chart.events.brushScrolled !== void 0 &&
                          u.config.chart.events.brushScrolled(l.ctx, C);
                    },
                    g
                  )));
            },
          },
          {
            key: "selectionDrawn",
            value: function (a) {
              var o = a.context,
                l = a.zoomtype,
                u = this.w,
                h = o,
                d = this.xyRatios,
                g = this.ctx.toolbar;
              if (h.startX > h.endX) {
                var x = h.startX;
                (h.startX = h.endX), (h.endX = x);
              }
              if (h.startY > h.endY) {
                var v = h.startY;
                (h.startY = h.endY), (h.endY = v);
              }
              var w = void 0,
                k = void 0;
              u.globals.isRangeBar
                ? ((w =
                    u.globals.yAxisScale[0].niceMin +
                    h.startX * d.invertedYRatio),
                  (k =
                    u.globals.yAxisScale[0].niceMin +
                    h.endX * d.invertedYRatio))
                : ((w = u.globals.xAxisScale.niceMin + h.startX * d.xRatio),
                  (k = u.globals.xAxisScale.niceMin + h.endX * d.xRatio));
              var C = [],
                P = [];
              if (
                (u.config.yaxis.forEach(function (F, _) {
                  C.push(
                    u.globals.yAxisScale[_].niceMax - d.yRatio[_] * h.startY
                  ),
                    P.push(
                      u.globals.yAxisScale[_].niceMax - d.yRatio[_] * h.endY
                    );
                }),
                h.dragged && (h.dragX > 10 || h.dragY > 10) && w !== k)
              ) {
                if (u.globals.zoomEnabled) {
                  var E = L.clone(u.globals.initialConfig.yaxis),
                    I = L.clone(u.globals.initialConfig.xaxis);
                  if (
                    ((u.globals.zoomed = !0),
                    u.config.xaxis.convertedCatToNumeric &&
                      ((w = Math.floor(w)),
                      (k = Math.floor(k)),
                      w < 1 && ((w = 1), (k = u.globals.dataPoints)),
                      k - w < 2 && (k = w + 1)),
                    (l !== "xy" && l !== "x") || (I = { min: w, max: k }),
                    (l !== "xy" && l !== "y") ||
                      E.forEach(function (F, _) {
                        (E[_].min = P[_]), (E[_].max = C[_]);
                      }),
                    u.config.chart.zoom.autoScaleYaxis)
                  ) {
                    var D = new ui(h.ctx);
                    E = D.autoScaleY(h.ctx, E, { xaxis: I });
                  }
                  if (g) {
                    var p = g.getBeforeZoomRange(I, E);
                    p &&
                      ((I = p.xaxis ? p.xaxis : I),
                      (E = p.yaxis ? p.yaxis : E));
                  }
                  var b = { xaxis: I };
                  u.config.chart.group || (b.yaxis = E),
                    h.ctx.updateHelpers._updateOptions(
                      b,
                      !1,
                      h.w.config.chart.animations.dynamicAnimation.enabled
                    ),
                    typeof u.config.chart.events.zoomed == "function" &&
                      g.zoomCallback(I, E);
                } else if (u.globals.selectionEnabled) {
                  var A,
                    R = null;
                  (A = { min: w, max: k }),
                    (l !== "xy" && l !== "y") ||
                      (R = L.clone(u.config.yaxis)).forEach(function (F, _) {
                        (R[_].min = P[_]), (R[_].max = C[_]);
                      }),
                    (u.globals.selection = h.selection),
                    typeof u.config.chart.events.selection == "function" &&
                      u.config.chart.events.selection(h.ctx, {
                        xaxis: A,
                        yaxis: R,
                      });
                }
              }
            },
          },
          {
            key: "panDragging",
            value: function (a) {
              var o = a.context,
                l = this.w,
                u = o;
              if (l.globals.lastClientPosition.x !== void 0) {
                var h = l.globals.lastClientPosition.x - u.clientX,
                  d = l.globals.lastClientPosition.y - u.clientY;
                Math.abs(h) > Math.abs(d) && h > 0
                  ? (this.moveDirection = "left")
                  : Math.abs(h) > Math.abs(d) && h < 0
                  ? (this.moveDirection = "right")
                  : Math.abs(d) > Math.abs(h) && d > 0
                  ? (this.moveDirection = "up")
                  : Math.abs(d) > Math.abs(h) &&
                    d < 0 &&
                    (this.moveDirection = "down");
              }
              l.globals.lastClientPosition = { x: u.clientX, y: u.clientY };
              var g = l.globals.isRangeBar ? l.globals.minY : l.globals.minX,
                x = l.globals.isRangeBar ? l.globals.maxY : l.globals.maxX;
              l.config.xaxis.convertedCatToNumeric || u.panScrolled(g, x);
            },
          },
          {
            key: "delayedPanScrolled",
            value: function () {
              var a = this.w,
                o = a.globals.minX,
                l = a.globals.maxX,
                u = (a.globals.maxX - a.globals.minX) / 2;
              this.moveDirection === "left"
                ? ((o = a.globals.minX + u), (l = a.globals.maxX + u))
                : this.moveDirection === "right" &&
                  ((o = a.globals.minX - u), (l = a.globals.maxX - u)),
                (o = Math.floor(o)),
                (l = Math.floor(l)),
                this.updateScrolledChart({ xaxis: { min: o, max: l } }, o, l);
            },
          },
          {
            key: "panScrolled",
            value: function (a, o) {
              var l = this.w,
                u = this.xyRatios,
                h = L.clone(l.globals.initialConfig.yaxis),
                d = u.xRatio,
                g = l.globals.minX,
                x = l.globals.maxX;
              l.globals.isRangeBar &&
                ((d = u.invertedYRatio),
                (g = l.globals.minY),
                (x = l.globals.maxY)),
                this.moveDirection === "left"
                  ? ((a = g + (l.globals.gridWidth / 15) * d),
                    (o = x + (l.globals.gridWidth / 15) * d))
                  : this.moveDirection === "right" &&
                    ((a = g - (l.globals.gridWidth / 15) * d),
                    (o = x - (l.globals.gridWidth / 15) * d)),
                l.globals.isRangeBar ||
                  ((a < l.globals.initialMinX || o > l.globals.initialMaxX) &&
                    ((a = g), (o = x)));
              var v = { min: a, max: o };
              l.config.chart.zoom.autoScaleYaxis &&
                (h = new ui(this.ctx).autoScaleY(this.ctx, h, { xaxis: v }));
              var w = { xaxis: { min: a, max: o } };
              l.config.chart.group || (w.yaxis = h),
                this.updateScrolledChart(w, a, o);
            },
          },
          {
            key: "updateScrolledChart",
            value: function (a, o, l) {
              var u = this.w;
              this.ctx.updateHelpers._updateOptions(a, !1, !1),
                typeof u.config.chart.events.scrolled == "function" &&
                  u.config.chart.events.scrolled(this.ctx, {
                    xaxis: { min: o, max: l },
                  });
            },
          },
        ]),
        n
      );
    })(),
    zh = (function () {
      function M(i) {
        f(this, M), (this.w = i.w), (this.ttCtx = i), (this.ctx = i.ctx);
      }
      return (
        y(M, [
          {
            key: "getNearestValues",
            value: function (i) {
              var n = i.hoverArea,
                a = i.elGrid,
                o = i.clientX,
                l = i.clientY,
                u = this.w,
                h = a.getBoundingClientRect(),
                d = h.width,
                g = h.height,
                x = d / (u.globals.dataPoints - 1),
                v = g / u.globals.dataPoints,
                w = this.hasBars();
              (!u.globals.comboCharts && !w) ||
                u.config.xaxis.convertedCatToNumeric ||
                (x = d / u.globals.dataPoints);
              var k = o - h.left - u.globals.barPadForNumericAxis,
                C = l - h.top;
              k < 0 || C < 0 || k > d || C > g
                ? (n.classList.remove("hovering-zoom"),
                  n.classList.remove("hovering-pan"))
                : u.globals.zoomEnabled
                ? (n.classList.remove("hovering-pan"),
                  n.classList.add("hovering-zoom"))
                : u.globals.panEnabled &&
                  (n.classList.remove("hovering-zoom"),
                  n.classList.add("hovering-pan"));
              var P = Math.round(k / x),
                E = Math.floor(C / v);
              w &&
                !u.config.xaxis.convertedCatToNumeric &&
                ((P = Math.ceil(k / x)), (P -= 1));
              var I = null,
                D = null,
                p = u.globals.seriesXvalues.map(function (_) {
                  return _.filter(function (G) {
                    return L.isNumber(G);
                  });
                }),
                b = u.globals.seriesYvalues.map(function (_) {
                  return _.filter(function (G) {
                    return L.isNumber(G);
                  });
                });
              if (u.globals.isXNumeric) {
                var A = this.ttCtx.getElGrid().getBoundingClientRect(),
                  R = k * (A.width / d),
                  F = C * (A.height / g);
                (I = (D = this.closestInMultiArray(R, F, p, b)).index),
                  (P = D.j),
                  I !== null &&
                    ((p = u.globals.seriesXvalues[I]),
                    (P = (D = this.closestInArray(R, p)).index));
              }
              return (
                (u.globals.capturedSeriesIndex = I === null ? -1 : I),
                (!P || P < 1) && (P = 0),
                u.globals.isBarHorizontal
                  ? (u.globals.capturedDataPointIndex = E)
                  : (u.globals.capturedDataPointIndex = P),
                {
                  capturedSeries: I,
                  j: u.globals.isBarHorizontal ? E : P,
                  hoverX: k,
                  hoverY: C,
                }
              );
            },
          },
          {
            key: "closestInMultiArray",
            value: function (i, n, a, o) {
              var l = this.w,
                u = 0,
                h = null,
                d = -1;
              l.globals.series.length > 1
                ? (u = this.gSBFirstActiveXArray(a))
                : (h = 0);
              var g = a[u][0],
                x = Math.abs(i - g);
              if (
                (a.forEach(function (k) {
                  k.forEach(function (C, P) {
                    var E = Math.abs(i - C);
                    E <= x && ((x = E), (d = P));
                  });
                }),
                d !== -1)
              ) {
                var v = o[u][d],
                  w = Math.abs(n - v);
                (h = u),
                  o.forEach(function (k, C) {
                    var P = Math.abs(n - k[d]);
                    P <= w && ((w = P), (h = C));
                  });
              }
              return { index: h, j: d };
            },
          },
          {
            key: "gSBFirstActiveXArray",
            value: function (i) {
              for (
                var n = this.w,
                  a = 0,
                  o = i.map(function (u, h) {
                    return u.length > 0 ? h : -1;
                  }),
                  l = 0;
                l < o.length;
                l++
              )
                if (
                  o[l] !== -1 &&
                  n.globals.collapsedSeriesIndices.indexOf(l) === -1 &&
                  n.globals.ancillaryCollapsedSeriesIndices.indexOf(l) === -1
                ) {
                  a = o[l];
                  break;
                }
              return a;
            },
          },
          {
            key: "closestInArray",
            value: function (i, n) {
              for (
                var a = n[0], o = null, l = Math.abs(i - a), u = 0;
                u < n.length;
                u++
              ) {
                var h = Math.abs(i - n[u]);
                h < l && ((l = h), (o = u));
              }
              return { index: o };
            },
          },
          {
            key: "isXoverlap",
            value: function (i) {
              var n = [],
                a = this.w.globals.seriesX.filter(function (l) {
                  return l[0] !== void 0;
                });
              if (a.length > 0)
                for (var o = 0; o < a.length - 1; o++)
                  a[o][i] !== void 0 &&
                    a[o + 1][i] !== void 0 &&
                    a[o][i] !== a[o + 1][i] &&
                    n.push("unEqual");
              return n.length === 0;
            },
          },
          {
            key: "isInitialSeriesSameLen",
            value: function () {
              for (
                var i = !0, n = this.w.globals.initialSeries, a = 0;
                a < n.length - 1;
                a++
              )
                if (n[a].data.length !== n[a + 1].data.length) {
                  i = !1;
                  break;
                }
              return i;
            },
          },
          {
            key: "getBarsHeight",
            value: function (i) {
              return Y(i).reduce(function (n, a) {
                return n + a.getBBox().height;
              }, 0);
            },
          },
          {
            key: "getElMarkers",
            value: function (i) {
              return typeof i == "number"
                ? this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series[data\\:realIndex='".concat(
                      i,
                      "'] .apexcharts-series-markers-wrap > *"
                    )
                  )
                : this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series-markers-wrap > *"
                  );
            },
          },
          {
            key: "getAllMarkers",
            value: function () {
              var i = this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series-markers-wrap"
              );
              (i = Y(i)).sort(function (a, o) {
                var l = Number(a.getAttribute("data:realIndex")),
                  u = Number(o.getAttribute("data:realIndex"));
                return u < l ? 1 : u > l ? -1 : 0;
              });
              var n = [];
              return (
                i.forEach(function (a) {
                  n.push(a.querySelector(".apexcharts-marker"));
                }),
                n
              );
            },
          },
          {
            key: "hasMarkers",
            value: function (i) {
              return this.getElMarkers(i).length > 0;
            },
          },
          {
            key: "getElBars",
            value: function () {
              return this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series"
              );
            },
          },
          {
            key: "hasBars",
            value: function () {
              return this.getElBars().length > 0;
            },
          },
          {
            key: "getHoverMarkerSize",
            value: function (i) {
              var n = this.w,
                a = n.config.markers.hover.size;
              return (
                a === void 0 &&
                  (a =
                    n.globals.markers.size[i] +
                    n.config.markers.hover.sizeOffset),
                a
              );
            },
          },
          {
            key: "toggleAllTooltipSeriesGroups",
            value: function (i) {
              var n = this.w,
                a = this.ttCtx;
              a.allTooltipSeriesGroups.length === 0 &&
                (a.allTooltipSeriesGroups =
                  n.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-tooltip-series-group"
                  ));
              for (var o = a.allTooltipSeriesGroups, l = 0; l < o.length; l++)
                i === "enable"
                  ? (o[l].classList.add("apexcharts-active"),
                    (o[l].style.display = n.config.tooltip.items.display))
                  : (o[l].classList.remove("apexcharts-active"),
                    (o[l].style.display = "none"));
            },
          },
        ]),
        M
      );
    })(),
    ry = (function () {
      function M(i) {
        f(this, M),
          (this.w = i.w),
          (this.ctx = i.ctx),
          (this.ttCtx = i),
          (this.tooltipUtil = new zh(i));
      }
      return (
        y(M, [
          {
            key: "drawSeriesTexts",
            value: function (i) {
              var n = i.shared,
                a = n === void 0 || n,
                o = i.ttItems,
                l = i.i,
                u = l === void 0 ? 0 : l,
                h = i.j,
                d = h === void 0 ? null : h,
                g = i.y1,
                x = i.y2,
                v = i.e,
                w = this.w;
              w.config.tooltip.custom !== void 0
                ? this.handleCustomTooltip({ i: u, j: d, y1: g, y2: x, w })
                : this.toggleActiveInactiveSeries(a);
              var k = this.getValuesToPrint({ i: u, j: d });
              this.printLabels({
                i: u,
                j: d,
                values: k,
                ttItems: o,
                shared: a,
                e: v,
              });
              var C = this.ttCtx.getElTooltip();
              (this.ttCtx.tooltipRect.ttWidth =
                C.getBoundingClientRect().width),
                (this.ttCtx.tooltipRect.ttHeight =
                  C.getBoundingClientRect().height);
            },
          },
          {
            key: "printLabels",
            value: function (i) {
              var n,
                a = this,
                o = i.i,
                l = i.j,
                u = i.values,
                h = i.ttItems,
                d = i.shared,
                g = i.e,
                x = this.w,
                v = [],
                w = function (A) {
                  return (
                    x.globals.seriesGoals[A] &&
                    x.globals.seriesGoals[A][l] &&
                    Array.isArray(x.globals.seriesGoals[A][l])
                  );
                },
                k = u.xVal,
                C = u.zVal,
                P = u.xAxisTTVal,
                E = "",
                I = x.globals.colors[o];
              l !== null &&
                x.config.plotOptions.bar.distributed &&
                (I = x.globals.colors[l]);
              for (
                var D = function (A, R) {
                    var F = a.gSBFormatters(o);
                    (E = a.getSeriesName({
                      fn: F.yLbTitleFormatter,
                      index: o,
                      seriesIndex: o,
                      j: l,
                    })),
                      x.config.chart.type === "treemap" &&
                        (E = F.yLbTitleFormatter(
                          String(x.config.series[o].data[l].x),
                          {
                            series: x.globals.series,
                            seriesIndex: o,
                            dataPointIndex: l,
                            w: x,
                          }
                        ));
                    var _ = x.config.tooltip.inverseOrder ? R : A;
                    if (x.globals.axisCharts) {
                      var G = function (ee) {
                        var J, oe, ce, Se;
                        return x.globals.isRangeData
                          ? F.yLbFormatter(
                              (J = x.globals.seriesRangeStart) === null ||
                                J === void 0 ||
                                (oe = J[ee]) === null ||
                                oe === void 0
                                ? void 0
                                : oe[l],
                              {
                                series: x.globals.seriesRangeStart,
                                seriesIndex: ee,
                                dataPointIndex: l,
                                w: x,
                              }
                            ) +
                              " - " +
                              F.yLbFormatter(
                                (ce = x.globals.seriesRangeEnd) === null ||
                                  ce === void 0 ||
                                  (Se = ce[ee]) === null ||
                                  Se === void 0
                                  ? void 0
                                  : Se[l],
                                {
                                  series: x.globals.seriesRangeEnd,
                                  seriesIndex: ee,
                                  dataPointIndex: l,
                                  w: x,
                                }
                              )
                          : F.yLbFormatter(x.globals.series[ee][l], {
                              series: x.globals.series,
                              seriesIndex: ee,
                              dataPointIndex: l,
                              w: x,
                            });
                      };
                      if (d)
                        (F = a.gSBFormatters(_)),
                          (E = a.getSeriesName({
                            fn: F.yLbTitleFormatter,
                            index: _,
                            seriesIndex: o,
                            j: l,
                          })),
                          (I = x.globals.colors[_]),
                          (n = G(_)),
                          w(_) &&
                            (v = x.globals.seriesGoals[_][l].map(function (ee) {
                              return {
                                attrs: ee,
                                val: F.yLbFormatter(ee.value, {
                                  seriesIndex: _,
                                  dataPointIndex: l,
                                  w: x,
                                }),
                              };
                            }));
                      else {
                        var W,
                          Z =
                            g == null || (W = g.target) === null || W === void 0
                              ? void 0
                              : W.getAttribute("fill");
                        Z &&
                          (I =
                            Z.indexOf("url") !== -1
                              ? document
                                  .querySelector(Z.substr(4).slice(0, -1))
                                  .childNodes[0].getAttribute("stroke")
                              : Z),
                          (n = G(o)),
                          w(o) &&
                            Array.isArray(x.globals.seriesGoals[o][l]) &&
                            (v = x.globals.seriesGoals[o][l].map(function (ee) {
                              return {
                                attrs: ee,
                                val: F.yLbFormatter(ee.value, {
                                  seriesIndex: o,
                                  dataPointIndex: l,
                                  w: x,
                                }),
                              };
                            }));
                      }
                    }
                    l === null &&
                      (n = F.yLbFormatter(
                        x.globals.series[o],
                        s(s({}, x), {}, { seriesIndex: o, dataPointIndex: o })
                      )),
                      a.DOMHandling({
                        i: o,
                        t: _,
                        j: l,
                        ttItems: h,
                        values: {
                          val: n,
                          goalVals: v,
                          xVal: k,
                          xAxisTTVal: P,
                          zVal: C,
                        },
                        seriesName: E,
                        shared: d,
                        pColor: I,
                      });
                  },
                  p = 0,
                  b = x.globals.series.length - 1;
                p < x.globals.series.length;
                p++, b--
              )
                D(p, b);
            },
          },
          {
            key: "gSBFormatters",
            value: function (i) {
              var n,
                a = this.w,
                o = a.globals.yLabelFormatters[i];
              return (
                a.globals.ttVal !== void 0
                  ? Array.isArray(a.globals.ttVal)
                    ? ((o = a.globals.ttVal[i] && a.globals.ttVal[i].formatter),
                      (n =
                        a.globals.ttVal[i] &&
                        a.globals.ttVal[i].title &&
                        a.globals.ttVal[i].title.formatter))
                    : ((o = a.globals.ttVal.formatter),
                      typeof a.globals.ttVal.title.formatter == "function" &&
                        (n = a.globals.ttVal.title.formatter))
                  : (n = a.config.tooltip.y.title.formatter),
                typeof o != "function" &&
                  (o = a.globals.yLabelFormatters[0]
                    ? a.globals.yLabelFormatters[0]
                    : function (l) {
                        return l;
                      }),
                typeof n != "function" &&
                  (n = function (l) {
                    return l;
                  }),
                { yLbFormatter: o, yLbTitleFormatter: n }
              );
            },
          },
          {
            key: "getSeriesName",
            value: function (i) {
              var n = i.fn,
                a = i.index,
                o = i.seriesIndex,
                l = i.j,
                u = this.w;
              return n(String(u.globals.seriesNames[a]), {
                series: u.globals.series,
                seriesIndex: o,
                dataPointIndex: l,
                w: u,
              });
            },
          },
          {
            key: "DOMHandling",
            value: function (i) {
              i.i;
              var n = i.t,
                a = i.j,
                o = i.ttItems,
                l = i.values,
                u = i.seriesName,
                h = i.shared,
                d = i.pColor,
                g = this.w,
                x = this.ttCtx,
                v = l.val,
                w = l.goalVals,
                k = l.xVal,
                C = l.xAxisTTVal,
                P = l.zVal,
                E = null;
              (E = o[n].children),
                g.config.tooltip.fillSeriesColor &&
                  ((o[n].style.backgroundColor = d),
                  (E[0].style.display = "none")),
                x.showTooltipTitle &&
                  (x.tooltipTitle === null &&
                    (x.tooltipTitle = g.globals.dom.baseEl.querySelector(
                      ".apexcharts-tooltip-title"
                    )),
                  (x.tooltipTitle.innerHTML = k)),
                x.isXAxisTooltipEnabled &&
                  (x.xaxisTooltipText.innerHTML = C !== "" ? C : k);
              var I = o[n].querySelector(".apexcharts-tooltip-text-y-label");
              I && (I.innerHTML = u || "");
              var D = o[n].querySelector(".apexcharts-tooltip-text-y-value");
              D && (D.innerHTML = v !== void 0 ? v : ""),
                E[0] &&
                  E[0].classList.contains("apexcharts-tooltip-marker") &&
                  (g.config.tooltip.marker.fillColors &&
                    Array.isArray(g.config.tooltip.marker.fillColors) &&
                    (d = g.config.tooltip.marker.fillColors[n]),
                  (E[0].style.backgroundColor = d)),
                g.config.tooltip.marker.show || (E[0].style.display = "none");
              var p = o[n].querySelector(
                  ".apexcharts-tooltip-text-goals-label"
                ),
                b = o[n].querySelector(".apexcharts-tooltip-text-goals-value");
              if (w.length && g.globals.seriesGoals[n]) {
                var A = function () {
                  var R = "<div >",
                    F = "<div>";
                  w.forEach(function (_, G) {
                    (R +=
                      ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '
                        .concat(
                          _.attrs.strokeColor,
                          '; height: 3px; border-radius: 0; top: 5px;"></span> '
                        )
                        .concat(_.attrs.name, "</div>")),
                      (F += "<div>".concat(_.val, "</div>"));
                  }),
                    (p.innerHTML = R + "</div>"),
                    (b.innerHTML = F + "</div>");
                };
                h
                  ? g.globals.seriesGoals[n][a] &&
                    Array.isArray(g.globals.seriesGoals[n][a])
                    ? A()
                    : ((p.innerHTML = ""), (b.innerHTML = ""))
                  : A();
              } else (p.innerHTML = ""), (b.innerHTML = "");
              P !== null &&
                ((o[n].querySelector(
                  ".apexcharts-tooltip-text-z-label"
                ).innerHTML = g.config.tooltip.z.title),
                (o[n].querySelector(
                  ".apexcharts-tooltip-text-z-value"
                ).innerHTML = P !== void 0 ? P : "")),
                h &&
                  E[0] &&
                  (v == null ||
                  g.globals.ancillaryCollapsedSeriesIndices.indexOf(n) > -1 ||
                  g.globals.collapsedSeriesIndices.indexOf(n) > -1
                    ? (E[0].parentNode.style.display = "none")
                    : (E[0].parentNode.style.display =
                        g.config.tooltip.items.display));
            },
          },
          {
            key: "toggleActiveInactiveSeries",
            value: function (i) {
              var n = this.w;
              if (i) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
              else {
                this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                var a = n.globals.dom.baseEl.querySelector(
                  ".apexcharts-tooltip-series-group"
                );
                a &&
                  (a.classList.add("apexcharts-active"),
                  (a.style.display = n.config.tooltip.items.display));
              }
            },
          },
          {
            key: "getValuesToPrint",
            value: function (i) {
              var n = i.i,
                a = i.j,
                o = this.w,
                l = this.ctx.series.filteredSeriesX(),
                u = "",
                h = "",
                d = null,
                g = null,
                x = {
                  series: o.globals.series,
                  seriesIndex: n,
                  dataPointIndex: a,
                  w: o,
                },
                v = o.globals.ttZFormatter;
              a === null
                ? (g = o.globals.series[n])
                : o.globals.isXNumeric && o.config.chart.type !== "treemap"
                ? ((u = l[n][a]),
                  l[n].length === 0 &&
                    (u = l[this.tooltipUtil.gSBFirstActiveXArray(l)][a]))
                : (u =
                    o.globals.labels[a] !== void 0 ? o.globals.labels[a] : "");
              var w = u;
              return (
                o.globals.isXNumeric && o.config.xaxis.type === "datetime"
                  ? (u = new we(this.ctx).xLabelFormat(
                      o.globals.ttKeyFormatter,
                      w,
                      w,
                      {
                        i: void 0,
                        dateFormatter: new xe(this.ctx).formatDate,
                        w: this.w,
                      }
                    ))
                  : (u = o.globals.isBarHorizontal
                      ? o.globals.yLabelFormatters[0](w, x)
                      : o.globals.xLabelFormatter(w, x)),
                o.config.tooltip.x.formatter !== void 0 &&
                  (u = o.globals.ttKeyFormatter(w, x)),
                o.globals.seriesZ.length > 0 &&
                  o.globals.seriesZ[n].length > 0 &&
                  (d = v(o.globals.seriesZ[n][a], o)),
                (h =
                  typeof o.config.xaxis.tooltip.formatter == "function"
                    ? o.globals.xaxisTooltipFormatter(w, x)
                    : u),
                {
                  val: Array.isArray(g) ? g.join(" ") : g,
                  xVal: Array.isArray(u) ? u.join(" ") : u,
                  xAxisTTVal: Array.isArray(h) ? h.join(" ") : h,
                  zVal: d,
                }
              );
            },
          },
          {
            key: "handleCustomTooltip",
            value: function (i) {
              var n = i.i,
                a = i.j,
                o = i.y1,
                l = i.y2,
                u = i.w,
                h = this.ttCtx.getElTooltip(),
                d = u.config.tooltip.custom;
              Array.isArray(d) && d[n] && (d = d[n]),
                (h.innerHTML = d({
                  ctx: this.ctx,
                  series: u.globals.series,
                  seriesIndex: n,
                  dataPointIndex: a,
                  y1: o,
                  y2: l,
                  w: u,
                }));
            },
          },
        ]),
        M
      );
    })(),
    Ih = (function () {
      function M(i) {
        f(this, M), (this.ttCtx = i), (this.ctx = i.ctx), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "moveXCrosshairs",
            value: function (i) {
              var n =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null,
                a = this.ttCtx,
                o = this.w,
                l = a.getElXCrosshairs(),
                u = i - a.xcrosshairsWidth / 2,
                h = o.globals.labels.slice().length;
              if (
                (n !== null && (u = (o.globals.gridWidth / h) * n),
                l === null ||
                  o.globals.isBarHorizontal ||
                  (l.setAttribute("x", u),
                  l.setAttribute("x1", u),
                  l.setAttribute("x2", u),
                  l.setAttribute("y2", o.globals.gridHeight),
                  l.classList.add("apexcharts-active")),
                u < 0 && (u = 0),
                u > o.globals.gridWidth && (u = o.globals.gridWidth),
                a.isXAxisTooltipEnabled)
              ) {
                var d = u;
                (o.config.xaxis.crosshairs.width !== "tickWidth" &&
                  o.config.xaxis.crosshairs.width !== "barWidth") ||
                  (d = u + a.xcrosshairsWidth / 2),
                  this.moveXAxisTooltip(d);
              }
            },
          },
          {
            key: "moveYCrosshairs",
            value: function (i) {
              var n = this.ttCtx;
              n.ycrosshairs !== null &&
                B.setAttrs(n.ycrosshairs, { y1: i, y2: i }),
                n.ycrosshairsHidden !== null &&
                  B.setAttrs(n.ycrosshairsHidden, { y1: i, y2: i });
            },
          },
          {
            key: "moveXAxisTooltip",
            value: function (i) {
              var n = this.w,
                a = this.ttCtx;
              if (a.xaxisTooltip !== null && a.xcrosshairsWidth !== 0) {
                a.xaxisTooltip.classList.add("apexcharts-active");
                var o =
                  a.xaxisOffY +
                  n.config.xaxis.tooltip.offsetY +
                  n.globals.translateY +
                  1 +
                  n.config.xaxis.offsetY;
                if (
                  ((i -= a.xaxisTooltip.getBoundingClientRect().width / 2),
                  !isNaN(i))
                ) {
                  i += n.globals.translateX;
                  var l;
                  (l = new B(this.ctx).getTextRects(
                    a.xaxisTooltipText.innerHTML
                  )),
                    (a.xaxisTooltipText.style.minWidth = l.width + "px"),
                    (a.xaxisTooltip.style.left = i + "px"),
                    (a.xaxisTooltip.style.top = o + "px");
                }
              }
            },
          },
          {
            key: "moveYAxisTooltip",
            value: function (i) {
              var n = this.w,
                a = this.ttCtx;
              a.yaxisTTEls === null &&
                (a.yaxisTTEls = n.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxistooltip"
                ));
              var o = parseInt(a.ycrosshairsHidden.getAttribute("y1"), 10),
                l = n.globals.translateY + o,
                u = a.yaxisTTEls[i].getBoundingClientRect().height,
                h = n.globals.translateYAxisX[i] - 2;
              n.config.yaxis[i].opposite && (h -= 26),
                (l -= u / 2),
                n.globals.ignoreYAxisIndexes.indexOf(i) === -1
                  ? (a.yaxisTTEls[i].classList.add("apexcharts-active"),
                    (a.yaxisTTEls[i].style.top = l + "px"),
                    (a.yaxisTTEls[i].style.left =
                      h + n.config.yaxis[i].tooltip.offsetX + "px"))
                  : a.yaxisTTEls[i].classList.remove("apexcharts-active");
            },
          },
          {
            key: "moveTooltip",
            value: function (i, n) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                o = this.w,
                l = this.ttCtx,
                u = l.getElTooltip(),
                h = l.tooltipRect,
                d = a !== null ? parseFloat(a) : 1,
                g = parseFloat(i) + d + 5,
                x = parseFloat(n) + d / 2;
              if (
                (g > o.globals.gridWidth / 2 && (g = g - h.ttWidth - d - 10),
                g > o.globals.gridWidth - h.ttWidth - 10 &&
                  (g = o.globals.gridWidth - h.ttWidth),
                g < -20 && (g = -20),
                o.config.tooltip.followCursor)
              ) {
                var v = l.getElGrid().getBoundingClientRect();
                (g = l.e.clientX - v.left) > o.globals.gridWidth / 2 &&
                  (g -= l.tooltipRect.ttWidth),
                  (x = l.e.clientY + o.globals.translateY - v.top) >
                    o.globals.gridHeight / 2 && (x -= l.tooltipRect.ttHeight);
              } else
                o.globals.isBarHorizontal ||
                  (h.ttHeight / 2 + x > o.globals.gridHeight &&
                    (x =
                      o.globals.gridHeight -
                      h.ttHeight +
                      o.globals.translateY));
              isNaN(g) ||
                ((g += o.globals.translateX),
                (u.style.left = g + "px"),
                (u.style.top = x + "px"));
            },
          },
          {
            key: "moveMarkers",
            value: function (i, n) {
              var a = this.w,
                o = this.ttCtx;
              if (a.globals.markers.size[i] > 0)
                for (
                  var l = a.globals.dom.baseEl.querySelectorAll(
                      " .apexcharts-series[data\\:realIndex='".concat(
                        i,
                        "'] .apexcharts-marker"
                      )
                    ),
                    u = 0;
                  u < l.length;
                  u++
                )
                  parseInt(l[u].getAttribute("rel"), 10) === n &&
                    (o.marker.resetPointsSize(),
                    o.marker.enlargeCurrentPoint(n, l[u]));
              else
                o.marker.resetPointsSize(), this.moveDynamicPointOnHover(n, i);
            },
          },
          {
            key: "moveDynamicPointOnHover",
            value: function (i, n) {
              var a,
                o,
                l = this.w,
                u = this.ttCtx,
                h = l.globals.pointsArray,
                d = u.tooltipUtil.getHoverMarkerSize(n),
                g = l.config.series[n].type;
              if (
                !g ||
                (g !== "column" && g !== "candlestick" && g !== "boxPlot")
              ) {
                (a = h[n][i][0]), (o = h[n][i][1] ? h[n][i][1] : 0);
                var x = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-series[data\\:realIndex='".concat(
                    n,
                    "'] .apexcharts-series-markers circle"
                  )
                );
                x &&
                  o < l.globals.gridHeight &&
                  o > 0 &&
                  (x.setAttribute("r", d),
                  x.setAttribute("cx", a),
                  x.setAttribute("cy", o)),
                  this.moveXCrosshairs(a),
                  u.fixedTooltip || this.moveTooltip(a, o, d);
              }
            },
          },
          {
            key: "moveDynamicPointsOnHover",
            value: function (i) {
              var n,
                a = this.ttCtx,
                o = a.w,
                l = 0,
                u = 0,
                h = o.globals.pointsArray;
              n = new Re(this.ctx).getActiveConfigSeriesIndex("asc", [
                "line",
                "area",
                "scatter",
                "bubble",
              ]);
              var d = a.tooltipUtil.getHoverMarkerSize(n);
              h[n] && ((l = h[n][i][0]), (u = h[n][i][1]));
              var g = a.tooltipUtil.getAllMarkers();
              if (g !== null)
                for (var x = 0; x < o.globals.series.length; x++) {
                  var v = h[x];
                  if (
                    (o.globals.comboCharts &&
                      v === void 0 &&
                      g.splice(x, 0, null),
                    v && v.length)
                  ) {
                    var w = h[x][i][1],
                      k = void 0;
                    if (
                      (g[x].setAttribute("cx", l),
                      o.config.chart.type === "rangeArea" &&
                        !o.globals.comboCharts)
                    ) {
                      var C = i + o.globals.series[x].length;
                      (k = h[x][C][1]), (w -= Math.abs(w - k) / 2);
                    }
                    w !== null &&
                    !isNaN(w) &&
                    w < o.globals.gridHeight + d &&
                    w + d > 0
                      ? (g[x] && g[x].setAttribute("r", d),
                        g[x] && g[x].setAttribute("cy", w))
                      : g[x] && g[x].setAttribute("r", 0);
                  }
                }
              this.moveXCrosshairs(l),
                a.fixedTooltip ||
                  this.moveTooltip(l, u || o.globals.gridHeight, d);
            },
          },
          {
            key: "moveStickyTooltipOverBars",
            value: function (i, n) {
              var a = this.w,
                o = this.ttCtx,
                l = a.globals.columnSeries
                  ? a.globals.columnSeries.length
                  : a.globals.series.length,
                u =
                  l >= 2 && l % 2 == 0
                    ? Math.floor(l / 2)
                    : Math.floor(l / 2) + 1;
              a.globals.isBarHorizontal &&
                (u = new Re(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
              var h = a.globals.dom.baseEl.querySelector(
                ".apexcharts-bar-series .apexcharts-series[rel='"
                  .concat(u, "'] path[j='")
                  .concat(
                    i,
                    "'], .apexcharts-candlestick-series .apexcharts-series[rel='"
                  )
                  .concat(u, "'] path[j='")
                  .concat(
                    i,
                    "'], .apexcharts-boxPlot-series .apexcharts-series[rel='"
                  )
                  .concat(u, "'] path[j='")
                  .concat(
                    i,
                    "'], .apexcharts-rangebar-series .apexcharts-series[rel='"
                  )
                  .concat(u, "'] path[j='")
                  .concat(i, "']")
              );
              h ||
                typeof n != "number" ||
                (h = a.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-series .apexcharts-series[data\\:realIndex='"
                    .concat(n, "'] path[j='")
                    .concat(
                      i,
                      `'],
        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='`
                    )
                    .concat(n, "'] path[j='")
                    .concat(
                      i,
                      `'],
        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='`
                    )
                    .concat(n, "'] path[j='")
                    .concat(
                      i,
                      `'],
        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='`
                    )
                    .concat(n, "'] path[j='")
                    .concat(i, "']")
                ));
              var d = h ? parseFloat(h.getAttribute("cx")) : 0,
                g = h ? parseFloat(h.getAttribute("cy")) : 0,
                x = h ? parseFloat(h.getAttribute("barWidth")) : 0,
                v = o.getElGrid().getBoundingClientRect(),
                w =
                  h &&
                  (h.classList.contains("apexcharts-candlestick-area") ||
                    h.classList.contains("apexcharts-boxPlot-area"));
              a.globals.isXNumeric
                ? (h && !w && (d -= l % 2 != 0 ? x / 2 : 0),
                  h && w && a.globals.comboCharts && (d -= x / 2))
                : a.globals.isBarHorizontal ||
                  ((d =
                    o.xAxisTicksPositions[i - 1] +
                    o.dataPointsDividedWidth / 2),
                  isNaN(d) &&
                    (d =
                      o.xAxisTicksPositions[i] - o.dataPointsDividedWidth / 2)),
                a.globals.isBarHorizontal
                  ? (g -= o.tooltipRect.ttHeight)
                  : a.config.tooltip.followCursor
                  ? (g = o.e.clientY - v.top - o.tooltipRect.ttHeight / 2)
                  : g + o.tooltipRect.ttHeight + 15 > a.globals.gridHeight &&
                    (g = a.globals.gridHeight),
                a.globals.isBarHorizontal || this.moveXCrosshairs(d),
                o.fixedTooltip ||
                  this.moveTooltip(d, g || a.globals.gridHeight);
            },
          },
        ]),
        M
      );
    })(),
    ay = (function () {
      function M(i) {
        f(this, M),
          (this.w = i.w),
          (this.ttCtx = i),
          (this.ctx = i.ctx),
          (this.tooltipPosition = new Ih(i));
      }
      return (
        y(M, [
          {
            key: "drawDynamicPoints",
            value: function () {
              var i = this.w,
                n = new B(this.ctx),
                a = new je(this.ctx),
                o = i.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
              (o = Y(o)),
                i.config.chart.stacked &&
                  o.sort(function (v, w) {
                    return (
                      parseFloat(v.getAttribute("data:realIndex")) -
                      parseFloat(w.getAttribute("data:realIndex"))
                    );
                  });
              for (var l = 0; l < o.length; l++) {
                var u = o[l].querySelector(".apexcharts-series-markers-wrap");
                if (u !== null) {
                  var h = void 0,
                    d = "apexcharts-marker w".concat(
                      (Math.random() + 1).toString(36).substring(4)
                    );
                  (i.config.chart.type !== "line" &&
                    i.config.chart.type !== "area") ||
                    i.globals.comboCharts ||
                    i.config.tooltip.intersect ||
                    (d += " no-pointer-events");
                  var g = a.getMarkerConfig({
                    cssClass: d,
                    seriesIndex: Number(u.getAttribute("data:realIndex")),
                  });
                  (h = n.drawMarker(0, 0, g)).node.setAttribute(
                    "default-marker-size",
                    0
                  );
                  var x = document.createElementNS(i.globals.SVGNS, "g");
                  x.classList.add("apexcharts-series-markers"),
                    x.appendChild(h.node),
                    u.appendChild(x);
                }
              }
            },
          },
          {
            key: "enlargeCurrentPoint",
            value: function (i, n) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                o =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : null,
                l = this.w;
              l.config.chart.type !== "bubble" && this.newPointSize(i, n);
              var u = n.getAttribute("cx"),
                h = n.getAttribute("cy");
              if (
                (a !== null && o !== null && ((u = a), (h = o)),
                this.tooltipPosition.moveXCrosshairs(u),
                !this.fixedTooltip)
              ) {
                if (l.config.chart.type === "radar") {
                  var d = this.ttCtx.getElGrid().getBoundingClientRect();
                  u = this.ttCtx.e.clientX - d.left;
                }
                this.tooltipPosition.moveTooltip(
                  u,
                  h,
                  l.config.markers.hover.size
                );
              }
            },
          },
          {
            key: "enlargePoints",
            value: function (i) {
              for (
                var n = this.w,
                  a = this,
                  o = this.ttCtx,
                  l = i,
                  u = n.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"
                  ),
                  h = n.config.markers.hover.size,
                  d = 0;
                d < u.length;
                d++
              ) {
                var g = u[d].getAttribute("rel"),
                  x = u[d].getAttribute("index");
                if (
                  (h === void 0 &&
                    (h =
                      n.globals.markers.size[x] +
                      n.config.markers.hover.sizeOffset),
                  l === parseInt(g, 10))
                ) {
                  a.newPointSize(l, u[d]);
                  var v = u[d].getAttribute("cx"),
                    w = u[d].getAttribute("cy");
                  a.tooltipPosition.moveXCrosshairs(v),
                    o.fixedTooltip || a.tooltipPosition.moveTooltip(v, w, h);
                } else a.oldPointSize(u[d]);
              }
            },
          },
          {
            key: "newPointSize",
            value: function (i, n) {
              var a = this.w,
                o = a.config.markers.hover.size,
                l = i === 0 ? n.parentNode.firstChild : n.parentNode.lastChild;
              if (l.getAttribute("default-marker-size") !== "0") {
                var u = parseInt(l.getAttribute("index"), 10);
                o === void 0 &&
                  (o =
                    a.globals.markers.size[u] +
                    a.config.markers.hover.sizeOffset),
                  o < 0 && (o = 0),
                  l.setAttribute("r", o);
              }
            },
          },
          {
            key: "oldPointSize",
            value: function (i) {
              var n = parseFloat(i.getAttribute("default-marker-size"));
              i.setAttribute("r", n);
            },
          },
          {
            key: "resetPointsSize",
            value: function () {
              for (
                var i = this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"
                  ),
                  n = 0;
                n < i.length;
                n++
              ) {
                var a = parseFloat(i[n].getAttribute("default-marker-size"));
                L.isNumber(a) && a >= 0
                  ? i[n].setAttribute("r", a)
                  : i[n].setAttribute("r", 0);
              }
            },
          },
        ]),
        M
      );
    })(),
    sy = (function () {
      function M(i) {
        f(this, M), (this.w = i.w);
        var n = this.w;
        (this.ttCtx = i),
          (this.isVerticalGroupedRangeBar =
            !n.globals.isBarHorizontal &&
            n.config.chart.type === "rangeBar" &&
            n.config.plotOptions.bar.rangeBarGroupRows);
      }
      return (
        y(M, [
          {
            key: "getAttr",
            value: function (i, n) {
              return parseFloat(i.target.getAttribute(n));
            },
          },
          {
            key: "handleHeatTreeTooltip",
            value: function (i) {
              var n = i.e,
                a = i.opt,
                o = i.x,
                l = i.y,
                u = i.type,
                h = this.ttCtx,
                d = this.w;
              if (
                n.target.classList.contains("apexcharts-".concat(u, "-rect"))
              ) {
                var g = this.getAttr(n, "i"),
                  x = this.getAttr(n, "j"),
                  v = this.getAttr(n, "cx"),
                  w = this.getAttr(n, "cy"),
                  k = this.getAttr(n, "width"),
                  C = this.getAttr(n, "height");
                if (
                  (h.tooltipLabels.drawSeriesTexts({
                    ttItems: a.ttItems,
                    i: g,
                    j: x,
                    shared: !1,
                    e: n,
                  }),
                  (d.globals.capturedSeriesIndex = g),
                  (d.globals.capturedDataPointIndex = x),
                  (o = v + h.tooltipRect.ttWidth / 2 + k),
                  (l = w + h.tooltipRect.ttHeight / 2 - C / 2),
                  h.tooltipPosition.moveXCrosshairs(v + k / 2),
                  o > d.globals.gridWidth / 2 &&
                    (o = v - h.tooltipRect.ttWidth / 2 + k),
                  h.w.config.tooltip.followCursor)
                ) {
                  var P = d.globals.dom.elWrap.getBoundingClientRect();
                  (o =
                    d.globals.clientX -
                    P.left -
                    (o > d.globals.gridWidth / 2 ? h.tooltipRect.ttWidth : 0)),
                    (l =
                      d.globals.clientY -
                      P.top -
                      (l > d.globals.gridHeight / 2
                        ? h.tooltipRect.ttHeight
                        : 0));
                }
              }
              return { x: o, y: l };
            },
          },
          {
            key: "handleMarkerTooltip",
            value: function (i) {
              var n,
                a,
                o = i.e,
                l = i.opt,
                u = i.x,
                h = i.y,
                d = this.w,
                g = this.ttCtx;
              if (o.target.classList.contains("apexcharts-marker")) {
                var x = parseInt(l.paths.getAttribute("cx"), 10),
                  v = parseInt(l.paths.getAttribute("cy"), 10),
                  w = parseFloat(l.paths.getAttribute("val"));
                if (
                  ((a = parseInt(l.paths.getAttribute("rel"), 10)),
                  (n =
                    parseInt(
                      l.paths.parentNode.parentNode.parentNode.getAttribute(
                        "rel"
                      ),
                      10
                    ) - 1),
                  g.intersect)
                ) {
                  var k = L.findAncestor(l.paths, "apexcharts-series");
                  k && (n = parseInt(k.getAttribute("data:realIndex"), 10));
                }
                if (
                  (g.tooltipLabels.drawSeriesTexts({
                    ttItems: l.ttItems,
                    i: n,
                    j: a,
                    shared: !g.showOnIntersect && d.config.tooltip.shared,
                    e: o,
                  }),
                  o.type === "mouseup" && g.markerClick(o, n, a),
                  (d.globals.capturedSeriesIndex = n),
                  (d.globals.capturedDataPointIndex = a),
                  (u = x),
                  (h = v + d.globals.translateY - 1.4 * g.tooltipRect.ttHeight),
                  g.w.config.tooltip.followCursor)
                ) {
                  var C = g.getElGrid().getBoundingClientRect();
                  h = g.e.clientY + d.globals.translateY - C.top;
                }
                w < 0 && (h = v),
                  g.marker.enlargeCurrentPoint(a, l.paths, u, h);
              }
              return { x: u, y: h };
            },
          },
          {
            key: "handleBarTooltip",
            value: function (i) {
              var n,
                a,
                o = i.e,
                l = i.opt,
                u = this.w,
                h = this.ttCtx,
                d = h.getElTooltip(),
                g = 0,
                x = 0,
                v = 0,
                w = this.getBarTooltipXY({ e: o, opt: l });
              n = w.i;
              var k = w.barHeight,
                C = w.j;
              (u.globals.capturedSeriesIndex = n),
                (u.globals.capturedDataPointIndex = C),
                (u.globals.isBarHorizontal && h.tooltipUtil.hasBars()) ||
                !u.config.tooltip.shared
                  ? ((x = w.x),
                    (v = w.y),
                    (a = Array.isArray(u.config.stroke.width)
                      ? u.config.stroke.width[n]
                      : u.config.stroke.width),
                    (g = x))
                  : u.globals.comboCharts ||
                    u.config.tooltip.shared ||
                    (g /= 2),
                isNaN(v) && (v = u.globals.svgHeight - h.tooltipRect.ttHeight);
              var P = parseInt(
                  l.paths.parentNode.getAttribute("data:realIndex"),
                  10
                ),
                E = u.globals.isMultipleYAxis
                  ? u.config.yaxis[P] && u.config.yaxis[P].reversed
                  : u.config.yaxis[0].reversed;
              if (
                (x + h.tooltipRect.ttWidth > u.globals.gridWidth && !E
                  ? (x -= h.tooltipRect.ttWidth)
                  : x < 0 && (x = 0),
                h.w.config.tooltip.followCursor)
              ) {
                var I = h.getElGrid().getBoundingClientRect();
                v = h.e.clientY - I.top;
              }
              h.tooltip === null &&
                (h.tooltip = u.globals.dom.baseEl.querySelector(
                  ".apexcharts-tooltip"
                )),
                u.config.tooltip.shared ||
                  (u.globals.comboBarCount > 0
                    ? h.tooltipPosition.moveXCrosshairs(g + a / 2)
                    : h.tooltipPosition.moveXCrosshairs(g)),
                !h.fixedTooltip &&
                  (!u.config.tooltip.shared ||
                    (u.globals.isBarHorizontal && h.tooltipUtil.hasBars())) &&
                  (E && (x -= h.tooltipRect.ttWidth) < 0 && (x = 0),
                  !E ||
                    (u.globals.isBarHorizontal && h.tooltipUtil.hasBars()) ||
                    (v = v + k - 2 * (u.globals.series[n][C] < 0 ? k : 0)),
                  (v = v + u.globals.translateY - h.tooltipRect.ttHeight / 2),
                  (d.style.left = x + u.globals.translateX + "px"),
                  (d.style.top = v + "px"));
            },
          },
          {
            key: "getBarTooltipXY",
            value: function (i) {
              var n = this,
                a = i.e,
                o = i.opt,
                l = this.w,
                u = null,
                h = this.ttCtx,
                d = 0,
                g = 0,
                x = 0,
                v = 0,
                w = 0,
                k = a.target.classList;
              if (
                k.contains("apexcharts-bar-area") ||
                k.contains("apexcharts-candlestick-area") ||
                k.contains("apexcharts-boxPlot-area") ||
                k.contains("apexcharts-rangebar-area")
              ) {
                var C = a.target,
                  P = C.getBoundingClientRect(),
                  E = o.elGrid.getBoundingClientRect(),
                  I = P.height;
                w = P.height;
                var D = P.width,
                  p = parseInt(C.getAttribute("cx"), 10),
                  b = parseInt(C.getAttribute("cy"), 10);
                v = parseFloat(C.getAttribute("barWidth"));
                var A =
                  a.type === "touchmove" ? a.touches[0].clientX : a.clientX;
                (u = parseInt(C.getAttribute("j"), 10)),
                  (d = parseInt(C.parentNode.getAttribute("rel"), 10) - 1);
                var R = C.getAttribute("data-range-y1"),
                  F = C.getAttribute("data-range-y2");
                l.globals.comboCharts &&
                  (d = parseInt(
                    C.parentNode.getAttribute("data:realIndex"),
                    10
                  ));
                var _ = function (W) {
                    return l.globals.isXNumeric
                      ? p - D / 2
                      : n.isVerticalGroupedRangeBar
                      ? p + D / 2
                      : p - h.dataPointsDividedWidth + D / 2;
                  },
                  G = function () {
                    return (
                      b -
                      h.dataPointsDividedHeight +
                      I / 2 -
                      h.tooltipRect.ttHeight / 2
                    );
                  };
                h.tooltipLabels.drawSeriesTexts({
                  ttItems: o.ttItems,
                  i: d,
                  j: u,
                  y1: R ? parseInt(R, 10) : null,
                  y2: F ? parseInt(F, 10) : null,
                  shared: !h.showOnIntersect && l.config.tooltip.shared,
                  e: a,
                }),
                  l.config.tooltip.followCursor
                    ? l.globals.isBarHorizontal
                      ? ((g = A - E.left + 15), (x = G()))
                      : ((g = _()),
                        (x =
                          a.clientY - E.top - h.tooltipRect.ttHeight / 2 - 15))
                    : l.globals.isBarHorizontal
                    ? ((g = p) < h.xyRatios.baseLineInvertedY &&
                        (g = p - h.tooltipRect.ttWidth),
                      (x = G()))
                    : ((g = _()), (x = b));
              }
              return { x: g, y: x, barHeight: w, barWidth: v, i: d, j: u };
            },
          },
        ]),
        M
      );
    })(),
    oy = (function () {
      function M(i) {
        f(this, M), (this.w = i.w), (this.ttCtx = i);
      }
      return (
        y(M, [
          {
            key: "drawXaxisTooltip",
            value: function () {
              var i = this.w,
                n = this.ttCtx,
                a = i.config.xaxis.position === "bottom";
              n.xaxisOffY = a
                ? i.globals.gridHeight + 1
                : -i.globals.xAxisHeight - i.config.xaxis.axisTicks.height + 3;
              var o = a
                  ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom"
                  : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                l = i.globals.dom.elWrap;
              n.isXAxisTooltipEnabled &&
                i.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxistooltip"
                ) === null &&
                ((n.xaxisTooltip = document.createElement("div")),
                n.xaxisTooltip.setAttribute(
                  "class",
                  o + " apexcharts-theme-" + i.config.tooltip.theme
                ),
                l.appendChild(n.xaxisTooltip),
                (n.xaxisTooltipText = document.createElement("div")),
                n.xaxisTooltipText.classList.add(
                  "apexcharts-xaxistooltip-text"
                ),
                (n.xaxisTooltipText.style.fontFamily =
                  i.config.xaxis.tooltip.style.fontFamily ||
                  i.config.chart.fontFamily),
                (n.xaxisTooltipText.style.fontSize =
                  i.config.xaxis.tooltip.style.fontSize),
                n.xaxisTooltip.appendChild(n.xaxisTooltipText));
            },
          },
          {
            key: "drawYaxisTooltip",
            value: function () {
              for (
                var i = this.w,
                  n = this.ttCtx,
                  a = function (l) {
                    var u =
                      i.config.yaxis[l].opposite ||
                      i.config.yaxis[l].crosshairs.opposite;
                    n.yaxisOffX = u ? i.globals.gridWidth + 1 : 1;
                    var h =
                      "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                        l,
                        u
                          ? " apexcharts-yaxistooltip-right"
                          : " apexcharts-yaxistooltip-left"
                      );
                    i.globals.yAxisSameScaleIndices.map(function (g, x) {
                      g.map(function (v, w) {
                        w === l &&
                          (h += i.config.yaxis[w].show
                            ? " "
                            : " apexcharts-yaxistooltip-hidden");
                      });
                    });
                    var d = i.globals.dom.elWrap;
                    i.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                        l
                      )
                    ) === null &&
                      ((n.yaxisTooltip = document.createElement("div")),
                      n.yaxisTooltip.setAttribute(
                        "class",
                        h + " apexcharts-theme-" + i.config.tooltip.theme
                      ),
                      d.appendChild(n.yaxisTooltip),
                      l === 0 && (n.yaxisTooltipText = []),
                      (n.yaxisTooltipText[l] = document.createElement("div")),
                      n.yaxisTooltipText[l].classList.add(
                        "apexcharts-yaxistooltip-text"
                      ),
                      n.yaxisTooltip.appendChild(n.yaxisTooltipText[l]));
                  },
                  o = 0;
                o < i.config.yaxis.length;
                o++
              )
                a(o);
            },
          },
          {
            key: "setXCrosshairWidth",
            value: function () {
              var i = this.w,
                n = this.ttCtx,
                a = n.getElXCrosshairs();
              if (
                ((n.xcrosshairsWidth = parseInt(
                  i.config.xaxis.crosshairs.width,
                  10
                )),
                i.globals.comboCharts)
              ) {
                var o = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-area"
                );
                if (
                  o !== null &&
                  i.config.xaxis.crosshairs.width === "barWidth"
                ) {
                  var l = parseFloat(o.getAttribute("barWidth"));
                  n.xcrosshairsWidth = l;
                } else if (i.config.xaxis.crosshairs.width === "tickWidth") {
                  var u = i.globals.labels.length;
                  n.xcrosshairsWidth = i.globals.gridWidth / u;
                }
              } else if (i.config.xaxis.crosshairs.width === "tickWidth") {
                var h = i.globals.labels.length;
                n.xcrosshairsWidth = i.globals.gridWidth / h;
              } else if (i.config.xaxis.crosshairs.width === "barWidth") {
                var d = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-area"
                );
                if (d !== null) {
                  var g = parseFloat(d.getAttribute("barWidth"));
                  n.xcrosshairsWidth = g;
                } else n.xcrosshairsWidth = 1;
              }
              i.globals.isBarHorizontal && (n.xcrosshairsWidth = 0),
                a !== null &&
                  n.xcrosshairsWidth > 0 &&
                  a.setAttribute("width", n.xcrosshairsWidth);
            },
          },
          {
            key: "handleYCrosshair",
            value: function () {
              var i = this.w,
                n = this.ttCtx;
              (n.ycrosshairs = i.globals.dom.baseEl.querySelector(
                ".apexcharts-ycrosshairs"
              )),
                (n.ycrosshairsHidden = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-ycrosshairs-hidden"
                ));
            },
          },
          {
            key: "drawYaxisTooltipText",
            value: function (i, n, a) {
              var o = this.ttCtx,
                l = this.w,
                u = l.globals.yLabelFormatters[i];
              if (o.yaxisTooltips[i]) {
                var h = o.getElGrid().getBoundingClientRect(),
                  d = (n - h.top) * a.yRatio[i],
                  g = l.globals.maxYArr[i] - l.globals.minYArr[i],
                  x = l.globals.minYArr[i] + (g - d);
                o.tooltipPosition.moveYCrosshairs(n - h.top),
                  (o.yaxisTooltipText[i].innerHTML = u(x)),
                  o.tooltipPosition.moveYAxisTooltip(i);
              }
            },
          },
        ]),
        M
      );
    })(),
    Dh = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
        var n = this.w;
        (this.tConfig = n.config.tooltip),
          (this.tooltipUtil = new zh(this)),
          (this.tooltipLabels = new ry(this)),
          (this.tooltipPosition = new Ih(this)),
          (this.marker = new ay(this)),
          (this.intersect = new sy(this)),
          (this.axesTooltip = new oy(this)),
          (this.showOnIntersect = this.tConfig.intersect),
          (this.showTooltipTitle = this.tConfig.x.show),
          (this.fixedTooltip = this.tConfig.fixed.enabled),
          (this.xaxisTooltip = null),
          (this.yaxisTTEls = null),
          (this.isBarShared =
            !n.globals.isBarHorizontal && this.tConfig.shared),
          (this.lastHoverTime = Date.now());
      }
      return (
        y(M, [
          {
            key: "getElTooltip",
            value: function (i) {
              return (
                i || (i = this),
                i.w.globals.dom.baseEl
                  ? i.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip")
                  : null
              );
            },
          },
          {
            key: "getElXCrosshairs",
            value: function () {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-xcrosshairs"
              );
            },
          },
          {
            key: "getElGrid",
            value: function () {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-grid"
              );
            },
          },
          {
            key: "drawTooltip",
            value: function (i) {
              var n = this.w;
              (this.xyRatios = i),
                (this.isXAxisTooltipEnabled =
                  n.config.xaxis.tooltip.enabled && n.globals.axisCharts),
                (this.yaxisTooltips = n.config.yaxis.map(function (u, h) {
                  return !!(
                    u.show &&
                    u.tooltip.enabled &&
                    n.globals.axisCharts
                  );
                })),
                (this.allTooltipSeriesGroups = []),
                n.globals.axisCharts || (this.showTooltipTitle = !1);
              var a = document.createElement("div");
              if (
                (a.classList.add("apexcharts-tooltip"),
                n.config.tooltip.cssClass &&
                  a.classList.add(n.config.tooltip.cssClass),
                a.classList.add("apexcharts-theme-".concat(this.tConfig.theme)),
                n.globals.dom.elWrap.appendChild(a),
                n.globals.axisCharts)
              ) {
                this.axesTooltip.drawXaxisTooltip(),
                  this.axesTooltip.drawYaxisTooltip(),
                  this.axesTooltip.setXCrosshairWidth(),
                  this.axesTooltip.handleYCrosshair();
                var o = new Jt(this.ctx);
                this.xAxisTicksPositions = o.getXAxisTicksPositions();
              }
              if (
                ((!n.globals.comboCharts &&
                  !this.tConfig.intersect &&
                  n.config.chart.type !== "rangeBar") ||
                  this.tConfig.shared ||
                  (this.showOnIntersect = !0),
                (n.config.markers.size !== 0 &&
                  n.globals.markers.largestSize !== 0) ||
                  this.marker.drawDynamicPoints(this),
                n.globals.collapsedSeries.length !== n.globals.series.length)
              ) {
                (this.dataPointsDividedHeight =
                  n.globals.gridHeight / n.globals.dataPoints),
                  (this.dataPointsDividedWidth =
                    n.globals.gridWidth / n.globals.dataPoints),
                  this.showTooltipTitle &&
                    ((this.tooltipTitle = document.createElement("div")),
                    this.tooltipTitle.classList.add("apexcharts-tooltip-title"),
                    (this.tooltipTitle.style.fontFamily =
                      this.tConfig.style.fontFamily ||
                      n.config.chart.fontFamily),
                    (this.tooltipTitle.style.fontSize =
                      this.tConfig.style.fontSize),
                    a.appendChild(this.tooltipTitle));
                var l = n.globals.series.length;
                (n.globals.xyCharts || n.globals.comboCharts) &&
                  this.tConfig.shared &&
                  (l = this.showOnIntersect ? 1 : n.globals.series.length),
                  (this.legendLabels = n.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-legend-text"
                  )),
                  (this.ttItems = this.createTTElements(l)),
                  this.addSVGEvents();
              }
            },
          },
          {
            key: "createTTElements",
            value: function (i) {
              for (
                var n = this,
                  a = this.w,
                  o = [],
                  l = this.getElTooltip(),
                  u = function (d) {
                    var g = document.createElement("div");
                    g.classList.add("apexcharts-tooltip-series-group"),
                      (g.style.order = a.config.tooltip.inverseOrder
                        ? i - d
                        : d + 1),
                      n.tConfig.shared &&
                        n.tConfig.enabledOnSeries &&
                        Array.isArray(n.tConfig.enabledOnSeries) &&
                        n.tConfig.enabledOnSeries.indexOf(d) < 0 &&
                        g.classList.add(
                          "apexcharts-tooltip-series-group-hidden"
                        );
                    var x = document.createElement("span");
                    x.classList.add("apexcharts-tooltip-marker"),
                      (x.style.backgroundColor = a.globals.colors[d]),
                      g.appendChild(x);
                    var v = document.createElement("div");
                    v.classList.add("apexcharts-tooltip-text"),
                      (v.style.fontFamily =
                        n.tConfig.style.fontFamily ||
                        a.config.chart.fontFamily),
                      (v.style.fontSize = n.tConfig.style.fontSize),
                      ["y", "goals", "z"].forEach(function (w) {
                        var k = document.createElement("div");
                        k.classList.add(
                          "apexcharts-tooltip-".concat(w, "-group")
                        );
                        var C = document.createElement("span");
                        C.classList.add(
                          "apexcharts-tooltip-text-".concat(w, "-label")
                        ),
                          k.appendChild(C);
                        var P = document.createElement("span");
                        P.classList.add(
                          "apexcharts-tooltip-text-".concat(w, "-value")
                        ),
                          k.appendChild(P),
                          v.appendChild(k);
                      }),
                      g.appendChild(v),
                      l.appendChild(g),
                      o.push(g);
                  },
                  h = 0;
                h < i;
                h++
              )
                u(h);
              return o;
            },
          },
          {
            key: "addSVGEvents",
            value: function () {
              var i = this.w,
                n = i.config.chart.type,
                a = this.getElTooltip(),
                o = !(
                  n !== "bar" &&
                  n !== "candlestick" &&
                  n !== "boxPlot" &&
                  n !== "rangeBar"
                ),
                l =
                  n === "area" ||
                  n === "line" ||
                  n === "scatter" ||
                  n === "bubble" ||
                  n === "radar",
                u = i.globals.dom.Paper.node,
                h = this.getElGrid();
              h && (this.seriesBound = h.getBoundingClientRect());
              var d,
                g = [],
                x = [],
                v = {
                  hoverArea: u,
                  elGrid: h,
                  tooltipEl: a,
                  tooltipY: g,
                  tooltipX: x,
                  ttItems: this.ttItems,
                };
              if (
                i.globals.axisCharts &&
                (l
                  ? (d = i.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker"
                    ))
                  : o
                  ? (d = i.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area"
                    ))
                  : (n !== "heatmap" && n !== "treemap") ||
                    (d = i.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap"
                    )),
                d && d.length)
              )
                for (var w = 0; w < d.length; w++)
                  g.push(d[w].getAttribute("cy")),
                    x.push(d[w].getAttribute("cx"));
              if (
                (i.globals.xyCharts && !this.showOnIntersect) ||
                (i.globals.comboCharts && !this.showOnIntersect) ||
                (o && this.tooltipUtil.hasBars() && this.tConfig.shared)
              )
                this.addPathsEventListeners([u], v);
              else if (
                (o && !i.globals.comboCharts) ||
                (l && this.showOnIntersect)
              )
                this.addDatapointEventsListeners(v);
              else if (
                !i.globals.axisCharts ||
                n === "heatmap" ||
                n === "treemap"
              ) {
                var k =
                  i.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                this.addPathsEventListeners(k, v);
              }
              if (this.showOnIntersect) {
                var C = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker"
                );
                C.length > 0 && this.addPathsEventListeners(C, v),
                  this.tooltipUtil.hasBars() &&
                    !this.tConfig.shared &&
                    this.addDatapointEventsListeners(v);
              }
            },
          },
          {
            key: "drawFixedTooltipRect",
            value: function () {
              var i = this.w,
                n = this.getElTooltip(),
                a = n.getBoundingClientRect(),
                o = a.width + 10,
                l = a.height + 10,
                u = this.tConfig.fixed.offsetX,
                h = this.tConfig.fixed.offsetY,
                d = this.tConfig.fixed.position.toLowerCase();
              return (
                d.indexOf("right") > -1 &&
                  (u = u + i.globals.svgWidth - o + 10),
                d.indexOf("bottom") > -1 &&
                  (h = h + i.globals.svgHeight - l - 10),
                (n.style.left = u + "px"),
                (n.style.top = h + "px"),
                { x: u, y: h, ttWidth: o, ttHeight: l }
              );
            },
          },
          {
            key: "addDatapointEventsListeners",
            value: function (i) {
              var n = this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area"
              );
              this.addPathsEventListeners(n, i);
            },
          },
          {
            key: "addPathsEventListeners",
            value: function (i, n) {
              for (
                var a = this,
                  o = function (u) {
                    var h = {
                      paths: i[u],
                      tooltipEl: n.tooltipEl,
                      tooltipY: n.tooltipY,
                      tooltipX: n.tooltipX,
                      elGrid: n.elGrid,
                      hoverArea: n.hoverArea,
                      ttItems: n.ttItems,
                    };
                    [
                      "mousemove",
                      "mouseup",
                      "touchmove",
                      "mouseout",
                      "touchend",
                    ].map(function (d) {
                      return i[u].addEventListener(
                        d,
                        a.onSeriesHover.bind(a, h),
                        { capture: !1, passive: !0 }
                      );
                    });
                  },
                  l = 0;
                l < i.length;
                l++
              )
                o(l);
            },
          },
          {
            key: "onSeriesHover",
            value: function (i, n) {
              var a = this,
                o = Date.now() - this.lastHoverTime;
              o >= 100
                ? this.seriesHover(i, n)
                : (clearTimeout(this.seriesHoverTimeout),
                  (this.seriesHoverTimeout = setTimeout(function () {
                    a.seriesHover(i, n);
                  }, 100 - o)));
            },
          },
          {
            key: "seriesHover",
            value: function (i, n) {
              var a = this;
              this.lastHoverTime = Date.now();
              var o = [],
                l = this.w;
              l.config.chart.group && (o = this.ctx.getGroupedCharts()),
                (l.globals.axisCharts &&
                  ((l.globals.minX === -1 / 0 && l.globals.maxX === 1 / 0) ||
                    l.globals.dataPoints === 0)) ||
                  (o.length
                    ? o.forEach(function (u) {
                        var h = a.getElTooltip(u),
                          d = {
                            paths: i.paths,
                            tooltipEl: h,
                            tooltipY: i.tooltipY,
                            tooltipX: i.tooltipX,
                            elGrid: i.elGrid,
                            hoverArea: i.hoverArea,
                            ttItems: u.w.globals.tooltip.ttItems,
                          };
                        u.w.globals.minX === a.w.globals.minX &&
                          u.w.globals.maxX === a.w.globals.maxX &&
                          u.w.globals.tooltip.seriesHoverByContext({
                            chartCtx: u,
                            ttCtx: u.w.globals.tooltip,
                            opt: d,
                            e: n,
                          });
                      })
                    : this.seriesHoverByContext({
                        chartCtx: this.ctx,
                        ttCtx: this.w.globals.tooltip,
                        opt: i,
                        e: n,
                      }));
            },
          },
          {
            key: "seriesHoverByContext",
            value: function (i) {
              var n = i.chartCtx,
                a = i.ttCtx,
                o = i.opt,
                l = i.e,
                u = n.w,
                h = this.getElTooltip();
              h &&
                ((a.tooltipRect = {
                  x: 0,
                  y: 0,
                  ttWidth: h.getBoundingClientRect().width,
                  ttHeight: h.getBoundingClientRect().height,
                }),
                (a.e = l),
                a.tooltipUtil.hasBars() &&
                  !u.globals.comboCharts &&
                  !a.isBarShared &&
                  this.tConfig.onDatasetHover.highlightDataSeries &&
                  new Re(n).toggleSeriesOnHover(l, l.target.parentNode),
                a.fixedTooltip && a.drawFixedTooltipRect(),
                u.globals.axisCharts
                  ? a.axisChartsTooltips({
                      e: l,
                      opt: o,
                      tooltipRect: a.tooltipRect,
                    })
                  : a.nonAxisChartsTooltips({
                      e: l,
                      opt: o,
                      tooltipRect: a.tooltipRect,
                    }));
            },
          },
          {
            key: "axisChartsTooltips",
            value: function (i) {
              var n,
                a,
                o = i.e,
                l = i.opt,
                u = this.w,
                h = l.elGrid.getBoundingClientRect(),
                d = o.type === "touchmove" ? o.touches[0].clientX : o.clientX,
                g = o.type === "touchmove" ? o.touches[0].clientY : o.clientY;
              if (
                ((this.clientY = g),
                (this.clientX = d),
                (u.globals.capturedSeriesIndex = -1),
                (u.globals.capturedDataPointIndex = -1),
                g < h.top || g > h.top + h.height)
              )
                this.handleMouseOut(l);
              else {
                if (
                  Array.isArray(this.tConfig.enabledOnSeries) &&
                  !u.config.tooltip.shared
                ) {
                  var x = parseInt(l.paths.getAttribute("index"), 10);
                  if (this.tConfig.enabledOnSeries.indexOf(x) < 0)
                    return void this.handleMouseOut(l);
                }
                var v = this.getElTooltip(),
                  w = this.getElXCrosshairs(),
                  k =
                    u.globals.xyCharts ||
                    (u.config.chart.type === "bar" &&
                      !u.globals.isBarHorizontal &&
                      this.tooltipUtil.hasBars() &&
                      this.tConfig.shared) ||
                    (u.globals.comboCharts && this.tooltipUtil.hasBars());
                if (
                  o.type === "mousemove" ||
                  o.type === "touchmove" ||
                  o.type === "mouseup"
                ) {
                  if (
                    u.globals.collapsedSeries.length +
                      u.globals.ancillaryCollapsedSeries.length ===
                    u.globals.series.length
                  )
                    return;
                  w !== null && w.classList.add("apexcharts-active");
                  var C = this.yaxisTooltips.filter(function (I) {
                    return I === !0;
                  });
                  if (
                    (this.ycrosshairs !== null &&
                      C.length &&
                      this.ycrosshairs.classList.add("apexcharts-active"),
                    k && !this.showOnIntersect)
                  )
                    this.handleStickyTooltip(o, d, g, l);
                  else if (
                    u.config.chart.type === "heatmap" ||
                    u.config.chart.type === "treemap"
                  ) {
                    var P = this.intersect.handleHeatTreeTooltip({
                      e: o,
                      opt: l,
                      x: n,
                      y: a,
                      type: u.config.chart.type,
                    });
                    (n = P.x),
                      (a = P.y),
                      (v.style.left = n + "px"),
                      (v.style.top = a + "px");
                  } else
                    this.tooltipUtil.hasBars() &&
                      this.intersect.handleBarTooltip({ e: o, opt: l }),
                      this.tooltipUtil.hasMarkers() &&
                        this.intersect.handleMarkerTooltip({
                          e: o,
                          opt: l,
                          x: n,
                          y: a,
                        });
                  if (this.yaxisTooltips.length)
                    for (var E = 0; E < u.config.yaxis.length; E++)
                      this.axesTooltip.drawYaxisTooltipText(
                        E,
                        g,
                        this.xyRatios
                      );
                  l.tooltipEl.classList.add("apexcharts-active");
                } else
                  (o.type !== "mouseout" && o.type !== "touchend") ||
                    this.handleMouseOut(l);
              }
            },
          },
          {
            key: "nonAxisChartsTooltips",
            value: function (i) {
              var n = i.e,
                a = i.opt,
                o = i.tooltipRect,
                l = this.w,
                u = a.paths.getAttribute("rel"),
                h = this.getElTooltip(),
                d = l.globals.dom.elWrap.getBoundingClientRect();
              if (n.type === "mousemove" || n.type === "touchmove") {
                h.classList.add("apexcharts-active"),
                  this.tooltipLabels.drawSeriesTexts({
                    ttItems: a.ttItems,
                    i: parseInt(u, 10) - 1,
                    shared: !1,
                  });
                var g = l.globals.clientX - d.left - o.ttWidth / 2,
                  x = l.globals.clientY - d.top - o.ttHeight - 10;
                if (
                  ((h.style.left = g + "px"),
                  (h.style.top = x + "px"),
                  l.config.legend.tooltipHoverFormatter)
                ) {
                  var v = u - 1,
                    w = (0, l.config.legend.tooltipHoverFormatter)(
                      this.legendLabels[v].getAttribute("data:default-text"),
                      { seriesIndex: v, dataPointIndex: v, w: l }
                    );
                  this.legendLabels[v].innerHTML = w;
                }
              } else
                (n.type !== "mouseout" && n.type !== "touchend") ||
                  (h.classList.remove("apexcharts-active"),
                  l.config.legend.tooltipHoverFormatter &&
                    this.legendLabels.forEach(function (k) {
                      var C = k.getAttribute("data:default-text");
                      k.innerHTML = decodeURIComponent(C);
                    }));
            },
          },
          {
            key: "handleStickyTooltip",
            value: function (i, n, a, o) {
              var l = this.w,
                u = this.tooltipUtil.getNearestValues({
                  context: this,
                  hoverArea: o.hoverArea,
                  elGrid: o.elGrid,
                  clientX: n,
                  clientY: a,
                }),
                h = u.j,
                d = u.capturedSeries;
              l.globals.collapsedSeriesIndices.includes(d) && (d = null);
              var g = o.elGrid.getBoundingClientRect();
              if (u.hoverX < 0 || u.hoverX > g.width) this.handleMouseOut(o);
              else if (d !== null) this.handleStickyCapturedSeries(i, d, o, h);
              else if (
                this.tooltipUtil.isXoverlap(h) ||
                l.globals.isBarHorizontal
              ) {
                var x = l.globals.series.findIndex(function (v, w) {
                  return !l.globals.collapsedSeriesIndices.includes(w);
                });
                this.create(i, this, x, h, o.ttItems);
              }
            },
          },
          {
            key: "handleStickyCapturedSeries",
            value: function (i, n, a, o) {
              var l = this.w;
              if (!this.tConfig.shared && l.globals.series[n][o] === null)
                return void this.handleMouseOut(a);
              if (l.globals.series[n][o] !== void 0)
                this.tConfig.shared &&
                this.tooltipUtil.isXoverlap(o) &&
                this.tooltipUtil.isInitialSeriesSameLen()
                  ? this.create(i, this, n, o, a.ttItems)
                  : this.create(i, this, n, o, a.ttItems, !1);
              else if (this.tooltipUtil.isXoverlap(o)) {
                var u = l.globals.series.findIndex(function (h, d) {
                  return !l.globals.collapsedSeriesIndices.includes(d);
                });
                this.create(i, this, u, o, a.ttItems);
              }
            },
          },
          {
            key: "deactivateHoverFilter",
            value: function () {
              for (
                var i = this.w,
                  n = new B(this.ctx),
                  a = i.globals.dom.Paper.select(".apexcharts-bar-area"),
                  o = 0;
                o < a.length;
                o++
              )
                n.pathMouseLeave(a[o]);
            },
          },
          {
            key: "handleMouseOut",
            value: function (i) {
              var n = this.w,
                a = this.getElXCrosshairs();
              if (
                (i.tooltipEl.classList.remove("apexcharts-active"),
                this.deactivateHoverFilter(),
                n.config.chart.type !== "bubble" &&
                  this.marker.resetPointsSize(),
                a !== null && a.classList.remove("apexcharts-active"),
                this.ycrosshairs !== null &&
                  this.ycrosshairs.classList.remove("apexcharts-active"),
                this.isXAxisTooltipEnabled &&
                  this.xaxisTooltip.classList.remove("apexcharts-active"),
                this.yaxisTooltips.length)
              ) {
                this.yaxisTTEls === null &&
                  (this.yaxisTTEls = n.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-yaxistooltip"
                  ));
                for (var o = 0; o < this.yaxisTTEls.length; o++)
                  this.yaxisTTEls[o].classList.remove("apexcharts-active");
              }
              n.config.legend.tooltipHoverFormatter &&
                this.legendLabels.forEach(function (l) {
                  var u = l.getAttribute("data:default-text");
                  l.innerHTML = decodeURIComponent(u);
                });
            },
          },
          {
            key: "markerClick",
            value: function (i, n, a) {
              var o = this.w;
              typeof o.config.chart.events.markerClick == "function" &&
                o.config.chart.events.markerClick(i, this.ctx, {
                  seriesIndex: n,
                  dataPointIndex: a,
                  w: o,
                }),
                this.ctx.events.fireEvent("markerClick", [
                  i,
                  this.ctx,
                  { seriesIndex: n, dataPointIndex: a, w: o },
                ]);
            },
          },
          {
            key: "create",
            value: function (i, n, a, o, l) {
              var u,
                h,
                d,
                g,
                x,
                v,
                w,
                k,
                C,
                P,
                E,
                I,
                D,
                p,
                b,
                A,
                R =
                  arguments.length > 5 && arguments[5] !== void 0
                    ? arguments[5]
                    : null,
                F = this.w,
                _ = n;
              i.type === "mouseup" && this.markerClick(i, a, o),
                R === null && (R = this.tConfig.shared);
              var G = this.tooltipUtil.hasMarkers(a),
                W = this.tooltipUtil.getElBars();
              if (F.config.legend.tooltipHoverFormatter) {
                var Z = F.config.legend.tooltipHoverFormatter,
                  ee = Array.from(this.legendLabels);
                ee.forEach(function (Vt) {
                  var an = Vt.getAttribute("data:default-text");
                  Vt.innerHTML = decodeURIComponent(an);
                });
                for (var J = 0; J < ee.length; J++) {
                  var oe = ee[J],
                    ce = parseInt(oe.getAttribute("i"), 10),
                    Se = decodeURIComponent(
                      oe.getAttribute("data:default-text")
                    ),
                    ke = Z(Se, {
                      seriesIndex: R ? ce : a,
                      dataPointIndex: o,
                      w: F,
                    });
                  if (R)
                    oe.innerHTML =
                      F.globals.collapsedSeriesIndices.indexOf(ce) < 0
                        ? ke
                        : Se;
                  else if (((oe.innerHTML = ce === a ? ke : Se), a === ce))
                    break;
                }
              }
              var Le = s(
                s(
                  { ttItems: l, i: a, j: o },
                  ((u = F.globals.seriesRange) === null ||
                  u === void 0 ||
                  (h = u[a]) === null ||
                  h === void 0 ||
                  (d = h[o]) === null ||
                  d === void 0 ||
                  (g = d.y[0]) === null ||
                  g === void 0
                    ? void 0
                    : g.y1) !== void 0 && {
                    y1:
                      (x = F.globals.seriesRange) === null ||
                      x === void 0 ||
                      (v = x[a]) === null ||
                      v === void 0 ||
                      (w = v[o]) === null ||
                      w === void 0 ||
                      (k = w.y[0]) === null ||
                      k === void 0
                        ? void 0
                        : k.y1,
                  }
                ),
                ((C = F.globals.seriesRange) === null ||
                C === void 0 ||
                (P = C[a]) === null ||
                P === void 0 ||
                (E = P[o]) === null ||
                E === void 0 ||
                (I = E.y[0]) === null ||
                I === void 0
                  ? void 0
                  : I.y2) !== void 0 && {
                  y2:
                    (D = F.globals.seriesRange) === null ||
                    D === void 0 ||
                    (p = D[a]) === null ||
                    p === void 0 ||
                    (b = p[o]) === null ||
                    b === void 0 ||
                    (A = b.y[0]) === null ||
                    A === void 0
                      ? void 0
                      : A.y2,
                }
              );
              if (R) {
                if (
                  (_.tooltipLabels.drawSeriesTexts(
                    s(
                      s({}, Le),
                      {},
                      { shared: !this.showOnIntersect && this.tConfig.shared }
                    )
                  ),
                  G)
                )
                  F.globals.markers.largestSize > 0
                    ? _.marker.enlargePoints(o)
                    : _.tooltipPosition.moveDynamicPointsOnHover(o);
                else if (
                  this.tooltipUtil.hasBars() &&
                  ((this.barSeriesHeight = this.tooltipUtil.getBarsHeight(W)),
                  this.barSeriesHeight > 0)
                ) {
                  var Be = new B(this.ctx),
                    ze = F.globals.dom.Paper.select(
                      ".apexcharts-bar-area[j='".concat(o, "']")
                    );
                  this.deactivateHoverFilter(),
                    this.tooltipPosition.moveStickyTooltipOverBars(o, a);
                  for (var $e = 0; $e < ze.length; $e++)
                    Be.pathMouseEnter(ze[$e]);
                }
              } else
                _.tooltipLabels.drawSeriesTexts(s({ shared: !1 }, Le)),
                  this.tooltipUtil.hasBars() &&
                    _.tooltipPosition.moveStickyTooltipOverBars(o, a),
                  G && _.tooltipPosition.moveMarkers(a, o);
            },
          },
        ]),
        M
      );
    })(),
    ly = (function () {
      function M(i) {
        f(this, M),
          (this.w = i.w),
          (this.barCtx = i),
          (this.totalFormatter =
            this.w.config.plotOptions.bar.dataLabels.total.formatter),
          this.totalFormatter ||
            (this.totalFormatter = this.w.config.dataLabels.formatter);
      }
      return (
        y(M, [
          {
            key: "handleBarDataLabels",
            value: function (i) {
              var n = i.x,
                a = i.y,
                o = i.y1,
                l = i.y2,
                u = i.i,
                h = i.j,
                d = i.realIndex,
                g = i.groupIndex,
                x = i.series,
                v = i.barHeight,
                w = i.barWidth,
                k = i.barXPosition,
                C = i.barYPosition,
                P = i.visibleSeries,
                E = i.renderedPath,
                I = this.w,
                D = new B(this.barCtx.ctx),
                p = Array.isArray(this.barCtx.strokeWidth)
                  ? this.barCtx.strokeWidth[d]
                  : this.barCtx.strokeWidth,
                b = n + parseFloat(w * P),
                A = a + parseFloat(v * P);
              I.globals.isXNumeric &&
                !I.globals.isBarHorizontal &&
                ((b = n + parseFloat(w * (P + 1))),
                (A = a + parseFloat(v * (P + 1)) - p));
              var R,
                F = null,
                _ = n,
                G = a,
                W = {},
                Z = I.config.dataLabels,
                ee = this.barCtx.barOptions.dataLabels,
                J = this.barCtx.barOptions.dataLabels.total;
              C !== void 0 && this.barCtx.isRangeBar && ((A = C), (G = C)),
                k !== void 0 &&
                  this.barCtx.isVerticalGroupedRangeBar &&
                  ((b = k), (_ = k));
              var oe = Z.offsetX,
                ce = Z.offsetY,
                Se = { width: 0, height: 0 };
              if (I.config.dataLabels.enabled) {
                var ke = this.barCtx.series[u][h];
                Se = D.getTextRects(
                  I.globals.yLabelFormatters[0](ke),
                  parseFloat(Z.style.fontSize)
                );
              }
              var Le = {
                x: n,
                y: a,
                i: u,
                j: h,
                realIndex: d,
                groupIndex: g || -1,
                renderedPath: E,
                bcx: b,
                bcy: A,
                barHeight: v,
                barWidth: w,
                textRects: Se,
                strokeWidth: p,
                dataLabelsX: _,
                dataLabelsY: G,
                dataLabelsConfig: Z,
                barDataLabelsConfig: ee,
                barTotalDataLabelsConfig: J,
                offX: oe,
                offY: ce,
              };
              return (
                (W = this.barCtx.isHorizontal
                  ? this.calculateBarsDataLabelsPosition(Le)
                  : this.calculateColumnsDataLabelsPosition(Le)),
                E.attr({
                  cy: W.bcy,
                  cx: W.bcx,
                  j: h,
                  val: x[u][h],
                  barHeight: v,
                  barWidth: w,
                }),
                (R = this.drawCalculatedDataLabels({
                  x: W.dataLabelsX,
                  y: W.dataLabelsY,
                  val: this.barCtx.isRangeBar ? [o, l] : x[u][h],
                  i: d,
                  j: h,
                  barWidth: w,
                  barHeight: v,
                  textRects: Se,
                  dataLabelsConfig: Z,
                })),
                I.config.chart.stacked &&
                  J.enabled &&
                  (F = this.drawTotalDataLabels({
                    x: W.totalDataLabelsX,
                    y: W.totalDataLabelsY,
                    realIndex: d,
                    textAnchor: W.totalDataLabelsAnchor,
                    val: this.getStackedTotalDataLabel({ realIndex: d, j: h }),
                    dataLabelsConfig: Z,
                    barTotalDataLabelsConfig: J,
                  })),
                { dataLabels: R, totalDataLabels: F }
              );
            },
          },
          {
            key: "getStackedTotalDataLabel",
            value: function (i) {
              var n = i.realIndex,
                a = i.j,
                o = this.w,
                l = this.barCtx.stackedSeriesTotals[a];
              return (
                this.totalFormatter &&
                  (l = this.totalFormatter(
                    l,
                    s(s({}, o), {}, { seriesIndex: n, dataPointIndex: a, w: o })
                  )),
                l
              );
            },
          },
          {
            key: "calculateColumnsDataLabelsPosition",
            value: function (i) {
              var n,
                a,
                o = this.w,
                l = i.i,
                u = i.j,
                h = i.realIndex,
                d = i.groupIndex,
                g = i.y,
                x = i.bcx,
                v = i.barWidth,
                w = i.barHeight,
                k = i.textRects,
                C = i.dataLabelsX,
                P = i.dataLabelsY,
                E = i.dataLabelsConfig,
                I = i.barDataLabelsConfig,
                D = i.barTotalDataLabelsConfig,
                p = i.strokeWidth,
                b = i.offX,
                A = i.offY;
              w = Math.abs(w);
              var R =
                  o.config.plotOptions.bar.dataLabels.orientation ===
                  "vertical",
                F = this.barCtx.barHelpers.getZeroValueEncounters({
                  i: l,
                  j: u,
                }).zeroEncounters;
              x = x - p / 2 + (d !== -1 ? d * v : 0);
              var _ = o.globals.gridWidth / o.globals.dataPoints;
              this.barCtx.isVerticalGroupedRangeBar
                ? (C += v / 2)
                : ((C = o.globals.isXNumeric
                    ? x - v / 2 + b
                    : x - _ + v / 2 + b),
                  F > 0 &&
                    o.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                    (C -= v * F)),
                R && (C = C + k.height / 2 - p / 2 - 2);
              var G = this.barCtx.series[l][u] < 0,
                W = g;
              switch (
                (this.barCtx.isReversed &&
                  ((W = g - w + (G ? 2 * w : 0)), (g -= w)),
                I.position)
              ) {
                case "center":
                  P = R
                    ? G
                      ? W - w / 2 + A
                      : W + w / 2 - A
                    : G
                    ? W - w / 2 + k.height / 2 + A
                    : W + w / 2 + k.height / 2 - A;
                  break;
                case "bottom":
                  P = R
                    ? G
                      ? W - w + A
                      : W + w - A
                    : G
                    ? W - w + k.height + p + A
                    : W + w - k.height / 2 + p - A;
                  break;
                case "top":
                  P = R
                    ? G
                      ? W + A
                      : W - A
                    : G
                    ? W - k.height / 2 - A
                    : W + k.height + A;
              }
              if (this.barCtx.lastActiveBarSerieIndex === h && D.enabled) {
                var Z = new B(this.barCtx.ctx).getTextRects(
                  this.getStackedTotalDataLabel({ realIndex: h, j: u }),
                  E.fontSize
                );
                (n = G
                  ? W - Z.height / 2 - A - D.offsetY + 18
                  : W + Z.height + A + D.offsetY - 18),
                  (a = C + D.offsetX);
              }
              return (
                o.config.chart.stacked ||
                  (P < 0
                    ? (P = 0 + p)
                    : P + k.height / 3 > o.globals.gridHeight &&
                      (P = o.globals.gridHeight - p)),
                {
                  bcx: x,
                  bcy: g,
                  dataLabelsX: C,
                  dataLabelsY: P,
                  totalDataLabelsX: a,
                  totalDataLabelsY: n,
                  totalDataLabelsAnchor: "middle",
                }
              );
            },
          },
          {
            key: "calculateBarsDataLabelsPosition",
            value: function (i) {
              var n = this.w,
                a = i.x,
                o = i.i,
                l = i.j,
                u = i.realIndex,
                h = i.groupIndex,
                d = i.bcy,
                g = i.barHeight,
                x = i.barWidth,
                v = i.textRects,
                w = i.dataLabelsX,
                k = i.strokeWidth,
                C = i.dataLabelsConfig,
                P = i.barDataLabelsConfig,
                E = i.barTotalDataLabelsConfig,
                I = i.offX,
                D = i.offY,
                p = n.globals.gridHeight / n.globals.dataPoints;
              x = Math.abs(x);
              var b,
                A,
                R =
                  (d += h !== -1 ? h * g : 0) -
                  (this.barCtx.isRangeBar ? 0 : p) +
                  g / 2 +
                  v.height / 2 +
                  D -
                  3,
                F = "start",
                _ = this.barCtx.series[o][l] < 0,
                G = a;
              switch (
                (this.barCtx.isReversed &&
                  ((G = a + x - (_ ? 2 * x : 0)),
                  (a = n.globals.gridWidth - x)),
                P.position)
              ) {
                case "center":
                  w = _ ? G + x / 2 - I : Math.max(v.width / 2, G - x / 2) + I;
                  break;
                case "bottom":
                  w = _
                    ? G + x - k - Math.round(v.width / 2) - I
                    : G - x + k + Math.round(v.width / 2) + I;
                  break;
                case "top":
                  w = _
                    ? G - k + Math.round(v.width / 2) - I
                    : G - k - Math.round(v.width / 2) + I;
              }
              if (this.barCtx.lastActiveBarSerieIndex === u && E.enabled) {
                var W = new B(this.barCtx.ctx).getTextRects(
                  this.getStackedTotalDataLabel({ realIndex: u, j: l }),
                  C.fontSize
                );
                _
                  ? ((b = G - k + Math.round(W.width / 2) - I - E.offsetX - 15),
                    (F = "end"))
                  : (b = G - k - Math.round(W.width / 2) + I + E.offsetX + 15),
                  (A = R + E.offsetY);
              }
              return (
                n.config.chart.stacked ||
                  (w < 0
                    ? (w = w + v.width + k)
                    : w + v.width / 2 > n.globals.gridWidth &&
                      (w = n.globals.gridWidth - v.width - k)),
                {
                  bcx: a,
                  bcy: d,
                  dataLabelsX: w,
                  dataLabelsY: R,
                  totalDataLabelsX: b,
                  totalDataLabelsY: A,
                  totalDataLabelsAnchor: F,
                }
              );
            },
          },
          {
            key: "drawCalculatedDataLabels",
            value: function (i) {
              var n = i.x,
                a = i.y,
                o = i.val,
                l = i.i,
                u = i.j,
                h = i.textRects,
                d = i.barHeight,
                g = i.barWidth,
                x = i.dataLabelsConfig,
                v = this.w,
                w = "rotate(0)";
              v.config.plotOptions.bar.dataLabels.orientation === "vertical" &&
                (w = "rotate(-90, ".concat(n, ", ").concat(a, ")"));
              var k = new Lt(this.barCtx.ctx),
                C = new B(this.barCtx.ctx),
                P = x.formatter,
                E = null,
                I = v.globals.collapsedSeriesIndices.indexOf(l) > -1;
              if (x.enabled && !I) {
                E = C.group({ class: "apexcharts-data-labels", transform: w });
                var D = "";
                o !== void 0 &&
                  (D = P(
                    o,
                    s(s({}, v), {}, { seriesIndex: l, dataPointIndex: u, w: v })
                  )),
                  !o &&
                    v.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                    (D = "");
                var p = v.globals.series[l][u] < 0,
                  b = v.config.plotOptions.bar.dataLabels.position;
                v.config.plotOptions.bar.dataLabels.orientation ===
                  "vertical" &&
                  (b === "top" && (x.textAnchor = p ? "end" : "start"),
                  b === "center" && (x.textAnchor = "middle"),
                  b === "bottom" && (x.textAnchor = p ? "end" : "start")),
                  this.barCtx.isRangeBar &&
                    this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                    g < C.getTextRects(D, parseFloat(x.style.fontSize)).width &&
                    (D = ""),
                  v.config.chart.stacked &&
                    this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                    (this.barCtx.isHorizontal
                      ? h.width / 1.6 > Math.abs(g) && (D = "")
                      : h.height / 1.6 > Math.abs(d) && (D = ""));
                var A = s({}, x);
                this.barCtx.isHorizontal &&
                  o < 0 &&
                  (x.textAnchor === "start"
                    ? (A.textAnchor = "end")
                    : x.textAnchor === "end" && (A.textAnchor = "start")),
                  k.plotDataLabelsText({
                    x: n,
                    y: a,
                    text: D,
                    i: l,
                    j: u,
                    parent: E,
                    dataLabelsConfig: A,
                    alwaysDrawDataLabel: !0,
                    offsetCorrection: !0,
                  });
              }
              return E;
            },
          },
          {
            key: "drawTotalDataLabels",
            value: function (i) {
              var n,
                a = i.x,
                o = i.y,
                l = i.val,
                u = i.realIndex,
                h = i.textAnchor,
                d = i.barTotalDataLabelsConfig,
                g = new B(this.barCtx.ctx);
              return (
                d.enabled &&
                  a !== void 0 &&
                  o !== void 0 &&
                  this.barCtx.lastActiveBarSerieIndex === u &&
                  (n = g.drawText({
                    x: a,
                    y: o,
                    foreColor: d.style.color,
                    text: l,
                    textAnchor: h,
                    fontFamily: d.style.fontFamily,
                    fontSize: d.style.fontSize,
                    fontWeight: d.style.fontWeight,
                  })),
                n
              );
            },
          },
        ]),
        M
      );
    })(),
    cy = (function () {
      function M(i) {
        f(this, M), (this.w = i.w), (this.barCtx = i);
      }
      return (
        y(M, [
          {
            key: "initVariables",
            value: function (i) {
              var n = this.w;
              (this.barCtx.series = i),
                (this.barCtx.totalItems = 0),
                (this.barCtx.seriesLen = 0),
                (this.barCtx.visibleI = -1),
                (this.barCtx.visibleItems = 1);
              for (var a = 0; a < i.length; a++)
                if (
                  (i[a].length > 0 &&
                    ((this.barCtx.seriesLen = this.barCtx.seriesLen + 1),
                    (this.barCtx.totalItems += i[a].length)),
                  n.globals.isXNumeric)
                )
                  for (var o = 0; o < i[a].length; o++)
                    n.globals.seriesX[a][o] > n.globals.minX &&
                      n.globals.seriesX[a][o] < n.globals.maxX &&
                      this.barCtx.visibleItems++;
                else this.barCtx.visibleItems = n.globals.dataPoints;
              this.barCtx.seriesLen === 0 && (this.barCtx.seriesLen = 1),
                (this.barCtx.zeroSerieses = []),
                n.globals.comboCharts || this.checkZeroSeries({ series: i });
            },
          },
          {
            key: "initialPositions",
            value: function () {
              var i,
                n,
                a,
                o,
                l,
                u,
                h,
                d,
                g = this.w,
                x = g.globals.dataPoints;
              this.barCtx.isRangeBar && (x = g.globals.labels.length);
              var v = this.barCtx.seriesLen;
              if (
                (g.config.plotOptions.bar.rangeBarGroupRows && (v = 1),
                this.barCtx.isHorizontal)
              )
                (l = (a = g.globals.gridHeight / x) / v),
                  g.globals.isXNumeric &&
                    (l =
                      (a = g.globals.gridHeight / this.barCtx.totalItems) /
                      this.barCtx.seriesLen),
                  (l =
                    (l * parseInt(this.barCtx.barOptions.barHeight, 10)) / 100),
                  String(this.barCtx.barOptions.barHeight).indexOf("%") ===
                    -1 && (l = parseInt(this.barCtx.barOptions.barHeight, 10)),
                  (d =
                    this.barCtx.baseLineInvertedY +
                    g.globals.padHorizontal +
                    (this.barCtx.isReversed ? g.globals.gridWidth : 0) -
                    (this.barCtx.isReversed
                      ? 2 * this.barCtx.baseLineInvertedY
                      : 0)),
                  this.barCtx.isFunnel && (d = g.globals.gridWidth / 2),
                  (n = (a - l * this.barCtx.seriesLen) / 2);
              else {
                if (
                  ((o = g.globals.gridWidth / this.barCtx.visibleItems),
                  g.config.xaxis.convertedCatToNumeric &&
                    (o = g.globals.gridWidth / g.globals.dataPoints),
                  (u =
                    ((o / v) *
                      parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                    100),
                  g.globals.isXNumeric)
                ) {
                  var w = this.barCtx.xRatio;
                  g.config.xaxis.convertedCatToNumeric &&
                    (w = this.barCtx.initialXRatio),
                    g.globals.minXDiff &&
                      g.globals.minXDiff !== 0.5 &&
                      g.globals.minXDiff / w > 0 &&
                      (o = g.globals.minXDiff / w),
                    (u =
                      ((o / v) *
                        parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                      100) < 1 && (u = 1);
                }
                String(this.barCtx.barOptions.columnWidth).indexOf("%") ===
                  -1 && (u = parseInt(this.barCtx.barOptions.columnWidth, 10)),
                  (h =
                    g.globals.gridHeight -
                    this.barCtx.baseLineY[this.barCtx.yaxisIndex] -
                    (this.barCtx.isReversed ? g.globals.gridHeight : 0) +
                    (this.barCtx.isReversed
                      ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex]
                      : 0)),
                  (i =
                    g.globals.padHorizontal +
                    (o - u * this.barCtx.seriesLen) / 2);
              }
              return {
                x: i,
                y: n,
                yDivision: a,
                xDivision: o,
                barHeight: l,
                barWidth: u,
                zeroH: h,
                zeroW: d,
              };
            },
          },
          {
            key: "initializeStackedPrevVars",
            value: function (i) {
              var n = i.w;
              n.globals.hasSeriesGroups
                ? n.globals.seriesGroups.forEach(function (a) {
                    i[a] || (i[a] = {}),
                      (i[a].prevY = []),
                      (i[a].prevX = []),
                      (i[a].prevYF = []),
                      (i[a].prevXF = []),
                      (i[a].prevYVal = []),
                      (i[a].prevXVal = []);
                  })
                : ((i.prevY = []),
                  (i.prevX = []),
                  (i.prevYF = []),
                  (i.prevXF = []),
                  (i.prevYVal = []),
                  (i.prevXVal = []));
            },
          },
          {
            key: "initializeStackedXYVars",
            value: function (i) {
              var n = i.w;
              n.globals.hasSeriesGroups
                ? n.globals.seriesGroups.forEach(function (a) {
                    i[a] || (i[a] = {}),
                      (i[a].xArrj = []),
                      (i[a].xArrjF = []),
                      (i[a].xArrjVal = []),
                      (i[a].yArrj = []),
                      (i[a].yArrjF = []),
                      (i[a].yArrjVal = []);
                  })
                : ((i.xArrj = []),
                  (i.xArrjF = []),
                  (i.xArrjVal = []),
                  (i.yArrj = []),
                  (i.yArrjF = []),
                  (i.yArrjVal = []));
            },
          },
          {
            key: "getPathFillColor",
            value: function (i, n, a, o) {
              var l,
                u,
                h,
                d,
                g = this.w,
                x = new be(this.barCtx.ctx),
                v = null,
                w = this.barCtx.barOptions.distributed ? a : n;
              return (
                this.barCtx.barOptions.colors.ranges.length > 0 &&
                  this.barCtx.barOptions.colors.ranges.map(function (k) {
                    i[n][a] >= k.from && i[n][a] <= k.to && (v = k.color);
                  }),
                g.config.series[n].data[a] &&
                  g.config.series[n].data[a].fillColor &&
                  (v = g.config.series[n].data[a].fillColor),
                x.fillPath({
                  seriesNumber: this.barCtx.barOptions.distributed ? w : o,
                  dataPointIndex: a,
                  color: v,
                  value: i[n][a],
                  fillConfig:
                    (l = g.config.series[n].data[a]) === null || l === void 0
                      ? void 0
                      : l.fill,
                  fillType:
                    (u = g.config.series[n].data[a]) !== null &&
                    u !== void 0 &&
                    (h = u.fill) !== null &&
                    h !== void 0 &&
                    h.type
                      ? (d = g.config.series[n].data[a]) === null ||
                        d === void 0
                        ? void 0
                        : d.fill.type
                      : g.config.fill.type,
                })
              );
            },
          },
          {
            key: "getStrokeWidth",
            value: function (i, n, a) {
              var o = 0,
                l = this.w;
              return (
                this.barCtx.series[i][n]
                  ? (this.barCtx.isNullValue = !1)
                  : (this.barCtx.isNullValue = !0),
                l.config.stroke.show &&
                  (this.barCtx.isNullValue ||
                    (o = Array.isArray(this.barCtx.strokeWidth)
                      ? this.barCtx.strokeWidth[a]
                      : this.barCtx.strokeWidth)),
                o
              );
            },
          },
          {
            key: "shouldApplyRadius",
            value: function (i) {
              var n = this.w,
                a = !1;
              return (
                n.config.plotOptions.bar.borderRadius > 0 &&
                  (n.config.chart.stacked &&
                  n.config.plotOptions.bar.borderRadiusWhenStacked === "last"
                    ? this.barCtx.lastActiveBarSerieIndex === i && (a = !0)
                    : (a = !0)),
                a
              );
            },
          },
          {
            key: "barBackground",
            value: function (i) {
              var n = i.j,
                a = i.i,
                o = i.x1,
                l = i.x2,
                u = i.y1,
                h = i.y2,
                d = i.elSeries,
                g = this.w,
                x = new B(this.barCtx.ctx),
                v = new Re(this.barCtx.ctx).getActiveConfigSeriesIndex();
              if (
                this.barCtx.barOptions.colors.backgroundBarColors.length > 0 &&
                v === a
              ) {
                n >= this.barCtx.barOptions.colors.backgroundBarColors.length &&
                  (n %=
                    this.barCtx.barOptions.colors.backgroundBarColors.length);
                var w = this.barCtx.barOptions.colors.backgroundBarColors[n],
                  k = x.drawRect(
                    o !== void 0 ? o : 0,
                    u !== void 0 ? u : 0,
                    l !== void 0 ? l : g.globals.gridWidth,
                    h !== void 0 ? h : g.globals.gridHeight,
                    this.barCtx.barOptions.colors.backgroundBarRadius,
                    w,
                    this.barCtx.barOptions.colors.backgroundBarOpacity
                  );
                d.add(k), k.node.classList.add("apexcharts-backgroundBar");
              }
            },
          },
          {
            key: "getColumnPaths",
            value: function (i) {
              var n,
                a = i.barWidth,
                o = i.barXPosition,
                l = i.y1,
                u = i.y2,
                h = i.strokeWidth,
                d = i.seriesGroup,
                g = i.realIndex,
                x = i.i,
                v = i.j,
                w = i.w,
                k = new B(this.barCtx.ctx);
              (h = Array.isArray(h) ? h[g] : h) || (h = 0);
              var C = a,
                P = o;
              (n = w.config.series[g].data[v]) !== null &&
                n !== void 0 &&
                n.columnWidthOffset &&
                ((P = o - w.config.series[g].data[v].columnWidthOffset / 2),
                (C = a + w.config.series[g].data[v].columnWidthOffset));
              var E = P,
                I = P + C;
              (l += 0.001), (u += 0.001);
              var D = k.move(E, l),
                p = k.move(E, l),
                b = k.line(I - h, l);
              if (
                (w.globals.previousPaths.length > 0 &&
                  (p = this.barCtx.getPreviousPath(g, v, !1)),
                (D =
                  D +
                  k.line(E, u) +
                  k.line(I - h, u) +
                  k.line(I - h, l) +
                  (w.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                (p =
                  p +
                  k.line(E, l) +
                  b +
                  b +
                  b +
                  b +
                  b +
                  k.line(E, l) +
                  (w.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                this.shouldApplyRadius(g) &&
                  (D = k.roundPathCorners(
                    D,
                    w.config.plotOptions.bar.borderRadius
                  )),
                w.config.chart.stacked)
              ) {
                var A = this.barCtx;
                w.globals.hasSeriesGroups && d && (A = this.barCtx[d]),
                  A.yArrj.push(u),
                  A.yArrjF.push(Math.abs(l - u)),
                  A.yArrjVal.push(this.barCtx.series[x][v]);
              }
              return { pathTo: D, pathFrom: p };
            },
          },
          {
            key: "getBarpaths",
            value: function (i) {
              var n,
                a = i.barYPosition,
                o = i.barHeight,
                l = i.x1,
                u = i.x2,
                h = i.strokeWidth,
                d = i.seriesGroup,
                g = i.realIndex,
                x = i.i,
                v = i.j,
                w = i.w,
                k = new B(this.barCtx.ctx);
              (h = Array.isArray(h) ? h[g] : h) || (h = 0);
              var C = a,
                P = o;
              (n = w.config.series[g].data[v]) !== null &&
                n !== void 0 &&
                n.barHeightOffset &&
                ((C = a - w.config.series[g].data[v].barHeightOffset / 2),
                (P = o + w.config.series[g].data[v].barHeightOffset));
              var E = C,
                I = C + P;
              (l += 0.001), (u += 0.001);
              var D = k.move(l, E),
                p = k.move(l, E);
              w.globals.previousPaths.length > 0 &&
                (p = this.barCtx.getPreviousPath(g, v, !1));
              var b = k.line(l, I - h);
              if (
                ((D =
                  D +
                  k.line(u, E) +
                  k.line(u, I - h) +
                  b +
                  (w.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                (p =
                  p +
                  k.line(l, E) +
                  b +
                  b +
                  b +
                  b +
                  b +
                  k.line(l, E) +
                  (w.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                this.shouldApplyRadius(g) &&
                  (D = k.roundPathCorners(
                    D,
                    w.config.plotOptions.bar.borderRadius
                  )),
                w.config.chart.stacked)
              ) {
                var A = this.barCtx;
                w.globals.hasSeriesGroups && d && (A = this.barCtx[d]),
                  A.xArrj.push(u),
                  A.xArrjF.push(Math.abs(l - u)),
                  A.xArrjVal.push(this.barCtx.series[x][v]);
              }
              return { pathTo: D, pathFrom: p };
            },
          },
          {
            key: "checkZeroSeries",
            value: function (i) {
              for (var n = i.series, a = this.w, o = 0; o < n.length; o++) {
                for (
                  var l = 0, u = 0;
                  u < n[a.globals.maxValsInArrayIndex].length;
                  u++
                )
                  l += n[o][u];
                l === 0 && this.barCtx.zeroSerieses.push(o);
              }
            },
          },
          {
            key: "getXForValue",
            value: function (i, n) {
              var a =
                !(arguments.length > 2 && arguments[2] !== void 0) ||
                arguments[2]
                  ? n
                  : null;
              return (
                i != null &&
                  (a =
                    n +
                    i / this.barCtx.invertedYRatio -
                    2 *
                      (this.barCtx.isReversed
                        ? i / this.barCtx.invertedYRatio
                        : 0)),
                a
              );
            },
          },
          {
            key: "getYForValue",
            value: function (i, n) {
              var a =
                !(arguments.length > 2 && arguments[2] !== void 0) ||
                arguments[2]
                  ? n
                  : null;
              return (
                i != null &&
                  (a =
                    n -
                    i / this.barCtx.yRatio[this.barCtx.yaxisIndex] +
                    2 *
                      (this.barCtx.isReversed
                        ? i / this.barCtx.yRatio[this.barCtx.yaxisIndex]
                        : 0)),
                a
              );
            },
          },
          {
            key: "getGoalValues",
            value: function (i, n, a, o, l) {
              var u = this,
                h = this.w,
                d = [],
                g = function (w, k) {
                  var C;
                  d.push(
                    (S(
                      (C = {}),
                      i,
                      i === "x"
                        ? u.getXForValue(w, n, !1)
                        : u.getYForValue(w, a, !1)
                    ),
                    S(C, "attrs", k),
                    C)
                  );
                };
              if (
                (h.globals.seriesGoals[o] &&
                  h.globals.seriesGoals[o][l] &&
                  Array.isArray(h.globals.seriesGoals[o][l]) &&
                  h.globals.seriesGoals[o][l].forEach(function (w) {
                    g(w.value, w);
                  }),
                this.barCtx.barOptions.isDumbbell &&
                  h.globals.seriesRange.length)
              ) {
                var x = this.barCtx.barOptions.dumbbellColors
                    ? this.barCtx.barOptions.dumbbellColors
                    : h.globals.colors,
                  v = {
                    strokeHeight: i === "x" ? 0 : h.globals.markers.size[o],
                    strokeWidth: i === "x" ? h.globals.markers.size[o] : 0,
                    strokeDashArray: 0,
                    strokeLineCap: "round",
                    strokeColor: Array.isArray(x[o]) ? x[o][0] : x[o],
                  };
                g(h.globals.seriesRangeStart[o][l], v),
                  g(
                    h.globals.seriesRangeEnd[o][l],
                    s(
                      s({}, v),
                      {},
                      { strokeColor: Array.isArray(x[o]) ? x[o][1] : x[o] }
                    )
                  );
              }
              return d;
            },
          },
          {
            key: "drawGoalLine",
            value: function (i) {
              var n = i.barXPosition,
                a = i.barYPosition,
                o = i.goalX,
                l = i.goalY,
                u = i.barWidth,
                h = i.barHeight,
                d = new B(this.barCtx.ctx),
                g = d.group({ className: "apexcharts-bar-goals-groups" });
              g.node.classList.add("apexcharts-element-hidden"),
                this.barCtx.w.globals.delayedElements.push({ el: g.node }),
                g.attr(
                  "clip-path",
                  "url(#gridRectMarkerMask".concat(
                    this.barCtx.w.globals.cuid,
                    ")"
                  )
                );
              var x = null;
              return (
                this.barCtx.isHorizontal
                  ? Array.isArray(o) &&
                    o.forEach(function (v) {
                      var w =
                          v.attrs.strokeHeight !== void 0
                            ? v.attrs.strokeHeight
                            : h / 2,
                        k = a + w + h / 2;
                      (x = d.drawLine(
                        v.x,
                        k - 2 * w,
                        v.x,
                        k,
                        v.attrs.strokeColor ? v.attrs.strokeColor : void 0,
                        v.attrs.strokeDashArray,
                        v.attrs.strokeWidth ? v.attrs.strokeWidth : 2,
                        v.attrs.strokeLineCap
                      )),
                        g.add(x);
                    })
                  : Array.isArray(l) &&
                    l.forEach(function (v) {
                      var w =
                          v.attrs.strokeWidth !== void 0
                            ? v.attrs.strokeWidth
                            : u / 2,
                        k = n + w + u / 2;
                      (x = d.drawLine(
                        k - 2 * w,
                        v.y,
                        k,
                        v.y,
                        v.attrs.strokeColor ? v.attrs.strokeColor : void 0,
                        v.attrs.strokeDashArray,
                        v.attrs.strokeHeight ? v.attrs.strokeHeight : 2,
                        v.attrs.strokeLineCap
                      )),
                        g.add(x);
                    }),
                g
              );
            },
          },
          {
            key: "drawBarShadow",
            value: function (i) {
              var n = i.prevPaths,
                a = i.currPaths,
                o = i.color,
                l = this.w,
                u = n.x,
                h = n.x1,
                d = n.barYPosition,
                g = a.x,
                x = a.x1,
                v = a.barYPosition,
                w = d + a.barHeight,
                k = new B(this.barCtx.ctx),
                C = new L(),
                P =
                  k.move(h, w) +
                  k.line(u, w) +
                  k.line(g, v) +
                  k.line(x, v) +
                  k.line(h, w) +
                  (l.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z");
              return k.drawPath({
                d: P,
                fill: C.shadeColor(0.5, L.rgb2hex(o)),
                stroke: "none",
                strokeWidth: 0,
                fillOpacity: 1,
                classes: "apexcharts-bar-shadows",
              });
            },
          },
          {
            key: "getZeroValueEncounters",
            value: function (i) {
              var n = i.i,
                a = i.j,
                o = this.w,
                l = 0,
                u = 0;
              return (
                o.globals.seriesPercent.forEach(function (h, d) {
                  h[a] && l++, d < n && h[a] === 0 && u++;
                }),
                { nonZeroColumns: l, zeroEncounters: u }
              );
            },
          },
        ]),
        M
      );
    })(),
    En = (function () {
      function M(i, n) {
        f(this, M), (this.ctx = i), (this.w = i.w);
        var a = this.w;
        (this.barOptions = a.config.plotOptions.bar),
          (this.isHorizontal = this.barOptions.horizontal),
          (this.strokeWidth = a.config.stroke.width),
          (this.isNullValue = !1),
          (this.isRangeBar = a.globals.seriesRange.length && this.isHorizontal),
          (this.isVerticalGroupedRangeBar =
            !a.globals.isBarHorizontal &&
            a.globals.seriesRange.length &&
            a.config.plotOptions.bar.rangeBarGroupRows),
          (this.isFunnel = this.barOptions.isFunnel),
          (this.xyRatios = n),
          this.xyRatios !== null &&
            ((this.xRatio = n.xRatio),
            (this.initialXRatio = n.initialXRatio),
            (this.yRatio = n.yRatio),
            (this.invertedXRatio = n.invertedXRatio),
            (this.invertedYRatio = n.invertedYRatio),
            (this.baseLineY = n.baseLineY),
            (this.baseLineInvertedY = n.baseLineInvertedY)),
          (this.yaxisIndex = 0),
          (this.seriesLen = 0),
          (this.pathArr = []);
        var o = new Re(this.ctx);
        this.lastActiveBarSerieIndex = o.getActiveConfigSeriesIndex("desc", [
          "bar",
          "column",
        ]);
        var l = o.getBarSeriesIndices(),
          u = new K(this.ctx);
        (this.stackedSeriesTotals = u.getStackedSeriesTotals(
          this.w.config.series
            .map(function (h, d) {
              return l.indexOf(d) === -1 ? d : -1;
            })
            .filter(function (h) {
              return h !== -1;
            })
        )),
          (this.barHelpers = new cy(this));
      }
      return (
        y(M, [
          {
            key: "draw",
            value: function (i, n) {
              var a = this.w,
                o = new B(this.ctx),
                l = new K(this.ctx, a);
              (i = l.getLogSeries(i)),
                (this.series = i),
                (this.yRatio = l.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(i);
              var u = o.group({
                class: "apexcharts-bar-series apexcharts-plot-series",
              });
              a.config.dataLabels.enabled &&
                this.totalItems > this.barOptions.dataLabels.maxItems &&
                console.warn(
                  "WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering - ApexCharts"
                );
              for (var h = 0, d = 0; h < i.length; h++, d++) {
                var g,
                  x,
                  v,
                  w,
                  k = void 0,
                  C = void 0,
                  P = [],
                  E = [],
                  I = a.globals.comboCharts ? n[h] : h,
                  D = o.group({
                    class: "apexcharts-series",
                    rel: h + 1,
                    seriesName: L.escapeString(a.globals.seriesNames[I]),
                    "data:realIndex": I,
                  });
                this.ctx.series.addCollapsedClassToSeries(D, I),
                  i[h].length > 0 && (this.visibleI = this.visibleI + 1);
                var p = 0,
                  b = 0;
                this.yRatio.length > 1 && (this.yaxisIndex = I),
                  (this.isReversed =
                    a.config.yaxis[this.yaxisIndex] &&
                    a.config.yaxis[this.yaxisIndex].reversed);
                var A = this.barHelpers.initialPositions();
                (C = A.y),
                  (p = A.barHeight),
                  (x = A.yDivision),
                  (w = A.zeroW),
                  (k = A.x),
                  (b = A.barWidth),
                  (g = A.xDivision),
                  (v = A.zeroH),
                  this.horizontal || E.push(k + b / 2);
                var R = o.group({
                  class: "apexcharts-datalabels",
                  "data:realIndex": I,
                });
                a.globals.delayedElements.push({ el: R.node }),
                  R.node.classList.add("apexcharts-element-hidden");
                var F = o.group({ class: "apexcharts-bar-goals-markers" }),
                  _ = o.group({ class: "apexcharts-bar-shadows" });
                a.globals.delayedElements.push({ el: _.node }),
                  _.node.classList.add("apexcharts-element-hidden");
                for (var G = 0; G < a.globals.dataPoints; G++) {
                  var W = this.barHelpers.getStrokeWidth(h, G, I),
                    Z = null,
                    ee = {
                      indexes: { i: h, j: G, realIndex: I, bc: d },
                      x: k,
                      y: C,
                      strokeWidth: W,
                      elSeries: D,
                    };
                  this.isHorizontal
                    ? ((Z = this.drawBarPaths(
                        s(
                          s({}, ee),
                          {},
                          { barHeight: p, zeroW: w, yDivision: x }
                        )
                      )),
                      (b = this.series[h][G] / this.invertedYRatio))
                    : ((Z = this.drawColumnPaths(
                        s(
                          s({}, ee),
                          {},
                          { xDivision: g, barWidth: b, zeroH: v }
                        )
                      )),
                      (p = this.series[h][G] / this.yRatio[this.yaxisIndex]));
                  var J = this.barHelpers.getPathFillColor(i, h, G, I);
                  if (
                    this.isFunnel &&
                    this.barOptions.isFunnel3d &&
                    this.pathArr.length &&
                    G > 0
                  ) {
                    var oe = this.barHelpers.drawBarShadow({
                      color:
                        typeof J == "string" &&
                        (J == null ? void 0 : J.indexOf("url")) === -1
                          ? J
                          : L.hexToRgba(a.globals.colors[h]),
                      prevPaths: this.pathArr[this.pathArr.length - 1],
                      currPaths: Z,
                    });
                    oe && _.add(oe);
                  }
                  this.pathArr.push(Z);
                  var ce = this.barHelpers.drawGoalLine({
                    barXPosition: Z.barXPosition,
                    barYPosition: Z.barYPosition,
                    goalX: Z.goalX,
                    goalY: Z.goalY,
                    barHeight: p,
                    barWidth: b,
                  });
                  ce && F.add(ce),
                    (C = Z.y),
                    (k = Z.x),
                    G > 0 && E.push(k + b / 2),
                    P.push(C),
                    this.renderSeries({
                      realIndex: I,
                      pathFill: J,
                      j: G,
                      i: h,
                      pathFrom: Z.pathFrom,
                      pathTo: Z.pathTo,
                      strokeWidth: W,
                      elSeries: D,
                      x: k,
                      y: C,
                      series: i,
                      barHeight: Z.barHeight ? Z.barHeight : p,
                      barWidth: Z.barWidth ? Z.barWidth : b,
                      elDataLabelsWrap: R,
                      elGoalsMarkers: F,
                      elBarShadows: _,
                      visibleSeries: this.visibleI,
                      type: "bar",
                    });
                }
                (a.globals.seriesXvalues[I] = E),
                  (a.globals.seriesYvalues[I] = P),
                  u.add(D);
              }
              return u;
            },
          },
          {
            key: "renderSeries",
            value: function (i) {
              var n = i.realIndex,
                a = i.pathFill,
                o = i.lineFill,
                l = i.j,
                u = i.i,
                h = i.groupIndex,
                d = i.pathFrom,
                g = i.pathTo,
                x = i.strokeWidth,
                v = i.elSeries,
                w = i.x,
                k = i.y,
                C = i.y1,
                P = i.y2,
                E = i.series,
                I = i.barHeight,
                D = i.barWidth,
                p = i.barXPosition,
                b = i.barYPosition,
                A = i.elDataLabelsWrap,
                R = i.elGoalsMarkers,
                F = i.elBarShadows,
                _ = i.visibleSeries,
                G = i.type,
                W = this.w,
                Z = new B(this.ctx);
              o ||
                (o = this.barOptions.distributed
                  ? W.globals.stroke.colors[l]
                  : W.globals.stroke.colors[n]),
                W.config.series[u].data[l] &&
                  W.config.series[u].data[l].strokeColor &&
                  (o = W.config.series[u].data[l].strokeColor),
                this.isNullValue && (a = "none");
              var ee =
                  ((l / W.config.chart.animations.animateGradually.delay) *
                    (W.config.chart.animations.speed / W.globals.dataPoints)) /
                  2.4,
                J = Z.renderPaths({
                  i: u,
                  j: l,
                  realIndex: n,
                  pathFrom: d,
                  pathTo: g,
                  stroke: o,
                  strokeWidth: x,
                  strokeLineCap: W.config.stroke.lineCap,
                  fill: a,
                  animationDelay: ee,
                  initialSpeed: W.config.chart.animations.speed,
                  dataChangeSpeed:
                    W.config.chart.animations.dynamicAnimation.speed,
                  className: "apexcharts-".concat(G, "-area"),
                });
              J.attr(
                "clip-path",
                "url(#gridRectMask".concat(W.globals.cuid, ")")
              );
              var oe = W.config.forecastDataPoints;
              oe.count > 0 &&
                l >= W.globals.dataPoints - oe.count &&
                (J.node.setAttribute("stroke-dasharray", oe.dashArray),
                J.node.setAttribute("stroke-width", oe.strokeWidth),
                J.node.setAttribute("fill-opacity", oe.fillOpacity)),
                C !== void 0 &&
                  P !== void 0 &&
                  (J.attr("data-range-y1", C), J.attr("data-range-y2", P)),
                new U(this.ctx).setSelectionFilter(J, n, l),
                v.add(J);
              var ce = new ly(this).handleBarDataLabels({
                x: w,
                y: k,
                y1: C,
                y2: P,
                i: u,
                j: l,
                series: E,
                realIndex: n,
                groupIndex: h,
                barHeight: I,
                barWidth: D,
                barXPosition: p,
                barYPosition: b,
                renderedPath: J,
                visibleSeries: _,
              });
              return (
                ce.dataLabels !== null && A.add(ce.dataLabels),
                ce.totalDataLabels && A.add(ce.totalDataLabels),
                v.add(A),
                R && v.add(R),
                F && v.add(F),
                v
              );
            },
          },
          {
            key: "drawBarPaths",
            value: function (i) {
              var n,
                a = i.indexes,
                o = i.barHeight,
                l = i.strokeWidth,
                u = i.zeroW,
                h = i.x,
                d = i.y,
                g = i.yDivision,
                x = i.elSeries,
                v = this.w,
                w = a.i,
                k = a.j;
              if (v.globals.isXNumeric)
                n =
                  (d =
                    (v.globals.seriesX[w][k] - v.globals.minX) /
                      this.invertedXRatio -
                    o) +
                  o * this.visibleI;
              else if (v.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                var C = 0,
                  P = 0;
                v.globals.seriesPercent.forEach(function (I, D) {
                  I[k] && C++, D < w && I[k] === 0 && P++;
                }),
                  C > 0 && (o = (this.seriesLen * o) / C),
                  (n = d + o * this.visibleI),
                  (n -= o * P);
              } else n = d + o * this.visibleI;
              this.isFunnel &&
                (u -=
                  (this.barHelpers.getXForValue(this.series[w][k], u) - u) / 2),
                (h = this.barHelpers.getXForValue(this.series[w][k], u));
              var E = this.barHelpers.getBarpaths({
                barYPosition: n,
                barHeight: o,
                x1: u,
                x2: h,
                strokeWidth: l,
                series: this.series,
                realIndex: a.realIndex,
                i: w,
                j: k,
                w: v,
              });
              return (
                v.globals.isXNumeric || (d += g),
                this.barHelpers.barBackground({
                  j: k,
                  i: w,
                  y1: n - o * this.visibleI,
                  y2: o * this.seriesLen,
                  elSeries: x,
                }),
                {
                  pathTo: E.pathTo,
                  pathFrom: E.pathFrom,
                  x1: u,
                  x: h,
                  y: d,
                  goalX: this.barHelpers.getGoalValues("x", u, null, w, k),
                  barYPosition: n,
                  barHeight: o,
                }
              );
            },
          },
          {
            key: "drawColumnPaths",
            value: function (i) {
              var n,
                a = i.indexes,
                o = i.x,
                l = i.y,
                u = i.xDivision,
                h = i.barWidth,
                d = i.zeroH,
                g = i.strokeWidth,
                x = i.elSeries,
                v = this.w,
                w = a.realIndex,
                k = a.i,
                C = a.j,
                P = a.bc;
              if (v.globals.isXNumeric) {
                var E = this.getBarXForNumericXAxis({
                  x: o,
                  j: C,
                  realIndex: w,
                  barWidth: h,
                });
                (o = E.x), (n = E.barXPosition);
              } else if (v.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                var I = this.barHelpers.getZeroValueEncounters({ i: k, j: C }),
                  D = I.nonZeroColumns,
                  p = I.zeroEncounters;
                D > 0 && (h = (this.seriesLen * h) / D),
                  (n = o + h * this.visibleI),
                  (n -= h * p);
              } else n = o + h * this.visibleI;
              l = this.barHelpers.getYForValue(this.series[k][C], d);
              var b = this.barHelpers.getColumnPaths({
                barXPosition: n,
                barWidth: h,
                y1: d,
                y2: l,
                strokeWidth: g,
                series: this.series,
                realIndex: a.realIndex,
                i: k,
                j: C,
                w: v,
              });
              return (
                v.globals.isXNumeric || (o += u),
                this.barHelpers.barBackground({
                  bc: P,
                  j: C,
                  i: k,
                  x1: n - g / 2 - h * this.visibleI,
                  x2: h * this.seriesLen + g / 2,
                  elSeries: x,
                }),
                {
                  pathTo: b.pathTo,
                  pathFrom: b.pathFrom,
                  x: o,
                  y: l,
                  goalY: this.barHelpers.getGoalValues("y", null, d, k, C),
                  barXPosition: n,
                  barWidth: h,
                }
              );
            },
          },
          {
            key: "getBarXForNumericXAxis",
            value: function (i) {
              var n = i.x,
                a = i.barWidth,
                o = i.realIndex,
                l = i.j,
                u = this.w,
                h = o;
              return (
                u.globals.seriesX[o].length ||
                  (h = u.globals.maxValsInArrayIndex),
                u.globals.seriesX[h][l] &&
                  (n =
                    (u.globals.seriesX[h][l] - u.globals.minX) / this.xRatio -
                    (a * this.seriesLen) / 2),
                { barXPosition: n + a * this.visibleI, x: n }
              );
            },
          },
          {
            key: "getPreviousPath",
            value: function (i, n) {
              for (
                var a, o = this.w, l = 0;
                l < o.globals.previousPaths.length;
                l++
              ) {
                var u = o.globals.previousPaths[l];
                u.paths &&
                  u.paths.length > 0 &&
                  parseInt(u.realIndex, 10) === parseInt(i, 10) &&
                  o.globals.previousPaths[l].paths[n] !== void 0 &&
                  (a = o.globals.previousPaths[l].paths[n].d);
              }
              return a;
            },
          },
        ]),
        M
      );
    })(),
    Nh = (function (M) {
      T(n, En);
      var i = X(n);
      function n() {
        return f(this, n), i.apply(this, arguments);
      }
      return (
        y(n, [
          {
            key: "draw",
            value: function (a, o) {
              var l = this,
                u = this.w;
              (this.graphics = new B(this.ctx)),
                (this.bar = new En(this.ctx, this.xyRatios));
              var h = new K(this.ctx, u);
              (a = h.getLogSeries(a)),
                (this.yRatio = h.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(a),
                u.config.chart.stackType === "100%" &&
                  (a = u.globals.seriesPercent.slice()),
                (this.series = a),
                this.barHelpers.initializeStackedPrevVars(this);
              for (
                var d = this.graphics.group({
                    class: "apexcharts-bar-series apexcharts-plot-series",
                  }),
                  g = 0,
                  x = 0,
                  v = function (C, P) {
                    var E = void 0,
                      I = void 0,
                      D = void 0,
                      p = void 0,
                      b = -1;
                    (l.groupCtx = l),
                      u.globals.seriesGroups.forEach(function (ze, $e) {
                        ze.indexOf(u.config.series[C].name) > -1 && (b = $e);
                      }),
                      b !== -1 && (l.groupCtx = l[u.globals.seriesGroups[b]]);
                    var A = [],
                      R = [],
                      F = u.globals.comboCharts ? o[C] : C;
                    l.yRatio.length > 1 && (l.yaxisIndex = F),
                      (l.isReversed =
                        u.config.yaxis[l.yaxisIndex] &&
                        u.config.yaxis[l.yaxisIndex].reversed);
                    var _ = l.graphics.group({
                      class: "apexcharts-series",
                      seriesName: L.escapeString(u.globals.seriesNames[F]),
                      rel: C + 1,
                      "data:realIndex": F,
                    });
                    l.ctx.series.addCollapsedClassToSeries(_, F);
                    var G = l.graphics.group({
                        class: "apexcharts-datalabels",
                        "data:realIndex": F,
                      }),
                      W = l.graphics.group({
                        class: "apexcharts-bar-goals-markers",
                      }),
                      Z = 0,
                      ee = 0,
                      J = l.initialPositions(g, x, E, I, D, p);
                    (x = J.y),
                      (Z = J.barHeight),
                      (I = J.yDivision),
                      (p = J.zeroW),
                      (g = J.x),
                      (ee = J.barWidth),
                      (E = J.xDivision),
                      (D = J.zeroH),
                      l.barHelpers.initializeStackedXYVars(l),
                      l.groupCtx.prevY.length === 1 &&
                        l.groupCtx.prevY[0].every(function (ze) {
                          return isNaN(ze);
                        }) &&
                        ((l.groupCtx.prevY[0] = l.groupCtx.prevY[0].map(
                          function (ze) {
                            return D;
                          }
                        )),
                        (l.groupCtx.prevYF[0] = l.groupCtx.prevYF[0].map(
                          function (ze) {
                            return 0;
                          }
                        )));
                    for (var oe = 0; oe < u.globals.dataPoints; oe++) {
                      var ce = l.barHelpers.getStrokeWidth(C, oe, F),
                        Se = {
                          indexes: { i: C, j: oe, realIndex: F, bc: P },
                          strokeWidth: ce,
                          x: g,
                          y: x,
                          elSeries: _,
                          groupIndex: b,
                          seriesGroup: u.globals.seriesGroups[b],
                        },
                        ke = null;
                      l.isHorizontal
                        ? ((ke = l.drawStackedBarPaths(
                            s(
                              s({}, Se),
                              {},
                              { zeroW: p, barHeight: Z, yDivision: I }
                            )
                          )),
                          (ee = l.series[C][oe] / l.invertedYRatio))
                        : ((ke = l.drawStackedColumnPaths(
                            s(
                              s({}, Se),
                              {},
                              { xDivision: E, barWidth: ee, zeroH: D }
                            )
                          )),
                          (Z = l.series[C][oe] / l.yRatio[l.yaxisIndex]));
                      var Le = l.barHelpers.drawGoalLine({
                        barXPosition: ke.barXPosition,
                        barYPosition: ke.barYPosition,
                        goalX: ke.goalX,
                        goalY: ke.goalY,
                        barHeight: Z,
                        barWidth: ee,
                      });
                      Le && W.add(Le),
                        (x = ke.y),
                        (g = ke.x),
                        A.push(g),
                        R.push(x);
                      var Be = l.barHelpers.getPathFillColor(a, C, oe, F);
                      _ = l.renderSeries({
                        realIndex: F,
                        pathFill: Be,
                        j: oe,
                        i: C,
                        groupIndex: b,
                        pathFrom: ke.pathFrom,
                        pathTo: ke.pathTo,
                        strokeWidth: ce,
                        elSeries: _,
                        x: g,
                        y: x,
                        series: a,
                        barHeight: Z,
                        barWidth: ee,
                        elDataLabelsWrap: G,
                        elGoalsMarkers: W,
                        type: "bar",
                        visibleSeries: 0,
                      });
                    }
                    (u.globals.seriesXvalues[F] = A),
                      (u.globals.seriesYvalues[F] = R),
                      l.groupCtx.prevY.push(l.groupCtx.yArrj),
                      l.groupCtx.prevYF.push(l.groupCtx.yArrjF),
                      l.groupCtx.prevYVal.push(l.groupCtx.yArrjVal),
                      l.groupCtx.prevX.push(l.groupCtx.xArrj),
                      l.groupCtx.prevXF.push(l.groupCtx.xArrjF),
                      l.groupCtx.prevXVal.push(l.groupCtx.xArrjVal),
                      d.add(_);
                  },
                  w = 0,
                  k = 0;
                w < a.length;
                w++, k++
              )
                v(w, k);
              return d;
            },
          },
          {
            key: "initialPositions",
            value: function (a, o, l, u, h, d) {
              var g,
                x,
                v,
                w,
                k = this.w;
              return (
                this.isHorizontal
                  ? ((v =
                      ((v = u = k.globals.gridHeight / k.globals.dataPoints) *
                        parseInt(k.config.plotOptions.bar.barHeight, 10)) /
                      100),
                    String(k.config.plotOptions.bar.barHeight).indexOf("%") ===
                      -1 &&
                      (v = parseInt(k.config.plotOptions.bar.barHeight, 10)),
                    (d =
                      this.baseLineInvertedY +
                      k.globals.padHorizontal +
                      (this.isReversed ? k.globals.gridWidth : 0) -
                      (this.isReversed ? 2 * this.baseLineInvertedY : 0)),
                    (o = (u - v) / 2))
                  : ((w = l = k.globals.gridWidth / k.globals.dataPoints),
                    (w =
                      k.globals.isXNumeric && k.globals.dataPoints > 1
                        ? ((l = k.globals.minXDiff / this.xRatio) *
                            parseInt(this.barOptions.columnWidth, 10)) /
                          100
                        : (w *
                            parseInt(
                              k.config.plotOptions.bar.columnWidth,
                              10
                            )) /
                          100),
                    String(k.config.plotOptions.bar.columnWidth).indexOf(
                      "%"
                    ) === -1 &&
                      (w = parseInt(k.config.plotOptions.bar.columnWidth, 10)),
                    (h =
                      k.globals.gridHeight -
                      this.baseLineY[this.yaxisIndex] -
                      (this.isReversed ? k.globals.gridHeight : 0) +
                      (this.isReversed
                        ? 2 * this.baseLineY[this.yaxisIndex]
                        : 0)),
                    (a = k.globals.padHorizontal + (l - w) / 2)),
                {
                  x: a,
                  y: o,
                  yDivision: u,
                  xDivision: l,
                  barHeight:
                    (g = k.globals.seriesGroups) !== null &&
                    g !== void 0 &&
                    g.length
                      ? v / k.globals.seriesGroups.length
                      : v,
                  barWidth:
                    (x = k.globals.seriesGroups) !== null &&
                    x !== void 0 &&
                    x.length
                      ? w / k.globals.seriesGroups.length
                      : w,
                  zeroH: h,
                  zeroW: d,
                }
              );
            },
          },
          {
            key: "drawStackedBarPaths",
            value: function (a) {
              for (
                var o,
                  l = a.indexes,
                  u = a.barHeight,
                  h = a.strokeWidth,
                  d = a.zeroW,
                  g = a.x,
                  x = a.y,
                  v = a.groupIndex,
                  w = a.seriesGroup,
                  k = a.yDivision,
                  C = a.elSeries,
                  P = this.w,
                  E = x + (v !== -1 ? v * u : 0),
                  I = l.i,
                  D = l.j,
                  p = 0,
                  b = 0;
                b < this.groupCtx.prevXF.length;
                b++
              )
                p += this.groupCtx.prevXF[b][D];
              var A = I;
              if ((w && (A = w.indexOf(P.config.series[I].name)), A > 0)) {
                var R = d;
                this.groupCtx.prevXVal[A - 1][D] < 0
                  ? (R =
                      this.series[I][D] >= 0
                        ? this.groupCtx.prevX[A - 1][D] +
                          p -
                          2 * (this.isReversed ? p : 0)
                        : this.groupCtx.prevX[A - 1][D])
                  : this.groupCtx.prevXVal[A - 1][D] >= 0 &&
                    (R =
                      this.series[I][D] >= 0
                        ? this.groupCtx.prevX[A - 1][D]
                        : this.groupCtx.prevX[A - 1][D] -
                          p +
                          2 * (this.isReversed ? p : 0)),
                  (o = R);
              } else o = d;
              g =
                this.series[I][D] === null
                  ? o
                  : o +
                    this.series[I][D] / this.invertedYRatio -
                    2 *
                      (this.isReversed
                        ? this.series[I][D] / this.invertedYRatio
                        : 0);
              var F = this.barHelpers.getBarpaths({
                barYPosition: E,
                barHeight: u,
                x1: o,
                x2: g,
                strokeWidth: h,
                series: this.series,
                realIndex: l.realIndex,
                seriesGroup: w,
                i: I,
                j: D,
                w: P,
              });
              return (
                this.barHelpers.barBackground({
                  j: D,
                  i: I,
                  y1: E,
                  y2: u,
                  elSeries: C,
                }),
                (x += k),
                {
                  pathTo: F.pathTo,
                  pathFrom: F.pathFrom,
                  goalX: this.barHelpers.getGoalValues("x", d, null, I, D),
                  barYPosition: E,
                  x: g,
                  y: x,
                }
              );
            },
          },
          {
            key: "drawStackedColumnPaths",
            value: function (a) {
              var o = a.indexes,
                l = a.x,
                u = a.y,
                h = a.xDivision,
                d = a.barWidth,
                g = a.zeroH,
                x = a.groupIndex,
                v = a.seriesGroup,
                w = a.elSeries,
                k = this.w,
                C = o.i,
                P = o.j,
                E = o.bc;
              if (k.globals.isXNumeric) {
                var I = k.globals.seriesX[C][P];
                I || (I = 0),
                  (l = (I - k.globals.minX) / this.xRatio - d / 2),
                  k.globals.seriesGroups.length &&
                    (l =
                      (I - k.globals.minX) / this.xRatio -
                      (d / 2) * k.globals.seriesGroups.length);
              }
              for (
                var D, p = l + (x !== -1 ? x * d : 0), b = 0, A = 0;
                A < this.groupCtx.prevYF.length;
                A++
              )
                b += isNaN(this.groupCtx.prevYF[A][P])
                  ? 0
                  : this.groupCtx.prevYF[A][P];
              var R = C;
              if (
                (v && (R = v.indexOf(k.config.series[C].name)),
                (R > 0 && !k.globals.isXNumeric) ||
                  (R > 0 &&
                    k.globals.isXNumeric &&
                    k.globals.seriesX[C - 1][P] === k.globals.seriesX[C][P]))
              ) {
                var F,
                  _,
                  G,
                  W = Math.min(this.yRatio.length + 1, C + 1);
                if (
                  this.groupCtx.prevY[R - 1] !== void 0 &&
                  this.groupCtx.prevY[R - 1].length
                )
                  for (var Z = 1; Z < W; Z++) {
                    var ee;
                    if (
                      !isNaN(
                        (ee = this.groupCtx.prevY[R - Z]) === null ||
                          ee === void 0
                          ? void 0
                          : ee[P]
                      )
                    ) {
                      G = this.groupCtx.prevY[R - Z][P];
                      break;
                    }
                  }
                for (var J = 1; J < W; J++) {
                  var oe, ce;
                  if (
                    ((oe = this.groupCtx.prevYVal[R - J]) === null ||
                    oe === void 0
                      ? void 0
                      : oe[P]) < 0
                  ) {
                    _ =
                      this.series[C][P] >= 0
                        ? G - b + 2 * (this.isReversed ? b : 0)
                        : G;
                    break;
                  }
                  if (
                    ((ce = this.groupCtx.prevYVal[R - J]) === null ||
                    ce === void 0
                      ? void 0
                      : ce[P]) >= 0
                  ) {
                    _ =
                      this.series[C][P] >= 0
                        ? G
                        : G + b - 2 * (this.isReversed ? b : 0);
                    break;
                  }
                }
                _ === void 0 && (_ = k.globals.gridHeight),
                  (D =
                    (F = this.groupCtx.prevYF[0]) !== null &&
                    F !== void 0 &&
                    F.every(function (ke) {
                      return ke === 0;
                    }) &&
                    this.groupCtx.prevYF.slice(1, R).every(function (ke) {
                      return ke.every(function (Le) {
                        return isNaN(Le);
                      });
                    })
                      ? g
                      : _);
              } else D = g;
              u = this.series[C][P]
                ? D -
                  this.series[C][P] / this.yRatio[this.yaxisIndex] +
                  2 *
                    (this.isReversed
                      ? this.series[C][P] / this.yRatio[this.yaxisIndex]
                      : 0)
                : D;
              var Se = this.barHelpers.getColumnPaths({
                barXPosition: p,
                barWidth: d,
                y1: D,
                y2: u,
                yRatio: this.yRatio[this.yaxisIndex],
                strokeWidth: this.strokeWidth,
                series: this.series,
                seriesGroup: v,
                realIndex: o.realIndex,
                i: C,
                j: P,
                w: k,
              });
              return (
                this.barHelpers.barBackground({
                  bc: E,
                  j: P,
                  i: C,
                  x1: p,
                  x2: d,
                  elSeries: w,
                }),
                (l += h),
                {
                  pathTo: Se.pathTo,
                  pathFrom: Se.pathFrom,
                  goalY: this.barHelpers.getGoalValues("y", null, g, C, P),
                  barXPosition: p,
                  x: k.globals.isXNumeric ? l - h : l,
                  y: u,
                }
              );
            },
          },
        ]),
        n
      );
    })(),
    Io = (function (M) {
      T(n, En);
      var i = X(n);
      function n() {
        return f(this, n), i.apply(this, arguments);
      }
      return (
        y(n, [
          {
            key: "draw",
            value: function (a, o, l) {
              var u = this,
                h = this.w,
                d = new B(this.ctx),
                g = h.globals.comboCharts ? o : h.config.chart.type,
                x = new be(this.ctx);
              (this.candlestickOptions = this.w.config.plotOptions.candlestick),
                (this.boxOptions = this.w.config.plotOptions.boxPlot),
                (this.isHorizontal = h.config.plotOptions.bar.horizontal);
              var v = new K(this.ctx, h);
              (a = v.getLogSeries(a)),
                (this.series = a),
                (this.yRatio = v.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(a);
              for (
                var w = d.group({
                    class: "apexcharts-".concat(
                      g,
                      "-series apexcharts-plot-series"
                    ),
                  }),
                  k = function (P) {
                    u.isBoxPlot =
                      h.config.chart.type === "boxPlot" ||
                      h.config.series[P].type === "boxPlot";
                    var E,
                      I,
                      D,
                      p,
                      b = void 0,
                      A = void 0,
                      R = [],
                      F = [],
                      _ = h.globals.comboCharts ? l[P] : P,
                      G = d.group({
                        class: "apexcharts-series",
                        seriesName: L.escapeString(h.globals.seriesNames[_]),
                        rel: P + 1,
                        "data:realIndex": _,
                      });
                    u.ctx.series.addCollapsedClassToSeries(G, _),
                      a[P].length > 0 && (u.visibleI = u.visibleI + 1);
                    var W, Z;
                    u.yRatio.length > 1 && (u.yaxisIndex = _);
                    var ee = u.barHelpers.initialPositions();
                    (A = ee.y),
                      (W = ee.barHeight),
                      (I = ee.yDivision),
                      (p = ee.zeroW),
                      (b = ee.x),
                      (Z = ee.barWidth),
                      (E = ee.xDivision),
                      (D = ee.zeroH),
                      F.push(b + Z / 2);
                    for (
                      var J = d.group({
                          class: "apexcharts-datalabels",
                          "data:realIndex": _,
                        }),
                        oe = function (Se) {
                          var ke = u.barHelpers.getStrokeWidth(P, Se, _),
                            Le = null,
                            Be = {
                              indexes: { i: P, j: Se, realIndex: _ },
                              x: b,
                              y: A,
                              strokeWidth: ke,
                              elSeries: G,
                            };
                          (Le = u.isHorizontal
                            ? u.drawHorizontalBoxPaths(
                                s(
                                  s({}, Be),
                                  {},
                                  { yDivision: I, barHeight: W, zeroW: p }
                                )
                              )
                            : u.drawVerticalBoxPaths(
                                s(
                                  s({}, Be),
                                  {},
                                  { xDivision: E, barWidth: Z, zeroH: D }
                                )
                              )),
                            (A = Le.y),
                            (b = Le.x),
                            Se > 0 && F.push(b + Z / 2),
                            R.push(A),
                            Le.pathTo.forEach(function (ze, $e) {
                              var Vt =
                                  !u.isBoxPlot &&
                                  u.candlestickOptions.wick.useFillColor
                                    ? Le.color[$e]
                                    : h.globals.stroke.colors[P],
                                an = x.fillPath({
                                  seriesNumber: _,
                                  dataPointIndex: Se,
                                  color: Le.color[$e],
                                  value: a[P][Se],
                                });
                              u.renderSeries({
                                realIndex: _,
                                pathFill: an,
                                lineFill: Vt,
                                j: Se,
                                i: P,
                                pathFrom: Le.pathFrom,
                                pathTo: ze,
                                strokeWidth: ke,
                                elSeries: G,
                                x: b,
                                y: A,
                                series: a,
                                barHeight: W,
                                barWidth: Z,
                                elDataLabelsWrap: J,
                                visibleSeries: u.visibleI,
                                type: h.config.chart.type,
                              });
                            });
                        },
                        ce = 0;
                      ce < h.globals.dataPoints;
                      ce++
                    )
                      oe(ce);
                    (h.globals.seriesXvalues[_] = F),
                      (h.globals.seriesYvalues[_] = R),
                      w.add(G);
                  },
                  C = 0;
                C < a.length;
                C++
              )
                k(C);
              return w;
            },
          },
          {
            key: "drawVerticalBoxPaths",
            value: function (a) {
              var o = a.indexes,
                l = a.x;
              a.y;
              var u = a.xDivision,
                h = a.barWidth,
                d = a.zeroH,
                g = a.strokeWidth,
                x = this.w,
                v = new B(this.ctx),
                w = o.i,
                k = o.j,
                C = !0,
                P = x.config.plotOptions.candlestick.colors.upward,
                E = x.config.plotOptions.candlestick.colors.downward,
                I = "";
              this.isBoxPlot &&
                (I = [
                  this.boxOptions.colors.lower,
                  this.boxOptions.colors.upper,
                ]);
              var D = this.yRatio[this.yaxisIndex],
                p = o.realIndex,
                b = this.getOHLCValue(p, k),
                A = d,
                R = d;
              b.o > b.c && (C = !1);
              var F = Math.min(b.o, b.c),
                _ = Math.max(b.o, b.c),
                G = b.m;
              x.globals.isXNumeric &&
                (l =
                  (x.globals.seriesX[p][k] - x.globals.minX) / this.xRatio -
                  h / 2);
              var W = l + h * this.visibleI;
              this.series[w][k] === void 0 || this.series[w][k] === null
                ? ((F = d), (_ = d))
                : ((F = d - F / D),
                  (_ = d - _ / D),
                  (A = d - b.h / D),
                  (R = d - b.l / D),
                  (G = d - b.m / D));
              var Z = v.move(W, d),
                ee = v.move(W + h / 2, F);
              return (
                x.globals.previousPaths.length > 0 &&
                  (ee = this.getPreviousPath(p, k, !0)),
                (Z = this.isBoxPlot
                  ? [
                      v.move(W, F) +
                        v.line(W + h / 2, F) +
                        v.line(W + h / 2, A) +
                        v.line(W + h / 4, A) +
                        v.line(W + h - h / 4, A) +
                        v.line(W + h / 2, A) +
                        v.line(W + h / 2, F) +
                        v.line(W + h, F) +
                        v.line(W + h, G) +
                        v.line(W, G) +
                        v.line(W, F + g / 2),
                      v.move(W, G) +
                        v.line(W + h, G) +
                        v.line(W + h, _) +
                        v.line(W + h / 2, _) +
                        v.line(W + h / 2, R) +
                        v.line(W + h - h / 4, R) +
                        v.line(W + h / 4, R) +
                        v.line(W + h / 2, R) +
                        v.line(W + h / 2, _) +
                        v.line(W, _) +
                        v.line(W, G) +
                        "z",
                    ]
                  : [
                      v.move(W, _) +
                        v.line(W + h / 2, _) +
                        v.line(W + h / 2, A) +
                        v.line(W + h / 2, _) +
                        v.line(W + h, _) +
                        v.line(W + h, F) +
                        v.line(W + h / 2, F) +
                        v.line(W + h / 2, R) +
                        v.line(W + h / 2, F) +
                        v.line(W, F) +
                        v.line(W, _ - g / 2),
                    ]),
                (ee += v.move(W, F)),
                x.globals.isXNumeric || (l += u),
                {
                  pathTo: Z,
                  pathFrom: ee,
                  x: l,
                  y: _,
                  barXPosition: W,
                  color: this.isBoxPlot ? I : C ? [P] : [E],
                }
              );
            },
          },
          {
            key: "drawHorizontalBoxPaths",
            value: function (a) {
              var o = a.indexes;
              a.x;
              var l = a.y,
                u = a.yDivision,
                h = a.barHeight,
                d = a.zeroW,
                g = a.strokeWidth,
                x = this.w,
                v = new B(this.ctx),
                w = o.i,
                k = o.j,
                C = this.boxOptions.colors.lower;
              this.isBoxPlot &&
                (C = [
                  this.boxOptions.colors.lower,
                  this.boxOptions.colors.upper,
                ]);
              var P = this.invertedYRatio,
                E = o.realIndex,
                I = this.getOHLCValue(E, k),
                D = d,
                p = d,
                b = Math.min(I.o, I.c),
                A = Math.max(I.o, I.c),
                R = I.m;
              x.globals.isXNumeric &&
                (l =
                  (x.globals.seriesX[E][k] - x.globals.minX) /
                    this.invertedXRatio -
                  h / 2);
              var F = l + h * this.visibleI;
              this.series[w][k] === void 0 || this.series[w][k] === null
                ? ((b = d), (A = d))
                : ((b = d + b / P),
                  (A = d + A / P),
                  (D = d + I.h / P),
                  (p = d + I.l / P),
                  (R = d + I.m / P));
              var _ = v.move(d, F),
                G = v.move(b, F + h / 2);
              return (
                x.globals.previousPaths.length > 0 &&
                  (G = this.getPreviousPath(E, k, !0)),
                (_ = [
                  v.move(b, F) +
                    v.line(b, F + h / 2) +
                    v.line(D, F + h / 2) +
                    v.line(D, F + h / 2 - h / 4) +
                    v.line(D, F + h / 2 + h / 4) +
                    v.line(D, F + h / 2) +
                    v.line(b, F + h / 2) +
                    v.line(b, F + h) +
                    v.line(R, F + h) +
                    v.line(R, F) +
                    v.line(b + g / 2, F),
                  v.move(R, F) +
                    v.line(R, F + h) +
                    v.line(A, F + h) +
                    v.line(A, F + h / 2) +
                    v.line(p, F + h / 2) +
                    v.line(p, F + h - h / 4) +
                    v.line(p, F + h / 4) +
                    v.line(p, F + h / 2) +
                    v.line(A, F + h / 2) +
                    v.line(A, F) +
                    v.line(R, F) +
                    "z",
                ]),
                (G += v.move(b, F)),
                x.globals.isXNumeric || (l += u),
                {
                  pathTo: _,
                  pathFrom: G,
                  x: A,
                  y: l,
                  barYPosition: F,
                  color: C,
                }
              );
            },
          },
          {
            key: "getOHLCValue",
            value: function (a, o) {
              var l = this.w;
              return {
                o: this.isBoxPlot
                  ? l.globals.seriesCandleH[a][o]
                  : l.globals.seriesCandleO[a][o],
                h: this.isBoxPlot
                  ? l.globals.seriesCandleO[a][o]
                  : l.globals.seriesCandleH[a][o],
                m: l.globals.seriesCandleM[a][o],
                l: this.isBoxPlot
                  ? l.globals.seriesCandleC[a][o]
                  : l.globals.seriesCandleL[a][o],
                c: this.isBoxPlot
                  ? l.globals.seriesCandleL[a][o]
                  : l.globals.seriesCandleC[a][o],
              };
            },
          },
        ]),
        n
      );
    })(),
    Fh = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "checkColorRange",
            value: function () {
              var i = this.w,
                n = !1,
                a = i.config.plotOptions[i.config.chart.type];
              return (
                a.colorScale.ranges.length > 0 &&
                  a.colorScale.ranges.map(function (o, l) {
                    o.from <= 0 && (n = !0);
                  }),
                n
              );
            },
          },
          {
            key: "getShadeColor",
            value: function (i, n, a, o) {
              var l = this.w,
                u = 1,
                h = l.config.plotOptions[i].shadeIntensity,
                d = this.determineColor(i, n, a);
              l.globals.hasNegs || o
                ? (u = l.config.plotOptions[i].reverseNegativeShade
                    ? d.percent < 0
                      ? (d.percent / 100) * (1.25 * h)
                      : (1 - d.percent / 100) * (1.25 * h)
                    : d.percent <= 0
                    ? 1 - (1 + d.percent / 100) * h
                    : (1 - d.percent / 100) * h)
                : ((u = 1 - d.percent / 100),
                  i === "treemap" && (u = (1 - d.percent / 100) * (1.25 * h)));
              var g = d.color,
                x = new L();
              return (
                l.config.plotOptions[i].enableShades &&
                  (g =
                    this.w.config.theme.mode === "dark"
                      ? L.hexToRgba(
                          x.shadeColor(-1 * u, d.color),
                          l.config.fill.opacity
                        )
                      : L.hexToRgba(
                          x.shadeColor(u, d.color),
                          l.config.fill.opacity
                        )),
                { color: g, colorProps: d }
              );
            },
          },
          {
            key: "determineColor",
            value: function (i, n, a) {
              var o = this.w,
                l = o.globals.series[n][a],
                u = o.config.plotOptions[i],
                h = u.colorScale.inverse ? a : n;
              u.distributed && o.config.chart.type === "treemap" && (h = a);
              var d = o.globals.colors[h],
                g = null,
                x = Math.min.apply(Math, Y(o.globals.series[n])),
                v = Math.max.apply(Math, Y(o.globals.series[n]));
              u.distributed ||
                i !== "heatmap" ||
                ((x = o.globals.minY), (v = o.globals.maxY)),
                u.colorScale.min !== void 0 &&
                  ((x =
                    u.colorScale.min < o.globals.minY
                      ? u.colorScale.min
                      : o.globals.minY),
                  (v =
                    u.colorScale.max > o.globals.maxY
                      ? u.colorScale.max
                      : o.globals.maxY));
              var w = Math.abs(v) + Math.abs(x),
                k = (100 * l) / (w === 0 ? w - 1e-6 : w);
              return (
                u.colorScale.ranges.length > 0 &&
                  u.colorScale.ranges.map(function (C, P) {
                    if (l >= C.from && l <= C.to) {
                      (d = C.color),
                        (g = C.foreColor ? C.foreColor : null),
                        (x = C.from),
                        (v = C.to);
                      var E = Math.abs(v) + Math.abs(x);
                      k = (100 * l) / (E === 0 ? E - 1e-6 : E);
                    }
                  }),
                { color: d, foreColor: g, percent: k }
              );
            },
          },
          {
            key: "calculateDataLabels",
            value: function (i) {
              var n = i.text,
                a = i.x,
                o = i.y,
                l = i.i,
                u = i.j,
                h = i.colorProps,
                d = i.fontSize,
                g = this.w.config.dataLabels,
                x = new B(this.ctx),
                v = new Lt(this.ctx),
                w = null;
              if (g.enabled) {
                w = x.group({ class: "apexcharts-data-labels" });
                var k = g.offsetX,
                  C = g.offsetY,
                  P = a + k,
                  E = o + parseFloat(g.style.fontSize) / 3 + C;
                v.plotDataLabelsText({
                  x: P,
                  y: E,
                  text: n,
                  i: l,
                  j: u,
                  color: h.foreColor,
                  parent: w,
                  fontSize: d,
                  dataLabelsConfig: g,
                });
              }
              return w;
            },
          },
          {
            key: "addListeners",
            value: function (i) {
              var n = new B(this.ctx);
              i.node.addEventListener(
                "mouseenter",
                n.pathMouseEnter.bind(this, i)
              ),
                i.node.addEventListener(
                  "mouseleave",
                  n.pathMouseLeave.bind(this, i)
                ),
                i.node.addEventListener(
                  "mousedown",
                  n.pathMouseDown.bind(this, i)
                );
            },
          },
        ]),
        M
      );
    })(),
    uy = (function () {
      function M(i, n) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.xRatio = n.xRatio),
          (this.yRatio = n.yRatio),
          (this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation),
          (this.helpers = new Fh(i)),
          (this.rectRadius = this.w.config.plotOptions.heatmap.radius),
          (this.strokeWidth = this.w.config.stroke.show
            ? this.w.config.stroke.width
            : 0);
      }
      return (
        y(M, [
          {
            key: "draw",
            value: function (i) {
              var n = this.w,
                a = new B(this.ctx),
                o = a.group({ class: "apexcharts-heatmap" });
              o.attr(
                "clip-path",
                "url(#gridRectMask".concat(n.globals.cuid, ")")
              );
              var l = n.globals.gridWidth / n.globals.dataPoints,
                u = n.globals.gridHeight / n.globals.series.length,
                h = 0,
                d = !1;
              this.negRange = this.helpers.checkColorRange();
              var g = i.slice();
              n.config.yaxis[0].reversed && ((d = !0), g.reverse());
              for (
                var x = d ? 0 : g.length - 1;
                d ? x < g.length : x >= 0;
                d ? x++ : x--
              ) {
                var v = a.group({
                  class: "apexcharts-series apexcharts-heatmap-series",
                  seriesName: L.escapeString(n.globals.seriesNames[x]),
                  rel: x + 1,
                  "data:realIndex": x,
                });
                if (
                  (this.ctx.series.addCollapsedClassToSeries(v, x),
                  n.config.chart.dropShadow.enabled)
                ) {
                  var w = n.config.chart.dropShadow;
                  new U(this.ctx).dropShadow(v, w, x);
                }
                for (
                  var k = 0,
                    C = n.config.plotOptions.heatmap.shadeIntensity,
                    P = 0;
                  P < g[x].length;
                  P++
                ) {
                  var E = this.helpers.getShadeColor(
                      n.config.chart.type,
                      x,
                      P,
                      this.negRange
                    ),
                    I = E.color,
                    D = E.colorProps;
                  n.config.fill.type === "image" &&
                    (I = new be(this.ctx).fillPath({
                      seriesNumber: x,
                      dataPointIndex: P,
                      opacity: n.globals.hasNegs
                        ? D.percent < 0
                          ? 1 - (1 + D.percent / 100)
                          : C + D.percent / 100
                        : D.percent / 100,
                      patternID: L.randomId(),
                      width: n.config.fill.image.width
                        ? n.config.fill.image.width
                        : l,
                      height: n.config.fill.image.height
                        ? n.config.fill.image.height
                        : u,
                    }));
                  var p = this.rectRadius,
                    b = a.drawRect(k, h, l, u, p);
                  if (
                    (b.attr({ cx: k, cy: h }),
                    b.node.classList.add("apexcharts-heatmap-rect"),
                    v.add(b),
                    b.attr({
                      fill: I,
                      i: x,
                      index: x,
                      j: P,
                      val: g[x][P],
                      "stroke-width": this.strokeWidth,
                      stroke: n.config.plotOptions.heatmap.useFillColorAsStroke
                        ? I
                        : n.globals.stroke.colors[0],
                      color: I,
                    }),
                    this.helpers.addListeners(b),
                    n.config.chart.animations.enabled && !n.globals.dataChanged)
                  ) {
                    var A = 1;
                    n.globals.resized || (A = n.config.chart.animations.speed),
                      this.animateHeatMap(b, k, h, l, u, A);
                  }
                  if (n.globals.dataChanged) {
                    var R = 1;
                    if (this.dynamicAnim.enabled && n.globals.shouldAnimate) {
                      R = this.dynamicAnim.speed;
                      var F =
                        n.globals.previousPaths[x] &&
                        n.globals.previousPaths[x][P] &&
                        n.globals.previousPaths[x][P].color;
                      F || (F = "rgba(255, 255, 255, 0)"),
                        this.animateHeatColor(
                          b,
                          L.isColorHex(F) ? F : L.rgb2hex(F),
                          L.isColorHex(I) ? I : L.rgb2hex(I),
                          R
                        );
                    }
                  }
                  var _ = (0, n.config.dataLabels.formatter)(
                      n.globals.series[x][P],
                      {
                        value: n.globals.series[x][P],
                        seriesIndex: x,
                        dataPointIndex: P,
                        w: n,
                      }
                    ),
                    G = this.helpers.calculateDataLabels({
                      text: _,
                      x: k + l / 2,
                      y: h + u / 2,
                      i: x,
                      j: P,
                      colorProps: D,
                      series: g,
                    });
                  G !== null && v.add(G), (k += l);
                }
                (h += u), o.add(v);
              }
              var W = n.globals.yAxisScale[0].result.slice();
              return (
                n.config.yaxis[0].reversed ? W.unshift("") : W.push(""),
                (n.globals.yAxisScale[0].result = W),
                o
              );
            },
          },
          {
            key: "animateHeatMap",
            value: function (i, n, a, o, l, u) {
              var h = new H(this.ctx);
              h.animateRect(
                i,
                { x: n + o / 2, y: a + l / 2, width: 0, height: 0 },
                { x: n, y: a, width: o, height: l },
                u,
                function () {
                  h.animationCompleted(i);
                }
              );
            },
          },
          {
            key: "animateHeatColor",
            value: function (i, n, a, o) {
              i.attr({ fill: n }).animate(o).attr({ fill: a });
            },
          },
        ]),
        M
      );
    })(),
    _h = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "drawYAxisTexts",
            value: function (i, n, a, o) {
              var l = this.w,
                u = l.config.yaxis[0],
                h = l.globals.yLabelFormatters[0];
              return new B(this.ctx).drawText({
                x: i + u.labels.offsetX,
                y: n + u.labels.offsetY,
                text: h(o, a),
                textAnchor: "middle",
                fontSize: u.labels.style.fontSize,
                fontFamily: u.labels.style.fontFamily,
                foreColor: Array.isArray(u.labels.style.colors)
                  ? u.labels.style.colors[a]
                  : u.labels.style.colors,
              });
            },
          },
        ]),
        M
      );
    })(),
    Hh = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
        var n = this.w;
        (this.chartType = this.w.config.chart.type),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled),
          (this.animBeginArr = [0]),
          (this.animDur = 0),
          (this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels),
          (this.lineColorArr =
            n.globals.stroke.colors !== void 0
              ? n.globals.stroke.colors
              : n.globals.colors),
          (this.defaultSize = Math.min(
            n.globals.gridWidth,
            n.globals.gridHeight
          )),
          (this.centerY = this.defaultSize / 2),
          (this.centerX = n.globals.gridWidth / 2),
          n.config.chart.type === "radialBar"
            ? (this.fullAngle = 360)
            : (this.fullAngle = Math.abs(
                n.config.plotOptions.pie.endAngle -
                  n.config.plotOptions.pie.startAngle
              )),
          (this.initialAngle =
            n.config.plotOptions.pie.startAngle % this.fullAngle),
          (n.globals.radialSize =
            this.defaultSize / 2.05 -
            n.config.stroke.width -
            (n.config.chart.sparkline.enabled
              ? 0
              : n.config.chart.dropShadow.blur)),
          (this.donutSize =
            (n.globals.radialSize *
              parseInt(n.config.plotOptions.pie.donut.size, 10)) /
            100),
          (this.maxY = 0),
          (this.sliceLabels = []),
          (this.sliceSizes = []),
          (this.prevSectorAngleArr = []);
      }
      return (
        y(M, [
          {
            key: "draw",
            value: function (i) {
              var n = this,
                a = this.w,
                o = new B(this.ctx);
              if (
                ((this.ret = o.group({ class: "apexcharts-pie" })),
                a.globals.noData)
              )
                return this.ret;
              for (var l = 0, u = 0; u < i.length; u++) l += L.negToZero(i[u]);
              var h = [],
                d = o.group();
              l === 0 && (l = 1e-5),
                i.forEach(function (F) {
                  n.maxY = Math.max(n.maxY, F);
                }),
                a.config.yaxis[0].max && (this.maxY = a.config.yaxis[0].max),
                a.config.grid.position === "back" &&
                  this.chartType === "polarArea" &&
                  this.drawPolarElements(this.ret);
              for (var g = 0; g < i.length; g++) {
                var x = (this.fullAngle * L.negToZero(i[g])) / l;
                h.push(x),
                  this.chartType === "polarArea"
                    ? ((h[g] = this.fullAngle / i.length),
                      this.sliceSizes.push(
                        (a.globals.radialSize * i[g]) / this.maxY
                      ))
                    : this.sliceSizes.push(a.globals.radialSize);
              }
              if (a.globals.dataChanged) {
                for (
                  var v, w = 0, k = 0;
                  k < a.globals.previousPaths.length;
                  k++
                )
                  w += L.negToZero(a.globals.previousPaths[k]);
                for (var C = 0; C < a.globals.previousPaths.length; C++)
                  (v =
                    (this.fullAngle * L.negToZero(a.globals.previousPaths[C])) /
                    w),
                    this.prevSectorAngleArr.push(v);
              }
              this.donutSize < 0 && (this.donutSize = 0);
              var P = a.config.plotOptions.pie.customScale,
                E = a.globals.gridWidth / 2,
                I = a.globals.gridHeight / 2,
                D = E - (a.globals.gridWidth / 2) * P,
                p = I - (a.globals.gridHeight / 2) * P;
              if (this.chartType === "donut") {
                var b = o.drawCircle(this.donutSize);
                b.attr({
                  cx: this.centerX,
                  cy: this.centerY,
                  fill: a.config.plotOptions.pie.donut.background
                    ? a.config.plotOptions.pie.donut.background
                    : "transparent",
                }),
                  d.add(b);
              }
              var A = this.drawArcs(h, i);
              if (
                (this.sliceLabels.forEach(function (F) {
                  A.add(F);
                }),
                d.attr({
                  transform: "translate("
                    .concat(D, ", ")
                    .concat(p, ") scale(")
                    .concat(P, ")"),
                }),
                d.add(A),
                this.ret.add(d),
                this.donutDataLabels.show)
              ) {
                var R = this.renderInnerDataLabels(this.donutDataLabels, {
                  hollowSize: this.donutSize,
                  centerX: this.centerX,
                  centerY: this.centerY,
                  opacity: this.donutDataLabels.show,
                  translateX: D,
                  translateY: p,
                });
                this.ret.add(R);
              }
              return (
                a.config.grid.position === "front" &&
                  this.chartType === "polarArea" &&
                  this.drawPolarElements(this.ret),
                this.ret
              );
            },
          },
          {
            key: "drawArcs",
            value: function (i, n) {
              var a = this.w,
                o = new U(this.ctx),
                l = new B(this.ctx),
                u = new be(this.ctx),
                h = l.group({ class: "apexcharts-slices" }),
                d = this.initialAngle,
                g = this.initialAngle,
                x = this.initialAngle,
                v = this.initialAngle;
              this.strokeWidth = a.config.stroke.show
                ? a.config.stroke.width
                : 0;
              for (var w = 0; w < i.length; w++) {
                var k = l.group({
                  class: "apexcharts-series apexcharts-pie-series",
                  seriesName: L.escapeString(a.globals.seriesNames[w]),
                  rel: w + 1,
                  "data:realIndex": w,
                });
                h.add(k),
                  (g = v),
                  (x = (d = x) + i[w]),
                  (v = g + this.prevSectorAngleArr[w]);
                var C = x < d ? this.fullAngle + x - d : x - d,
                  P = u.fillPath({
                    seriesNumber: w,
                    size: this.sliceSizes[w],
                    value: n[w],
                  }),
                  E = this.getChangedPath(g, v),
                  I = l.drawPath({
                    d: E,
                    stroke: Array.isArray(this.lineColorArr)
                      ? this.lineColorArr[w]
                      : this.lineColorArr,
                    strokeWidth: 0,
                    fill: P,
                    fillOpacity: a.config.fill.opacity,
                    classes: "apexcharts-pie-area apexcharts-"
                      .concat(this.chartType.toLowerCase(), "-slice-")
                      .concat(w),
                  });
                if (
                  (I.attr({ index: 0, j: w }),
                  o.setSelectionFilter(I, 0, w),
                  a.config.chart.dropShadow.enabled)
                ) {
                  var D = a.config.chart.dropShadow;
                  o.dropShadow(I, D, w);
                }
                this.addListeners(I, this.donutDataLabels),
                  B.setAttrs(I.node, {
                    "data:angle": C,
                    "data:startAngle": d,
                    "data:strokeWidth": this.strokeWidth,
                    "data:value": n[w],
                  });
                var p = { x: 0, y: 0 };
                this.chartType === "pie" || this.chartType === "polarArea"
                  ? (p = L.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      a.globals.radialSize / 1.25 +
                        a.config.plotOptions.pie.dataLabels.offset,
                      (d + C / 2) % this.fullAngle
                    ))
                  : this.chartType === "donut" &&
                    (p = L.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      (a.globals.radialSize + this.donutSize) / 2 +
                        a.config.plotOptions.pie.dataLabels.offset,
                      (d + C / 2) % this.fullAngle
                    )),
                  k.add(I);
                var b = 0;
                if (
                  (!this.initialAnim ||
                  a.globals.resized ||
                  a.globals.dataChanged
                    ? this.animBeginArr.push(0)
                    : ((b =
                        (C / this.fullAngle) *
                        a.config.chart.animations.speed) === 0 && (b = 1),
                      (this.animDur = b + this.animDur),
                      this.animBeginArr.push(this.animDur)),
                  this.dynamicAnim && a.globals.dataChanged
                    ? this.animatePaths(I, {
                        size: this.sliceSizes[w],
                        endAngle: x,
                        startAngle: d,
                        prevStartAngle: g,
                        prevEndAngle: v,
                        animateStartingPos: !0,
                        i: w,
                        animBeginArr: this.animBeginArr,
                        shouldSetPrevPaths: !0,
                        dur: a.config.chart.animations.dynamicAnimation.speed,
                      })
                    : this.animatePaths(I, {
                        size: this.sliceSizes[w],
                        endAngle: x,
                        startAngle: d,
                        i: w,
                        totalItems: i.length - 1,
                        animBeginArr: this.animBeginArr,
                        dur: b,
                      }),
                  a.config.plotOptions.pie.expandOnClick &&
                    this.chartType !== "polarArea" &&
                    I.click(this.pieClicked.bind(this, w)),
                  a.globals.selectedDataPoints[0] !== void 0 &&
                    a.globals.selectedDataPoints[0].indexOf(w) > -1 &&
                    this.pieClicked(w),
                  a.config.dataLabels.enabled)
                ) {
                  var A = p.x,
                    R = p.y,
                    F = (100 * C) / this.fullAngle + "%";
                  if (
                    C !== 0 &&
                    a.config.plotOptions.pie.dataLabels.minAngleToShowLabel <
                      i[w]
                  ) {
                    var _ = a.config.dataLabels.formatter;
                    _ !== void 0 &&
                      (F = _(a.globals.seriesPercent[w][0], {
                        seriesIndex: w,
                        w: a,
                      }));
                    var G = a.globals.dataLabels.style.colors[w],
                      W = l.group({ class: "apexcharts-datalabels" }),
                      Z = l.drawText({
                        x: A,
                        y: R,
                        text: F,
                        textAnchor: "middle",
                        fontSize: a.config.dataLabels.style.fontSize,
                        fontFamily: a.config.dataLabels.style.fontFamily,
                        fontWeight: a.config.dataLabels.style.fontWeight,
                        foreColor: G,
                      });
                    if ((W.add(Z), a.config.dataLabels.dropShadow.enabled)) {
                      var ee = a.config.dataLabels.dropShadow;
                      o.dropShadow(Z, ee);
                    }
                    Z.node.classList.add("apexcharts-pie-label"),
                      a.config.chart.animations.animate &&
                        a.globals.resized === !1 &&
                        (Z.node.classList.add("apexcharts-pie-label-delay"),
                        (Z.node.style.animationDelay =
                          a.config.chart.animations.speed / 940 + "s")),
                      this.sliceLabels.push(W);
                  }
                }
              }
              return h;
            },
          },
          {
            key: "addListeners",
            value: function (i, n) {
              var a = new B(this.ctx);
              i.node.addEventListener(
                "mouseenter",
                a.pathMouseEnter.bind(this, i)
              ),
                i.node.addEventListener(
                  "mouseleave",
                  a.pathMouseLeave.bind(this, i)
                ),
                i.node.addEventListener(
                  "mouseleave",
                  this.revertDataLabelsInner.bind(this, i.node, n)
                ),
                i.node.addEventListener(
                  "mousedown",
                  a.pathMouseDown.bind(this, i)
                ),
                this.donutDataLabels.total.showAlways ||
                  (i.node.addEventListener(
                    "mouseenter",
                    this.printDataLabelsInner.bind(this, i.node, n)
                  ),
                  i.node.addEventListener(
                    "mousedown",
                    this.printDataLabelsInner.bind(this, i.node, n)
                  ));
            },
          },
          {
            key: "animatePaths",
            value: function (i, n) {
              var a = this.w,
                o =
                  n.endAngle < n.startAngle
                    ? this.fullAngle + n.endAngle - n.startAngle
                    : n.endAngle - n.startAngle,
                l = o,
                u = n.startAngle,
                h = n.startAngle;
              n.prevStartAngle !== void 0 &&
                n.prevEndAngle !== void 0 &&
                ((u = n.prevEndAngle),
                (l =
                  n.prevEndAngle < n.prevStartAngle
                    ? this.fullAngle + n.prevEndAngle - n.prevStartAngle
                    : n.prevEndAngle - n.prevStartAngle)),
                n.i === a.config.series.length - 1 &&
                  (o + h > this.fullAngle
                    ? (n.endAngle = n.endAngle - (o + h))
                    : o + h < this.fullAngle &&
                      (n.endAngle = n.endAngle + (this.fullAngle - (o + h)))),
                o === this.fullAngle && (o = this.fullAngle - 0.01),
                this.animateArc(i, u, h, o, l, n);
            },
          },
          {
            key: "animateArc",
            value: function (i, n, a, o, l, u) {
              var h,
                d = this,
                g = this.w,
                x = new H(this.ctx),
                v = u.size;
              (isNaN(n) || isNaN(l)) && ((n = a), (l = o), (u.dur = 0));
              var w = o,
                k = a,
                C = n < a ? this.fullAngle + n - a : n - a;
              g.globals.dataChanged &&
                u.shouldSetPrevPaths &&
                u.prevEndAngle &&
                ((h = d.getPiePath({
                  me: d,
                  startAngle: u.prevStartAngle,
                  angle:
                    u.prevEndAngle < u.prevStartAngle
                      ? this.fullAngle + u.prevEndAngle - u.prevStartAngle
                      : u.prevEndAngle - u.prevStartAngle,
                  size: v,
                })),
                i.attr({ d: h })),
                u.dur !== 0
                  ? i
                      .animate(u.dur, g.globals.easing, u.animBeginArr[u.i])
                      .afterAll(function () {
                        (d.chartType !== "pie" &&
                          d.chartType !== "donut" &&
                          d.chartType !== "polarArea") ||
                          this.animate(
                            g.config.chart.animations.dynamicAnimation.speed
                          ).attr({ "stroke-width": d.strokeWidth }),
                          u.i === g.config.series.length - 1 &&
                            x.animationCompleted(i);
                      })
                      .during(function (P) {
                        (w = C + (o - C) * P),
                          u.animateStartingPos &&
                            ((w = l + (o - l) * P),
                            (k = n - l + (a - (n - l)) * P)),
                          (h = d.getPiePath({
                            me: d,
                            startAngle: k,
                            angle: w,
                            size: v,
                          })),
                          i.node.setAttribute("data:pathOrig", h),
                          i.attr({ d: h });
                      })
                  : ((h = d.getPiePath({
                      me: d,
                      startAngle: k,
                      angle: o,
                      size: v,
                    })),
                    u.isTrack || (g.globals.animationEnded = !0),
                    i.node.setAttribute("data:pathOrig", h),
                    i.attr({ d: h, "stroke-width": d.strokeWidth }));
            },
          },
          {
            key: "pieClicked",
            value: function (i) {
              var n,
                a = this.w,
                o = this,
                l =
                  o.sliceSizes[i] +
                  (a.config.plotOptions.pie.expandOnClick ? 4 : 0),
                u = a.globals.dom.Paper.select(
                  ".apexcharts-"
                    .concat(o.chartType.toLowerCase(), "-slice-")
                    .concat(i)
                ).members[0];
              if (u.attr("data:pieClicked") !== "true") {
                var h = a.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-pie-area"
                );
                Array.prototype.forEach.call(h, function (v) {
                  v.setAttribute("data:pieClicked", "false");
                  var w = v.getAttribute("data:pathOrig");
                  w && v.setAttribute("d", w);
                }),
                  u.attr("data:pieClicked", "true");
                var d = parseInt(u.attr("data:startAngle"), 10),
                  g = parseInt(u.attr("data:angle"), 10);
                (n = o.getPiePath({ me: o, startAngle: d, angle: g, size: l })),
                  g !== 360 && u.plot(n);
              } else {
                u.attr({ "data:pieClicked": "false" }),
                  this.revertDataLabelsInner(u.node, this.donutDataLabels);
                var x = u.attr("data:pathOrig");
                u.attr({ d: x });
              }
            },
          },
          {
            key: "getChangedPath",
            value: function (i, n) {
              var a = "";
              return (
                this.dynamicAnim &&
                  this.w.globals.dataChanged &&
                  (a = this.getPiePath({
                    me: this,
                    startAngle: i,
                    angle: n - i,
                    size: this.size,
                  })),
                a
              );
            },
          },
          {
            key: "getPiePath",
            value: function (i) {
              var n = i.me,
                a = i.startAngle,
                o = i.angle,
                l = i.size,
                u = a,
                h = (Math.PI * (u - 90)) / 180,
                d = o + a;
              Math.ceil(d) >=
                this.fullAngle +
                  (this.w.config.plotOptions.pie.startAngle % this.fullAngle) &&
                (d =
                  this.fullAngle +
                  (this.w.config.plotOptions.pie.startAngle % this.fullAngle) -
                  0.01),
                Math.ceil(d) > this.fullAngle && (d -= this.fullAngle);
              var g = (Math.PI * (d - 90)) / 180,
                x = n.centerX + l * Math.cos(h),
                v = n.centerY + l * Math.sin(h),
                w = n.centerX + l * Math.cos(g),
                k = n.centerY + l * Math.sin(g),
                C = L.polarToCartesian(n.centerX, n.centerY, n.donutSize, d),
                P = L.polarToCartesian(n.centerX, n.centerY, n.donutSize, u),
                E = o > 180 ? 1 : 0,
                I = ["M", x, v, "A", l, l, 0, E, 1, w, k];
              return n.chartType === "donut"
                ? []
                    .concat(I, [
                      "L",
                      C.x,
                      C.y,
                      "A",
                      n.donutSize,
                      n.donutSize,
                      0,
                      E,
                      0,
                      P.x,
                      P.y,
                      "L",
                      x,
                      v,
                      "z",
                    ])
                    .join(" ")
                : n.chartType === "pie" || n.chartType === "polarArea"
                ? [].concat(I, ["L", n.centerX, n.centerY, "L", x, v]).join(" ")
                : [].concat(I).join(" ");
            },
          },
          {
            key: "drawPolarElements",
            value: function (i) {
              var n = this.w,
                a = new ui(this.ctx),
                o = new B(this.ctx),
                l = new _h(this.ctx),
                u = o.group(),
                h = o.group(),
                d = a.niceScale(
                  0,
                  Math.ceil(this.maxY),
                  n.config.yaxis[0].tickAmount,
                  0,
                  !0
                ),
                g = d.result.reverse(),
                x = d.result.length;
              this.maxY = d.niceMax;
              for (
                var v = n.globals.radialSize, w = v / (x - 1), k = 0;
                k < x - 1;
                k++
              ) {
                var C = o.drawCircle(v);
                if (
                  (C.attr({
                    cx: this.centerX,
                    cy: this.centerY,
                    fill: "none",
                    "stroke-width":
                      n.config.plotOptions.polarArea.rings.strokeWidth,
                    stroke: n.config.plotOptions.polarArea.rings.strokeColor,
                  }),
                  n.config.yaxis[0].show)
                ) {
                  var P = l.drawYAxisTexts(
                    this.centerX,
                    this.centerY -
                      v +
                      parseInt(n.config.yaxis[0].labels.style.fontSize, 10) / 2,
                    k,
                    g[k]
                  );
                  h.add(P);
                }
                u.add(C), (v -= w);
              }
              this.drawSpokes(i), i.add(u), i.add(h);
            },
          },
          {
            key: "renderInnerDataLabels",
            value: function (i, n) {
              var a = this.w,
                o = new B(this.ctx),
                l = o.group({
                  class: "apexcharts-datalabels-group",
                  transform: "translate("
                    .concat(n.translateX ? n.translateX : 0, ", ")
                    .concat(n.translateY ? n.translateY : 0, ") scale(")
                    .concat(a.config.plotOptions.pie.customScale, ")"),
                }),
                u = i.total.show;
              l.node.style.opacity = n.opacity;
              var h,
                d,
                g = n.centerX,
                x = n.centerY;
              h = i.name.color === void 0 ? a.globals.colors[0] : i.name.color;
              var v = i.name.fontSize,
                w = i.name.fontFamily,
                k = i.name.fontWeight;
              d =
                i.value.color === void 0
                  ? a.config.chart.foreColor
                  : i.value.color;
              var C = i.value.formatter,
                P = "",
                E = "";
              if (
                (u
                  ? ((h = i.total.color),
                    (v = i.total.fontSize),
                    (w = i.total.fontFamily),
                    (k = i.total.fontWeight),
                    (E = i.total.label),
                    (P = i.total.formatter(a)))
                  : a.globals.series.length === 1 &&
                    ((P = C(a.globals.series[0], a)),
                    (E = a.globals.seriesNames[0])),
                E && (E = i.name.formatter(E, i.total.show, a)),
                i.name.show)
              ) {
                var I = o.drawText({
                  x: g,
                  y: x + parseFloat(i.name.offsetY),
                  text: E,
                  textAnchor: "middle",
                  foreColor: h,
                  fontSize: v,
                  fontWeight: k,
                  fontFamily: w,
                });
                I.node.classList.add("apexcharts-datalabel-label"), l.add(I);
              }
              if (i.value.show) {
                var D = i.name.show
                    ? parseFloat(i.value.offsetY) + 16
                    : i.value.offsetY,
                  p = o.drawText({
                    x: g,
                    y: x + D,
                    text: P,
                    textAnchor: "middle",
                    foreColor: d,
                    fontWeight: i.value.fontWeight,
                    fontSize: i.value.fontSize,
                    fontFamily: i.value.fontFamily,
                  });
                p.node.classList.add("apexcharts-datalabel-value"), l.add(p);
              }
              return l;
            },
          },
          {
            key: "printInnerLabels",
            value: function (i, n, a, o) {
              var l,
                u = this.w;
              o
                ? (l =
                    i.name.color === void 0
                      ? u.globals.colors[
                          parseInt(o.parentNode.getAttribute("rel"), 10) - 1
                        ]
                      : i.name.color)
                : u.globals.series.length > 1 &&
                  i.total.show &&
                  (l = i.total.color);
              var h = u.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabel-label"
                ),
                d = u.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabel-value"
                );
              (a = (0, i.value.formatter)(a, u)),
                o ||
                  typeof i.total.formatter != "function" ||
                  (a = i.total.formatter(u));
              var g = n === i.total.label;
              (n = i.name.formatter(n, g, u)),
                h !== null && (h.textContent = n),
                d !== null && (d.textContent = a),
                h !== null && (h.style.fill = l);
            },
          },
          {
            key: "printDataLabelsInner",
            value: function (i, n) {
              var a = this.w,
                o = i.getAttribute("data:value"),
                l =
                  a.globals.seriesNames[
                    parseInt(i.parentNode.getAttribute("rel"), 10) - 1
                  ];
              a.globals.series.length > 1 && this.printInnerLabels(n, l, o, i);
              var u = a.globals.dom.baseEl.querySelector(
                ".apexcharts-datalabels-group"
              );
              u !== null && (u.style.opacity = 1);
            },
          },
          {
            key: "drawSpokes",
            value: function (i) {
              var n = this,
                a = this.w,
                o = new B(this.ctx),
                l = a.config.plotOptions.polarArea.spokes;
              if (l.strokeWidth !== 0) {
                for (
                  var u = [], h = 360 / a.globals.series.length, d = 0;
                  d < a.globals.series.length;
                  d++
                )
                  u.push(
                    L.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      a.globals.radialSize,
                      a.config.plotOptions.pie.startAngle + h * d
                    )
                  );
                u.forEach(function (g, x) {
                  var v = o.drawLine(
                    g.x,
                    g.y,
                    n.centerX,
                    n.centerY,
                    Array.isArray(l.connectorColors)
                      ? l.connectorColors[x]
                      : l.connectorColors
                  );
                  i.add(v);
                });
              }
            },
          },
          {
            key: "revertDataLabelsInner",
            value: function (i, n, a) {
              var o = this,
                l = this.w,
                u = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabels-group"
                ),
                h = !1,
                d = l.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-pie-area"
                ),
                g = function (w) {
                  var k = w.makeSliceOut,
                    C = w.printLabel;
                  Array.prototype.forEach.call(d, function (P) {
                    P.getAttribute("data:pieClicked") === "true" &&
                      (k && (h = !0), C && o.printDataLabelsInner(P, n));
                  });
                };
              if (
                (g({ makeSliceOut: !0, printLabel: !1 }),
                n.total.show && l.globals.series.length > 1)
              )
                h && !n.total.showAlways
                  ? g({ makeSliceOut: !1, printLabel: !0 })
                  : this.printInnerLabels(
                      n,
                      n.total.label,
                      n.total.formatter(l)
                    );
              else if ((g({ makeSliceOut: !1, printLabel: !0 }), !h))
                if (
                  l.globals.selectedDataPoints.length &&
                  l.globals.series.length > 1
                )
                  if (l.globals.selectedDataPoints[0].length > 0) {
                    var x = l.globals.selectedDataPoints[0],
                      v = l.globals.dom.baseEl.querySelector(
                        ".apexcharts-"
                          .concat(this.chartType.toLowerCase(), "-slice-")
                          .concat(x)
                      );
                    this.printDataLabelsInner(v, n);
                  } else
                    u &&
                      l.globals.selectedDataPoints.length &&
                      l.globals.selectedDataPoints[0].length === 0 &&
                      (u.style.opacity = 0);
                else u && l.globals.series.length > 1 && (u.style.opacity = 0);
            },
          },
        ]),
        M
      );
    })(),
    hy = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.chartType = this.w.config.chart.type),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled),
          (this.animDur = 0);
        var n = this.w;
        (this.graphics = new B(this.ctx)),
          (this.lineColorArr =
            n.globals.stroke.colors !== void 0
              ? n.globals.stroke.colors
              : n.globals.colors),
          (this.defaultSize =
            n.globals.svgHeight < n.globals.svgWidth
              ? n.globals.gridHeight + 1.5 * n.globals.goldenPadding
              : n.globals.gridWidth),
          (this.isLog = n.config.yaxis[0].logarithmic),
          (this.coreUtils = new K(this.ctx)),
          (this.maxValue = this.isLog
            ? this.coreUtils.getLogVal(n.globals.maxY, 0)
            : n.globals.maxY),
          (this.minValue = this.isLog
            ? this.coreUtils.getLogVal(this.w.globals.minY, 0)
            : n.globals.minY),
          (this.polygons = n.config.plotOptions.radar.polygons),
          (this.strokeWidth = n.config.stroke.show ? n.config.stroke.width : 0),
          (this.size =
            this.defaultSize / 2.1 -
            this.strokeWidth -
            n.config.chart.dropShadow.blur),
          n.config.xaxis.labels.show &&
            (this.size = this.size - n.globals.xAxisLabelsWidth / 1.75),
          n.config.plotOptions.radar.size !== void 0 &&
            (this.size = n.config.plotOptions.radar.size),
          (this.dataRadiusOfPercent = []),
          (this.dataRadius = []),
          (this.angleArr = []),
          (this.yaxisLabelsTextsPos = []);
      }
      return (
        y(M, [
          {
            key: "draw",
            value: function (i) {
              var n = this,
                a = this.w,
                o = new be(this.ctx),
                l = [],
                u = new Lt(this.ctx);
              i.length &&
                (this.dataPointsLen = i[a.globals.maxValsInArrayIndex].length),
                (this.disAngle = (2 * Math.PI) / this.dataPointsLen);
              var h = a.globals.gridWidth / 2,
                d = a.globals.gridHeight / 2,
                g = h + a.config.plotOptions.radar.offsetX,
                x = d + a.config.plotOptions.radar.offsetY,
                v = this.graphics.group({
                  class: "apexcharts-radar-series apexcharts-plot-series",
                  transform: "translate("
                    .concat(g || 0, ", ")
                    .concat(x || 0, ")"),
                }),
                w = [],
                k = null,
                C = null;
              if (
                ((this.yaxisLabels = this.graphics.group({
                  class: "apexcharts-yaxis",
                })),
                i.forEach(function (E, I) {
                  var D = E.length === a.globals.dataPoints,
                    p = n.graphics
                      .group()
                      .attr({
                        class: "apexcharts-series",
                        "data:longestSeries": D,
                        seriesName: L.escapeString(a.globals.seriesNames[I]),
                        rel: I + 1,
                        "data:realIndex": I,
                      });
                  (n.dataRadiusOfPercent[I] = []),
                    (n.dataRadius[I] = []),
                    (n.angleArr[I] = []),
                    E.forEach(function (J, oe) {
                      var ce = Math.abs(n.maxValue - n.minValue);
                      (J += Math.abs(n.minValue)),
                        n.isLog && (J = n.coreUtils.getLogVal(J, 0)),
                        (n.dataRadiusOfPercent[I][oe] = J / ce),
                        (n.dataRadius[I][oe] =
                          n.dataRadiusOfPercent[I][oe] * n.size),
                        (n.angleArr[I][oe] = oe * n.disAngle);
                    }),
                    (w = n.getDataPointsPos(n.dataRadius[I], n.angleArr[I]));
                  var b = n.createPaths(w, { x: 0, y: 0 });
                  (k = n.graphics.group({
                    class:
                      "apexcharts-series-markers-wrap apexcharts-element-hidden",
                  })),
                    (C = n.graphics.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": I,
                    })),
                    a.globals.delayedElements.push({ el: k.node, index: I });
                  var A = {
                      i: I,
                      realIndex: I,
                      animationDelay: I,
                      initialSpeed: a.config.chart.animations.speed,
                      dataChangeSpeed:
                        a.config.chart.animations.dynamicAnimation.speed,
                      className: "apexcharts-radar",
                      shouldClipToGrid: !1,
                      bindEventsOnPaths: !1,
                      stroke: a.globals.stroke.colors[I],
                      strokeLineCap: a.config.stroke.lineCap,
                    },
                    R = null;
                  a.globals.previousPaths.length > 0 &&
                    (R = n.getPreviousPath(I));
                  for (var F = 0; F < b.linePathsTo.length; F++) {
                    var _ = n.graphics.renderPaths(
                      s(
                        s({}, A),
                        {},
                        {
                          pathFrom: R === null ? b.linePathsFrom[F] : R,
                          pathTo: b.linePathsTo[F],
                          strokeWidth: Array.isArray(n.strokeWidth)
                            ? n.strokeWidth[I]
                            : n.strokeWidth,
                          fill: "none",
                          drawShadow: !1,
                        }
                      )
                    );
                    p.add(_);
                    var G = o.fillPath({ seriesNumber: I }),
                      W = n.graphics.renderPaths(
                        s(
                          s({}, A),
                          {},
                          {
                            pathFrom: R === null ? b.areaPathsFrom[F] : R,
                            pathTo: b.areaPathsTo[F],
                            strokeWidth: 0,
                            fill: G,
                            drawShadow: !1,
                          }
                        )
                      );
                    if (a.config.chart.dropShadow.enabled) {
                      var Z = new U(n.ctx),
                        ee = a.config.chart.dropShadow;
                      Z.dropShadow(
                        W,
                        Object.assign({}, ee, { noUserSpaceOnUse: !0 }),
                        I
                      );
                    }
                    p.add(W);
                  }
                  E.forEach(function (J, oe) {
                    var ce = new je(n.ctx).getMarkerConfig({
                        cssClass: "apexcharts-marker",
                        seriesIndex: I,
                        dataPointIndex: oe,
                      }),
                      Se = n.graphics.drawMarker(w[oe].x, w[oe].y, ce);
                    Se.attr("rel", oe),
                      Se.attr("j", oe),
                      Se.attr("index", I),
                      Se.node.setAttribute("default-marker-size", ce.pSize);
                    var ke = n.graphics.group({
                      class: "apexcharts-series-markers",
                    });
                    ke && ke.add(Se), k.add(ke), p.add(k);
                    var Le = a.config.dataLabels;
                    if (Le.enabled) {
                      var Be = Le.formatter(a.globals.series[I][oe], {
                        seriesIndex: I,
                        dataPointIndex: oe,
                        w: a,
                      });
                      u.plotDataLabelsText({
                        x: w[oe].x,
                        y: w[oe].y,
                        text: Be,
                        textAnchor: "middle",
                        i: I,
                        j: I,
                        parent: C,
                        offsetCorrection: !1,
                        dataLabelsConfig: s({}, Le),
                      });
                    }
                    p.add(C);
                  }),
                    l.push(p);
                }),
                this.drawPolygons({ parent: v }),
                a.config.xaxis.labels.show)
              ) {
                var P = this.drawXAxisTexts();
                v.add(P);
              }
              return (
                l.forEach(function (E) {
                  v.add(E);
                }),
                v.add(this.yaxisLabels),
                v
              );
            },
          },
          {
            key: "drawPolygons",
            value: function (i) {
              for (
                var n = this,
                  a = this.w,
                  o = i.parent,
                  l = new _h(this.ctx),
                  u = a.globals.yAxisScale[0].result.reverse(),
                  h = u.length,
                  d = [],
                  g = this.size / (h - 1),
                  x = 0;
                x < h;
                x++
              )
                d[x] = g * x;
              d.reverse();
              var v = [],
                w = [];
              d.forEach(function (k, C) {
                var P = L.getPolygonPos(k, n.dataPointsLen),
                  E = "";
                P.forEach(function (I, D) {
                  if (C === 0) {
                    var p = n.graphics.drawLine(
                      I.x,
                      I.y,
                      0,
                      0,
                      Array.isArray(n.polygons.connectorColors)
                        ? n.polygons.connectorColors[D]
                        : n.polygons.connectorColors
                    );
                    w.push(p);
                  }
                  D === 0 && n.yaxisLabelsTextsPos.push({ x: I.x, y: I.y }),
                    (E += I.x + "," + I.y + " ");
                }),
                  v.push(E);
              }),
                v.forEach(function (k, C) {
                  var P = n.polygons.strokeColors,
                    E = n.polygons.strokeWidth,
                    I = n.graphics.drawPolygon(
                      k,
                      Array.isArray(P) ? P[C] : P,
                      Array.isArray(E) ? E[C] : E,
                      a.globals.radarPolygons.fill.colors[C]
                    );
                  o.add(I);
                }),
                w.forEach(function (k) {
                  o.add(k);
                }),
                a.config.yaxis[0].show &&
                  this.yaxisLabelsTextsPos.forEach(function (k, C) {
                    var P = l.drawYAxisTexts(k.x, k.y, C, u[C]);
                    n.yaxisLabels.add(P);
                  });
            },
          },
          {
            key: "drawXAxisTexts",
            value: function () {
              var i = this,
                n = this.w,
                a = n.config.xaxis.labels,
                o = this.graphics.group({ class: "apexcharts-xaxis" }),
                l = L.getPolygonPos(this.size, this.dataPointsLen);
              return (
                n.globals.labels.forEach(function (u, h) {
                  var d = n.config.xaxis.labels.formatter,
                    g = new Lt(i.ctx);
                  if (l[h]) {
                    var x = i.getTextPos(l[h], i.size),
                      v = d(u, { seriesIndex: -1, dataPointIndex: h, w: n });
                    g.plotDataLabelsText({
                      x: x.newX,
                      y: x.newY,
                      text: v,
                      textAnchor: x.textAnchor,
                      i: h,
                      j: h,
                      parent: o,
                      color:
                        Array.isArray(a.style.colors) && a.style.colors[h]
                          ? a.style.colors[h]
                          : "#a8a8a8",
                      dataLabelsConfig: s(
                        {
                          textAnchor: x.textAnchor,
                          dropShadow: { enabled: !1 },
                        },
                        a
                      ),
                      offsetCorrection: !1,
                    });
                  }
                }),
                o
              );
            },
          },
          {
            key: "createPaths",
            value: function (i, n) {
              var a = this,
                o = [],
                l = [],
                u = [],
                h = [];
              if (i.length) {
                (l = [this.graphics.move(n.x, n.y)]),
                  (h = [this.graphics.move(n.x, n.y)]);
                var d = this.graphics.move(i[0].x, i[0].y),
                  g = this.graphics.move(i[0].x, i[0].y);
                i.forEach(function (x, v) {
                  (d += a.graphics.line(x.x, x.y)),
                    (g += a.graphics.line(x.x, x.y)),
                    v === i.length - 1 && ((d += "Z"), (g += "Z"));
                }),
                  o.push(d),
                  u.push(g);
              }
              return {
                linePathsFrom: l,
                linePathsTo: o,
                areaPathsFrom: h,
                areaPathsTo: u,
              };
            },
          },
          {
            key: "getTextPos",
            value: function (i, n) {
              var a = "middle",
                o = i.x,
                l = i.y;
              return (
                Math.abs(i.x) >= 10
                  ? i.x > 0
                    ? ((a = "start"), (o += 10))
                    : i.x < 0 && ((a = "end"), (o -= 10))
                  : (a = "middle"),
                Math.abs(i.y) >= n - 10 &&
                  (i.y < 0 ? (l -= 10) : i.y > 0 && (l += 10)),
                { textAnchor: a, newX: o, newY: l }
              );
            },
          },
          {
            key: "getPreviousPath",
            value: function (i) {
              for (
                var n = this.w, a = null, o = 0;
                o < n.globals.previousPaths.length;
                o++
              ) {
                var l = n.globals.previousPaths[o];
                l.paths.length > 0 &&
                  parseInt(l.realIndex, 10) === parseInt(i, 10) &&
                  n.globals.previousPaths[o].paths[0] !== void 0 &&
                  (a = n.globals.previousPaths[o].paths[0].d);
              }
              return a;
            },
          },
          {
            key: "getDataPointsPos",
            value: function (i, n) {
              var a =
                arguments.length > 2 && arguments[2] !== void 0
                  ? arguments[2]
                  : this.dataPointsLen;
              (i = i || []), (n = n || []);
              for (var o = [], l = 0; l < a; l++) {
                var u = {};
                (u.x = i[l] * Math.sin(n[l])),
                  (u.y = -i[l] * Math.cos(n[l])),
                  o.push(u);
              }
              return o;
            },
          },
        ]),
        M
      );
    })(),
    dy = (function (M) {
      T(n, Hh);
      var i = X(n);
      function n(a) {
        var o;
        f(this, n),
          ((o = i.call(this, a)).ctx = a),
          (o.w = a.w),
          (o.animBeginArr = [0]),
          (o.animDur = 0);
        var l = o.w;
        return (
          (o.startAngle = l.config.plotOptions.radialBar.startAngle),
          (o.endAngle = l.config.plotOptions.radialBar.endAngle),
          (o.totalAngle = Math.abs(
            l.config.plotOptions.radialBar.endAngle -
              l.config.plotOptions.radialBar.startAngle
          )),
          (o.trackStartAngle = l.config.plotOptions.radialBar.track.startAngle),
          (o.trackEndAngle = l.config.plotOptions.radialBar.track.endAngle),
          (o.donutDataLabels = o.w.config.plotOptions.radialBar.dataLabels),
          (o.radialDataLabels = o.donutDataLabels),
          o.trackStartAngle || (o.trackStartAngle = o.startAngle),
          o.trackEndAngle || (o.trackEndAngle = o.endAngle),
          o.endAngle === 360 && (o.endAngle = 359.99),
          (o.margin = parseInt(
            l.config.plotOptions.radialBar.track.margin,
            10
          )),
          o
        );
      }
      return (
        y(n, [
          {
            key: "draw",
            value: function (a) {
              var o = this.w,
                l = new B(this.ctx),
                u = l.group({ class: "apexcharts-radialbar" });
              if (o.globals.noData) return u;
              var h = l.group(),
                d = this.defaultSize / 2,
                g = o.globals.gridWidth / 2,
                x = this.defaultSize / 2.05;
              o.config.chart.sparkline.enabled ||
                (x =
                  x - o.config.stroke.width - o.config.chart.dropShadow.blur);
              var v = o.globals.fill.colors;
              if (o.config.plotOptions.radialBar.track.show) {
                var w = this.drawTracks({
                  size: x,
                  centerX: g,
                  centerY: d,
                  colorArr: v,
                  series: a,
                });
                h.add(w);
              }
              var k = this.drawArcs({
                  size: x,
                  centerX: g,
                  centerY: d,
                  colorArr: v,
                  series: a,
                }),
                C = 360;
              o.config.plotOptions.radialBar.startAngle < 0 &&
                (C = this.totalAngle);
              var P = (360 - C) / 360;
              if (
                ((o.globals.radialSize = x - x * P),
                this.radialDataLabels.value.show)
              ) {
                var E = Math.max(
                  this.radialDataLabels.value.offsetY,
                  this.radialDataLabels.name.offsetY
                );
                o.globals.radialSize += E * P;
              }
              return (
                h.add(k.g),
                o.config.plotOptions.radialBar.hollow.position === "front" &&
                  (k.g.add(k.elHollow), k.dataLabels && k.g.add(k.dataLabels)),
                u.add(h),
                u
              );
            },
          },
          {
            key: "drawTracks",
            value: function (a) {
              var o = this.w,
                l = new B(this.ctx),
                u = l.group({ class: "apexcharts-tracks" }),
                h = new U(this.ctx),
                d = new be(this.ctx),
                g = this.getStrokeWidth(a);
              a.size = a.size - g / 2;
              for (var x = 0; x < a.series.length; x++) {
                var v = l.group({
                  class: "apexcharts-radialbar-track apexcharts-track",
                });
                u.add(v),
                  v.attr({ rel: x + 1 }),
                  (a.size = a.size - g - this.margin);
                var w = o.config.plotOptions.radialBar.track,
                  k = d.fillPath({
                    seriesNumber: 0,
                    size: a.size,
                    fillColors: Array.isArray(w.background)
                      ? w.background[x]
                      : w.background,
                    solid: !0,
                  }),
                  C = this.trackStartAngle,
                  P = this.trackEndAngle;
                Math.abs(P) + Math.abs(C) >= 360 &&
                  (P = 360 - Math.abs(this.startAngle) - 0.1);
                var E = l.drawPath({
                  d: "",
                  stroke: k,
                  strokeWidth: (g * parseInt(w.strokeWidth, 10)) / 100,
                  fill: "none",
                  strokeOpacity: w.opacity,
                  classes: "apexcharts-radialbar-area",
                });
                if (w.dropShadow.enabled) {
                  var I = w.dropShadow;
                  h.dropShadow(E, I);
                }
                v.add(E),
                  E.attr("id", "apexcharts-radialbarTrack-" + x),
                  this.animatePaths(E, {
                    centerX: a.centerX,
                    centerY: a.centerY,
                    endAngle: P,
                    startAngle: C,
                    size: a.size,
                    i: x,
                    totalItems: 2,
                    animBeginArr: 0,
                    dur: 0,
                    isTrack: !0,
                    easing: o.globals.easing,
                  });
              }
              return u;
            },
          },
          {
            key: "drawArcs",
            value: function (a) {
              var o = this.w,
                l = new B(this.ctx),
                u = new be(this.ctx),
                h = new U(this.ctx),
                d = l.group(),
                g = this.getStrokeWidth(a);
              a.size = a.size - g / 2;
              var x = o.config.plotOptions.radialBar.hollow.background,
                v =
                  a.size -
                  g * a.series.length -
                  this.margin * a.series.length -
                  (g *
                    parseInt(
                      o.config.plotOptions.radialBar.track.strokeWidth,
                      10
                    )) /
                    100 /
                    2,
                w = v - o.config.plotOptions.radialBar.hollow.margin;
              o.config.plotOptions.radialBar.hollow.image !== void 0 &&
                (x = this.drawHollowImage(a, d, v, x));
              var k = this.drawHollow({
                size: w,
                centerX: a.centerX,
                centerY: a.centerY,
                fill: x || "transparent",
              });
              if (o.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
                var C = o.config.plotOptions.radialBar.hollow.dropShadow;
                h.dropShadow(k, C);
              }
              var P = 1;
              !this.radialDataLabels.total.show &&
                o.globals.series.length > 1 &&
                (P = 0);
              var E = null;
              this.radialDataLabels.show &&
                (E = this.renderInnerDataLabels(this.radialDataLabels, {
                  hollowSize: v,
                  centerX: a.centerX,
                  centerY: a.centerY,
                  opacity: P,
                })),
                o.config.plotOptions.radialBar.hollow.position === "back" &&
                  (d.add(k), E && d.add(E));
              var I = !1;
              o.config.plotOptions.radialBar.inverseOrder && (I = !0);
              for (
                var D = I ? a.series.length - 1 : 0;
                I ? D >= 0 : D < a.series.length;
                I ? D-- : D++
              ) {
                var p = l.group({
                  class: "apexcharts-series apexcharts-radial-series",
                  seriesName: L.escapeString(o.globals.seriesNames[D]),
                });
                d.add(p),
                  p.attr({ rel: D + 1, "data:realIndex": D }),
                  this.ctx.series.addCollapsedClassToSeries(p, D),
                  (a.size = a.size - g - this.margin);
                var b = u.fillPath({
                    seriesNumber: D,
                    size: a.size,
                    value: a.series[D],
                  }),
                  A = this.startAngle,
                  R = void 0,
                  F = L.negToZero(a.series[D] > 100 ? 100 : a.series[D]) / 100,
                  _ = Math.round(this.totalAngle * F) + this.startAngle,
                  G = void 0;
                o.globals.dataChanged &&
                  ((R = this.startAngle),
                  (G =
                    Math.round(
                      (this.totalAngle *
                        L.negToZero(o.globals.previousPaths[D])) /
                        100
                    ) + R)),
                  Math.abs(_) + Math.abs(A) >= 360 && (_ -= 0.01),
                  Math.abs(G) + Math.abs(R) >= 360 && (G -= 0.01);
                var W = _ - A,
                  Z = Array.isArray(o.config.stroke.dashArray)
                    ? o.config.stroke.dashArray[D]
                    : o.config.stroke.dashArray,
                  ee = l.drawPath({
                    d: "",
                    stroke: b,
                    strokeWidth: g,
                    fill: "none",
                    fillOpacity: o.config.fill.opacity,
                    classes:
                      "apexcharts-radialbar-area apexcharts-radialbar-slice-" +
                      D,
                    strokeDashArray: Z,
                  });
                if (
                  (B.setAttrs(ee.node, {
                    "data:angle": W,
                    "data:value": a.series[D],
                  }),
                  o.config.chart.dropShadow.enabled)
                ) {
                  var J = o.config.chart.dropShadow;
                  h.dropShadow(ee, J, D);
                }
                h.setSelectionFilter(ee, 0, D),
                  this.addListeners(ee, this.radialDataLabels),
                  p.add(ee),
                  ee.attr({ index: 0, j: D });
                var oe = 0;
                !this.initialAnim ||
                  o.globals.resized ||
                  o.globals.dataChanged ||
                  (oe = o.config.chart.animations.speed),
                  o.globals.dataChanged &&
                    (oe = o.config.chart.animations.dynamicAnimation.speed),
                  (this.animDur = oe / (1.2 * a.series.length) + this.animDur),
                  this.animBeginArr.push(this.animDur),
                  this.animatePaths(ee, {
                    centerX: a.centerX,
                    centerY: a.centerY,
                    endAngle: _,
                    startAngle: A,
                    prevEndAngle: G,
                    prevStartAngle: R,
                    size: a.size,
                    i: D,
                    totalItems: 2,
                    animBeginArr: this.animBeginArr,
                    dur: oe,
                    shouldSetPrevPaths: !0,
                    easing: o.globals.easing,
                  });
              }
              return { g: d, elHollow: k, dataLabels: E };
            },
          },
          {
            key: "drawHollow",
            value: function (a) {
              var o = new B(this.ctx).drawCircle(2 * a.size);
              return (
                o.attr({
                  class: "apexcharts-radialbar-hollow",
                  cx: a.centerX,
                  cy: a.centerY,
                  r: a.size,
                  fill: a.fill,
                }),
                o
              );
            },
          },
          {
            key: "drawHollowImage",
            value: function (a, o, l, u) {
              var h = this.w,
                d = new be(this.ctx),
                g = L.randomId(),
                x = h.config.plotOptions.radialBar.hollow.image;
              if (h.config.plotOptions.radialBar.hollow.imageClipped)
                d.clippedImgArea({
                  width: l,
                  height: l,
                  image: x,
                  patternID: "pattern".concat(h.globals.cuid).concat(g),
                }),
                  (u = "url(#pattern".concat(h.globals.cuid).concat(g, ")"));
              else {
                var v = h.config.plotOptions.radialBar.hollow.imageWidth,
                  w = h.config.plotOptions.radialBar.hollow.imageHeight;
                if (v === void 0 && w === void 0) {
                  var k = h.globals.dom.Paper.image(x).loaded(function (P) {
                    this.move(
                      a.centerX -
                        P.width / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetX,
                      a.centerY -
                        P.height / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetY
                    );
                  });
                  o.add(k);
                } else {
                  var C = h.globals.dom.Paper.image(x).loaded(function (P) {
                    this.move(
                      a.centerX -
                        v / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetX,
                      a.centerY -
                        w / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetY
                    ),
                      this.size(v, w);
                  });
                  o.add(C);
                }
              }
              return u;
            },
          },
          {
            key: "getStrokeWidth",
            value: function (a) {
              var o = this.w;
              return (
                (a.size *
                  (100 -
                    parseInt(o.config.plotOptions.radialBar.hollow.size, 10))) /
                  100 /
                  (a.series.length + 1) -
                this.margin
              );
            },
          },
        ]),
        n
      );
    })(),
    fy = (function (M) {
      T(n, En);
      var i = X(n);
      function n() {
        return f(this, n), i.apply(this, arguments);
      }
      return (
        y(n, [
          {
            key: "draw",
            value: function (a, o) {
              var l = this.w,
                u = new B(this.ctx);
              (this.rangeBarOptions = this.w.config.plotOptions.rangeBar),
                (this.series = a),
                (this.seriesRangeStart = l.globals.seriesRangeStart),
                (this.seriesRangeEnd = l.globals.seriesRangeEnd),
                this.barHelpers.initVariables(a);
              for (
                var h = u.group({
                    class: "apexcharts-rangebar-series apexcharts-plot-series",
                  }),
                  d = 0;
                d < a.length;
                d++
              ) {
                var g,
                  x,
                  v,
                  w,
                  k = void 0,
                  C = void 0,
                  P = l.globals.comboCharts ? o[d] : d,
                  E = u.group({
                    class: "apexcharts-series",
                    seriesName: L.escapeString(l.globals.seriesNames[P]),
                    rel: d + 1,
                    "data:realIndex": P,
                  });
                this.ctx.series.addCollapsedClassToSeries(E, P),
                  a[d].length > 0 && (this.visibleI = this.visibleI + 1);
                var I = 0,
                  D = 0;
                this.yRatio.length > 1 && (this.yaxisIndex = P);
                var p = this.barHelpers.initialPositions();
                (C = p.y),
                  (w = p.zeroW),
                  (k = p.x),
                  (D = p.barWidth),
                  (I = p.barHeight),
                  (g = p.xDivision),
                  (x = p.yDivision),
                  (v = p.zeroH);
                for (
                  var b = u.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": P,
                    }),
                    A = u.group({ class: "apexcharts-rangebar-goals-markers" }),
                    R = 0;
                  R < l.globals.dataPoints;
                  R++
                ) {
                  var F,
                    _ = this.barHelpers.getStrokeWidth(d, R, P),
                    G = this.seriesRangeStart[d][R],
                    W = this.seriesRangeEnd[d][R],
                    Z = null,
                    ee = null,
                    J = null,
                    oe = { x: k, y: C, strokeWidth: _, elSeries: E },
                    ce = this.seriesLen;
                  if (
                    (l.config.plotOptions.bar.rangeBarGroupRows && (ce = 1),
                    l.config.series[d].data[R] === void 0)
                  )
                    break;
                  if (this.isHorizontal) {
                    J = C + I * this.visibleI;
                    var Se = (x - I * ce) / 2;
                    if (l.config.series[d].data[R].x) {
                      var ke = this.detectOverlappingBars({
                        i: d,
                        j: R,
                        barYPosition: J,
                        srty: Se,
                        barHeight: I,
                        yDivision: x,
                        initPositions: p,
                      });
                      (I = ke.barHeight), (J = ke.barYPosition);
                    }
                    D = (Z = this.drawRangeBarPaths(
                      s(
                        {
                          indexes: { i: d, j: R, realIndex: P },
                          barHeight: I,
                          barYPosition: J,
                          zeroW: w,
                          yDivision: x,
                          y1: G,
                          y2: W,
                        },
                        oe
                      )
                    )).barWidth;
                  } else {
                    l.globals.isXNumeric &&
                      (k =
                        (l.globals.seriesX[d][R] - l.globals.minX) /
                          this.xRatio -
                        D / 2),
                      (ee = k + D * this.visibleI);
                    var Le = (g - D * ce) / 2;
                    if (l.config.series[d].data[R].x) {
                      var Be = this.detectOverlappingBars({
                        i: d,
                        j: R,
                        barXPosition: ee,
                        srtx: Le,
                        barWidth: D,
                        xDivision: g,
                        initPositions: p,
                      });
                      (D = Be.barWidth), (ee = Be.barXPosition);
                    }
                    I = (Z = this.drawRangeColumnPaths(
                      s(
                        {
                          indexes: { i: d, j: R, realIndex: P },
                          barWidth: D,
                          barXPosition: ee,
                          zeroH: v,
                          xDivision: g,
                        },
                        oe
                      )
                    )).barHeight;
                  }
                  var ze = this.barHelpers.drawGoalLine({
                    barXPosition: Z.barXPosition,
                    barYPosition: J,
                    goalX: Z.goalX,
                    goalY: Z.goalY,
                    barHeight: I,
                    barWidth: D,
                  });
                  ze && A.add(ze), (C = Z.y), (k = Z.x);
                  var $e = this.barHelpers.getPathFillColor(a, d, R, P),
                    Vt = l.globals.stroke.colors[P];
                  this.renderSeries(
                    (S(
                      (F = {
                        realIndex: P,
                        pathFill: $e,
                        lineFill: Vt,
                        j: R,
                        i: d,
                        x: k,
                        y: C,
                        y1: G,
                        y2: W,
                        pathFrom: Z.pathFrom,
                        pathTo: Z.pathTo,
                        strokeWidth: _,
                        elSeries: E,
                        series: a,
                        barHeight: I,
                        barWidth: D,
                        barXPosition: ee,
                        barYPosition: J,
                      }),
                      "barWidth",
                      D
                    ),
                    S(F, "elDataLabelsWrap", b),
                    S(F, "elGoalsMarkers", A),
                    S(F, "visibleSeries", this.visibleI),
                    S(F, "type", "rangebar"),
                    F)
                  );
                }
                h.add(E);
              }
              return h;
            },
          },
          {
            key: "detectOverlappingBars",
            value: function (a) {
              var o = a.i,
                l = a.j,
                u = a.barYPosition,
                h = a.barXPosition,
                d = a.srty,
                g = a.srtx,
                x = a.barHeight,
                v = a.barWidth,
                w = a.yDivision,
                k = a.xDivision,
                C = a.initPositions,
                P = this.w,
                E = [],
                I = P.config.series[o].data[l].rangeName,
                D = P.config.series[o].data[l].x,
                p = Array.isArray(D) ? D.join(" ") : D,
                b = P.globals.labels
                  .map(function (R) {
                    return Array.isArray(R) ? R.join(" ") : R;
                  })
                  .indexOf(p),
                A = P.globals.seriesRange[o].findIndex(function (R) {
                  return R.x === p && R.overlaps.length > 0;
                });
              return (
                this.isHorizontal
                  ? ((u = P.config.plotOptions.bar.rangeBarGroupRows
                      ? d + w * b
                      : d + x * this.visibleI + w * b),
                    A > -1 &&
                      !P.config.plotOptions.bar.rangeBarOverlap &&
                      (E = P.globals.seriesRange[o][A].overlaps).indexOf(I) >
                        -1 &&
                      (u =
                        (x = C.barHeight / E.length) * this.visibleI +
                        (w * (100 - parseInt(this.barOptions.barHeight, 10))) /
                          100 /
                          2 +
                        x * (this.visibleI + E.indexOf(I)) +
                        w * b))
                  : (b > -1 &&
                      (h = P.config.plotOptions.bar.rangeBarGroupRows
                        ? g + k * b
                        : g + v * this.visibleI + k * b),
                    A > -1 &&
                      !P.config.plotOptions.bar.rangeBarOverlap &&
                      (E = P.globals.seriesRange[o][A].overlaps).indexOf(I) >
                        -1 &&
                      (h =
                        (v = C.barWidth / E.length) * this.visibleI +
                        (k * (100 - parseInt(this.barOptions.barWidth, 10))) /
                          100 /
                          2 +
                        v * (this.visibleI + E.indexOf(I)) +
                        k * b)),
                { barYPosition: u, barXPosition: h, barHeight: x, barWidth: v }
              );
            },
          },
          {
            key: "drawRangeColumnPaths",
            value: function (a) {
              var o = a.indexes,
                l = a.x,
                u = a.xDivision,
                h = a.barWidth,
                d = a.barXPosition,
                g = a.zeroH,
                x = this.w,
                v = o.i,
                w = o.j,
                k = this.yRatio[this.yaxisIndex],
                C = o.realIndex,
                P = this.getRangeValue(C, w),
                E = Math.min(P.start, P.end),
                I = Math.max(P.start, P.end);
              this.series[v][w] === void 0 || this.series[v][w] === null
                ? (E = g)
                : ((E = g - E / k), (I = g - I / k));
              var D = Math.abs(I - E),
                p = this.barHelpers.getColumnPaths({
                  barXPosition: d,
                  barWidth: h,
                  y1: E,
                  y2: I,
                  strokeWidth: this.strokeWidth,
                  series: this.seriesRangeEnd,
                  realIndex: o.realIndex,
                  i: C,
                  j: w,
                  w: x,
                });
              if (x.globals.isXNumeric) {
                var b = this.getBarXForNumericXAxis({
                  x: l,
                  j: w,
                  realIndex: C,
                  barWidth: h,
                });
                (l = b.x), (d = b.barXPosition);
              } else l += u;
              return {
                pathTo: p.pathTo,
                pathFrom: p.pathFrom,
                barHeight: D,
                x: l,
                y: I,
                goalY: this.barHelpers.getGoalValues("y", null, g, v, w),
                barXPosition: d,
              };
            },
          },
          {
            key: "drawRangeBarPaths",
            value: function (a) {
              var o = a.indexes,
                l = a.y,
                u = a.y1,
                h = a.y2,
                d = a.yDivision,
                g = a.barHeight,
                x = a.barYPosition,
                v = a.zeroW,
                w = this.w,
                k = v + u / this.invertedYRatio,
                C = v + h / this.invertedYRatio,
                P = Math.abs(C - k),
                E = this.barHelpers.getBarpaths({
                  barYPosition: x,
                  barHeight: g,
                  x1: k,
                  x2: C,
                  strokeWidth: this.strokeWidth,
                  series: this.seriesRangeEnd,
                  i: o.realIndex,
                  realIndex: o.realIndex,
                  j: o.j,
                  w,
                });
              return (
                w.globals.isXNumeric || (l += d),
                {
                  pathTo: E.pathTo,
                  pathFrom: E.pathFrom,
                  barWidth: P,
                  x: C,
                  goalX: this.barHelpers.getGoalValues(
                    "x",
                    v,
                    null,
                    o.realIndex,
                    o.j
                  ),
                  y: l,
                }
              );
            },
          },
          {
            key: "getRangeValue",
            value: function (a, o) {
              var l = this.w;
              return {
                start: l.globals.seriesRangeStart[a][o],
                end: l.globals.seriesRangeEnd[a][o],
              };
            },
          },
        ]),
        n
      );
    })(),
    py = (function () {
      function M(i) {
        f(this, M), (this.w = i.w), (this.lineCtx = i);
      }
      return (
        y(M, [
          {
            key: "sameValueSeriesFix",
            value: function (i, n) {
              var a = this.w;
              if (
                (a.config.fill.type === "gradient" ||
                  a.config.fill.type[i] === "gradient") &&
                new K(this.lineCtx.ctx, a).seriesHaveSameValues(i)
              ) {
                var o = n[i].slice();
                (o[o.length - 1] = o[o.length - 1] + 1e-6), (n[i] = o);
              }
              return n;
            },
          },
          {
            key: "calculatePoints",
            value: function (i) {
              var n = i.series,
                a = i.realIndex,
                o = i.x,
                l = i.y,
                u = i.i,
                h = i.j,
                d = i.prevY,
                g = this.w,
                x = [],
                v = [];
              if (h === 0) {
                var w =
                  this.lineCtx.categoryAxisCorrection +
                  g.config.markers.offsetX;
                g.globals.isXNumeric &&
                  (w =
                    (g.globals.seriesX[a][0] - g.globals.minX) /
                      this.lineCtx.xRatio +
                    g.config.markers.offsetX),
                  x.push(w),
                  v.push(
                    L.isNumber(n[u][0]) ? d + g.config.markers.offsetY : null
                  ),
                  x.push(o + g.config.markers.offsetX),
                  v.push(
                    L.isNumber(n[u][h + 1])
                      ? l + g.config.markers.offsetY
                      : null
                  );
              } else
                x.push(o + g.config.markers.offsetX),
                  v.push(
                    L.isNumber(n[u][h + 1])
                      ? l + g.config.markers.offsetY
                      : null
                  );
              return { x, y: v };
            },
          },
          {
            key: "checkPreviousPaths",
            value: function (i) {
              for (
                var n = i.pathFromLine,
                  a = i.pathFromArea,
                  o = i.realIndex,
                  l = this.w,
                  u = 0;
                u < l.globals.previousPaths.length;
                u++
              ) {
                var h = l.globals.previousPaths[u];
                (h.type === "line" || h.type === "area") &&
                  h.paths.length > 0 &&
                  parseInt(h.realIndex, 10) === parseInt(o, 10) &&
                  (h.type === "line"
                    ? ((this.lineCtx.appendPathFrom = !1),
                      (n = l.globals.previousPaths[u].paths[0].d))
                    : h.type === "area" &&
                      ((this.lineCtx.appendPathFrom = !1),
                      (a = l.globals.previousPaths[u].paths[0].d),
                      l.config.stroke.show &&
                        l.globals.previousPaths[u].paths[1] &&
                        (n = l.globals.previousPaths[u].paths[1].d)));
              }
              return { pathFromLine: n, pathFromArea: a };
            },
          },
          {
            key: "determineFirstPrevY",
            value: function (i) {
              var n,
                a = i.i,
                o = i.series,
                l = i.prevY,
                u = i.lineYPosition,
                h = this.w;
              if (
                ((n = o[a]) === null || n === void 0 ? void 0 : n[0]) !== void 0
              )
                l =
                  (u =
                    h.config.chart.stacked && a > 0
                      ? this.lineCtx.prevSeriesY[a - 1][0]
                      : this.lineCtx.zeroY) -
                  o[a][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] +
                  2 *
                    (this.lineCtx.isReversed
                      ? o[a][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex]
                      : 0);
              else if (h.config.chart.stacked && a > 0 && o[a][0] === void 0) {
                for (var d = a - 1; d >= 0; d--)
                  if (o[d][0] !== null && o[d][0] !== void 0) {
                    l = u = this.lineCtx.prevSeriesY[d][0];
                    break;
                  }
              }
              return { prevY: l, lineYPosition: u };
            },
          },
        ]),
        M
      );
    })(),
    gy = function (M) {
      for (
        var i,
          n,
          a,
          o,
          l = (function (x) {
            for (
              var v = [],
                w = x[0],
                k = x[1],
                C = (v[0] = No(w, k)),
                P = 1,
                E = x.length - 1;
              P < E;
              P++
            )
              (w = k), (k = x[P + 1]), (v[P] = 0.5 * (C + (C = No(w, k))));
            return (v[P] = C), v;
          })(M),
          u = M.length - 1,
          h = [],
          d = 0;
        d < u;
        d++
      )
        (a = No(M[d], M[d + 1])),
          Math.abs(a) < 1e-6
            ? (l[d] = l[d + 1] = 0)
            : (o = (i = l[d] / a) * i + (n = l[d + 1] / a) * n) > 9 &&
              ((o = (3 * a) / Math.sqrt(o)),
              (l[d] = o * i),
              (l[d + 1] = o * n));
      for (var g = 0; g <= u; g++)
        (o =
          (M[Math.min(u, g + 1)][0] - M[Math.max(0, g - 1)][0]) /
          (6 * (1 + l[g] * l[g]))),
          h.push([o || 0, l[g] * o || 0]);
      return h;
    },
    Do = function (M) {
      for (var i = "", n = 0; n < M.length; n++) {
        var a = M[n],
          o = M[n - 1],
          l = a.length,
          u = o == null ? void 0 : o.length;
        n > 1 && Math.abs(a[l - 2] - o[u - 2]) < 30
          ? ((i += "Q".concat(a[0], ", ").concat(a[1])),
            (i += ", ".concat(a[2], ", ").concat(a[3])))
          : l > 4
          ? ((i += "C".concat(a[0], ", ").concat(a[1])),
            (i += ", ".concat(a[2], ", ").concat(a[3])),
            (i += ", ".concat(a[4], ", ").concat(a[5])))
          : l > 2 &&
            ((i += "S".concat(a[0], ", ").concat(a[1])),
            (i += ", ".concat(a[2], ", ").concat(a[3])));
      }
      return i;
    },
    Xh = function (M) {
      var i = gy(M),
        n = M[1],
        a = M[0],
        o = [],
        l = i[1],
        u = i[0];
      o.push(a, [
        a[0] + u[0],
        a[1] + u[1],
        n[0] - l[0],
        n[1] - l[1],
        n[0],
        n[1],
      ]);
      for (var h = 2, d = i.length; h < d; h++) {
        var g = M[h],
          x = i[h];
        o.push([g[0] - x[0], g[1] - x[1], g[0], g[1]]);
      }
      return o;
    };
  function No(M, i) {
    return (i[1] - M[1]) / (i[0] - M[0]);
  }
  var Fo = (function () {
    function M(i, n, a) {
      f(this, M),
        (this.ctx = i),
        (this.w = i.w),
        (this.xyRatios = n),
        (this.pointsChart =
          !(
            this.w.config.chart.type !== "bubble" &&
            this.w.config.chart.type !== "scatter"
          ) || a),
        (this.scatter = new Oe(this.ctx)),
        (this.noNegatives = this.w.globals.minX === Number.MAX_VALUE),
        (this.lineHelpers = new py(this)),
        (this.markers = new je(this.ctx)),
        (this.prevSeriesY = []),
        (this.categoryAxisCorrection = 0),
        (this.yaxisIndex = 0);
    }
    return (
      y(M, [
        {
          key: "draw",
          value: function (i, n, a, o) {
            var l,
              u = this.w,
              h = new B(this.ctx),
              d = u.globals.comboCharts ? n : u.config.chart.type,
              g = h.group({
                class: "apexcharts-".concat(
                  d,
                  "-series apexcharts-plot-series"
                ),
              }),
              x = new K(this.ctx, u);
            (this.yRatio = this.xyRatios.yRatio),
              (this.zRatio = this.xyRatios.zRatio),
              (this.xRatio = this.xyRatios.xRatio),
              (this.baseLineY = this.xyRatios.baseLineY),
              (i = x.getLogSeries(i)),
              (this.yRatio = x.getLogYRatios(this.yRatio));
            for (var v = [], w = 0; w < i.length; w++) {
              i = this.lineHelpers.sameValueSeriesFix(w, i);
              var k = u.globals.comboCharts ? a[w] : w;
              this._initSerieVariables(i, w, k);
              var C = [],
                P = [],
                E = [],
                I = u.globals.padHorizontal + this.categoryAxisCorrection;
              this.ctx.series.addCollapsedClassToSeries(this.elSeries, k),
                u.globals.isXNumeric &&
                  u.globals.seriesX.length > 0 &&
                  (I =
                    (u.globals.seriesX[k][0] - u.globals.minX) / this.xRatio),
                E.push(I);
              var D = I,
                p = this.zeroY,
                b = this.zeroY;
              (p = this.lineHelpers.determineFirstPrevY({
                i: w,
                series: i,
                prevY: p,
                lineYPosition: 0,
              }).prevY),
                u.config.stroke.curve === "smooth" && i[w][0] === null
                  ? C.push(null)
                  : C.push(p),
                d === "rangeArea" &&
                  ((b = this.lineHelpers.determineFirstPrevY({
                    i: w,
                    series: o,
                    prevY: b,
                    lineYPosition: 0,
                  }).prevY),
                  P.push(b));
              var A = {
                  type: d,
                  series: i,
                  realIndex: k,
                  i: w,
                  x: I,
                  y: 1,
                  pathsFrom: this._calculatePathsFrom({
                    type: d,
                    series: i,
                    i: w,
                    realIndex: k,
                    prevX: D,
                    prevY: p,
                    prevY2: b,
                  }),
                  linePaths: [],
                  areaPaths: [],
                  seriesIndex: a,
                  lineYPosition: 0,
                  xArrj: E,
                  yArrj: C,
                  y2Arrj: P,
                  seriesRangeEnd: o,
                },
                R = this._iterateOverDataPoints(
                  s(
                    s({}, A),
                    {},
                    {
                      iterations: d === "rangeArea" ? i[w].length - 1 : void 0,
                      isRangeStart: !0,
                    }
                  )
                );
              if (d === "rangeArea") {
                var F = this._calculatePathsFrom({
                    series: o,
                    i: w,
                    realIndex: k,
                    prevX: D,
                    prevY: b,
                  }),
                  _ = this._iterateOverDataPoints(
                    s(
                      s({}, A),
                      {},
                      {
                        series: o,
                        pathsFrom: F,
                        iterations: o[w].length - 1,
                        isRangeStart: !1,
                      }
                    )
                  );
                (R.linePaths[0] = _.linePath + R.linePath),
                  (R.pathFromLine = _.pathFromLine + R.pathFromLine);
              }
              this._handlePaths({ type: d, realIndex: k, i: w, paths: R }),
                this.elSeries.add(this.elPointsMain),
                this.elSeries.add(this.elDataLabelsWrap),
                v.push(this.elSeries);
            }
            if (
              (((l = u.config.series[0]) === null || l === void 0
                ? void 0
                : l.zIndex) !== void 0 &&
                v.sort(function (Z, ee) {
                  return (
                    Number(Z.node.getAttribute("zIndex")) -
                    Number(ee.node.getAttribute("zIndex"))
                  );
                }),
              u.config.chart.stacked)
            )
              for (var G = v.length; G > 0; G--) g.add(v[G - 1]);
            else for (var W = 0; W < v.length; W++) g.add(v[W]);
            return g;
          },
        },
        {
          key: "_initSerieVariables",
          value: function (i, n, a) {
            var o = this.w,
              l = new B(this.ctx);
            (this.xDivision =
              o.globals.gridWidth /
              (o.globals.dataPoints -
                (o.config.xaxis.tickPlacement === "on" ? 1 : 0))),
              (this.strokeWidth = Array.isArray(o.config.stroke.width)
                ? o.config.stroke.width[a]
                : o.config.stroke.width),
              this.yRatio.length > 1 && (this.yaxisIndex = a),
              (this.isReversed =
                o.config.yaxis[this.yaxisIndex] &&
                o.config.yaxis[this.yaxisIndex].reversed),
              (this.zeroY =
                o.globals.gridHeight -
                this.baseLineY[this.yaxisIndex] -
                (this.isReversed ? o.globals.gridHeight : 0) +
                (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0)),
              (this.areaBottomY = this.zeroY),
              (this.zeroY > o.globals.gridHeight ||
                o.config.plotOptions.area.fillTo === "end") &&
                (this.areaBottomY = o.globals.gridHeight),
              (this.categoryAxisCorrection = this.xDivision / 2),
              (this.elSeries = l.group({
                class: "apexcharts-series",
                zIndex:
                  o.config.series[a].zIndex !== void 0
                    ? o.config.series[a].zIndex
                    : a,
                seriesName: L.escapeString(o.globals.seriesNames[a]),
              })),
              (this.elPointsMain = l.group({
                class: "apexcharts-series-markers-wrap",
                "data:realIndex": a,
              })),
              (this.elDataLabelsWrap = l.group({
                class: "apexcharts-datalabels",
                "data:realIndex": a,
              }));
            var u = i[n].length === o.globals.dataPoints;
            this.elSeries.attr({
              "data:longestSeries": u,
              rel: n + 1,
              "data:realIndex": a,
            }),
              (this.appendPathFrom = !0);
          },
        },
        {
          key: "_calculatePathsFrom",
          value: function (i) {
            var n,
              a,
              o,
              l,
              u = i.type,
              h = i.series,
              d = i.i,
              g = i.realIndex,
              x = i.prevX,
              v = i.prevY,
              w = i.prevY2,
              k = this.w,
              C = new B(this.ctx);
            if (h[d][0] === null) {
              for (var P = 0; P < h[d].length; P++)
                if (h[d][P] !== null) {
                  (x = this.xDivision * P),
                    (v = this.zeroY - h[d][P] / this.yRatio[this.yaxisIndex]),
                    (n = C.move(x, v)),
                    (a = C.move(x, this.areaBottomY));
                  break;
                }
            } else
              (n = C.move(x, v)),
                u === "rangeArea" && (n = C.move(x, w) + C.line(x, v)),
                (a = C.move(x, this.areaBottomY) + C.line(x, v));
            if (
              ((o = C.move(-1, this.zeroY) + C.line(-1, this.zeroY)),
              (l = C.move(-1, this.zeroY) + C.line(-1, this.zeroY)),
              k.globals.previousPaths.length > 0)
            ) {
              var E = this.lineHelpers.checkPreviousPaths({
                pathFromLine: o,
                pathFromArea: l,
                realIndex: g,
              });
              (o = E.pathFromLine), (l = E.pathFromArea);
            }
            return {
              prevX: x,
              prevY: v,
              linePath: n,
              areaPath: a,
              pathFromLine: o,
              pathFromArea: l,
            };
          },
        },
        {
          key: "_handlePaths",
          value: function (i) {
            var n = i.type,
              a = i.realIndex,
              o = i.i,
              l = i.paths,
              u = this.w,
              h = new B(this.ctx),
              d = new be(this.ctx);
            this.prevSeriesY.push(l.yArrj),
              (u.globals.seriesXvalues[a] = l.xArrj),
              (u.globals.seriesYvalues[a] = l.yArrj);
            var g = u.config.forecastDataPoints;
            if (g.count > 0 && n !== "rangeArea") {
              var x =
                  u.globals.seriesXvalues[a][
                    u.globals.seriesXvalues[a].length - g.count - 1
                  ],
                v = h.drawRect(
                  x,
                  0,
                  u.globals.gridWidth,
                  u.globals.gridHeight,
                  0
                );
              u.globals.dom.elForecastMask.appendChild(v.node);
              var w = h.drawRect(0, 0, x, u.globals.gridHeight, 0);
              u.globals.dom.elNonForecastMask.appendChild(w.node);
            }
            this.pointsChart ||
              u.globals.delayedElements.push({
                el: this.elPointsMain.node,
                index: a,
              });
            var k = {
              i: o,
              realIndex: a,
              animationDelay: o,
              initialSpeed: u.config.chart.animations.speed,
              dataChangeSpeed: u.config.chart.animations.dynamicAnimation.speed,
              className: "apexcharts-".concat(n),
            };
            if (n === "area")
              for (
                var C = d.fillPath({ seriesNumber: a }), P = 0;
                P < l.areaPaths.length;
                P++
              ) {
                var E = h.renderPaths(
                  s(
                    s({}, k),
                    {},
                    {
                      pathFrom: l.pathFromArea,
                      pathTo: l.areaPaths[P],
                      stroke: "none",
                      strokeWidth: 0,
                      strokeLineCap: null,
                      fill: C,
                    }
                  )
                );
                this.elSeries.add(E);
              }
            if (u.config.stroke.show && !this.pointsChart) {
              var I = null;
              if (n === "line") I = d.fillPath({ seriesNumber: a, i: o });
              else if (u.config.stroke.fill.type === "solid")
                I = u.globals.stroke.colors[a];
              else {
                var D = u.config.fill;
                (u.config.fill = u.config.stroke.fill),
                  (I = d.fillPath({ seriesNumber: a, i: o })),
                  (u.config.fill = D);
              }
              for (var p = 0; p < l.linePaths.length; p++) {
                var b = I;
                n === "rangeArea" && (b = d.fillPath({ seriesNumber: a }));
                var A = s(
                    s({}, k),
                    {},
                    {
                      pathFrom: l.pathFromLine,
                      pathTo: l.linePaths[p],
                      stroke: I,
                      strokeWidth: this.strokeWidth,
                      strokeLineCap: u.config.stroke.lineCap,
                      fill: n === "rangeArea" ? b : "none",
                    }
                  ),
                  R = h.renderPaths(A);
                if (
                  (this.elSeries.add(R),
                  R.attr("fill-rule", "evenodd"),
                  g.count > 0 && n !== "rangeArea")
                ) {
                  var F = h.renderPaths(A);
                  F.node.setAttribute("stroke-dasharray", g.dashArray),
                    g.strokeWidth &&
                      F.node.setAttribute("stroke-width", g.strokeWidth),
                    this.elSeries.add(F),
                    F.attr(
                      "clip-path",
                      "url(#forecastMask".concat(u.globals.cuid, ")")
                    ),
                    R.attr(
                      "clip-path",
                      "url(#nonForecastMask".concat(u.globals.cuid, ")")
                    );
                }
              }
            }
          },
        },
        {
          key: "_iterateOverDataPoints",
          value: function (i) {
            var n = this,
              a = i.type,
              o = i.series,
              l = i.iterations,
              u = i.realIndex,
              h = i.i,
              d = i.x,
              g = i.y,
              x = i.pathsFrom,
              v = i.linePaths,
              w = i.areaPaths,
              k = i.seriesIndex,
              C = i.lineYPosition,
              P = i.xArrj,
              E = i.yArrj,
              I = i.y2Arrj,
              D = i.isRangeStart,
              p = i.seriesRangeEnd,
              b = this.w,
              A = new B(this.ctx),
              R = this.yRatio,
              F = x.prevY,
              _ = x.linePath,
              G = x.areaPath,
              W = x.pathFromLine,
              Z = x.pathFromArea,
              ee = L.isNumber(b.globals.minYArr[u])
                ? b.globals.minYArr[u]
                : b.globals.minY;
            l ||
              (l =
                b.globals.dataPoints > 1
                  ? b.globals.dataPoints - 1
                  : b.globals.dataPoints);
            for (
              var J = function (ze, $e) {
                  return (
                    $e -
                    ze / R[n.yaxisIndex] +
                    2 * (n.isReversed ? ze / R[n.yaxisIndex] : 0)
                  );
                },
                oe = g,
                ce = 0;
              ce < l;
              ce++
            ) {
              var Se = o[h][ce + 1] === void 0 || o[h][ce + 1] === null;
              if (b.globals.isXNumeric) {
                var ke = b.globals.seriesX[u][ce + 1];
                b.globals.seriesX[u][ce + 1] === void 0 &&
                  (ke = b.globals.seriesX[u][l - 1]),
                  (d = (ke - b.globals.minX) / this.xRatio);
              } else d += this.xDivision;
              b.config.chart.stacked
                ? h > 0 &&
                  b.globals.collapsedSeries.length < b.config.series.length - 1
                  ? (C =
                      this.prevSeriesY[
                        (function (ze) {
                          for (
                            var $e = ze, Vt = 0;
                            Vt < b.globals.series.length;
                            Vt++
                          )
                            if (
                              b.globals.collapsedSeriesIndices.indexOf(ze) > -1
                            ) {
                              $e--;
                              break;
                            }
                          return $e >= 0 ? $e : 0;
                        })(h - 1)
                      ][ce + 1])
                  : (C = this.zeroY)
                : (C = this.zeroY),
                Se
                  ? (g = J(ee, C))
                  : ((g = J(o[h][ce + 1], C)),
                    a === "rangeArea" && (oe = J(p[h][ce + 1], C))),
                P.push(d),
                Se && b.config.stroke.curve === "smooth"
                  ? E.push(null)
                  : E.push(g),
                I.push(oe);
              var Le = this.lineHelpers.calculatePoints({
                  series: o,
                  x: d,
                  y: g,
                  realIndex: u,
                  i: h,
                  j: ce,
                  prevY: F,
                }),
                Be = this._createPaths({
                  type: a,
                  series: o,
                  i: h,
                  realIndex: u,
                  j: ce,
                  x: d,
                  y: g,
                  y2: oe,
                  xArrj: P,
                  yArrj: E,
                  y2Arrj: I,
                  linePath: _,
                  areaPath: G,
                  linePaths: v,
                  areaPaths: w,
                  seriesIndex: k,
                  isRangeStart: D,
                });
              (w = Be.areaPaths),
                (v = Be.linePaths),
                (G = Be.areaPath),
                (_ = Be.linePath),
                !this.appendPathFrom ||
                  (b.config.stroke.curve === "smooth" && a === "rangeArea") ||
                  ((W += A.line(d, this.zeroY)), (Z += A.line(d, this.zeroY))),
                this.handleNullDataPoints(o, Le, h, ce, u),
                this._handleMarkersAndLabels({
                  type: a,
                  pointsPos: Le,
                  i: h,
                  j: ce,
                  realIndex: u,
                  isRangeStart: D,
                });
            }
            return {
              yArrj: E,
              xArrj: P,
              pathFromArea: Z,
              areaPaths: w,
              pathFromLine: W,
              linePaths: v,
              linePath: _,
              areaPath: G,
            };
          },
        },
        {
          key: "_handleMarkersAndLabels",
          value: function (i) {
            var n = i.type,
              a = i.pointsPos,
              o = i.isRangeStart,
              l = i.i,
              u = i.j,
              h = i.realIndex,
              d = this.w,
              g = new Lt(this.ctx);
            if (this.pointsChart)
              this.scatter.draw(this.elSeries, u, {
                realIndex: h,
                pointsPos: a,
                zRatio: this.zRatio,
                elParent: this.elPointsMain,
              });
            else {
              d.globals.series[l].length > 1 &&
                this.elPointsMain.node.classList.add(
                  "apexcharts-element-hidden"
                );
              var x = this.markers.plotChartMarkers(a, h, u + 1);
              x !== null && this.elPointsMain.add(x);
            }
            var v = g.drawDataLabel({
              type: n,
              isRangeStart: o,
              pos: a,
              i: h,
              j: u + 1,
            });
            v !== null && this.elDataLabelsWrap.add(v);
          },
        },
        {
          key: "_createPaths",
          value: function (i) {
            var n = i.type,
              a = i.series,
              o = i.i,
              l = i.realIndex,
              u = i.j,
              h = i.x,
              d = i.y,
              g = i.xArrj,
              x = i.yArrj,
              v = i.y2,
              w = i.y2Arrj,
              k = i.linePath,
              C = i.areaPath,
              P = i.linePaths,
              E = i.areaPaths,
              I = i.seriesIndex,
              D = i.isRangeStart,
              p = this.w,
              b = new B(this.ctx),
              A = p.config.stroke.curve,
              R = this.areaBottomY;
            if (
              (Array.isArray(p.config.stroke.curve) &&
                (A = Array.isArray(I)
                  ? p.config.stroke.curve[I[o]]
                  : p.config.stroke.curve[o]),
              n === "rangeArea" &&
                (p.globals.hasNullValues ||
                  p.config.forecastDataPoints.count > 0) &&
                A === "smooth" &&
                (A = "straight"),
              A === "smooth")
            ) {
              var F =
                  n === "rangeArea"
                    ? g.length === p.globals.dataPoints
                    : u === a[o].length - 2,
                _ = g
                  .map(function (ce, Se) {
                    return [g[Se], x[Se]];
                  })
                  .filter(function (ce) {
                    return ce[1] !== null;
                  });
              if (F && _.length > 1) {
                var G = Xh(_);
                if (
                  ((k += Do(G)),
                  a[o][0] === null ? (C = k) : (C += Do(G)),
                  n === "rangeArea" && D)
                ) {
                  k += b.line(g[g.length - 1], w[w.length - 1]);
                  var W = g.slice().reverse(),
                    Z = w.slice().reverse(),
                    ee = W.map(function (ce, Se) {
                      return [W[Se], Z[Se]];
                    }),
                    J = Xh(ee);
                  C = k += Do(J);
                } else
                  C +=
                    b.line(_[_.length - 1][0], R) +
                    b.line(_[0][0], R) +
                    b.move(_[0][0], _[0][1]) +
                    "z";
                P.push(k), E.push(C);
              }
            } else {
              if (a[o][u + 1] === null) {
                k += b.move(h, d);
                var oe = p.globals.isXNumeric
                  ? (p.globals.seriesX[l][u] - p.globals.minX) / this.xRatio
                  : h - this.xDivision;
                C = C + b.line(oe, R) + b.move(h, d) + "z";
              }
              a[o][u] === null && ((k += b.move(h, d)), (C += b.move(h, R))),
                A === "stepline"
                  ? ((k = k + b.line(h, null, "H") + b.line(null, d, "V")),
                    (C = C + b.line(h, null, "H") + b.line(null, d, "V")))
                  : A === "straight" &&
                    ((k += b.line(h, d)), (C += b.line(h, d))),
                u === a[o].length - 2 &&
                  ((C = C + b.line(h, R) + b.move(h, d) + "z"),
                  n === "rangeArea" && D
                    ? (k = k + b.line(h, v) + b.move(h, v) + "z")
                    : (P.push(k), E.push(C)));
            }
            return { linePaths: P, areaPaths: E, linePath: k, areaPath: C };
          },
        },
        {
          key: "handleNullDataPoints",
          value: function (i, n, a, o, l) {
            var u = this.w;
            if (
              (i[a][o] === null && u.config.markers.showNullDataPoints) ||
              i[a].length === 1
            ) {
              var h = this.markers.plotChartMarkers(
                n,
                l,
                o + 1,
                this.strokeWidth - u.config.markers.strokeWidth / 2,
                !0
              );
              h !== null && this.elPointsMain.add(h);
            }
          },
        },
      ]),
      M
    );
  })();
  (window.TreemapSquared = {}),
    (window.TreemapSquared.generate = (function () {
      function M(h, d, g, x) {
        (this.xoffset = h),
          (this.yoffset = d),
          (this.height = x),
          (this.width = g),
          (this.shortestEdge = function () {
            return Math.min(this.height, this.width);
          }),
          (this.getCoordinates = function (v) {
            var w,
              k = [],
              C = this.xoffset,
              P = this.yoffset,
              E = l(v) / this.height,
              I = l(v) / this.width;
            if (this.width >= this.height)
              for (w = 0; w < v.length; w++)
                k.push([C, P, C + E, P + v[w] / E]), (P += v[w] / E);
            else
              for (w = 0; w < v.length; w++)
                k.push([C, P, C + v[w] / I, P + I]), (C += v[w] / I);
            return k;
          }),
          (this.cutArea = function (v) {
            var w;
            if (this.width >= this.height) {
              var k = v / this.height,
                C = this.width - k;
              w = new M(this.xoffset + k, this.yoffset, C, this.height);
            } else {
              var P = v / this.width,
                E = this.height - P;
              w = new M(this.xoffset, this.yoffset + P, this.width, E);
            }
            return w;
          });
      }
      function i(h, d, g, x, v) {
        (x = x === void 0 ? 0 : x), (v = v === void 0 ? 0 : v);
        var w = n(
          (function (k, C) {
            var P,
              E = [],
              I = C / l(k);
            for (P = 0; P < k.length; P++) E[P] = k[P] * I;
            return E;
          })(h, d * g),
          [],
          new M(x, v, d, g),
          []
        );
        return (function (k) {
          var C,
            P,
            E = [];
          for (C = 0; C < k.length; C++)
            for (P = 0; P < k[C].length; P++) E.push(k[C][P]);
          return E;
        })(w);
      }
      function n(h, d, g, x) {
        var v, w, k;
        if (h.length !== 0)
          return (
            (v = g.shortestEdge()),
            (function (C, P, E) {
              var I;
              if (C.length === 0) return !0;
              (I = C.slice()).push(P);
              var D = a(C, E),
                p = a(I, E);
              return D >= p;
            })(d, (w = h[0]), v)
              ? (d.push(w), n(h.slice(1), d, g, x))
              : ((k = g.cutArea(l(d), x)),
                x.push(g.getCoordinates(d)),
                n(h, [], k, x)),
            x
          );
        x.push(g.getCoordinates(d));
      }
      function a(h, d) {
        var g = Math.min.apply(Math, h),
          x = Math.max.apply(Math, h),
          v = l(h);
        return Math.max(
          (Math.pow(d, 2) * x) / Math.pow(v, 2),
          Math.pow(v, 2) / (Math.pow(d, 2) * g)
        );
      }
      function o(h) {
        return h && h.constructor === Array;
      }
      function l(h) {
        var d,
          g = 0;
        for (d = 0; d < h.length; d++) g += h[d];
        return g;
      }
      function u(h) {
        var d,
          g = 0;
        if (o(h[0])) for (d = 0; d < h.length; d++) g += u(h[d]);
        else g = l(h);
        return g;
      }
      return function h(d, g, x, v, w) {
        (v = v === void 0 ? 0 : v), (w = w === void 0 ? 0 : w);
        var k,
          C,
          P = [],
          E = [];
        if (o(d[0])) {
          for (C = 0; C < d.length; C++) P[C] = u(d[C]);
          for (k = i(P, g, x, v, w), C = 0; C < d.length; C++)
            E.push(
              h(d[C], k[C][2] - k[C][0], k[C][3] - k[C][1], k[C][0], k[C][1])
            );
        } else E = i(d, g, x, v, w);
        return E;
      };
    })());
  var rn,
    Aa,
    my = (function () {
      function M(i, n) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.strokeWidth = this.w.config.stroke.width),
          (this.helpers = new Fh(i)),
          (this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation),
          (this.labels = []);
      }
      return (
        y(M, [
          {
            key: "draw",
            value: function (i) {
              var n = this,
                a = this.w,
                o = new B(this.ctx),
                l = new be(this.ctx),
                u = o.group({ class: "apexcharts-treemap" });
              if (a.globals.noData) return u;
              var h = [];
              return (
                i.forEach(function (d) {
                  var g = d.map(function (x) {
                    return Math.abs(x);
                  });
                  h.push(g);
                }),
                (this.negRange = this.helpers.checkColorRange()),
                a.config.series.forEach(function (d, g) {
                  d.data.forEach(function (x) {
                    Array.isArray(n.labels[g]) || (n.labels[g] = []),
                      n.labels[g].push(x.x);
                  });
                }),
                window.TreemapSquared.generate(
                  h,
                  a.globals.gridWidth,
                  a.globals.gridHeight
                ).forEach(function (d, g) {
                  var x = o.group({
                    class: "apexcharts-series apexcharts-treemap-series",
                    seriesName: L.escapeString(a.globals.seriesNames[g]),
                    rel: g + 1,
                    "data:realIndex": g,
                  });
                  if (a.config.chart.dropShadow.enabled) {
                    var v = a.config.chart.dropShadow;
                    new U(n.ctx).dropShadow(u, v, g);
                  }
                  var w = o.group({ class: "apexcharts-data-labels" });
                  d.forEach(function (k, C) {
                    var P = k[0],
                      E = k[1],
                      I = k[2],
                      D = k[3],
                      p = o.drawRect(
                        P,
                        E,
                        I - P,
                        D - E,
                        0,
                        "#fff",
                        1,
                        n.strokeWidth,
                        a.config.plotOptions.treemap.useFillColorAsStroke
                          ? A
                          : a.globals.stroke.colors[g]
                      );
                    p.attr({
                      cx: P,
                      cy: E,
                      index: g,
                      i: g,
                      j: C,
                      width: I - P,
                      height: D - E,
                    });
                    var b = n.helpers.getShadeColor(
                        a.config.chart.type,
                        g,
                        C,
                        n.negRange
                      ),
                      A = b.color;
                    a.config.series[g].data[C] !== void 0 &&
                      a.config.series[g].data[C].fillColor &&
                      (A = a.config.series[g].data[C].fillColor);
                    var R = l.fillPath({
                      color: A,
                      seriesNumber: g,
                      dataPointIndex: C,
                    });
                    p.node.classList.add("apexcharts-treemap-rect"),
                      p.attr({ fill: R }),
                      n.helpers.addListeners(p);
                    var F = {
                        x: P + (I - P) / 2,
                        y: E + (D - E) / 2,
                        width: 0,
                        height: 0,
                      },
                      _ = { x: P, y: E, width: I - P, height: D - E };
                    if (
                      a.config.chart.animations.enabled &&
                      !a.globals.dataChanged
                    ) {
                      var G = 1;
                      a.globals.resized ||
                        (G = a.config.chart.animations.speed),
                        n.animateTreemap(p, F, _, G);
                    }
                    if (a.globals.dataChanged) {
                      var W = 1;
                      n.dynamicAnim.enabled &&
                        a.globals.shouldAnimate &&
                        ((W = n.dynamicAnim.speed),
                        a.globals.previousPaths[g] &&
                          a.globals.previousPaths[g][C] &&
                          a.globals.previousPaths[g][C].rect &&
                          (F = a.globals.previousPaths[g][C].rect),
                        n.animateTreemap(p, F, _, W));
                    }
                    var Z = n.gSBFontSize(k),
                      ee = a.config.dataLabels.formatter(n.labels[g][C], {
                        value: a.globals.series[g][C],
                        seriesIndex: g,
                        dataPointIndex: C,
                        w: a,
                      });
                    a.config.plotOptions.treemap.dataLabels.format ===
                      "truncate" &&
                      ((Z = parseInt(a.config.dataLabels.style.fontSize, 10)),
                      (ee = n.truncateLabels(ee, Z, P, E, I, D)));
                    var J = n.helpers.calculateDataLabels({
                      text: ee,
                      x: (P + I) / 2,
                      y: (E + D) / 2 + n.strokeWidth / 2 + Z / 3,
                      i: g,
                      j: C,
                      colorProps: b,
                      fontSize: Z,
                      series: i,
                    });
                    a.config.dataLabels.enabled &&
                      J &&
                      n.rotateToFitLabel(J, Z, ee, P, E, I, D),
                      x.add(p),
                      J !== null && x.add(J);
                  }),
                    x.add(w),
                    u.add(x);
                }),
                u
              );
            },
          },
          {
            key: "gSBFontSize",
            value: function (i) {
              var n = this.w,
                a,
                o,
                l,
                u,
                h =
                  (function d(g) {
                    var x,
                      v = 0;
                    if (Array.isArray(g[0]))
                      for (x = 0; x < g.length; x++) v += d(g[x]);
                    else for (x = 0; x < g.length; x++) v += g[x].length;
                    return v;
                  })(this.labels) /
                  (function d(g) {
                    var x,
                      v = 0;
                    if (Array.isArray(g[0]))
                      for (x = 0; x < g.length; x++) v += d(g[x]);
                    else for (x = 0; x < g.length; x++) v += 1;
                    return v;
                  })(this.labels);
              return (
                (a = i[2] - i[0]),
                (o = i[3] - i[1]),
                (l = a * o),
                (u = Math.pow(l, 0.5)),
                Math.min(
                  u / h,
                  parseInt(n.config.dataLabels.style.fontSize, 10)
                )
              );
            },
          },
          {
            key: "rotateToFitLabel",
            value: function (i, n, a, o, l, u, h) {
              var d = new B(this.ctx),
                g = d.getTextRects(a, n);
              if (
                g.width + this.w.config.stroke.width + 5 > u - o &&
                g.width <= h - l
              ) {
                var x = d.rotateAroundCenter(i.node);
                i.node.setAttribute(
                  "transform",
                  "rotate(-90 "
                    .concat(x.x, " ")
                    .concat(x.y, ") translate(")
                    .concat(g.height / 3, ")")
                );
              }
            },
          },
          {
            key: "truncateLabels",
            value: function (i, n, a, o, l, u) {
              var h = new B(this.ctx),
                d =
                  h.getTextRects(i, n).width + this.w.config.stroke.width + 5 >
                    l - a && u - o > l - a
                    ? u - o
                    : l - a,
                g = h.getTextBasedOnMaxWidth({
                  text: i,
                  maxWidth: d,
                  fontSize: n,
                });
              return i.length !== g.length && d / n < 5 ? "" : g;
            },
          },
          {
            key: "animateTreemap",
            value: function (i, n, a, o) {
              var l = new H(this.ctx);
              l.animateRect(
                i,
                { x: n.x, y: n.y, width: n.width, height: n.height },
                { x: a.x, y: a.y, width: a.width, height: a.height },
                o,
                function () {
                  l.animationCompleted(i);
                }
              );
            },
          },
        ]),
        M
      );
    })(),
    xy = 86400,
    vy = (function () {
      function M(i) {
        f(this, M),
          (this.ctx = i),
          (this.w = i.w),
          (this.timeScaleArray = []),
          (this.utc = this.w.config.xaxis.labels.datetimeUTC);
      }
      return (
        y(M, [
          {
            key: "calculateTimeScaleTicks",
            value: function (i, n) {
              var a = this,
                o = this.w;
              if (o.globals.allSeriesCollapsed)
                return (
                  (o.globals.labels = []), (o.globals.timescaleLabels = []), []
                );
              var l = new xe(this.ctx),
                u = (n - i) / 864e5;
              this.determineInterval(u),
                (o.globals.disableZoomIn = !1),
                (o.globals.disableZoomOut = !1),
                u < 0.00011574074074074075
                  ? (o.globals.disableZoomIn = !0)
                  : u > 5e4 && (o.globals.disableZoomOut = !0);
              var h = l.getTimeUnitsfromTimestamp(i, n, this.utc),
                d = o.globals.gridWidth / u,
                g = d / 24,
                x = g / 60,
                v = x / 60,
                w = Math.floor(24 * u),
                k = Math.floor(1440 * u),
                C = Math.floor(u * xy),
                P = Math.floor(u),
                E = Math.floor(u / 30),
                I = Math.floor(u / 365),
                D = {
                  minMillisecond: h.minMillisecond,
                  minSecond: h.minSecond,
                  minMinute: h.minMinute,
                  minHour: h.minHour,
                  minDate: h.minDate,
                  minMonth: h.minMonth,
                  minYear: h.minYear,
                },
                p = {
                  firstVal: D,
                  currentMillisecond: D.minMillisecond,
                  currentSecond: D.minSecond,
                  currentMinute: D.minMinute,
                  currentHour: D.minHour,
                  currentMonthDate: D.minDate,
                  currentDate: D.minDate,
                  currentMonth: D.minMonth,
                  currentYear: D.minYear,
                  daysWidthOnXAxis: d,
                  hoursWidthOnXAxis: g,
                  minutesWidthOnXAxis: x,
                  secondsWidthOnXAxis: v,
                  numberOfSeconds: C,
                  numberOfMinutes: k,
                  numberOfHours: w,
                  numberOfDays: P,
                  numberOfMonths: E,
                  numberOfYears: I,
                };
              switch (this.tickInterval) {
                case "years":
                  this.generateYearScale(p);
                  break;
                case "months":
                case "half_year":
                  this.generateMonthScale(p);
                  break;
                case "months_days":
                case "months_fortnight":
                case "days":
                case "week_days":
                  this.generateDayScale(p);
                  break;
                case "hours":
                  this.generateHourScale(p);
                  break;
                case "minutes_fives":
                case "minutes":
                  this.generateMinuteScale(p);
                  break;
                case "seconds_tens":
                case "seconds_fives":
                case "seconds":
                  this.generateSecondScale(p);
              }
              var b = this.timeScaleArray.map(function (A) {
                var R = {
                  position: A.position,
                  unit: A.unit,
                  year: A.year,
                  day: A.day ? A.day : 1,
                  hour: A.hour ? A.hour : 0,
                  month: A.month + 1,
                };
                return A.unit === "month"
                  ? s(s({}, R), {}, { day: 1, value: A.value + 1 })
                  : A.unit === "day" || A.unit === "hour"
                  ? s(s({}, R), {}, { value: A.value })
                  : A.unit === "minute"
                  ? s(s({}, R), {}, { value: A.value, minute: A.value })
                  : A.unit === "second"
                  ? s(
                      s({}, R),
                      {},
                      { value: A.value, minute: A.minute, second: A.second }
                    )
                  : A;
              });
              return b.filter(function (A) {
                var R = 1,
                  F = Math.ceil(o.globals.gridWidth / 120),
                  _ = A.value;
                o.config.xaxis.tickAmount !== void 0 &&
                  (F = o.config.xaxis.tickAmount),
                  b.length > F && (R = Math.floor(b.length / F));
                var G = !1,
                  W = !1;
                switch (a.tickInterval) {
                  case "years":
                    A.unit === "year" && (G = !0);
                    break;
                  case "half_year":
                    (R = 7), A.unit === "year" && (G = !0);
                    break;
                  case "months":
                    (R = 1), A.unit === "year" && (G = !0);
                    break;
                  case "months_fortnight":
                    (R = 15),
                      (A.unit !== "year" && A.unit !== "month") || (G = !0),
                      _ === 30 && (W = !0);
                    break;
                  case "months_days":
                    (R = 10),
                      A.unit === "month" && (G = !0),
                      _ === 30 && (W = !0);
                    break;
                  case "week_days":
                    (R = 8), A.unit === "month" && (G = !0);
                    break;
                  case "days":
                    (R = 1), A.unit === "month" && (G = !0);
                    break;
                  case "hours":
                    A.unit === "day" && (G = !0);
                    break;
                  case "minutes_fives":
                  case "seconds_fives":
                    _ % 5 != 0 && (W = !0);
                    break;
                  case "seconds_tens":
                    _ % 10 != 0 && (W = !0);
                }
                if (
                  a.tickInterval === "hours" ||
                  a.tickInterval === "minutes_fives" ||
                  a.tickInterval === "seconds_tens" ||
                  a.tickInterval === "seconds_fives"
                ) {
                  if (!W) return !0;
                } else if ((_ % R == 0 || G) && !W) return !0;
              });
            },
          },
          {
            key: "recalcDimensionsBasedOnFormat",
            value: function (i, n) {
              var a = this.w,
                o = this.formatDates(i),
                l = this.removeOverlappingTS(o);
              (a.globals.timescaleLabels = l.slice()),
                new Ca(this.ctx).plotCoords();
            },
          },
          {
            key: "determineInterval",
            value: function (i) {
              var n = 24 * i,
                a = 60 * n;
              switch (!0) {
                case i / 365 > 5:
                  this.tickInterval = "years";
                  break;
                case i > 800:
                  this.tickInterval = "half_year";
                  break;
                case i > 180:
                  this.tickInterval = "months";
                  break;
                case i > 90:
                  this.tickInterval = "months_fortnight";
                  break;
                case i > 60:
                  this.tickInterval = "months_days";
                  break;
                case i > 30:
                  this.tickInterval = "week_days";
                  break;
                case i > 2:
                  this.tickInterval = "days";
                  break;
                case n > 2.4:
                  this.tickInterval = "hours";
                  break;
                case a > 15:
                  this.tickInterval = "minutes_fives";
                  break;
                case a > 5:
                  this.tickInterval = "minutes";
                  break;
                case a > 1:
                  this.tickInterval = "seconds_tens";
                  break;
                case 60 * a > 20:
                  this.tickInterval = "seconds_fives";
                  break;
                default:
                  this.tickInterval = "seconds";
              }
            },
          },
          {
            key: "generateYearScale",
            value: function (i) {
              var n = i.firstVal,
                a = i.currentMonth,
                o = i.currentYear,
                l = i.daysWidthOnXAxis,
                u = i.numberOfYears,
                h = n.minYear,
                d = 0,
                g = new xe(this.ctx),
                x = "year";
              if (n.minDate > 1 || n.minMonth > 0) {
                var v = g.determineRemainingDaysOfYear(
                  n.minYear,
                  n.minMonth,
                  n.minDate
                );
                (d = (g.determineDaysOfYear(n.minYear) - v + 1) * l),
                  (h = n.minYear + 1),
                  this.timeScaleArray.push({
                    position: d,
                    value: h,
                    unit: x,
                    year: h,
                    month: L.monthMod(a + 1),
                  });
              } else
                n.minDate === 1 &&
                  n.minMonth === 0 &&
                  this.timeScaleArray.push({
                    position: d,
                    value: h,
                    unit: x,
                    year: o,
                    month: L.monthMod(a + 1),
                  });
              for (var w = h, k = d, C = 0; C < u; C++)
                w++,
                  (k = g.determineDaysOfYear(w - 1) * l + k),
                  this.timeScaleArray.push({
                    position: k,
                    value: w,
                    unit: x,
                    year: w,
                    month: 1,
                  });
            },
          },
          {
            key: "generateMonthScale",
            value: function (i) {
              var n = i.firstVal,
                a = i.currentMonthDate,
                o = i.currentMonth,
                l = i.currentYear,
                u = i.daysWidthOnXAxis,
                h = i.numberOfMonths,
                d = o,
                g = 0,
                x = new xe(this.ctx),
                v = "month",
                w = 0;
              if (n.minDate > 1) {
                (g = (x.determineDaysOfMonths(o + 1, n.minYear) - a + 1) * u),
                  (d = L.monthMod(o + 1));
                var k = l + w,
                  C = L.monthMod(d),
                  P = d;
                d === 0 && ((v = "year"), (P = k), (C = 1), (k += w += 1)),
                  this.timeScaleArray.push({
                    position: g,
                    value: P,
                    unit: v,
                    year: k,
                    month: C,
                  });
              } else
                this.timeScaleArray.push({
                  position: g,
                  value: d,
                  unit: v,
                  year: l,
                  month: L.monthMod(o),
                });
              for (var E = d + 1, I = g, D = 0, p = 1; D < h; D++, p++) {
                (E = L.monthMod(E)) === 0
                  ? ((v = "year"), (w += 1))
                  : (v = "month");
                var b = this._getYear(l, E, w);
                I = x.determineDaysOfMonths(E, b) * u + I;
                var A = E === 0 ? b : E;
                this.timeScaleArray.push({
                  position: I,
                  value: A,
                  unit: v,
                  year: b,
                  month: E === 0 ? 1 : E,
                }),
                  E++;
              }
            },
          },
          {
            key: "generateDayScale",
            value: function (i) {
              var n = i.firstVal,
                a = i.currentMonth,
                o = i.currentYear,
                l = i.hoursWidthOnXAxis,
                u = i.numberOfDays,
                h = new xe(this.ctx),
                d = "day",
                g = n.minDate + 1,
                x = g,
                v = function (p, b, A) {
                  return (
                    p > h.determineDaysOfMonths(b + 1, A) &&
                      ((x = 1), (d = "month"), (k = b += 1)),
                    b
                  );
                },
                w = (24 - n.minHour) * l,
                k = g,
                C = v(x, a, o);
              n.minHour === 0 && n.minDate === 1
                ? ((w = 0),
                  (k = L.monthMod(n.minMonth)),
                  (d = "month"),
                  (x = n.minDate))
                : n.minDate !== 1 &&
                  n.minHour === 0 &&
                  n.minMinute === 0 &&
                  ((w = 0), (g = n.minDate), (k = g), (C = v((x = g), a, o))),
                this.timeScaleArray.push({
                  position: w,
                  value: k,
                  unit: d,
                  year: this._getYear(o, C, 0),
                  month: L.monthMod(C),
                  day: x,
                });
              for (var P = w, E = 0; E < u; E++) {
                (d = "day"), (C = v((x += 1), C, this._getYear(o, C, 0)));
                var I = this._getYear(o, C, 0);
                P = 24 * l + P;
                var D = x === 1 ? L.monthMod(C) : x;
                this.timeScaleArray.push({
                  position: P,
                  value: D,
                  unit: d,
                  year: I,
                  month: L.monthMod(C),
                  day: D,
                });
              }
            },
          },
          {
            key: "generateHourScale",
            value: function (i) {
              var n = i.firstVal,
                a = i.currentDate,
                o = i.currentMonth,
                l = i.currentYear,
                u = i.minutesWidthOnXAxis,
                h = i.numberOfHours,
                d = new xe(this.ctx),
                g = "hour",
                x = function (R, F) {
                  return (
                    R > d.determineDaysOfMonths(F + 1, l) &&
                      ((E = 1), (F += 1)),
                    { month: F, date: E }
                  );
                },
                v = function (R, F) {
                  return R > d.determineDaysOfMonths(F + 1, l) ? (F += 1) : F;
                },
                w = 60 - (n.minMinute + n.minSecond / 60),
                k = w * u,
                C = n.minHour + 1,
                P = C;
              w === 60 && ((k = 0), (P = (C = n.minHour) + 1));
              var E = a;
              P >= 24 && ((P = 0), (E += 1), (g = "day"));
              var I = x(E, o).month;
              (I = v(E, I)),
                this.timeScaleArray.push({
                  position: k,
                  value: C,
                  unit: g,
                  day: E,
                  hour: P,
                  year: l,
                  month: L.monthMod(I),
                }),
                P++;
              for (var D = k, p = 0; p < h; p++) {
                (g = "hour"),
                  P >= 24 &&
                    ((P = 0),
                    (g = "day"),
                    (I = x((E += 1), I).month),
                    (I = v(E, I)));
                var b = this._getYear(l, I, 0);
                D = 60 * u + D;
                var A = P === 0 ? E : P;
                this.timeScaleArray.push({
                  position: D,
                  value: A,
                  unit: g,
                  hour: P,
                  day: E,
                  year: b,
                  month: L.monthMod(I),
                }),
                  P++;
              }
            },
          },
          {
            key: "generateMinuteScale",
            value: function (i) {
              for (
                var n = i.currentMillisecond,
                  a = i.currentSecond,
                  o = i.currentMinute,
                  l = i.currentHour,
                  u = i.currentDate,
                  h = i.currentMonth,
                  d = i.currentYear,
                  g = i.minutesWidthOnXAxis,
                  x = i.secondsWidthOnXAxis,
                  v = i.numberOfMinutes,
                  w = o + 1,
                  k = u,
                  C = h,
                  P = d,
                  E = l,
                  I = (60 - a - n / 1e3) * x,
                  D = 0;
                D < v;
                D++
              )
                w >= 60 && ((w = 0), (E += 1) === 24 && (E = 0)),
                  this.timeScaleArray.push({
                    position: I,
                    value: w,
                    unit: "minute",
                    hour: E,
                    minute: w,
                    day: k,
                    year: this._getYear(P, C, 0),
                    month: L.monthMod(C),
                  }),
                  (I += g),
                  w++;
            },
          },
          {
            key: "generateSecondScale",
            value: function (i) {
              for (
                var n = i.currentMillisecond,
                  a = i.currentSecond,
                  o = i.currentMinute,
                  l = i.currentHour,
                  u = i.currentDate,
                  h = i.currentMonth,
                  d = i.currentYear,
                  g = i.secondsWidthOnXAxis,
                  x = i.numberOfSeconds,
                  v = a + 1,
                  w = o,
                  k = u,
                  C = h,
                  P = d,
                  E = l,
                  I = ((1e3 - n) / 1e3) * g,
                  D = 0;
                D < x;
                D++
              )
                v >= 60 &&
                  ((v = 0), ++w >= 60 && ((w = 0), ++E === 24 && (E = 0))),
                  this.timeScaleArray.push({
                    position: I,
                    value: v,
                    unit: "second",
                    hour: E,
                    minute: w,
                    second: v,
                    day: k,
                    year: this._getYear(P, C, 0),
                    month: L.monthMod(C),
                  }),
                  (I += g),
                  v++;
            },
          },
          {
            key: "createRawDateString",
            value: function (i, n) {
              var a = i.year;
              return (
                i.month === 0 && (i.month = 1),
                (a += "-" + ("0" + i.month.toString()).slice(-2)),
                i.unit === "day"
                  ? (a += i.unit === "day" ? "-" + ("0" + n).slice(-2) : "-01")
                  : (a += "-" + ("0" + (i.day ? i.day : "1")).slice(-2)),
                i.unit === "hour"
                  ? (a += i.unit === "hour" ? "T" + ("0" + n).slice(-2) : "T00")
                  : (a += "T" + ("0" + (i.hour ? i.hour : "0")).slice(-2)),
                i.unit === "minute"
                  ? (a += ":" + ("0" + n).slice(-2))
                  : (a += ":" + (i.minute ? ("0" + i.minute).slice(-2) : "00")),
                i.unit === "second"
                  ? (a += ":" + ("0" + n).slice(-2))
                  : (a += ":00"),
                this.utc && (a += ".000Z"),
                a
              );
            },
          },
          {
            key: "formatDates",
            value: function (i) {
              var n = this,
                a = this.w;
              return i.map(function (o) {
                var l = o.value.toString(),
                  u = new xe(n.ctx),
                  h = n.createRawDateString(o, l),
                  d = u.getDate(u.parseDate(h));
                if (
                  (n.utc || (d = u.getDate(u.parseDateWithTimezone(h))),
                  a.config.xaxis.labels.format === void 0)
                ) {
                  var g = "dd MMM",
                    x = a.config.xaxis.labels.datetimeFormatter;
                  o.unit === "year" && (g = x.year),
                    o.unit === "month" && (g = x.month),
                    o.unit === "day" && (g = x.day),
                    o.unit === "hour" && (g = x.hour),
                    o.unit === "minute" && (g = x.minute),
                    o.unit === "second" && (g = x.second),
                    (l = u.formatDate(d, g));
                } else l = u.formatDate(d, a.config.xaxis.labels.format);
                return {
                  dateString: h,
                  position: o.position,
                  value: l,
                  unit: o.unit,
                  year: o.year,
                  month: o.month,
                };
              });
            },
          },
          {
            key: "removeOverlappingTS",
            value: function (i) {
              var n,
                a = this,
                o = new B(this.ctx),
                l = !1;
              i.length > 0 &&
                i[0].value &&
                i.every(function (d) {
                  return d.value.length === i[0].value.length;
                }) &&
                ((l = !0), (n = o.getTextRects(i[0].value).width));
              var u = 0,
                h = i.map(function (d, g) {
                  if (g > 0 && a.w.config.xaxis.labels.hideOverlappingLabels) {
                    var x = l ? n : o.getTextRects(i[u].value).width,
                      v = i[u].position;
                    return d.position > v + x + 10 ? ((u = g), d) : null;
                  }
                  return d;
                });
              return (h = h.filter(function (d) {
                return d !== null;
              }));
            },
          },
          {
            key: "_getYear",
            value: function (i, n, a) {
              return i + Math.floor(n / 12) + a;
            },
          },
        ]),
        M
      );
    })(),
    yy = (function () {
      function M(i, n) {
        f(this, M), (this.ctx = n), (this.w = n.w), (this.el = i);
      }
      return (
        y(M, [
          {
            key: "setupElements",
            value: function () {
              var i = this.w.globals,
                n = this.w.config,
                a = n.chart.type;
              (i.axisCharts =
                [
                  "line",
                  "area",
                  "bar",
                  "rangeBar",
                  "rangeArea",
                  "candlestick",
                  "boxPlot",
                  "scatter",
                  "bubble",
                  "radar",
                  "heatmap",
                  "treemap",
                ].indexOf(a) > -1),
                (i.xyCharts =
                  [
                    "line",
                    "area",
                    "bar",
                    "rangeBar",
                    "rangeArea",
                    "candlestick",
                    "boxPlot",
                    "scatter",
                    "bubble",
                  ].indexOf(a) > -1),
                (i.isBarHorizontal =
                  (n.chart.type === "bar" ||
                    n.chart.type === "rangeBar" ||
                    n.chart.type === "boxPlot") &&
                  n.plotOptions.bar.horizontal),
                (i.chartClass = ".apexcharts" + i.chartID),
                (i.dom.baseEl = this.el),
                (i.dom.elWrap = document.createElement("div")),
                B.setAttrs(i.dom.elWrap, {
                  id: i.chartClass.substring(1),
                  class: "apexcharts-canvas " + i.chartClass.substring(1),
                }),
                this.el.appendChild(i.dom.elWrap),
                (i.dom.Paper = new window.SVG.Doc(i.dom.elWrap)),
                i.dom.Paper.attr({
                  class: "apexcharts-svg",
                  "xmlns:data": "ApexChartsNS",
                  transform: "translate("
                    .concat(n.chart.offsetX, ", ")
                    .concat(n.chart.offsetY, ")"),
                }),
                (i.dom.Paper.node.style.background =
                  n.theme.mode !== "dark" || n.chart.background
                    ? n.chart.background
                    : "rgba(0, 0, 0, 0.8)"),
                this.setSVGDimensions(),
                (i.dom.elLegendForeign = document.createElementNS(
                  i.SVGNS,
                  "foreignObject"
                )),
                B.setAttrs(i.dom.elLegendForeign, {
                  x: 0,
                  y: 0,
                  width: i.svgWidth,
                  height: i.svgHeight,
                }),
                (i.dom.elLegendWrap = document.createElement("div")),
                i.dom.elLegendWrap.classList.add("apexcharts-legend"),
                i.dom.elLegendWrap.setAttribute(
                  "xmlns",
                  "http://www.w3.org/1999/xhtml"
                ),
                i.dom.elLegendForeign.appendChild(i.dom.elLegendWrap),
                i.dom.Paper.node.appendChild(i.dom.elLegendForeign),
                (i.dom.elGraphical = i.dom.Paper.group().attr({
                  class: "apexcharts-inner apexcharts-graphical",
                })),
                (i.dom.elDefs = i.dom.Paper.defs()),
                i.dom.Paper.add(i.dom.elGraphical),
                i.dom.elGraphical.add(i.dom.elDefs);
            },
          },
          {
            key: "plotChartType",
            value: function (i, n) {
              var a = this.w,
                o = a.config,
                l = a.globals,
                u = { series: [], i: [] },
                h = { series: [], i: [] },
                d = { series: [], i: [] },
                g = { series: [], i: [] },
                x = { series: [], i: [] },
                v = { series: [], i: [] },
                w = { series: [], i: [] },
                k = { series: [], i: [] },
                C = { series: [], seriesRangeEnd: [], i: [] };
              l.series.map(function (F, _) {
                var G = 0;
                i[_].type !== void 0
                  ? (i[_].type === "column" || i[_].type === "bar"
                      ? (l.series.length > 1 &&
                          o.plotOptions.bar.horizontal &&
                          console.warn(
                            "Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"
                          ),
                        x.series.push(F),
                        x.i.push(_),
                        G++,
                        (a.globals.columnSeries = x.series))
                      : i[_].type === "area"
                      ? (h.series.push(F), h.i.push(_), G++)
                      : i[_].type === "line"
                      ? (u.series.push(F), u.i.push(_), G++)
                      : i[_].type === "scatter"
                      ? (d.series.push(F), d.i.push(_))
                      : i[_].type === "bubble"
                      ? (g.series.push(F), g.i.push(_), G++)
                      : i[_].type === "candlestick"
                      ? (v.series.push(F), v.i.push(_), G++)
                      : i[_].type === "boxPlot"
                      ? (w.series.push(F), w.i.push(_), G++)
                      : i[_].type === "rangeBar"
                      ? (k.series.push(F), k.i.push(_), G++)
                      : i[_].type === "rangeArea"
                      ? (C.series.push(l.seriesRangeStart[_]),
                        C.seriesRangeEnd.push(l.seriesRangeEnd[_]),
                        C.i.push(_),
                        G++)
                      : console.warn(
                          "You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea"
                        ),
                    G > 1 && (l.comboCharts = !0))
                  : (u.series.push(F), u.i.push(_));
              });
              var P = new Fo(this.ctx, n),
                E = new Io(this.ctx, n);
              this.ctx.pie = new Hh(this.ctx);
              var I = new dy(this.ctx);
              this.ctx.rangeBar = new fy(this.ctx, n);
              var D = new hy(this.ctx),
                p = [];
              if (l.comboCharts) {
                if (
                  (h.series.length > 0 && p.push(P.draw(h.series, "area", h.i)),
                  x.series.length > 0)
                )
                  if (a.config.chart.stacked) {
                    var b = new Nh(this.ctx, n);
                    p.push(b.draw(x.series, x.i));
                  } else
                    (this.ctx.bar = new En(this.ctx, n)),
                      p.push(this.ctx.bar.draw(x.series, x.i));
                if (
                  (C.series.length > 0 &&
                    p.push(
                      P.draw(C.series, "rangeArea", C.i, C.seriesRangeEnd)
                    ),
                  u.series.length > 0 && p.push(P.draw(u.series, "line", u.i)),
                  v.series.length > 0 &&
                    p.push(E.draw(v.series, "candlestick", v.i)),
                  w.series.length > 0 &&
                    p.push(E.draw(w.series, "boxPlot", w.i)),
                  k.series.length > 0 &&
                    p.push(this.ctx.rangeBar.draw(k.series, k.i)),
                  d.series.length > 0)
                ) {
                  var A = new Fo(this.ctx, n, !0);
                  p.push(A.draw(d.series, "scatter", d.i));
                }
                if (g.series.length > 0) {
                  var R = new Fo(this.ctx, n, !0);
                  p.push(R.draw(g.series, "bubble", g.i));
                }
              } else
                switch (o.chart.type) {
                  case "line":
                    p = P.draw(l.series, "line");
                    break;
                  case "area":
                    p = P.draw(l.series, "area");
                    break;
                  case "bar":
                    o.chart.stacked
                      ? (p = new Nh(this.ctx, n).draw(l.series))
                      : ((this.ctx.bar = new En(this.ctx, n)),
                        (p = this.ctx.bar.draw(l.series)));
                    break;
                  case "candlestick":
                    p = new Io(this.ctx, n).draw(l.series, "candlestick");
                    break;
                  case "boxPlot":
                    p = new Io(this.ctx, n).draw(l.series, o.chart.type);
                    break;
                  case "rangeBar":
                    p = this.ctx.rangeBar.draw(l.series);
                    break;
                  case "rangeArea":
                    p = P.draw(
                      l.seriesRangeStart,
                      "rangeArea",
                      void 0,
                      l.seriesRangeEnd
                    );
                    break;
                  case "heatmap":
                    p = new uy(this.ctx, n).draw(l.series);
                    break;
                  case "treemap":
                    p = new my(this.ctx, n).draw(l.series);
                    break;
                  case "pie":
                  case "donut":
                  case "polarArea":
                    p = this.ctx.pie.draw(l.series);
                    break;
                  case "radialBar":
                    p = I.draw(l.series);
                    break;
                  case "radar":
                    p = D.draw(l.series);
                    break;
                  default:
                    p = P.draw(l.series);
                }
              return p;
            },
          },
          {
            key: "setSVGDimensions",
            value: function () {
              var i = this.w.globals,
                n = this.w.config;
              (i.svgWidth = n.chart.width), (i.svgHeight = n.chart.height);
              var a = L.getDimensions(this.el),
                o = n.chart.width
                  .toString()
                  .split(/[0-9]+/g)
                  .pop();
              o === "%"
                ? L.isNumber(a[0]) &&
                  (a[0].width === 0 &&
                    (a = L.getDimensions(this.el.parentNode)),
                  (i.svgWidth = (a[0] * parseInt(n.chart.width, 10)) / 100))
                : (o !== "px" && o !== "") ||
                  (i.svgWidth = parseInt(n.chart.width, 10));
              var l = n.chart.height
                .toString()
                .split(/[0-9]+/g)
                .pop();
              if (i.svgHeight !== "auto" && i.svgHeight !== "")
                if (l === "%") {
                  var u = L.getDimensions(this.el.parentNode);
                  i.svgHeight = (u[1] * parseInt(n.chart.height, 10)) / 100;
                } else i.svgHeight = parseInt(n.chart.height, 10);
              else
                i.axisCharts
                  ? (i.svgHeight = i.svgWidth / 1.61)
                  : (i.svgHeight = i.svgWidth / 1.2);
              if (
                (i.svgWidth < 0 && (i.svgWidth = 0),
                i.svgHeight < 0 && (i.svgHeight = 0),
                B.setAttrs(i.dom.Paper.node, {
                  width: i.svgWidth,
                  height: i.svgHeight,
                }),
                l !== "%")
              ) {
                var h = n.chart.sparkline.enabled
                  ? 0
                  : i.axisCharts
                  ? n.chart.parentHeightOffset
                  : 0;
                i.dom.Paper.node.parentNode.parentNode.style.minHeight =
                  i.svgHeight + h + "px";
              }
              (i.dom.elWrap.style.width = i.svgWidth + "px"),
                (i.dom.elWrap.style.height = i.svgHeight + "px");
            },
          },
          {
            key: "shiftGraphPosition",
            value: function () {
              var i = this.w.globals,
                n = i.translateY,
                a = { transform: "translate(" + i.translateX + ", " + n + ")" };
              B.setAttrs(i.dom.elGraphical.node, a);
            },
          },
          {
            key: "resizeNonAxisCharts",
            value: function () {
              var i = this.w,
                n = i.globals,
                a = 0,
                o = i.config.chart.sparkline.enabled ? 1 : 15;
              (o += i.config.grid.padding.bottom),
                (i.config.legend.position !== "top" &&
                  i.config.legend.position !== "bottom") ||
                  !i.config.legend.show ||
                  i.config.legend.floating ||
                  (a =
                    new Oh(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
              var l = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-radialbar, .apexcharts-pie"
                ),
                u = 2.05 * i.globals.radialSize;
              if (
                l &&
                !i.config.chart.sparkline.enabled &&
                i.config.plotOptions.radialBar.startAngle !== 0
              ) {
                var h = L.getBoundingClientRect(l);
                u = h.bottom;
                var d = h.bottom - h.top;
                u = Math.max(2.05 * i.globals.radialSize, d);
              }
              var g = u + n.translateY + a + o;
              n.dom.elLegendForeign &&
                n.dom.elLegendForeign.setAttribute("height", g),
                (i.config.chart.height &&
                  String(i.config.chart.height).indexOf("%") > 0) ||
                  ((n.dom.elWrap.style.height = g + "px"),
                  B.setAttrs(n.dom.Paper.node, { height: g }),
                  (n.dom.Paper.node.parentNode.parentNode.style.minHeight =
                    g + "px"));
            },
          },
          {
            key: "coreCalculations",
            value: function () {
              new Ln(this.ctx).init();
            },
          },
          {
            key: "resetGlobals",
            value: function () {
              var i = this,
                n = function () {
                  return i.w.config.series.map(function (l) {
                    return [];
                  });
                },
                a = new me(),
                o = this.w.globals;
              a.initGlobalVars(o),
                (o.seriesXvalues = n()),
                (o.seriesYvalues = n());
            },
          },
          {
            key: "isMultipleY",
            value: function () {
              if (
                this.w.config.yaxis.constructor === Array &&
                this.w.config.yaxis.length > 1
              )
                return (this.w.globals.isMultipleYAxis = !0), !0;
            },
          },
          {
            key: "xySettings",
            value: function () {
              var i = null,
                n = this.w;
              if (n.globals.axisCharts) {
                if (
                  (n.config.xaxis.crosshairs.position === "back" &&
                    new zo(this.ctx).drawXCrosshairs(),
                  n.config.yaxis[0].crosshairs.position === "back" &&
                    new zo(this.ctx).drawYCrosshairs(),
                  n.config.xaxis.type === "datetime" &&
                    n.config.xaxis.labels.formatter === void 0)
                ) {
                  this.ctx.timeScale = new vy(this.ctx);
                  var a = [];
                  isFinite(n.globals.minX) &&
                  isFinite(n.globals.maxX) &&
                  !n.globals.isBarHorizontal
                    ? (a = this.ctx.timeScale.calculateTimeScaleTicks(
                        n.globals.minX,
                        n.globals.maxX
                      ))
                    : n.globals.isBarHorizontal &&
                      (a = this.ctx.timeScale.calculateTimeScaleTicks(
                        n.globals.minY,
                        n.globals.maxY
                      )),
                    this.ctx.timeScale.recalcDimensionsBasedOnFormat(a);
                }
                i = new K(this.ctx).getCalculatedRatios();
              }
              return i;
            },
          },
          {
            key: "updateSourceChart",
            value: function (i) {
              (this.ctx.w.globals.selection = void 0),
                this.ctx.updateHelpers._updateOptions(
                  {
                    chart: {
                      selection: {
                        xaxis: { min: i.w.globals.minX, max: i.w.globals.maxX },
                      },
                    },
                  },
                  !1,
                  !1
                );
            },
          },
          {
            key: "setupBrushHandler",
            value: function () {
              var i = this,
                n = this.w;
              if (
                n.config.chart.brush.enabled &&
                typeof n.config.chart.events.selection != "function"
              ) {
                var a = Array.isArray(n.config.chart.brush.targets) || [
                  n.config.chart.brush.target,
                ];
                a.forEach(function (o) {
                  var l = ApexCharts.getChartByID(o);
                  (l.w.globals.brushSource = i.ctx),
                    typeof l.w.config.chart.events.zoomed != "function" &&
                      (l.w.config.chart.events.zoomed = function () {
                        i.updateSourceChart(l);
                      }),
                    typeof l.w.config.chart.events.scrolled != "function" &&
                      (l.w.config.chart.events.scrolled = function () {
                        i.updateSourceChart(l);
                      });
                }),
                  (n.config.chart.events.selection = function (o, l) {
                    a.forEach(function (u) {
                      var h = ApexCharts.getChartByID(u),
                        d = L.clone(n.config.yaxis);
                      if (
                        n.config.chart.brush.autoScaleYaxis &&
                        h.w.globals.series.length === 1
                      ) {
                        var g = new ui(h);
                        d = g.autoScaleY(h, d, l);
                      }
                      var x = h.w.config.yaxis.reduce(function (v, w, k) {
                        return [].concat(Y(v), [
                          s(
                            s({}, h.w.config.yaxis[k]),
                            {},
                            { min: d[0].min, max: d[0].max }
                          ),
                        ]);
                      }, []);
                      h.ctx.updateHelpers._updateOptions(
                        {
                          xaxis: { min: l.xaxis.min, max: l.xaxis.max },
                          yaxis: x,
                        },
                        !1,
                        !1,
                        !1,
                        !1
                      );
                    });
                  });
              }
            },
          },
        ]),
        M
      );
    })(),
    by = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "_updateOptions",
            value: function (i) {
              var n = this,
                a =
                  arguments.length > 1 &&
                  arguments[1] !== void 0 &&
                  arguments[1],
                o =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2],
                l =
                  !(arguments.length > 3 && arguments[3] !== void 0) ||
                  arguments[3],
                u =
                  arguments.length > 4 &&
                  arguments[4] !== void 0 &&
                  arguments[4];
              return new Promise(function (h) {
                var d = [n.ctx];
                l && (d = n.ctx.getSyncedCharts()),
                  n.ctx.w.globals.isExecCalled &&
                    ((d = [n.ctx]), (n.ctx.w.globals.isExecCalled = !1)),
                  d.forEach(function (g, x) {
                    var v = g.w;
                    if (
                      ((v.globals.shouldAnimate = o),
                      a ||
                        ((v.globals.resized = !0),
                        (v.globals.dataChanged = !0),
                        o && g.series.getPreviousPaths()),
                      i &&
                        c(i) === "object" &&
                        ((g.config = new ge(i)),
                        (i = K.extendArrayProps(g.config, i, v)),
                        g.w.globals.chartID !== n.ctx.w.globals.chartID &&
                          delete i.series,
                        (v.config = L.extend(v.config, i)),
                        u &&
                          ((v.globals.lastXAxis = i.xaxis
                            ? L.clone(i.xaxis)
                            : []),
                          (v.globals.lastYAxis = i.yaxis
                            ? L.clone(i.yaxis)
                            : []),
                          (v.globals.initialConfig = L.extend({}, v.config)),
                          (v.globals.initialSeries = L.clone(v.config.series)),
                          i.series)))
                    ) {
                      for (
                        var w = 0;
                        w < v.globals.collapsedSeriesIndices.length;
                        w++
                      ) {
                        var k =
                          v.config.series[v.globals.collapsedSeriesIndices[w]];
                        v.globals.collapsedSeries[w].data = v.globals.axisCharts
                          ? k.data.slice()
                          : k;
                      }
                      for (
                        var C = 0;
                        C < v.globals.ancillaryCollapsedSeriesIndices.length;
                        C++
                      ) {
                        var P =
                          v.config.series[
                            v.globals.ancillaryCollapsedSeriesIndices[C]
                          ];
                        v.globals.ancillaryCollapsedSeries[C].data = v.globals
                          .axisCharts
                          ? P.data.slice()
                          : P;
                      }
                      g.series.emptyCollapsedSeries(v.config.series);
                    }
                    return g.update(i).then(function () {
                      x === d.length - 1 && h(g);
                    });
                  });
              });
            },
          },
          {
            key: "_updateSeries",
            value: function (i, n) {
              var a = this,
                o =
                  arguments.length > 2 &&
                  arguments[2] !== void 0 &&
                  arguments[2];
              return new Promise(function (l) {
                var u,
                  h = a.w;
                return (
                  (h.globals.shouldAnimate = n),
                  (h.globals.dataChanged = !0),
                  n && a.ctx.series.getPreviousPaths(),
                  h.globals.axisCharts
                    ? ((u = i.map(function (d, g) {
                        return a._extendSeries(d, g);
                      })).length === 0 && (u = [{ data: [] }]),
                      (h.config.series = u))
                    : (h.config.series = i.slice()),
                  o &&
                    ((h.globals.initialConfig.series = L.clone(
                      h.config.series
                    )),
                    (h.globals.initialSeries = L.clone(h.config.series))),
                  a.ctx.update().then(function () {
                    l(a.ctx);
                  })
                );
              });
            },
          },
          {
            key: "_extendSeries",
            value: function (i, n) {
              var a = this.w,
                o = a.config.series[n];
              return s(
                s({}, a.config.series[n]),
                {},
                {
                  name: i.name ? i.name : o == null ? void 0 : o.name,
                  color: i.color ? i.color : o == null ? void 0 : o.color,
                  type: i.type ? i.type : o == null ? void 0 : o.type,
                  group: i.group ? i.group : o == null ? void 0 : o.group,
                  data: i.data ? i.data : o == null ? void 0 : o.data,
                  zIndex: i.zIndex !== void 0 ? i.zIndex : n,
                }
              );
            },
          },
          {
            key: "toggleDataPointSelection",
            value: function (i, n) {
              var a = this.w,
                o = null,
                l = ".apexcharts-series[data\\:realIndex='".concat(i, "']");
              return (
                a.globals.axisCharts
                  ? (o = a.globals.dom.Paper.select(
                      ""
                        .concat(l, " path[j='")
                        .concat(n, "'], ")
                        .concat(l, " circle[j='")
                        .concat(n, "'], ")
                        .concat(l, " rect[j='")
                        .concat(n, "']")
                    ).members[0])
                  : n === void 0 &&
                    ((o = a.globals.dom.Paper.select(
                      "".concat(l, " path[j='").concat(i, "']")
                    ).members[0]),
                    (a.config.chart.type !== "pie" &&
                      a.config.chart.type !== "polarArea" &&
                      a.config.chart.type !== "donut") ||
                      this.ctx.pie.pieClicked(i)),
                o
                  ? (new B(this.ctx).pathMouseDown(o, null),
                    o.node ? o.node : null)
                  : (console.warn(
                      "toggleDataPointSelection: Element not found"
                    ),
                    null)
              );
            },
          },
          {
            key: "forceXAxisUpdate",
            value: function (i) {
              var n = this.w;
              if (
                (["min", "max"].forEach(function (o) {
                  i.xaxis[o] !== void 0 &&
                    ((n.config.xaxis[o] = i.xaxis[o]),
                    (n.globals.lastXAxis[o] = i.xaxis[o]));
                }),
                i.xaxis.categories &&
                  i.xaxis.categories.length &&
                  (n.config.xaxis.categories = i.xaxis.categories),
                n.config.xaxis.convertedCatToNumeric)
              ) {
                var a = new se(i);
                i = a.convertCatToNumericXaxis(i, this.ctx);
              }
              return i;
            },
          },
          {
            key: "forceYAxisUpdate",
            value: function (i) {
              return (
                i.chart &&
                  i.chart.stacked &&
                  i.chart.stackType === "100%" &&
                  (Array.isArray(i.yaxis)
                    ? i.yaxis.forEach(function (n, a) {
                        (i.yaxis[a].min = 0), (i.yaxis[a].max = 100);
                      })
                    : ((i.yaxis.min = 0), (i.yaxis.max = 100))),
                i
              );
            },
          },
          {
            key: "revertDefaultAxisMinMax",
            value: function (i) {
              var n = this,
                a = this.w,
                o = a.globals.lastXAxis,
                l = a.globals.lastYAxis;
              i && i.xaxis && (o = i.xaxis),
                i && i.yaxis && (l = i.yaxis),
                (a.config.xaxis.min = o.min),
                (a.config.xaxis.max = o.max);
              var u = function (h) {
                l[h] !== void 0 &&
                  ((a.config.yaxis[h].min = l[h].min),
                  (a.config.yaxis[h].max = l[h].max));
              };
              a.config.yaxis.map(function (h, d) {
                a.globals.zoomed || l[d] !== void 0
                  ? u(d)
                  : n.ctx.opts.yaxis[d] !== void 0 &&
                    ((h.min = n.ctx.opts.yaxis[d].min),
                    (h.max = n.ctx.opts.yaxis[d].max));
              });
            },
          },
        ]),
        M
      );
    })();
  (rn = typeof window < "u" ? window : void 0),
    (Aa = function (M, i) {
      var n = ((this !== void 0 ? this : M).SVG = function (p) {
        if (n.supported)
          return (p = new n.Doc(p)), n.parser.draw || n.prepare(), p;
      });
      if (
        ((n.ns = "http://www.w3.org/2000/svg"),
        (n.xmlns = "http://www.w3.org/2000/xmlns/"),
        (n.xlink = "http://www.w3.org/1999/xlink"),
        (n.svgjs = "http://svgjs.dev"),
        (n.supported = !0),
        !n.supported)
      )
        return !1;
      (n.did = 1e3),
        (n.eid = function (p) {
          return "Svgjs" + x(p) + n.did++;
        }),
        (n.create = function (p) {
          var b = i.createElementNS(this.ns, p);
          return b.setAttribute("id", this.eid(p)), b;
        }),
        (n.extend = function () {
          var p, b;
          b = (p = [].slice.call(arguments)).pop();
          for (var A = p.length - 1; A >= 0; A--)
            if (p[A]) for (var R in b) p[A].prototype[R] = b[R];
          n.Set && n.Set.inherit && n.Set.inherit();
        }),
        (n.invent = function (p) {
          var b =
            typeof p.create == "function"
              ? p.create
              : function () {
                  this.constructor.call(this, n.create(p.create));
                };
          return (
            p.inherit && (b.prototype = new p.inherit()),
            p.extend && n.extend(b, p.extend),
            p.construct && n.extend(p.parent || n.Container, p.construct),
            b
          );
        }),
        (n.adopt = function (p) {
          return p
            ? p.instance
              ? p.instance
              : (((b =
                  p.nodeName == "svg"
                    ? p.parentNode instanceof M.SVGElement
                      ? new n.Nested()
                      : new n.Doc()
                    : p.nodeName == "linearGradient"
                    ? new n.Gradient("linear")
                    : p.nodeName == "radialGradient"
                    ? new n.Gradient("radial")
                    : n[x(p.nodeName)]
                    ? new n[x(p.nodeName)]()
                    : new n.Element(p)).type = p.nodeName),
                (b.node = p),
                (p.instance = b),
                b instanceof n.Doc && b.namespace().defs(),
                b.setData(JSON.parse(p.getAttribute("svgjs:data")) || {}),
                b)
            : null;
          var b;
        }),
        (n.prepare = function () {
          var p = i.getElementsByTagName("body")[0],
            b = (p ? new n.Doc(p) : n.adopt(i.documentElement).nested()).size(
              2,
              0
            );
          n.parser = {
            body: p || i.documentElement,
            draw: b.style(
              "opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden"
            ).node,
            poly: b.polyline().node,
            path: b.path().node,
            native: n.create("svg"),
          };
        }),
        (n.parser = { native: n.create("svg") }),
        i.addEventListener(
          "DOMContentLoaded",
          function () {
            n.parser.draw || n.prepare();
          },
          !1
        ),
        (n.regex = {
          numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
          hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
          rgb: /rgb\((\d+),(\d+),(\d+)\)/,
          reference: /#([a-z0-9\-_]+)/i,
          transforms: /\)\s*,?\s*/,
          whitespace: /\s/g,
          isHex: /^#[a-f0-9]{3,6}$/i,
          isRgb: /^rgb\(/,
          isCss: /[^:]+:[^;]+;?/,
          isBlank: /^(\s+)?$/,
          isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
          isPercent: /^-?[\d\.]+%$/,
          isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
          delimiter: /[\s,]+/,
          hyphen: /([^e])\-/gi,
          pathLetters: /[MLHVCSQTAZ]/gi,
          isPathLetter: /[MLHVCSQTAZ]/i,
          numbersWithDots:
            /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
          dots: /\./g,
        }),
        (n.utils = {
          map: function (p, b) {
            for (var A = p.length, R = [], F = 0; F < A; F++) R.push(b(p[F]));
            return R;
          },
          filter: function (p, b) {
            for (var A = p.length, R = [], F = 0; F < A; F++)
              b(p[F]) && R.push(p[F]);
            return R;
          },
          filterSVGElements: function (p) {
            return this.filter(p, function (b) {
              return b instanceof M.SVGElement;
            });
          },
        }),
        (n.defaults = {
          attrs: {
            "fill-opacity": 1,
            "stroke-opacity": 1,
            "stroke-width": 0,
            "stroke-linejoin": "miter",
            "stroke-linecap": "butt",
            fill: "#000000",
            stroke: "#000000",
            opacity: 1,
            x: 0,
            y: 0,
            cx: 0,
            cy: 0,
            width: 0,
            height: 0,
            r: 0,
            rx: 0,
            ry: 0,
            offset: 0,
            "stop-opacity": 1,
            "stop-color": "#000000",
            "font-size": 16,
            "font-family": "Helvetica, Arial, sans-serif",
            "text-anchor": "start",
          },
        }),
        (n.Color = function (p) {
          var b, A;
          (this.r = 0),
            (this.g = 0),
            (this.b = 0),
            p &&
              (typeof p == "string"
                ? n.regex.isRgb.test(p)
                  ? ((b = n.regex.rgb.exec(p.replace(n.regex.whitespace, ""))),
                    (this.r = parseInt(b[1])),
                    (this.g = parseInt(b[2])),
                    (this.b = parseInt(b[3])))
                  : n.regex.isHex.test(p) &&
                    ((b = n.regex.hex.exec(
                      (A = p).length == 4
                        ? [
                            "#",
                            A.substring(1, 2),
                            A.substring(1, 2),
                            A.substring(2, 3),
                            A.substring(2, 3),
                            A.substring(3, 4),
                            A.substring(3, 4),
                          ].join("")
                        : A
                    )),
                    (this.r = parseInt(b[1], 16)),
                    (this.g = parseInt(b[2], 16)),
                    (this.b = parseInt(b[3], 16)))
                : c(p) === "object" &&
                  ((this.r = p.r), (this.g = p.g), (this.b = p.b)));
        }),
        n.extend(n.Color, {
          toString: function () {
            return this.toHex();
          },
          toHex: function () {
            return "#" + v(this.r) + v(this.g) + v(this.b);
          },
          toRgb: function () {
            return "rgb(" + [this.r, this.g, this.b].join() + ")";
          },
          brightness: function () {
            return (
              (this.r / 255) * 0.3 +
              (this.g / 255) * 0.59 +
              (this.b / 255) * 0.11
            );
          },
          morph: function (p) {
            return (this.destination = new n.Color(p)), this;
          },
          at: function (p) {
            return this.destination
              ? ((p = p < 0 ? 0 : p > 1 ? 1 : p),
                new n.Color({
                  r: ~~(this.r + (this.destination.r - this.r) * p),
                  g: ~~(this.g + (this.destination.g - this.g) * p),
                  b: ~~(this.b + (this.destination.b - this.b) * p),
                }))
              : this;
          },
        }),
        (n.Color.test = function (p) {
          return (p += ""), n.regex.isHex.test(p) || n.regex.isRgb.test(p);
        }),
        (n.Color.isRgb = function (p) {
          return (
            p &&
            typeof p.r == "number" &&
            typeof p.g == "number" &&
            typeof p.b == "number"
          );
        }),
        (n.Color.isColor = function (p) {
          return n.Color.isRgb(p) || n.Color.test(p);
        }),
        (n.Array = function (p, b) {
          (p = (p || []).valueOf()).length == 0 && b && (p = b.valueOf()),
            (this.value = this.parse(p));
        }),
        n.extend(n.Array, {
          toString: function () {
            return this.value.join(" ");
          },
          valueOf: function () {
            return this.value;
          },
          parse: function (p) {
            return (p = p.valueOf()), Array.isArray(p) ? p : this.split(p);
          },
        }),
        (n.PointArray = function (p, b) {
          n.Array.call(this, p, b || [[0, 0]]);
        }),
        (n.PointArray.prototype = new n.Array()),
        (n.PointArray.prototype.constructor = n.PointArray);
      for (
        var a = {
            M: function (p, b, A) {
              return (b.x = A.x = p[0]), (b.y = A.y = p[1]), ["M", b.x, b.y];
            },
            L: function (p, b) {
              return (b.x = p[0]), (b.y = p[1]), ["L", p[0], p[1]];
            },
            H: function (p, b) {
              return (b.x = p[0]), ["H", p[0]];
            },
            V: function (p, b) {
              return (b.y = p[0]), ["V", p[0]];
            },
            C: function (p, b) {
              return (
                (b.x = p[4]),
                (b.y = p[5]),
                ["C", p[0], p[1], p[2], p[3], p[4], p[5]]
              );
            },
            Q: function (p, b) {
              return (b.x = p[2]), (b.y = p[3]), ["Q", p[0], p[1], p[2], p[3]];
            },
            S: function (p, b) {
              return (b.x = p[2]), (b.y = p[3]), ["S", p[0], p[1], p[2], p[3]];
            },
            Z: function (p, b, A) {
              return (b.x = A.x), (b.y = A.y), ["Z"];
            },
          },
          o = "mlhvqtcsaz".split(""),
          l = 0,
          u = o.length;
        l < u;
        ++l
      )
        a[o[l]] = (function (p) {
          return function (b, A, R) {
            if (p == "H") b[0] = b[0] + A.x;
            else if (p == "V") b[0] = b[0] + A.y;
            else if (p == "A") (b[5] = b[5] + A.x), (b[6] = b[6] + A.y);
            else
              for (var F = 0, _ = b.length; F < _; ++F)
                b[F] = b[F] + (F % 2 ? A.y : A.x);
            if (a && typeof a[p] == "function") return a[p](b, A, R);
          };
        })(o[l].toUpperCase());
      (n.PathArray = function (p, b) {
        n.Array.call(this, p, b || [["M", 0, 0]]);
      }),
        (n.PathArray.prototype = new n.Array()),
        (n.PathArray.prototype.constructor = n.PathArray),
        n.extend(n.PathArray, {
          toString: function () {
            return (function (p) {
              for (var b = 0, A = p.length, R = ""; b < A; b++)
                (R += p[b][0]),
                  p[b][1] != null &&
                    ((R += p[b][1]),
                    p[b][2] != null &&
                      ((R += " "),
                      (R += p[b][2]),
                      p[b][3] != null &&
                        ((R += " "),
                        (R += p[b][3]),
                        (R += " "),
                        (R += p[b][4]),
                        p[b][5] != null &&
                          ((R += " "),
                          (R += p[b][5]),
                          (R += " "),
                          (R += p[b][6]),
                          p[b][7] != null && ((R += " "), (R += p[b][7]))))));
              return R + " ";
            })(this.value);
          },
          move: function (p, b) {
            var A = this.bbox();
            return A.x, A.y, this;
          },
          at: function (p) {
            if (!this.destination) return this;
            for (
              var b = this.value,
                A = this.destination.value,
                R = [],
                F = new n.PathArray(),
                _ = 0,
                G = b.length;
              _ < G;
              _++
            ) {
              R[_] = [b[_][0]];
              for (var W = 1, Z = b[_].length; W < Z; W++)
                R[_][W] = b[_][W] + (A[_][W] - b[_][W]) * p;
              R[_][0] === "A" &&
                ((R[_][4] = +(R[_][4] != 0)), (R[_][5] = +(R[_][5] != 0)));
            }
            return (F.value = R), F;
          },
          parse: function (p) {
            if (p instanceof n.PathArray) return p.valueOf();
            var b,
              A = {
                M: 2,
                L: 2,
                H: 1,
                V: 1,
                C: 6,
                S: 4,
                Q: 4,
                T: 2,
                A: 7,
                Z: 0,
              };
            p =
              typeof p == "string"
                ? p
                    .replace(n.regex.numbersWithDots, d)
                    .replace(n.regex.pathLetters, " $& ")
                    .replace(n.regex.hyphen, "$1 -")
                    .trim()
                    .split(n.regex.delimiter)
                : p.reduce(function (Z, ee) {
                    return [].concat.call(Z, ee);
                  }, []);
            var R = [],
              F = new n.Point(),
              _ = new n.Point(),
              G = 0,
              W = p.length;
            do
              n.regex.isPathLetter.test(p[G])
                ? ((b = p[G]), ++G)
                : b == "M"
                ? (b = "L")
                : b == "m" && (b = "l"),
                R.push(
                  a[b].call(
                    null,
                    p.slice(G, (G += A[b.toUpperCase()])).map(parseFloat),
                    F,
                    _
                  )
                );
            while (W > G);
            return R;
          },
          bbox: function () {
            return (
              n.parser.draw || n.prepare(),
              n.parser.path.setAttribute("d", this.toString()),
              n.parser.path.getBBox()
            );
          },
        }),
        (n.Number = n.invent({
          create: function (p, b) {
            (this.value = 0),
              (this.unit = b || ""),
              typeof p == "number"
                ? (this.value = isNaN(p)
                    ? 0
                    : isFinite(p)
                    ? p
                    : p < 0
                    ? -34e37
                    : 34e37)
                : typeof p == "string"
                ? (b = p.match(n.regex.numberAndUnit)) &&
                  ((this.value = parseFloat(b[1])),
                  b[5] == "%"
                    ? (this.value /= 100)
                    : b[5] == "s" && (this.value *= 1e3),
                  (this.unit = b[5]))
                : p instanceof n.Number &&
                  ((this.value = p.valueOf()), (this.unit = p.unit));
          },
          extend: {
            toString: function () {
              return (
                (this.unit == "%"
                  ? ~~(1e8 * this.value) / 1e6
                  : this.unit == "s"
                  ? this.value / 1e3
                  : this.value) + this.unit
              );
            },
            toJSON: function () {
              return this.toString();
            },
            valueOf: function () {
              return this.value;
            },
            plus: function (p) {
              return (
                (p = new n.Number(p)),
                new n.Number(this + p, this.unit || p.unit)
              );
            },
            minus: function (p) {
              return (
                (p = new n.Number(p)),
                new n.Number(this - p, this.unit || p.unit)
              );
            },
            times: function (p) {
              return (
                (p = new n.Number(p)),
                new n.Number(this * p, this.unit || p.unit)
              );
            },
            divide: function (p) {
              return (
                (p = new n.Number(p)),
                new n.Number(this / p, this.unit || p.unit)
              );
            },
            to: function (p) {
              var b = new n.Number(this);
              return typeof p == "string" && (b.unit = p), b;
            },
            morph: function (p) {
              return (
                (this.destination = new n.Number(p)),
                p.relative && (this.destination.value += this.value),
                this
              );
            },
            at: function (p) {
              return this.destination
                ? new n.Number(this.destination).minus(this).times(p).plus(this)
                : this;
            },
          },
        })),
        (n.Element = n.invent({
          create: function (p) {
            (this._stroke = n.defaults.attrs.stroke),
              (this._event = null),
              (this.dom = {}),
              (this.node = p) &&
                ((this.type = p.nodeName),
                (this.node.instance = this),
                (this._stroke = p.getAttribute("stroke") || this._stroke));
          },
          extend: {
            x: function (p) {
              return this.attr("x", p);
            },
            y: function (p) {
              return this.attr("y", p);
            },
            cx: function (p) {
              return p == null
                ? this.x() + this.width() / 2
                : this.x(p - this.width() / 2);
            },
            cy: function (p) {
              return p == null
                ? this.y() + this.height() / 2
                : this.y(p - this.height() / 2);
            },
            move: function (p, b) {
              return this.x(p).y(b);
            },
            center: function (p, b) {
              return this.cx(p).cy(b);
            },
            width: function (p) {
              return this.attr("width", p);
            },
            height: function (p) {
              return this.attr("height", p);
            },
            size: function (p, b) {
              var A = w(this, p, b);
              return this.width(new n.Number(A.width)).height(
                new n.Number(A.height)
              );
            },
            clone: function (p) {
              this.writeDataToDom();
              var b = P(this.node.cloneNode(!0));
              return p ? p.add(b) : this.after(b), b;
            },
            remove: function () {
              return this.parent() && this.parent().removeElement(this), this;
            },
            replace: function (p) {
              return this.after(p).remove(), p;
            },
            addTo: function (p) {
              return p.put(this);
            },
            putIn: function (p) {
              return p.add(this);
            },
            id: function (p) {
              return this.attr("id", p);
            },
            show: function () {
              return this.style("display", "");
            },
            hide: function () {
              return this.style("display", "none");
            },
            visible: function () {
              return this.style("display") != "none";
            },
            toString: function () {
              return this.attr("id");
            },
            classes: function () {
              var p = this.attr("class");
              return p == null ? [] : p.trim().split(n.regex.delimiter);
            },
            hasClass: function (p) {
              return this.classes().indexOf(p) != -1;
            },
            addClass: function (p) {
              if (!this.hasClass(p)) {
                var b = this.classes();
                b.push(p), this.attr("class", b.join(" "));
              }
              return this;
            },
            removeClass: function (p) {
              return (
                this.hasClass(p) &&
                  this.attr(
                    "class",
                    this.classes()
                      .filter(function (b) {
                        return b != p;
                      })
                      .join(" ")
                  ),
                this
              );
            },
            toggleClass: function (p) {
              return this.hasClass(p) ? this.removeClass(p) : this.addClass(p);
            },
            reference: function (p) {
              return n.get(this.attr(p));
            },
            parent: function (p) {
              var b = this;
              if (!b.node.parentNode) return null;
              if (((b = n.adopt(b.node.parentNode)), !p)) return b;
              for (; b && b.node instanceof M.SVGElement; ) {
                if (typeof p == "string" ? b.matches(p) : b instanceof p)
                  return b;
                if (
                  !b.node.parentNode ||
                  b.node.parentNode.nodeName == "#document"
                )
                  return null;
                b = n.adopt(b.node.parentNode);
              }
            },
            doc: function () {
              return this instanceof n.Doc ? this : this.parent(n.Doc);
            },
            parents: function (p) {
              var b = [],
                A = this;
              do {
                if (!(A = A.parent(p)) || !A.node) break;
                b.push(A);
              } while (A.parent);
              return b;
            },
            matches: function (p) {
              return (function (b, A) {
                return (
                  b.matches ||
                  b.matchesSelector ||
                  b.msMatchesSelector ||
                  b.mozMatchesSelector ||
                  b.webkitMatchesSelector ||
                  b.oMatchesSelector
                ).call(b, A);
              })(this.node, p);
            },
            native: function () {
              return this.node;
            },
            svg: function (p) {
              var b = i.createElement("svg");
              if (!(p && this instanceof n.Parent))
                return (
                  b.appendChild((p = i.createElement("svg"))),
                  this.writeDataToDom(),
                  p.appendChild(this.node.cloneNode(!0)),
                  b.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "")
                );
              b.innerHTML =
                "<svg>" +
                p
                  .replace(/\n/, "")
                  .replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") +
                "</svg>";
              for (var A = 0, R = b.firstChild.childNodes.length; A < R; A++)
                this.node.appendChild(b.firstChild.firstChild);
              return this;
            },
            writeDataToDom: function () {
              return (
                (this.each || this.lines) &&
                  (this.each ? this : this.lines()).each(function () {
                    this.writeDataToDom();
                  }),
                this.node.removeAttribute("svgjs:data"),
                Object.keys(this.dom).length &&
                  this.node.setAttribute(
                    "svgjs:data",
                    JSON.stringify(this.dom)
                  ),
                this
              );
            },
            setData: function (p) {
              return (this.dom = p), this;
            },
            is: function (p) {
              return (function (b, A) {
                return b instanceof A;
              })(this, p);
            },
          },
        })),
        (n.easing = {
          "-": function (p) {
            return p;
          },
          "<>": function (p) {
            return -Math.cos(p * Math.PI) / 2 + 0.5;
          },
          ">": function (p) {
            return Math.sin((p * Math.PI) / 2);
          },
          "<": function (p) {
            return 1 - Math.cos((p * Math.PI) / 2);
          },
        }),
        (n.morph = function (p) {
          return function (b, A) {
            return new n.MorphObj(b, A).at(p);
          };
        }),
        (n.Situation = n.invent({
          create: function (p) {
            (this.init = !1),
              (this.reversed = !1),
              (this.reversing = !1),
              (this.duration = new n.Number(p.duration).valueOf()),
              (this.delay = new n.Number(p.delay).valueOf()),
              (this.start = +new Date() + this.delay),
              (this.finish = this.start + this.duration),
              (this.ease = p.ease),
              (this.loop = 0),
              (this.loops = !1),
              (this.animations = {}),
              (this.attrs = {}),
              (this.styles = {}),
              (this.transforms = []),
              (this.once = {});
          },
        })),
        (n.FX = n.invent({
          create: function (p) {
            (this._target = p),
              (this.situations = []),
              (this.active = !1),
              (this.situation = null),
              (this.paused = !1),
              (this.lastPos = 0),
              (this.pos = 0),
              (this.absPos = 0),
              (this._speed = 1);
          },
          extend: {
            animate: function (p, b, A) {
              c(p) === "object" &&
                ((b = p.ease), (A = p.delay), (p = p.duration));
              var R = new n.Situation({
                duration: p || 1e3,
                delay: A || 0,
                ease: n.easing[b || "-"] || b,
              });
              return this.queue(R), this;
            },
            target: function (p) {
              return p && p instanceof n.Element
                ? ((this._target = p), this)
                : this._target;
            },
            timeToAbsPos: function (p) {
              return (
                (p - this.situation.start) /
                (this.situation.duration / this._speed)
              );
            },
            absPosToTime: function (p) {
              return (
                (this.situation.duration / this._speed) * p +
                this.situation.start
              );
            },
            startAnimFrame: function () {
              this.stopAnimFrame(),
                (this.animationFrame = M.requestAnimationFrame(
                  function () {
                    this.step();
                  }.bind(this)
                ));
            },
            stopAnimFrame: function () {
              M.cancelAnimationFrame(this.animationFrame);
            },
            start: function () {
              return (
                !this.active &&
                  this.situation &&
                  ((this.active = !0), this.startCurrent()),
                this
              );
            },
            startCurrent: function () {
              return (
                (this.situation.start =
                  +new Date() + this.situation.delay / this._speed),
                (this.situation.finish =
                  this.situation.start + this.situation.duration / this._speed),
                this.initAnimations().step()
              );
            },
            queue: function (p) {
              return (
                (typeof p == "function" || p instanceof n.Situation) &&
                  this.situations.push(p),
                this.situation || (this.situation = this.situations.shift()),
                this
              );
            },
            dequeue: function () {
              return (
                this.stop(),
                (this.situation = this.situations.shift()),
                this.situation &&
                  (this.situation instanceof n.Situation
                    ? this.start()
                    : this.situation.call(this)),
                this
              );
            },
            initAnimations: function () {
              var p,
                b = this.situation;
              if (b.init) return this;
              for (var A in b.animations) {
                (p = this.target()[A]()),
                  Array.isArray(p) || (p = [p]),
                  Array.isArray(b.animations[A]) ||
                    (b.animations[A] = [b.animations[A]]);
                for (var R = p.length; R--; )
                  b.animations[A][R] instanceof n.Number &&
                    (p[R] = new n.Number(p[R])),
                    (b.animations[A][R] = p[R].morph(b.animations[A][R]));
              }
              for (var A in b.attrs)
                b.attrs[A] = new n.MorphObj(this.target().attr(A), b.attrs[A]);
              for (var A in b.styles)
                b.styles[A] = new n.MorphObj(
                  this.target().style(A),
                  b.styles[A]
                );
              return (
                (b.initialTransformation = this.target().matrixify()),
                (b.init = !0),
                this
              );
            },
            clearQueue: function () {
              return (this.situations = []), this;
            },
            clearCurrent: function () {
              return (this.situation = null), this;
            },
            stop: function (p, b) {
              var A = this.active;
              return (
                (this.active = !1),
                b && this.clearQueue(),
                p &&
                  this.situation &&
                  (!A && this.startCurrent(), this.atEnd()),
                this.stopAnimFrame(),
                this.clearCurrent()
              );
            },
            after: function (p) {
              var b = this.last();
              return (
                this.target().on("finished.fx", function A(R) {
                  R.detail.situation == b &&
                    (p.call(this, b), this.off("finished.fx", A));
                }),
                this._callStart()
              );
            },
            during: function (p) {
              var b = this.last(),
                A = function (R) {
                  R.detail.situation == b &&
                    p.call(
                      this,
                      R.detail.pos,
                      n.morph(R.detail.pos),
                      R.detail.eased,
                      b
                    );
                };
              return (
                this.target().off("during.fx", A).on("during.fx", A),
                this.after(function () {
                  this.off("during.fx", A);
                }),
                this._callStart()
              );
            },
            afterAll: function (p) {
              var b = function A(R) {
                p.call(this), this.off("allfinished.fx", A);
              };
              return (
                this.target().off("allfinished.fx", b).on("allfinished.fx", b),
                this._callStart()
              );
            },
            last: function () {
              return this.situations.length
                ? this.situations[this.situations.length - 1]
                : this.situation;
            },
            add: function (p, b, A) {
              return (this.last()[A || "animations"][p] = b), this._callStart();
            },
            step: function (p) {
              var b, A, R;
              p || (this.absPos = this.timeToAbsPos(+new Date())),
                this.situation.loops !== !1
                  ? ((b = Math.max(this.absPos, 0)),
                    (A = Math.floor(b)),
                    this.situation.loops === !0 || A < this.situation.loops
                      ? ((this.pos = b - A),
                        (R = this.situation.loop),
                        (this.situation.loop = A))
                      : ((this.absPos = this.situation.loops),
                        (this.pos = 1),
                        (R = this.situation.loop - 1),
                        (this.situation.loop = this.situation.loops)),
                    this.situation.reversing &&
                      (this.situation.reversed =
                        this.situation.reversed !=
                        !!((this.situation.loop - R) % 2)))
                  : ((this.absPos = Math.min(this.absPos, 1)),
                    (this.pos = this.absPos)),
                this.pos < 0 && (this.pos = 0),
                this.situation.reversed && (this.pos = 1 - this.pos);
              var F = this.situation.ease(this.pos);
              for (var _ in this.situation.once)
                _ > this.lastPos &&
                  _ <= F &&
                  (this.situation.once[_].call(this.target(), this.pos, F),
                  delete this.situation.once[_]);
              return (
                this.active &&
                  this.target().fire("during", {
                    pos: this.pos,
                    eased: F,
                    fx: this,
                    situation: this.situation,
                  }),
                this.situation
                  ? (this.eachAt(),
                    (this.pos == 1 && !this.situation.reversed) ||
                    (this.situation.reversed && this.pos == 0)
                      ? (this.stopAnimFrame(),
                        this.target().fire("finished", {
                          fx: this,
                          situation: this.situation,
                        }),
                        this.situations.length ||
                          (this.target().fire("allfinished"),
                          this.situations.length ||
                            (this.target().off(".fx"), (this.active = !1))),
                        this.active ? this.dequeue() : this.clearCurrent())
                      : !this.paused && this.active && this.startAnimFrame(),
                    (this.lastPos = F),
                    this)
                  : this
              );
            },
            eachAt: function () {
              var p,
                b = this,
                A = this.target(),
                R = this.situation;
              for (var F in R.animations)
                (p = [].concat(R.animations[F]).map(function (W) {
                  return typeof W != "string" && W.at
                    ? W.at(R.ease(b.pos), b.pos)
                    : W;
                })),
                  A[F].apply(A, p);
              for (var F in R.attrs)
                (p = [F].concat(R.attrs[F]).map(function (Z) {
                  return typeof Z != "string" && Z.at
                    ? Z.at(R.ease(b.pos), b.pos)
                    : Z;
                })),
                  A.attr.apply(A, p);
              for (var F in R.styles)
                (p = [F].concat(R.styles[F]).map(function (Z) {
                  return typeof Z != "string" && Z.at
                    ? Z.at(R.ease(b.pos), b.pos)
                    : Z;
                })),
                  A.style.apply(A, p);
              if (R.transforms.length) {
                (p = R.initialTransformation), (F = 0);
                for (var _ = R.transforms.length; F < _; F++) {
                  var G = R.transforms[F];
                  G instanceof n.Matrix
                    ? (p = G.relative
                        ? p.multiply(
                            new n.Matrix().morph(G).at(R.ease(this.pos))
                          )
                        : p.morph(G).at(R.ease(this.pos)))
                    : (G.relative || G.undo(p.extract()),
                      (p = p.multiply(G.at(R.ease(this.pos)))));
                }
                A.matrix(p);
              }
              return this;
            },
            once: function (p, b, A) {
              var R = this.last();
              return A || (p = R.ease(p)), (R.once[p] = b), this;
            },
            _callStart: function () {
              return (
                setTimeout(
                  function () {
                    this.start();
                  }.bind(this),
                  0
                ),
                this
              );
            },
          },
          parent: n.Element,
          construct: {
            animate: function (p, b, A) {
              return (this.fx || (this.fx = new n.FX(this))).animate(p, b, A);
            },
            delay: function (p) {
              return (this.fx || (this.fx = new n.FX(this))).delay(p);
            },
            stop: function (p, b) {
              return this.fx && this.fx.stop(p, b), this;
            },
            finish: function () {
              return this.fx && this.fx.finish(), this;
            },
          },
        })),
        (n.MorphObj = n.invent({
          create: function (p, b) {
            return n.Color.isColor(b)
              ? new n.Color(p).morph(b)
              : n.regex.delimiter.test(p)
              ? n.regex.pathLetters.test(p)
                ? new n.PathArray(p).morph(b)
                : new n.Array(p).morph(b)
              : n.regex.numberAndUnit.test(b)
              ? new n.Number(p).morph(b)
              : ((this.value = p), void (this.destination = b));
          },
          extend: {
            at: function (p, b) {
              return b < 1 ? this.value : this.destination;
            },
            valueOf: function () {
              return this.value;
            },
          },
        })),
        n.extend(n.FX, {
          attr: function (p, b, A) {
            if (c(p) === "object") for (var R in p) this.attr(R, p[R]);
            else this.add(p, b, "attrs");
            return this;
          },
          plot: function (p, b, A, R) {
            return arguments.length == 4
              ? this.plot([p, b, A, R])
              : this.add("plot", new (this.target().morphArray)(p));
          },
        }),
        (n.Box = n.invent({
          create: function (p, b, A, R) {
            if (!(c(p) !== "object" || p instanceof n.Element))
              return n.Box.call(
                this,
                p.left != null ? p.left : p.x,
                p.top != null ? p.top : p.y,
                p.width,
                p.height
              );
            var F;
            arguments.length == 4 &&
              ((this.x = p), (this.y = b), (this.width = A), (this.height = R)),
              (F = this).x == null &&
                ((F.x = 0), (F.y = 0), (F.width = 0), (F.height = 0)),
              (F.w = F.width),
              (F.h = F.height),
              (F.x2 = F.x + F.width),
              (F.y2 = F.y + F.height),
              (F.cx = F.x + F.width / 2),
              (F.cy = F.y + F.height / 2);
          },
        })),
        (n.BBox = n.invent({
          create: function (p) {
            if (
              (n.Box.apply(this, [].slice.call(arguments)),
              p instanceof n.Element)
            ) {
              var b;
              try {
                if (!i.documentElement.contains) {
                  for (var A = p.node; A.parentNode; ) A = A.parentNode;
                  if (A != i) throw new Error("Element not in the dom");
                }
                b = p.node.getBBox();
              } catch {
                if (p instanceof n.Shape) {
                  n.parser.draw || n.prepare();
                  var R = p.clone(n.parser.draw.instance).show();
                  R &&
                    R.node &&
                    typeof R.node.getBBox == "function" &&
                    (b = R.node.getBBox()),
                    R && typeof R.remove == "function" && R.remove();
                } else
                  b = {
                    x: p.node.clientLeft,
                    y: p.node.clientTop,
                    width: p.node.clientWidth,
                    height: p.node.clientHeight,
                  };
              }
              n.Box.call(this, b);
            }
          },
          inherit: n.Box,
          parent: n.Element,
          construct: {
            bbox: function () {
              return new n.BBox(this);
            },
          },
        })),
        (n.BBox.prototype.constructor = n.BBox),
        (n.Matrix = n.invent({
          create: function (p) {
            var b = C([1, 0, 0, 1, 0, 0]);
            p =
              p === null
                ? b
                : p instanceof n.Element
                ? p.matrixify()
                : typeof p == "string"
                ? C(p.split(n.regex.delimiter).map(parseFloat))
                : arguments.length == 6
                ? C([].slice.call(arguments))
                : Array.isArray(p)
                ? C(p)
                : p && c(p) === "object"
                ? p
                : b;
            for (var A = I.length - 1; A >= 0; --A)
              this[I[A]] = p[I[A]] != null ? p[I[A]] : b[I[A]];
          },
          extend: {
            extract: function () {
              var p = k(this, 0, 1);
              k(this, 1, 0);
              var b = (180 / Math.PI) * Math.atan2(p.y, p.x) - 90;
              return {
                x: this.e,
                y: this.f,
                transformedX:
                  (this.e * Math.cos((b * Math.PI) / 180) +
                    this.f * Math.sin((b * Math.PI) / 180)) /
                  Math.sqrt(this.a * this.a + this.b * this.b),
                transformedY:
                  (this.f * Math.cos((b * Math.PI) / 180) +
                    this.e * Math.sin((-b * Math.PI) / 180)) /
                  Math.sqrt(this.c * this.c + this.d * this.d),
                rotation: b,
                a: this.a,
                b: this.b,
                c: this.c,
                d: this.d,
                e: this.e,
                f: this.f,
                matrix: new n.Matrix(this),
              };
            },
            clone: function () {
              return new n.Matrix(this);
            },
            morph: function (p) {
              return (this.destination = new n.Matrix(p)), this;
            },
            multiply: function (p) {
              return new n.Matrix(
                this.native().multiply(
                  (function (b) {
                    return b instanceof n.Matrix || (b = new n.Matrix(b)), b;
                  })(p).native()
                )
              );
            },
            inverse: function () {
              return new n.Matrix(this.native().inverse());
            },
            translate: function (p, b) {
              return new n.Matrix(this.native().translate(p || 0, b || 0));
            },
            native: function () {
              for (
                var p = n.parser.native.createSVGMatrix(), b = I.length - 1;
                b >= 0;
                b--
              )
                p[I[b]] = this[I[b]];
              return p;
            },
            toString: function () {
              return (
                "matrix(" +
                E(this.a) +
                "," +
                E(this.b) +
                "," +
                E(this.c) +
                "," +
                E(this.d) +
                "," +
                E(this.e) +
                "," +
                E(this.f) +
                ")"
              );
            },
          },
          parent: n.Element,
          construct: {
            ctm: function () {
              return new n.Matrix(this.node.getCTM());
            },
            screenCTM: function () {
              if (this instanceof n.Nested) {
                var p = this.rect(1, 1),
                  b = p.node.getScreenCTM();
                return p.remove(), new n.Matrix(b);
              }
              return new n.Matrix(this.node.getScreenCTM());
            },
          },
        })),
        (n.Point = n.invent({
          create: function (p, b) {
            var A;
            (A = Array.isArray(p)
              ? { x: p[0], y: p[1] }
              : c(p) === "object"
              ? { x: p.x, y: p.y }
              : p != null
              ? { x: p, y: b ?? p }
              : { x: 0, y: 0 }),
              (this.x = A.x),
              (this.y = A.y);
          },
          extend: {
            clone: function () {
              return new n.Point(this);
            },
            morph: function (p, b) {
              return (this.destination = new n.Point(p, b)), this;
            },
          },
        })),
        n.extend(n.Element, {
          point: function (p, b) {
            return new n.Point(p, b).transform(this.screenCTM().inverse());
          },
        }),
        n.extend(n.Element, {
          attr: function (p, b, A) {
            if (p == null) {
              for (
                p = {}, A = (b = this.node.attributes).length - 1;
                A >= 0;
                A--
              )
                p[b[A].nodeName] = n.regex.isNumber.test(b[A].nodeValue)
                  ? parseFloat(b[A].nodeValue)
                  : b[A].nodeValue;
              return p;
            }
            if (c(p) === "object") for (var R in p) this.attr(R, p[R]);
            else if (b === null) this.node.removeAttribute(p);
            else {
              if (b == null)
                return (b = this.node.getAttribute(p)) == null
                  ? n.defaults.attrs[p]
                  : n.regex.isNumber.test(b)
                  ? parseFloat(b)
                  : b;
              p == "stroke-width"
                ? this.attr("stroke", parseFloat(b) > 0 ? this._stroke : null)
                : p == "stroke" && (this._stroke = b),
                (p != "fill" && p != "stroke") ||
                  (n.regex.isImage.test(b) &&
                    (b = this.doc().defs().image(b, 0, 0)),
                  b instanceof n.Image &&
                    (b = this.doc()
                      .defs()
                      .pattern(0, 0, function () {
                        this.add(b);
                      }))),
                typeof b == "number"
                  ? (b = new n.Number(b))
                  : n.Color.isColor(b)
                  ? (b = new n.Color(b))
                  : Array.isArray(b) && (b = new n.Array(b)),
                p == "leading"
                  ? this.leading && this.leading(b)
                  : typeof A == "string"
                  ? this.node.setAttributeNS(A, p, b.toString())
                  : this.node.setAttribute(p, b.toString()),
                !this.rebuild ||
                  (p != "font-size" && p != "x") ||
                  this.rebuild(p, b);
            }
            return this;
          },
        }),
        n.extend(n.Element, {
          transform: function (p, b) {
            var A;
            return c(p) !== "object"
              ? ((A = new n.Matrix(this).extract()),
                typeof p == "string" ? A[p] : A)
              : ((A = new n.Matrix(this)),
                (b = !!b || !!p.relative),
                p.a != null &&
                  (A = b ? A.multiply(new n.Matrix(p)) : new n.Matrix(p)),
                this.attr("transform", A));
          },
        }),
        n.extend(n.Element, {
          untransform: function () {
            return this.attr("transform", null);
          },
          matrixify: function () {
            return (this.attr("transform") || "")
              .split(n.regex.transforms)
              .slice(0, -1)
              .map(function (p) {
                var b = p.trim().split("(");
                return [
                  b[0],
                  b[1].split(n.regex.delimiter).map(function (A) {
                    return parseFloat(A);
                  }),
                ];
              })
              .reduce(function (p, b) {
                return b[0] == "matrix"
                  ? p.multiply(C(b[1]))
                  : p[b[0]].apply(p, b[1]);
              }, new n.Matrix());
          },
          toParent: function (p) {
            if (this == p) return this;
            var b = this.screenCTM(),
              A = p.screenCTM().inverse();
            return this.addTo(p).untransform().transform(A.multiply(b)), this;
          },
          toDoc: function () {
            return this.toParent(this.doc());
          },
        }),
        (n.Transformation = n.invent({
          create: function (p, b) {
            if (arguments.length > 1 && typeof b != "boolean")
              return this.constructor.call(this, [].slice.call(arguments));
            if (Array.isArray(p))
              for (var A = 0, R = this.arguments.length; A < R; ++A)
                this[this.arguments[A]] = p[A];
            else if (p && c(p) === "object")
              for (A = 0, R = this.arguments.length; A < R; ++A)
                this[this.arguments[A]] = p[this.arguments[A]];
            (this.inversed = !1), b === !0 && (this.inversed = !0);
          },
        })),
        (n.Translate = n.invent({
          parent: n.Matrix,
          inherit: n.Transformation,
          create: function (p, b) {
            this.constructor.apply(this, [].slice.call(arguments));
          },
          extend: {
            arguments: ["transformedX", "transformedY"],
            method: "translate",
          },
        })),
        n.extend(n.Element, {
          style: function (p, b) {
            if (arguments.length == 0) return this.node.style.cssText || "";
            if (arguments.length < 2)
              if (c(p) === "object") for (var A in p) this.style(A, p[A]);
              else {
                if (!n.regex.isCss.test(p)) return this.node.style[g(p)];
                for (
                  p = p
                    .split(/\s*;\s*/)
                    .filter(function (R) {
                      return !!R;
                    })
                    .map(function (R) {
                      return R.split(/\s*:\s*/);
                    });
                  (b = p.pop());

                )
                  this.style(b[0], b[1]);
              }
            else
              this.node.style[g(p)] =
                b === null || n.regex.isBlank.test(b) ? "" : b;
            return this;
          },
        }),
        (n.Parent = n.invent({
          create: function (p) {
            this.constructor.call(this, p);
          },
          inherit: n.Element,
          extend: {
            children: function () {
              return n.utils.map(
                n.utils.filterSVGElements(this.node.childNodes),
                function (p) {
                  return n.adopt(p);
                }
              );
            },
            add: function (p, b) {
              return (
                b == null
                  ? this.node.appendChild(p.node)
                  : p.node != this.node.childNodes[b] &&
                    this.node.insertBefore(p.node, this.node.childNodes[b]),
                this
              );
            },
            put: function (p, b) {
              return this.add(p, b), p;
            },
            has: function (p) {
              return this.index(p) >= 0;
            },
            index: function (p) {
              return [].slice.call(this.node.childNodes).indexOf(p.node);
            },
            get: function (p) {
              return n.adopt(this.node.childNodes[p]);
            },
            first: function () {
              return this.get(0);
            },
            last: function () {
              return this.get(this.node.childNodes.length - 1);
            },
            each: function (p, b) {
              for (var A = this.children(), R = 0, F = A.length; R < F; R++)
                A[R] instanceof n.Element && p.apply(A[R], [R, A]),
                  b && A[R] instanceof n.Container && A[R].each(p, b);
              return this;
            },
            removeElement: function (p) {
              return this.node.removeChild(p.node), this;
            },
            clear: function () {
              for (; this.node.hasChildNodes(); )
                this.node.removeChild(this.node.lastChild);
              return delete this._defs, this;
            },
            defs: function () {
              return this.doc().defs();
            },
          },
        })),
        n.extend(n.Parent, {
          ungroup: function (p, b) {
            return (
              b === 0 ||
                this instanceof n.Defs ||
                this.node == n.parser.draw ||
                ((p =
                  p || (this instanceof n.Doc ? this : this.parent(n.Parent))),
                (b = b || 1 / 0),
                this.each(function () {
                  return this instanceof n.Defs
                    ? this
                    : this instanceof n.Parent
                    ? this.ungroup(p, b - 1)
                    : this.toParent(p);
                }),
                this.node.firstChild || this.remove()),
              this
            );
          },
          flatten: function (p, b) {
            return this.ungroup(p, b);
          },
        }),
        (n.Container = n.invent({
          create: function (p) {
            this.constructor.call(this, p);
          },
          inherit: n.Parent,
        })),
        (n.ViewBox = n.invent({ parent: n.Container, construct: {} })),
        [
          "click",
          "dblclick",
          "mousedown",
          "mouseup",
          "mouseover",
          "mouseout",
          "mousemove",
          "touchstart",
          "touchmove",
          "touchleave",
          "touchend",
          "touchcancel",
        ].forEach(function (p) {
          n.Element.prototype[p] = function (b) {
            return n.on(this.node, p, b), this;
          };
        }),
        (n.listeners = []),
        (n.handlerMap = []),
        (n.listenerId = 0),
        (n.on = function (p, b, A, R, F) {
          var _ = A.bind(R || p.instance || p),
            G = (n.handlerMap.indexOf(p) + 1 || n.handlerMap.push(p)) - 1,
            W = b.split(".")[0],
            Z = b.split(".")[1] || "*";
          (n.listeners[G] = n.listeners[G] || {}),
            (n.listeners[G][W] = n.listeners[G][W] || {}),
            (n.listeners[G][W][Z] = n.listeners[G][W][Z] || {}),
            A._svgjsListenerId || (A._svgjsListenerId = ++n.listenerId),
            (n.listeners[G][W][Z][A._svgjsListenerId] = _),
            p.addEventListener(W, _, F || { passive: !0 });
        }),
        (n.off = function (p, b, A) {
          var R = n.handlerMap.indexOf(p),
            F = b && b.split(".")[0],
            _ = b && b.split(".")[1],
            G = "";
          if (R != -1)
            if (A) {
              if ((typeof A == "function" && (A = A._svgjsListenerId), !A))
                return;
              n.listeners[R][F] &&
                n.listeners[R][F][_ || "*"] &&
                (p.removeEventListener(F, n.listeners[R][F][_ || "*"][A], !1),
                delete n.listeners[R][F][_ || "*"][A]);
            } else if (_ && F) {
              if (n.listeners[R][F] && n.listeners[R][F][_]) {
                for (var W in n.listeners[R][F][_])
                  n.off(p, [F, _].join("."), W);
                delete n.listeners[R][F][_];
              }
            } else if (_)
              for (var Z in n.listeners[R])
                for (var G in n.listeners[R][Z])
                  _ === G && n.off(p, [Z, _].join("."));
            else if (F) {
              if (n.listeners[R][F]) {
                for (var G in n.listeners[R][F]) n.off(p, [F, G].join("."));
                delete n.listeners[R][F];
              }
            } else {
              for (var Z in n.listeners[R]) n.off(p, Z);
              delete n.listeners[R], delete n.handlerMap[R];
            }
        }),
        n.extend(n.Element, {
          on: function (p, b, A, R) {
            return n.on(this.node, p, b, A, R), this;
          },
          off: function (p, b) {
            return n.off(this.node, p, b), this;
          },
          fire: function (p, b) {
            return (
              p instanceof M.Event
                ? this.node.dispatchEvent(p)
                : this.node.dispatchEvent(
                    (p = new n.CustomEvent(p, { detail: b, cancelable: !0 }))
                  ),
              (this._event = p),
              this
            );
          },
          event: function () {
            return this._event;
          },
        }),
        (n.Defs = n.invent({ create: "defs", inherit: n.Container })),
        (n.G = n.invent({
          create: "g",
          inherit: n.Container,
          extend: {
            x: function (p) {
              return p == null
                ? this.transform("x")
                : this.transform({ x: p - this.x() }, !0);
            },
          },
          construct: {
            group: function () {
              return this.put(new n.G());
            },
          },
        })),
        (n.Doc = n.invent({
          create: function (p) {
            p &&
              ((p = typeof p == "string" ? i.getElementById(p) : p).nodeName ==
              "svg"
                ? this.constructor.call(this, p)
                : (this.constructor.call(this, n.create("svg")),
                  p.appendChild(this.node),
                  this.size("100%", "100%")),
              this.namespace().defs());
          },
          inherit: n.Container,
          extend: {
            namespace: function () {
              return this.attr({ xmlns: n.ns, version: "1.1" })
                .attr("xmlns:xlink", n.xlink, n.xmlns)
                .attr("xmlns:svgjs", n.svgjs, n.xmlns);
            },
            defs: function () {
              var p;
              return (
                this._defs ||
                  ((p = this.node.getElementsByTagName("defs")[0])
                    ? (this._defs = n.adopt(p))
                    : (this._defs = new n.Defs()),
                  this.node.appendChild(this._defs.node)),
                this._defs
              );
            },
            parent: function () {
              return this.node.parentNode &&
                this.node.parentNode.nodeName != "#document"
                ? this.node.parentNode
                : null;
            },
            remove: function () {
              return (
                this.parent() && this.parent().removeChild(this.node), this
              );
            },
            clear: function () {
              for (; this.node.hasChildNodes(); )
                this.node.removeChild(this.node.lastChild);
              return (
                delete this._defs,
                n.parser.draw &&
                  !n.parser.draw.parentNode &&
                  this.node.appendChild(n.parser.draw),
                this
              );
            },
            clone: function (p) {
              this.writeDataToDom();
              var b = this.node,
                A = P(b.cloneNode(!0));
              return (
                p
                  ? (p.node || p).appendChild(A.node)
                  : b.parentNode.insertBefore(A.node, b.nextSibling),
                A
              );
            },
          },
        })),
        n.extend(n.Element, {}),
        (n.Gradient = n.invent({
          create: function (p) {
            this.constructor.call(this, n.create(p + "Gradient")),
              (this.type = p);
          },
          inherit: n.Container,
          extend: {
            at: function (p, b, A) {
              return this.put(new n.Stop()).update(p, b, A);
            },
            update: function (p) {
              return (
                this.clear(), typeof p == "function" && p.call(this, this), this
              );
            },
            fill: function () {
              return "url(#" + this.id() + ")";
            },
            toString: function () {
              return this.fill();
            },
            attr: function (p, b, A) {
              return (
                p == "transform" && (p = "gradientTransform"),
                n.Container.prototype.attr.call(this, p, b, A)
              );
            },
          },
          construct: {
            gradient: function (p, b) {
              return this.defs().gradient(p, b);
            },
          },
        })),
        n.extend(n.Gradient, n.FX, {
          from: function (p, b) {
            return (this._target || this).type == "radial"
              ? this.attr({ fx: new n.Number(p), fy: new n.Number(b) })
              : this.attr({ x1: new n.Number(p), y1: new n.Number(b) });
          },
          to: function (p, b) {
            return (this._target || this).type == "radial"
              ? this.attr({ cx: new n.Number(p), cy: new n.Number(b) })
              : this.attr({ x2: new n.Number(p), y2: new n.Number(b) });
          },
        }),
        n.extend(n.Defs, {
          gradient: function (p, b) {
            return this.put(new n.Gradient(p)).update(b);
          },
        }),
        (n.Stop = n.invent({
          create: "stop",
          inherit: n.Element,
          extend: {
            update: function (p) {
              return (
                (typeof p == "number" || p instanceof n.Number) &&
                  (p = {
                    offset: arguments[0],
                    color: arguments[1],
                    opacity: arguments[2],
                  }),
                p.opacity != null && this.attr("stop-opacity", p.opacity),
                p.color != null && this.attr("stop-color", p.color),
                p.offset != null && this.attr("offset", new n.Number(p.offset)),
                this
              );
            },
          },
        })),
        (n.Pattern = n.invent({
          create: "pattern",
          inherit: n.Container,
          extend: {
            fill: function () {
              return "url(#" + this.id() + ")";
            },
            update: function (p) {
              return (
                this.clear(), typeof p == "function" && p.call(this, this), this
              );
            },
            toString: function () {
              return this.fill();
            },
            attr: function (p, b, A) {
              return (
                p == "transform" && (p = "patternTransform"),
                n.Container.prototype.attr.call(this, p, b, A)
              );
            },
          },
          construct: {
            pattern: function (p, b, A) {
              return this.defs().pattern(p, b, A);
            },
          },
        })),
        n.extend(n.Defs, {
          pattern: function (p, b, A) {
            return this.put(new n.Pattern())
              .update(A)
              .attr({
                x: 0,
                y: 0,
                width: p,
                height: b,
                patternUnits: "userSpaceOnUse",
              });
          },
        }),
        (n.Shape = n.invent({
          create: function (p) {
            this.constructor.call(this, p);
          },
          inherit: n.Element,
        })),
        (n.Symbol = n.invent({
          create: "symbol",
          inherit: n.Container,
          construct: {
            symbol: function () {
              return this.put(new n.Symbol());
            },
          },
        })),
        (n.Use = n.invent({
          create: "use",
          inherit: n.Shape,
          extend: {
            element: function (p, b) {
              return this.attr("href", (b || "") + "#" + p, n.xlink);
            },
          },
          construct: {
            use: function (p, b) {
              return this.put(new n.Use()).element(p, b);
            },
          },
        })),
        (n.Rect = n.invent({
          create: "rect",
          inherit: n.Shape,
          construct: {
            rect: function (p, b) {
              return this.put(new n.Rect()).size(p, b);
            },
          },
        })),
        (n.Circle = n.invent({
          create: "circle",
          inherit: n.Shape,
          construct: {
            circle: function (p) {
              return this.put(new n.Circle())
                .rx(new n.Number(p).divide(2))
                .move(0, 0);
            },
          },
        })),
        n.extend(n.Circle, n.FX, {
          rx: function (p) {
            return this.attr("r", p);
          },
          ry: function (p) {
            return this.rx(p);
          },
        }),
        (n.Ellipse = n.invent({
          create: "ellipse",
          inherit: n.Shape,
          construct: {
            ellipse: function (p, b) {
              return this.put(new n.Ellipse()).size(p, b).move(0, 0);
            },
          },
        })),
        n.extend(n.Ellipse, n.Rect, n.FX, {
          rx: function (p) {
            return this.attr("rx", p);
          },
          ry: function (p) {
            return this.attr("ry", p);
          },
        }),
        n.extend(n.Circle, n.Ellipse, {
          x: function (p) {
            return p == null ? this.cx() - this.rx() : this.cx(p + this.rx());
          },
          y: function (p) {
            return p == null ? this.cy() - this.ry() : this.cy(p + this.ry());
          },
          cx: function (p) {
            return p == null ? this.attr("cx") : this.attr("cx", p);
          },
          cy: function (p) {
            return p == null ? this.attr("cy") : this.attr("cy", p);
          },
          width: function (p) {
            return p == null
              ? 2 * this.rx()
              : this.rx(new n.Number(p).divide(2));
          },
          height: function (p) {
            return p == null
              ? 2 * this.ry()
              : this.ry(new n.Number(p).divide(2));
          },
          size: function (p, b) {
            var A = w(this, p, b);
            return this.rx(new n.Number(A.width).divide(2)).ry(
              new n.Number(A.height).divide(2)
            );
          },
        }),
        (n.Line = n.invent({
          create: "line",
          inherit: n.Shape,
          extend: {
            array: function () {
              return new n.PointArray([
                [this.attr("x1"), this.attr("y1")],
                [this.attr("x2"), this.attr("y2")],
              ]);
            },
            plot: function (p, b, A, R) {
              return p == null
                ? this.array()
                : ((p =
                    b !== void 0
                      ? { x1: p, y1: b, x2: A, y2: R }
                      : new n.PointArray(p).toLine()),
                  this.attr(p));
            },
            move: function (p, b) {
              return this.attr(this.array().move(p, b).toLine());
            },
            size: function (p, b) {
              var A = w(this, p, b);
              return this.attr(this.array().size(A.width, A.height).toLine());
            },
          },
          construct: {
            line: function (p, b, A, R) {
              return n.Line.prototype.plot.apply(
                this.put(new n.Line()),
                p != null ? [p, b, A, R] : [0, 0, 0, 0]
              );
            },
          },
        })),
        (n.Polyline = n.invent({
          create: "polyline",
          inherit: n.Shape,
          construct: {
            polyline: function (p) {
              return this.put(new n.Polyline()).plot(p || new n.PointArray());
            },
          },
        })),
        (n.Polygon = n.invent({
          create: "polygon",
          inherit: n.Shape,
          construct: {
            polygon: function (p) {
              return this.put(new n.Polygon()).plot(p || new n.PointArray());
            },
          },
        })),
        n.extend(n.Polyline, n.Polygon, {
          array: function () {
            return (
              this._array ||
              (this._array = new n.PointArray(this.attr("points")))
            );
          },
          plot: function (p) {
            return p == null
              ? this.array()
              : this.clear().attr(
                  "points",
                  typeof p == "string" ? p : (this._array = new n.PointArray(p))
                );
          },
          clear: function () {
            return delete this._array, this;
          },
          move: function (p, b) {
            return this.attr("points", this.array().move(p, b));
          },
          size: function (p, b) {
            var A = w(this, p, b);
            return this.attr("points", this.array().size(A.width, A.height));
          },
        }),
        n.extend(n.Line, n.Polyline, n.Polygon, {
          morphArray: n.PointArray,
          x: function (p) {
            return p == null ? this.bbox().x : this.move(p, this.bbox().y);
          },
          y: function (p) {
            return p == null ? this.bbox().y : this.move(this.bbox().x, p);
          },
          width: function (p) {
            var b = this.bbox();
            return p == null ? b.width : this.size(p, b.height);
          },
          height: function (p) {
            var b = this.bbox();
            return p == null ? b.height : this.size(b.width, p);
          },
        }),
        (n.Path = n.invent({
          create: "path",
          inherit: n.Shape,
          extend: {
            morphArray: n.PathArray,
            array: function () {
              return (
                this._array || (this._array = new n.PathArray(this.attr("d")))
              );
            },
            plot: function (p) {
              return p == null
                ? this.array()
                : this.clear().attr(
                    "d",
                    typeof p == "string"
                      ? p
                      : (this._array = new n.PathArray(p))
                  );
            },
            clear: function () {
              return delete this._array, this;
            },
          },
          construct: {
            path: function (p) {
              return this.put(new n.Path()).plot(p || new n.PathArray());
            },
          },
        })),
        (n.Image = n.invent({
          create: "image",
          inherit: n.Shape,
          extend: {
            load: function (p) {
              if (!p) return this;
              var b = this,
                A = new M.Image();
              return (
                n.on(A, "load", function () {
                  n.off(A);
                  var R = b.parent(n.Pattern);
                  R !== null &&
                    (b.width() == 0 &&
                      b.height() == 0 &&
                      b.size(A.width, A.height),
                    R &&
                      R.width() == 0 &&
                      R.height() == 0 &&
                      R.size(b.width(), b.height()),
                    typeof b._loaded == "function" &&
                      b._loaded.call(b, {
                        width: A.width,
                        height: A.height,
                        ratio: A.width / A.height,
                        url: p,
                      }));
                }),
                n.on(A, "error", function (R) {
                  n.off(A),
                    typeof b._error == "function" && b._error.call(b, R);
                }),
                this.attr("href", (A.src = this.src = p), n.xlink)
              );
            },
            loaded: function (p) {
              return (this._loaded = p), this;
            },
            error: function (p) {
              return (this._error = p), this;
            },
          },
          construct: {
            image: function (p, b, A) {
              return this.put(new n.Image())
                .load(p)
                .size(b || 0, A || b || 0);
            },
          },
        })),
        (n.Text = n.invent({
          create: function () {
            this.constructor.call(this, n.create("text")),
              (this.dom.leading = new n.Number(1.3)),
              (this._rebuild = !0),
              (this._build = !1),
              this.attr("font-family", n.defaults.attrs["font-family"]);
          },
          inherit: n.Shape,
          extend: {
            x: function (p) {
              return p == null ? this.attr("x") : this.attr("x", p);
            },
            text: function (p) {
              if (p === void 0) {
                p = "";
                for (
                  var b = this.node.childNodes, A = 0, R = b.length;
                  A < R;
                  ++A
                )
                  A != 0 &&
                    b[A].nodeType != 3 &&
                    n.adopt(b[A]).dom.newLined == 1 &&
                    (p += `
`),
                    (p += b[A].textContent);
                return p;
              }
              if ((this.clear().build(!0), typeof p == "function"))
                p.call(this, this);
              else {
                A = 0;
                for (
                  var F = (p = p.split(`
`)).length;
                  A < F;
                  A++
                )
                  this.tspan(p[A]).newLine();
              }
              return this.build(!1).rebuild();
            },
            size: function (p) {
              return this.attr("font-size", p).rebuild();
            },
            leading: function (p) {
              return p == null
                ? this.dom.leading
                : ((this.dom.leading = new n.Number(p)), this.rebuild());
            },
            lines: function () {
              var p = ((this.textPath && this.textPath()) || this).node,
                b = n.utils.map(
                  n.utils.filterSVGElements(p.childNodes),
                  function (A) {
                    return n.adopt(A);
                  }
                );
              return new n.Set(b);
            },
            rebuild: function (p) {
              if (
                (typeof p == "boolean" && (this._rebuild = p), this._rebuild)
              ) {
                var b = this,
                  A = 0,
                  R = this.dom.leading * new n.Number(this.attr("font-size"));
                this.lines().each(function () {
                  this.dom.newLined &&
                    (b.textPath() || this.attr("x", b.attr("x")),
                    this.text() ==
                    `
`
                      ? (A += R)
                      : (this.attr("dy", R + A), (A = 0)));
                }),
                  this.fire("rebuild");
              }
              return this;
            },
            build: function (p) {
              return (this._build = !!p), this;
            },
            setData: function (p) {
              return (
                (this.dom = p),
                (this.dom.leading = new n.Number(p.leading || 1.3)),
                this
              );
            },
          },
          construct: {
            text: function (p) {
              return this.put(new n.Text()).text(p);
            },
            plain: function (p) {
              return this.put(new n.Text()).plain(p);
            },
          },
        })),
        (n.Tspan = n.invent({
          create: "tspan",
          inherit: n.Shape,
          extend: {
            text: function (p) {
              return p == null
                ? this.node.textContent +
                    (this.dom.newLined
                      ? `
`
                      : "")
                : (typeof p == "function" ? p.call(this, this) : this.plain(p),
                  this);
            },
            dx: function (p) {
              return this.attr("dx", p);
            },
            dy: function (p) {
              return this.attr("dy", p);
            },
            newLine: function () {
              var p = this.parent(n.Text);
              return (
                (this.dom.newLined = !0),
                this.dy(p.dom.leading * p.attr("font-size")).attr("x", p.x())
              );
            },
          },
        })),
        n.extend(n.Text, n.Tspan, {
          plain: function (p) {
            return (
              this._build === !1 && this.clear(),
              this.node.appendChild(i.createTextNode(p)),
              this
            );
          },
          tspan: function (p) {
            var b = ((this.textPath && this.textPath()) || this).node,
              A = new n.Tspan();
            return (
              this._build === !1 && this.clear(),
              b.appendChild(A.node),
              A.text(p)
            );
          },
          clear: function () {
            for (
              var p = ((this.textPath && this.textPath()) || this).node;
              p.hasChildNodes();

            )
              p.removeChild(p.lastChild);
            return this;
          },
          length: function () {
            return this.node.getComputedTextLength();
          },
        }),
        (n.TextPath = n.invent({
          create: "textPath",
          inherit: n.Parent,
          parent: n.Text,
          construct: {
            morphArray: n.PathArray,
            array: function () {
              var p = this.track();
              return p ? p.array() : null;
            },
            plot: function (p) {
              var b = this.track(),
                A = null;
              return b && (A = b.plot(p)), p == null ? A : this;
            },
            track: function () {
              var p = this.textPath();
              if (p) return p.reference("href");
            },
            textPath: function () {
              if (
                this.node.firstChild &&
                this.node.firstChild.nodeName == "textPath"
              )
                return n.adopt(this.node.firstChild);
            },
          },
        })),
        (n.Nested = n.invent({
          create: function () {
            this.constructor.call(this, n.create("svg")),
              this.style("overflow", "visible");
          },
          inherit: n.Container,
          construct: {
            nested: function () {
              return this.put(new n.Nested());
            },
          },
        }));
      var h = {
        stroke: [
          "color",
          "width",
          "opacity",
          "linecap",
          "linejoin",
          "miterlimit",
          "dasharray",
          "dashoffset",
        ],
        fill: ["color", "opacity", "rule"],
        prefix: function (p, b) {
          return b == "color" ? p : p + "-" + b;
        },
      };
      function d(p, b, A, R) {
        return A + R.replace(n.regex.dots, " .");
      }
      function g(p) {
        return p.toLowerCase().replace(/-(.)/g, function (b, A) {
          return A.toUpperCase();
        });
      }
      function x(p) {
        return p.charAt(0).toUpperCase() + p.slice(1);
      }
      function v(p) {
        var b = p.toString(16);
        return b.length == 1 ? "0" + b : b;
      }
      function w(p, b, A) {
        if (b == null || A == null) {
          var R = p.bbox();
          b == null
            ? (b = (R.width / R.height) * A)
            : A == null && (A = (R.height / R.width) * b);
        }
        return { width: b, height: A };
      }
      function k(p, b, A) {
        return { x: b * p.a + A * p.c + 0, y: b * p.b + A * p.d + 0 };
      }
      function C(p) {
        return { a: p[0], b: p[1], c: p[2], d: p[3], e: p[4], f: p[5] };
      }
      function P(p) {
        for (var b = p.childNodes.length - 1; b >= 0; b--)
          p.childNodes[b] instanceof M.SVGElement && P(p.childNodes[b]);
        return n.adopt(p).id(n.eid(p.nodeName));
      }
      function E(p) {
        return Math.abs(p) > 1e-37 ? p : 0;
      }
      ["fill", "stroke"].forEach(function (p) {
        var b = {};
        (b[p] = function (A) {
          if (A === void 0) return this;
          if (
            typeof A == "string" ||
            n.Color.isRgb(A) ||
            (A && typeof A.fill == "function")
          )
            this.attr(p, A);
          else
            for (var R = h[p].length - 1; R >= 0; R--)
              A[h[p][R]] != null && this.attr(h.prefix(p, h[p][R]), A[h[p][R]]);
          return this;
        }),
          n.extend(n.Element, n.FX, b);
      }),
        n.extend(n.Element, n.FX, {
          translate: function (p, b) {
            return this.transform({ x: p, y: b });
          },
          matrix: function (p) {
            return this.attr(
              "transform",
              new n.Matrix(arguments.length == 6 ? [].slice.call(arguments) : p)
            );
          },
          opacity: function (p) {
            return this.attr("opacity", p);
          },
          dx: function (p) {
            return this.x(
              new n.Number(p).plus(this instanceof n.FX ? 0 : this.x()),
              !0
            );
          },
          dy: function (p) {
            return this.y(
              new n.Number(p).plus(this instanceof n.FX ? 0 : this.y()),
              !0
            );
          },
        }),
        n.extend(n.Path, {
          length: function () {
            return this.node.getTotalLength();
          },
          pointAt: function (p) {
            return this.node.getPointAtLength(p);
          },
        }),
        (n.Set = n.invent({
          create: function (p) {
            Array.isArray(p) ? (this.members = p) : this.clear();
          },
          extend: {
            add: function () {
              for (
                var p = [].slice.call(arguments), b = 0, A = p.length;
                b < A;
                b++
              )
                this.members.push(p[b]);
              return this;
            },
            remove: function (p) {
              var b = this.index(p);
              return b > -1 && this.members.splice(b, 1), this;
            },
            each: function (p) {
              for (var b = 0, A = this.members.length; b < A; b++)
                p.apply(this.members[b], [b, this.members]);
              return this;
            },
            clear: function () {
              return (this.members = []), this;
            },
            length: function () {
              return this.members.length;
            },
            has: function (p) {
              return this.index(p) >= 0;
            },
            index: function (p) {
              return this.members.indexOf(p);
            },
            get: function (p) {
              return this.members[p];
            },
            first: function () {
              return this.get(0);
            },
            last: function () {
              return this.get(this.members.length - 1);
            },
            valueOf: function () {
              return this.members;
            },
          },
          construct: {
            set: function (p) {
              return new n.Set(p);
            },
          },
        })),
        (n.FX.Set = n.invent({
          create: function (p) {
            this.set = p;
          },
        })),
        (n.Set.inherit = function () {
          var p = [];
          for (var b in n.Shape.prototype)
            typeof n.Shape.prototype[b] == "function" &&
              typeof n.Set.prototype[b] != "function" &&
              p.push(b);
          for (var b in (p.forEach(function (R) {
            n.Set.prototype[R] = function () {
              for (var F = 0, _ = this.members.length; F < _; F++)
                this.members[F] &&
                  typeof this.members[F][R] == "function" &&
                  this.members[F][R].apply(this.members[F], arguments);
              return R == "animate"
                ? this.fx || (this.fx = new n.FX.Set(this))
                : this;
            };
          }),
          (p = []),
          n.FX.prototype))
            typeof n.FX.prototype[b] == "function" &&
              typeof n.FX.Set.prototype[b] != "function" &&
              p.push(b);
          p.forEach(function (A) {
            n.FX.Set.prototype[A] = function () {
              for (var R = 0, F = this.set.members.length; R < F; R++)
                this.set.members[R].fx[A].apply(
                  this.set.members[R].fx,
                  arguments
                );
              return this;
            };
          });
        }),
        n.extend(n.Element, {}),
        n.extend(n.Element, {
          remember: function (p, b) {
            if (c(arguments[0]) === "object")
              for (var A in p) this.remember(A, p[A]);
            else {
              if (arguments.length == 1) return this.memory()[p];
              this.memory()[p] = b;
            }
            return this;
          },
          forget: function () {
            if (arguments.length == 0) this._memory = {};
            else
              for (var p = arguments.length - 1; p >= 0; p--)
                delete this.memory()[arguments[p]];
            return this;
          },
          memory: function () {
            return this._memory || (this._memory = {});
          },
        }),
        (n.get = function (p) {
          var b = i.getElementById(
            (function (A) {
              var R = (A || "").toString().match(n.regex.reference);
              if (R) return R[1];
            })(p) || p
          );
          return n.adopt(b);
        }),
        (n.select = function (p, b) {
          return new n.Set(
            n.utils.map((b || i).querySelectorAll(p), function (A) {
              return n.adopt(A);
            })
          );
        }),
        n.extend(n.Parent, {
          select: function (p) {
            return n.select(p, this.node);
          },
        });
      var I = "abcdef".split("");
      if (typeof M.CustomEvent != "function") {
        var D = function (p, b) {
          b = b || { bubbles: !1, cancelable: !1, detail: void 0 };
          var A = i.createEvent("CustomEvent");
          return A.initCustomEvent(p, b.bubbles, b.cancelable, b.detail), A;
        };
        (D.prototype = M.Event.prototype), (n.CustomEvent = D);
      } else n.CustomEvent = M.CustomEvent;
      return n;
    }),
    c(t) === "object"
      ? (e.exports = rn.document
          ? Aa(rn, rn.document)
          : function (M) {
              return Aa(M, M.document);
            })
      : (rn.SVG = Aa(rn, rn.document)),
    function () {
      (SVG.Filter = SVG.invent({
        create: "filter",
        inherit: SVG.Parent,
        extend: {
          source: "SourceGraphic",
          sourceAlpha: "SourceAlpha",
          background: "BackgroundImage",
          backgroundAlpha: "BackgroundAlpha",
          fill: "FillPaint",
          stroke: "StrokePaint",
          autoSetIn: !0,
          put: function (u, h) {
            return (
              this.add(u, h),
              !u.attr("in") && this.autoSetIn && u.attr("in", this.source),
              u.attr("result") || u.attr("result", u),
              u
            );
          },
          blend: function (u, h, d) {
            return this.put(new SVG.BlendEffect(u, h, d));
          },
          colorMatrix: function (u, h) {
            return this.put(new SVG.ColorMatrixEffect(u, h));
          },
          convolveMatrix: function (u) {
            return this.put(new SVG.ConvolveMatrixEffect(u));
          },
          componentTransfer: function (u) {
            return this.put(new SVG.ComponentTransferEffect(u));
          },
          composite: function (u, h, d) {
            return this.put(new SVG.CompositeEffect(u, h, d));
          },
          flood: function (u, h) {
            return this.put(new SVG.FloodEffect(u, h));
          },
          offset: function (u, h) {
            return this.put(new SVG.OffsetEffect(u, h));
          },
          image: function (u) {
            return this.put(new SVG.ImageEffect(u));
          },
          merge: function () {
            var u = [void 0];
            for (var h in arguments) u.push(arguments[h]);
            return this.put(
              new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, u))()
            );
          },
          gaussianBlur: function (u, h) {
            return this.put(new SVG.GaussianBlurEffect(u, h));
          },
          morphology: function (u, h) {
            return this.put(new SVG.MorphologyEffect(u, h));
          },
          diffuseLighting: function (u, h, d) {
            return this.put(new SVG.DiffuseLightingEffect(u, h, d));
          },
          displacementMap: function (u, h, d, g, x) {
            return this.put(new SVG.DisplacementMapEffect(u, h, d, g, x));
          },
          specularLighting: function (u, h, d, g) {
            return this.put(new SVG.SpecularLightingEffect(u, h, d, g));
          },
          tile: function () {
            return this.put(new SVG.TileEffect());
          },
          turbulence: function (u, h, d, g, x) {
            return this.put(new SVG.TurbulenceEffect(u, h, d, g, x));
          },
          toString: function () {
            return "url(#" + this.attr("id") + ")";
          },
        },
      })),
        SVG.extend(SVG.Defs, {
          filter: function (u) {
            var h = this.put(new SVG.Filter());
            return typeof u == "function" && u.call(h, h), h;
          },
        }),
        SVG.extend(SVG.Container, {
          filter: function (u) {
            return this.defs().filter(u);
          },
        }),
        SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
          filter: function (u) {
            return (
              (this.filterer =
                u instanceof SVG.Element ? u : this.doc().filter(u)),
              this.doc() &&
                this.filterer.doc() !== this.doc() &&
                this.doc().defs().add(this.filterer),
              this.attr("filter", this.filterer),
              this.filterer
            );
          },
          unfilter: function (u) {
            return (
              this.filterer && u === !0 && this.filterer.remove(),
              delete this.filterer,
              this.attr("filter", null)
            );
          },
        }),
        (SVG.Effect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Element,
          extend: {
            in: function (u) {
              return u == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in") + '"]')
                      .get(0)) ||
                    this.attr("in")
                : this.attr("in", u);
            },
            result: function (u) {
              return u == null ? this.attr("result") : this.attr("result", u);
            },
            toString: function () {
              return this.result();
            },
          },
        })),
        (SVG.ParentEffect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Parent,
          extend: {
            in: function (u) {
              return u == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in") + '"]')
                      .get(0)) ||
                    this.attr("in")
                : this.attr("in", u);
            },
            result: function (u) {
              return u == null ? this.attr("result") : this.attr("result", u);
            },
            toString: function () {
              return this.result();
            },
          },
        }));
      var M = {
        blend: function (u, h) {
          return this.parent() && this.parent().blend(this, u, h);
        },
        colorMatrix: function (u, h) {
          return this.parent() && this.parent().colorMatrix(u, h).in(this);
        },
        convolveMatrix: function (u) {
          return this.parent() && this.parent().convolveMatrix(u).in(this);
        },
        componentTransfer: function (u) {
          return this.parent() && this.parent().componentTransfer(u).in(this);
        },
        composite: function (u, h) {
          return this.parent() && this.parent().composite(this, u, h);
        },
        flood: function (u, h) {
          return this.parent() && this.parent().flood(u, h);
        },
        offset: function (u, h) {
          return this.parent() && this.parent().offset(u, h).in(this);
        },
        image: function (u) {
          return this.parent() && this.parent().image(u);
        },
        merge: function () {
          return (
            this.parent() &&
            this.parent().merge.apply(this.parent(), [this].concat(arguments))
          );
        },
        gaussianBlur: function (u, h) {
          return this.parent() && this.parent().gaussianBlur(u, h).in(this);
        },
        morphology: function (u, h) {
          return this.parent() && this.parent().morphology(u, h).in(this);
        },
        diffuseLighting: function (u, h, d) {
          return (
            this.parent() && this.parent().diffuseLighting(u, h, d).in(this)
          );
        },
        displacementMap: function (u, h, d, g) {
          return (
            this.parent() && this.parent().displacementMap(this, u, h, d, g)
          );
        },
        specularLighting: function (u, h, d, g) {
          return (
            this.parent() && this.parent().specularLighting(u, h, d, g).in(this)
          );
        },
        tile: function () {
          return this.parent() && this.parent().tile().in(this);
        },
        turbulence: function (u, h, d, g, x) {
          return (
            this.parent() && this.parent().turbulence(u, h, d, g, x).in(this)
          );
        },
      };
      SVG.extend(SVG.Effect, M),
        SVG.extend(SVG.ParentEffect, M),
        (SVG.ChildEffect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Element,
          extend: {
            in: function (u) {
              this.attr("in", u);
            },
          },
        }));
      var i = {
          blend: function (u, h, d) {
            this.attr({ in: u, in2: h, mode: d || "normal" });
          },
          colorMatrix: function (u, h) {
            u == "matrix" && (h = o(h)),
              this.attr({ type: u, values: h === void 0 ? null : h });
          },
          convolveMatrix: function (u) {
            (u = o(u)),
              this.attr({
                order: Math.sqrt(u.split(" ").length),
                kernelMatrix: u,
              });
          },
          composite: function (u, h, d) {
            this.attr({ in: u, in2: h, operator: d });
          },
          flood: function (u, h) {
            this.attr("flood-color", u),
              h != null && this.attr("flood-opacity", h);
          },
          offset: function (u, h) {
            this.attr({ dx: u, dy: h });
          },
          image: function (u) {
            this.attr("href", u, SVG.xlink);
          },
          displacementMap: function (u, h, d, g, x) {
            this.attr({
              in: u,
              in2: h,
              scale: d,
              xChannelSelector: g,
              yChannelSelector: x,
            });
          },
          gaussianBlur: function (u, h) {
            u != null || h != null
              ? this.attr(
                  "stdDeviation",
                  (function (d) {
                    if (!Array.isArray(d)) return d;
                    for (var g = 0, x = d.length, v = []; g < x; g++)
                      v.push(d[g]);
                    return v.join(" ");
                  })(Array.prototype.slice.call(arguments))
                )
              : this.attr("stdDeviation", "0 0");
          },
          morphology: function (u, h) {
            this.attr({ operator: u, radius: h });
          },
          tile: function () {},
          turbulence: function (u, h, d, g, x) {
            this.attr({
              numOctaves: h,
              seed: d,
              stitchTiles: g,
              baseFrequency: u,
              type: x,
            });
          },
        },
        n = {
          merge: function () {
            var u;
            if (arguments[0] instanceof SVG.Set) {
              var h = this;
              arguments[0].each(function (g) {
                this instanceof SVG.MergeNode
                  ? h.put(this)
                  : (this instanceof SVG.Effect ||
                      this instanceof SVG.ParentEffect) &&
                    h.put(new SVG.MergeNode(this));
              });
            } else {
              u = Array.isArray(arguments[0]) ? arguments[0] : arguments;
              for (var d = 0; d < u.length; d++)
                u[d] instanceof SVG.MergeNode
                  ? this.put(u[d])
                  : this.put(new SVG.MergeNode(u[d]));
            }
          },
          componentTransfer: function (u) {
            if (
              ((this.rgb = new SVG.Set()),
              ["r", "g", "b", "a"].forEach(
                function (d) {
                  (this[d] = new SVG["Func" + d.toUpperCase()]("identity")),
                    this.rgb.add(this[d]),
                    this.node.appendChild(this[d].node);
                }.bind(this)
              ),
              u)
            )
              for (var h in (u.rgb &&
                (["r", "g", "b"].forEach(
                  function (d) {
                    this[d].attr(u.rgb);
                  }.bind(this)
                ),
                delete u.rgb),
              u))
                this[h].attr(u[h]);
          },
          diffuseLighting: function (u, h, d) {
            this.attr({
              surfaceScale: u,
              diffuseConstant: h,
              kernelUnitLength: d,
            });
          },
          specularLighting: function (u, h, d, g) {
            this.attr({
              surfaceScale: u,
              diffuseConstant: h,
              specularExponent: d,
              kernelUnitLength: g,
            });
          },
        },
        a = {
          distantLight: function (u, h) {
            this.attr({ azimuth: u, elevation: h });
          },
          pointLight: function (u, h, d) {
            this.attr({ x: u, y: h, z: d });
          },
          spotLight: function (u, h, d, g, x, v) {
            this.attr({
              x: u,
              y: h,
              z: d,
              pointsAtX: g,
              pointsAtY: x,
              pointsAtZ: v,
            });
          },
          mergeNode: function (u) {
            this.attr("in", u);
          },
        };
      function o(u) {
        return (
          Array.isArray(u) && (u = new SVG.Array(u)),
          u
            .toString()
            .replace(/^\s+/, "")
            .replace(/\s+$/, "")
            .replace(/\s+/g, " ")
        );
      }
      function l() {
        var u = function () {};
        for (var h in (typeof arguments[arguments.length - 1] == "function" &&
          ((u = arguments[arguments.length - 1]),
          Array.prototype.splice.call(arguments, arguments.length - 1, 1)),
        arguments))
          for (var d in arguments[h]) u(arguments[h][d], d, arguments[h]);
      }
      ["r", "g", "b", "a"].forEach(function (u) {
        a["Func" + u.toUpperCase()] = function (h) {
          switch ((this.attr("type", h), h)) {
            case "table":
              this.attr("tableValues", arguments[1]);
              break;
            case "linear":
              this.attr("slope", arguments[1]),
                this.attr("intercept", arguments[2]);
              break;
            case "gamma":
              this.attr("amplitude", arguments[1]),
                this.attr("exponent", arguments[2]),
                this.attr("offset", arguments[2]);
          }
        };
      }),
        l(i, function (u, h) {
          var d = h.charAt(0).toUpperCase() + h.slice(1);
          SVG[d + "Effect"] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + d)),
                u.apply(this, arguments),
                this.result(this.attr("id") + "Out");
            },
            inherit: SVG.Effect,
            extend: {},
          });
        }),
        l(n, function (u, h) {
          var d = h.charAt(0).toUpperCase() + h.slice(1);
          SVG[d + "Effect"] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + d)),
                u.apply(this, arguments),
                this.result(this.attr("id") + "Out");
            },
            inherit: SVG.ParentEffect,
            extend: {},
          });
        }),
        l(a, function (u, h) {
          var d = h.charAt(0).toUpperCase() + h.slice(1);
          SVG[d] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + d)),
                u.apply(this, arguments);
            },
            inherit: SVG.ChildEffect,
            extend: {},
          });
        }),
        SVG.extend(SVG.MergeEffect, {
          in: function (u) {
            return (
              u instanceof SVG.MergeNode
                ? this.add(u, 0)
                : this.add(new SVG.MergeNode(u), 0),
              this
            );
          },
        }),
        SVG.extend(
          SVG.CompositeEffect,
          SVG.BlendEffect,
          SVG.DisplacementMapEffect,
          {
            in2: function (u) {
              return u == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in2") + '"]')
                      .get(0)) ||
                    this.attr("in2")
                : this.attr("in2", u);
            },
          }
        ),
        (SVG.filter = {
          sepiatone: [
            0.343, 0.669, 0.119, 0, 0, 0.249, 0.626, 0.13, 0, 0, 0.172, 0.334,
            0.111, 0, 0, 0, 0, 0, 1, 0,
          ],
        });
    }.call(void 0),
    (function () {
      function M(l, u, h, d, g, x, v) {
        for (
          var w = l.slice(u, h || v),
            k = d.slice(g, x || v),
            C = 0,
            P = { pos: [0, 0], start: [0, 0] },
            E = { pos: [0, 0], start: [0, 0] };
          (w[C] = i.call(P, w[C])),
            (k[C] = i.call(E, k[C])),
            w[C][0] != k[C][0] ||
            w[C][0] == "M" ||
            (w[C][0] == "A" && (w[C][4] != k[C][4] || w[C][5] != k[C][5]))
              ? (Array.prototype.splice.apply(
                  w,
                  [C, 1].concat(a.call(P, w[C]))
                ),
                Array.prototype.splice.apply(k, [C, 1].concat(a.call(E, k[C]))))
              : ((w[C] = n.call(P, w[C])), (k[C] = n.call(E, k[C]))),
            !(++C == w.length && C == k.length);

        )
          C == w.length &&
            w.push([
              "C",
              P.pos[0],
              P.pos[1],
              P.pos[0],
              P.pos[1],
              P.pos[0],
              P.pos[1],
            ]),
            C == k.length &&
              k.push([
                "C",
                E.pos[0],
                E.pos[1],
                E.pos[0],
                E.pos[1],
                E.pos[0],
                E.pos[1],
              ]);
        return { start: w, dest: k };
      }
      function i(l) {
        switch (l[0]) {
          case "z":
          case "Z":
            (l[0] = "L"), (l[1] = this.start[0]), (l[2] = this.start[1]);
            break;
          case "H":
            (l[0] = "L"), (l[2] = this.pos[1]);
            break;
          case "V":
            (l[0] = "L"), (l[2] = l[1]), (l[1] = this.pos[0]);
            break;
          case "T":
            (l[0] = "Q"),
              (l[3] = l[1]),
              (l[4] = l[2]),
              (l[1] = this.reflection[1]),
              (l[2] = this.reflection[0]);
            break;
          case "S":
            (l[0] = "C"),
              (l[6] = l[4]),
              (l[5] = l[3]),
              (l[4] = l[2]),
              (l[3] = l[1]),
              (l[2] = this.reflection[1]),
              (l[1] = this.reflection[0]);
        }
        return l;
      }
      function n(l) {
        var u = l.length;
        return (
          (this.pos = [l[u - 2], l[u - 1]]),
          "SCQT".indexOf(l[0]) != -1 &&
            (this.reflection = [
              2 * this.pos[0] - l[u - 4],
              2 * this.pos[1] - l[u - 3],
            ]),
          l
        );
      }
      function a(l) {
        var u = [l];
        switch (l[0]) {
          case "M":
            return (this.pos = this.start = [l[1], l[2]]), u;
          case "L":
            (l[5] = l[3] = l[1]),
              (l[6] = l[4] = l[2]),
              (l[1] = this.pos[0]),
              (l[2] = this.pos[1]);
            break;
          case "Q":
            (l[6] = l[4]),
              (l[5] = l[3]),
              (l[4] = (1 * l[4]) / 3 + (2 * l[2]) / 3),
              (l[3] = (1 * l[3]) / 3 + (2 * l[1]) / 3),
              (l[2] = (1 * this.pos[1]) / 3 + (2 * l[2]) / 3),
              (l[1] = (1 * this.pos[0]) / 3 + (2 * l[1]) / 3);
            break;
          case "A":
            (u = (function (h, d) {
              var g,
                x,
                v,
                w,
                k,
                C,
                P,
                E,
                I,
                D,
                p,
                b,
                A,
                R,
                F,
                _,
                G,
                W,
                Z,
                ee,
                J,
                oe,
                ce,
                Se,
                ke,
                Le,
                Be = Math.abs(d[1]),
                ze = Math.abs(d[2]),
                $e = d[3] % 360,
                Vt = d[4],
                an = d[5],
                Ho = d[6],
                Xo = d[7],
                bt = new SVG.Point(h),
                ct = new SVG.Point(Ho, Xo),
                Vh = [];
              if (Be === 0 || ze === 0 || (bt.x === ct.x && bt.y === ct.y))
                return [["C", bt.x, bt.y, ct.x, ct.y, ct.x, ct.y]];
              for (
                g = new SVG.Point(
                  (bt.x - ct.x) / 2,
                  (bt.y - ct.y) / 2
                ).transform(new SVG.Matrix().rotate($e)),
                  (x = (g.x * g.x) / (Be * Be) + (g.y * g.y) / (ze * ze)) > 1 &&
                    ((Be *= x = Math.sqrt(x)), (ze *= x)),
                  v = new SVG.Matrix()
                    .rotate($e)
                    .scale(1 / Be, 1 / ze)
                    .rotate(-$e),
                  bt = bt.transform(v),
                  ct = ct.transform(v),
                  w = [ct.x - bt.x, ct.y - bt.y],
                  C = w[0] * w[0] + w[1] * w[1],
                  k = Math.sqrt(C),
                  w[0] /= k,
                  w[1] /= k,
                  P = C < 4 ? Math.sqrt(1 - C / 4) : 0,
                  Vt === an && (P *= -1),
                  E = new SVG.Point(
                    (ct.x + bt.x) / 2 + P * -w[1],
                    (ct.y + bt.y) / 2 + P * w[0]
                  ),
                  I = new SVG.Point(bt.x - E.x, bt.y - E.y),
                  D = new SVG.Point(ct.x - E.x, ct.y - E.y),
                  p = Math.acos(I.x / Math.sqrt(I.x * I.x + I.y * I.y)),
                  I.y < 0 && (p *= -1),
                  b = Math.acos(D.x / Math.sqrt(D.x * D.x + D.y * D.y)),
                  D.y < 0 && (b *= -1),
                  an && p > b && (b += 2 * Math.PI),
                  !an && p < b && (b -= 2 * Math.PI),
                  R = Math.ceil((2 * Math.abs(p - b)) / Math.PI),
                  _ = [],
                  G = p,
                  A = (b - p) / R,
                  F = (4 * Math.tan(A / 4)) / 3,
                  J = 0;
                J <= R;
                J++
              )
                (Z = Math.cos(G)),
                  (W = Math.sin(G)),
                  (ee = new SVG.Point(E.x + Z, E.y + W)),
                  (_[J] = [
                    new SVG.Point(ee.x + F * W, ee.y - F * Z),
                    ee,
                    new SVG.Point(ee.x - F * W, ee.y + F * Z),
                  ]),
                  (G += A);
              for (
                _[0][0] = _[0][1].clone(),
                  _[_.length - 1][2] = _[_.length - 1][1].clone(),
                  v = new SVG.Matrix().rotate($e).scale(Be, ze).rotate(-$e),
                  J = 0,
                  oe = _.length;
                J < oe;
                J++
              )
                (_[J][0] = _[J][0].transform(v)),
                  (_[J][1] = _[J][1].transform(v)),
                  (_[J][2] = _[J][2].transform(v));
              for (J = 1, oe = _.length; J < oe; J++)
                (ce = (ee = _[J - 1][2]).x),
                  (Se = ee.y),
                  (ke = (ee = _[J][0]).x),
                  (Le = ee.y),
                  (Ho = (ee = _[J][1]).x),
                  (Xo = ee.y),
                  Vh.push(["C", ce, Se, ke, Le, Ho, Xo]);
              return Vh;
            })(this.pos, l)),
              (l = u[0]);
        }
        return (
          (l[0] = "C"),
          (this.pos = [l[5], l[6]]),
          (this.reflection = [2 * l[5] - l[3], 2 * l[6] - l[4]]),
          u
        );
      }
      function o(l, u) {
        if (u === !1) return !1;
        for (var h = u, d = l.length; h < d; ++h) if (l[h][0] == "M") return h;
        return !1;
      }
      SVG.extend(SVG.PathArray, {
        morph: function (l) {
          for (
            var u = this.value, h = this.parse(l), d = 0, g = 0, x = !1, v = !1;
            d !== !1 || g !== !1;

          ) {
            var w;
            (x = o(u, d !== !1 && d + 1)),
              (v = o(h, g !== !1 && g + 1)),
              d === !1 &&
                (d =
                  (w = new SVG.PathArray(k.start).bbox()).height == 0 ||
                  w.width == 0
                    ? u.push(u[0]) - 1
                    : u.push(["M", w.x + w.width / 2, w.y + w.height / 2]) - 1),
              g === !1 &&
                (g =
                  (w = new SVG.PathArray(k.dest).bbox()).height == 0 ||
                  w.width == 0
                    ? h.push(h[0]) - 1
                    : h.push(["M", w.x + w.width / 2, w.y + w.height / 2]) - 1);
            var k = M(u, d, x, h, g, v);
            (u = u.slice(0, d).concat(k.start, x === !1 ? [] : u.slice(x))),
              (h = h.slice(0, g).concat(k.dest, v === !1 ? [] : h.slice(v))),
              (d = x !== !1 && d + k.start.length),
              (g = v !== !1 && g + k.dest.length);
          }
          return (
            (this.value = u),
            (this.destination = new SVG.PathArray()),
            (this.destination.value = h),
            this
          );
        },
      });
    })(),
    function () {
      function M(i) {
        i.remember("_draggable", this), (this.el = i);
      }
      (M.prototype.init = function (i, n) {
        var a = this;
        (this.constraint = i),
          (this.value = n),
          this.el.on("mousedown.drag", function (o) {
            a.start(o);
          }),
          this.el.on("touchstart.drag", function (o) {
            a.start(o);
          });
      }),
        (M.prototype.transformPoint = function (i, n) {
          var a =
            ((i = i || window.event).changedTouches && i.changedTouches[0]) ||
            i;
          return (
            (this.p.x = a.clientX - (n || 0)),
            (this.p.y = a.clientY),
            this.p.matrixTransform(this.m)
          );
        }),
        (M.prototype.getBBox = function () {
          var i = this.el.bbox();
          return (
            this.el instanceof SVG.Nested && (i = this.el.rbox()),
            (this.el instanceof SVG.G ||
              this.el instanceof SVG.Use ||
              this.el instanceof SVG.Nested) &&
              ((i.x = this.el.x()), (i.y = this.el.y())),
            i
          );
        }),
        (M.prototype.start = function (i) {
          if (
            (i.type != "click" &&
              i.type != "mousedown" &&
              i.type != "mousemove") ||
            (i.which || i.buttons) == 1
          ) {
            var n = this;
            if (
              (this.el.fire("beforedrag", { event: i, handler: this }),
              !this.el.event().defaultPrevented)
            ) {
              i.preventDefault(),
                i.stopPropagation(),
                (this.parent =
                  this.parent ||
                  this.el.parent(SVG.Nested) ||
                  this.el.parent(SVG.Doc)),
                (this.p = this.parent.node.createSVGPoint()),
                (this.m = this.el.node.getScreenCTM().inverse());
              var a,
                o = this.getBBox();
              if (this.el instanceof SVG.Text)
                switch (
                  ((a = this.el.node.getComputedTextLength()),
                  this.el.attr("text-anchor"))
                ) {
                  case "middle":
                    a /= 2;
                    break;
                  case "start":
                    a = 0;
                }
              (this.startPoints = {
                point: this.transformPoint(i, a),
                box: o,
                transform: this.el.transform(),
              }),
                SVG.on(window, "mousemove.drag", function (l) {
                  n.drag(l);
                }),
                SVG.on(window, "touchmove.drag", function (l) {
                  n.drag(l);
                }),
                SVG.on(window, "mouseup.drag", function (l) {
                  n.end(l);
                }),
                SVG.on(window, "touchend.drag", function (l) {
                  n.end(l);
                }),
                this.el.fire("dragstart", {
                  event: i,
                  p: this.startPoints.point,
                  m: this.m,
                  handler: this,
                });
            }
          }
        }),
        (M.prototype.drag = function (i) {
          var n = this.getBBox(),
            a = this.transformPoint(i),
            o = this.startPoints.box.x + a.x - this.startPoints.point.x,
            l = this.startPoints.box.y + a.y - this.startPoints.point.y,
            u = this.constraint,
            h = a.x - this.startPoints.point.x,
            d = a.y - this.startPoints.point.y;
          if (
            (this.el.fire("dragmove", {
              event: i,
              p: a,
              m: this.m,
              handler: this,
            }),
            this.el.event().defaultPrevented)
          )
            return a;
          if (typeof u == "function") {
            var g = u.call(this.el, o, l, this.m);
            typeof g == "boolean" && (g = { x: g, y: g }),
              g.x === !0 ? this.el.x(o) : g.x !== !1 && this.el.x(g.x),
              g.y === !0 ? this.el.y(l) : g.y !== !1 && this.el.y(g.y);
          } else
            typeof u == "object" &&
              (u.minX != null && o < u.minX
                ? (h = (o = u.minX) - this.startPoints.box.x)
                : u.maxX != null &&
                  o > u.maxX - n.width &&
                  (h = (o = u.maxX - n.width) - this.startPoints.box.x),
              u.minY != null && l < u.minY
                ? (d = (l = u.minY) - this.startPoints.box.y)
                : u.maxY != null &&
                  l > u.maxY - n.height &&
                  (d = (l = u.maxY - n.height) - this.startPoints.box.y),
              u.snapToGrid != null &&
                ((o -= o % u.snapToGrid),
                (l -= l % u.snapToGrid),
                (h -= h % u.snapToGrid),
                (d -= d % u.snapToGrid)),
              this.el instanceof SVG.G
                ? this.el
                    .matrix(this.startPoints.transform)
                    .transform({ x: h, y: d }, !0)
                : this.el.move(o, l));
          return a;
        }),
        (M.prototype.end = function (i) {
          var n = this.drag(i);
          this.el.fire("dragend", { event: i, p: n, m: this.m, handler: this }),
            SVG.off(window, "mousemove.drag"),
            SVG.off(window, "touchmove.drag"),
            SVG.off(window, "mouseup.drag"),
            SVG.off(window, "touchend.drag");
        }),
        SVG.extend(SVG.Element, {
          draggable: function (i, n) {
            (typeof i != "function" && typeof i != "object") ||
              ((n = i), (i = !0));
            var a = this.remember("_draggable") || new M(this);
            return (
              (i = i === void 0 || i)
                ? a.init(n || {}, i)
                : (this.off("mousedown.drag"), this.off("touchstart.drag")),
              this
            );
          },
        });
    }.call(void 0),
    (function () {
      function M(i) {
        (this.el = i),
          i.remember("_selectHandler", this),
          (this.pointSelection = { isSelected: !1 }),
          (this.rectSelection = { isSelected: !1 }),
          (this.pointsList = {
            lt: [0, 0],
            rt: ["width", 0],
            rb: ["width", "height"],
            lb: [0, "height"],
            t: ["width", 0],
            r: ["width", "height"],
            b: ["width", "height"],
            l: [0, "height"],
          }),
          (this.pointCoord = function (n, a, o) {
            var l = typeof n != "string" ? n : a[n];
            return o ? l / 2 : l;
          }),
          (this.pointCoords = function (n, a) {
            var o = this.pointsList[n];
            return {
              x: this.pointCoord(o[0], a, n === "t" || n === "b"),
              y: this.pointCoord(o[1], a, n === "r" || n === "l"),
            };
          });
      }
      (M.prototype.init = function (i, n) {
        var a = this.el.bbox();
        this.options = {};
        var o = this.el.selectize.defaults.points;
        for (var l in this.el.selectize.defaults)
          (this.options[l] = this.el.selectize.defaults[l]),
            n[l] !== void 0 && (this.options[l] = n[l]);
        var u = ["points", "pointsExclude"];
        for (var l in u) {
          var h = this.options[u[l]];
          typeof h == "string"
            ? (h = h.length > 0 ? h.split(/\s*,\s*/i) : [])
            : typeof h == "boolean" && u[l] === "points" && (h = h ? o : []),
            (this.options[u[l]] = h);
        }
        (this.options.points = [o, this.options.points].reduce(function (d, g) {
          return d.filter(function (x) {
            return g.indexOf(x) > -1;
          });
        })),
          (this.options.points = [
            this.options.points,
            this.options.pointsExclude,
          ].reduce(function (d, g) {
            return d.filter(function (x) {
              return g.indexOf(x) < 0;
            });
          })),
          (this.parent = this.el.parent()),
          (this.nested = this.nested || this.parent.group()),
          this.nested.matrix(new SVG.Matrix(this.el).translate(a.x, a.y)),
          this.options.deepSelect &&
          ["line", "polyline", "polygon"].indexOf(this.el.type) !== -1
            ? this.selectPoints(i)
            : this.selectRect(i),
          this.observe(),
          this.cleanup();
      }),
        (M.prototype.selectPoints = function (i) {
          return (
            (this.pointSelection.isSelected = i),
            this.pointSelection.set ||
              ((this.pointSelection.set = this.parent.set()),
              this.drawPoints()),
            this
          );
        }),
        (M.prototype.getPointArray = function () {
          var i = this.el.bbox();
          return this.el
            .array()
            .valueOf()
            .map(function (n) {
              return [n[0] - i.x, n[1] - i.y];
            });
        }),
        (M.prototype.drawPoints = function () {
          for (
            var i = this, n = this.getPointArray(), a = 0, o = n.length;
            a < o;
            ++a
          ) {
            var l = (function (h) {
                return function (d) {
                  (d = d || window.event).preventDefault
                    ? d.preventDefault()
                    : (d.returnValue = !1),
                    d.stopPropagation();
                  var g = d.pageX || d.touches[0].pageX,
                    x = d.pageY || d.touches[0].pageY;
                  i.el.fire("point", { x: g, y: x, i: h, event: d });
                };
              })(a),
              u = this.drawPoint(n[a][0], n[a][1])
                .addClass(this.options.classPoints)
                .addClass(this.options.classPoints + "_point")
                .on("touchstart", l)
                .on("mousedown", l);
            this.pointSelection.set.add(u);
          }
        }),
        (M.prototype.drawPoint = function (i, n) {
          var a = this.options.pointType;
          switch (a) {
            case "circle":
              return this.drawCircle(i, n);
            case "rect":
              return this.drawRect(i, n);
            default:
              if (typeof a == "function") return a.call(this, i, n);
              throw new Error("Unknown " + a + " point type!");
          }
        }),
        (M.prototype.drawCircle = function (i, n) {
          return this.nested.circle(this.options.pointSize).center(i, n);
        }),
        (M.prototype.drawRect = function (i, n) {
          return this.nested
            .rect(this.options.pointSize, this.options.pointSize)
            .center(i, n);
        }),
        (M.prototype.updatePointSelection = function () {
          var i = this.getPointArray();
          this.pointSelection.set.each(function (n) {
            (this.cx() === i[n][0] && this.cy() === i[n][1]) ||
              this.center(i[n][0], i[n][1]);
          });
        }),
        (M.prototype.updateRectSelection = function () {
          var i = this,
            n = this.el.bbox();
          if (
            (this.rectSelection.set
              .get(0)
              .attr({ width: n.width, height: n.height }),
            this.options.points.length &&
              this.options.points.map(function (o, l) {
                var u = i.pointCoords(o, n);
                i.rectSelection.set.get(l + 1).center(u.x, u.y);
              }),
            this.options.rotationPoint)
          ) {
            var a = this.rectSelection.set.length();
            this.rectSelection.set.get(a - 1).center(n.width / 2, 20);
          }
        }),
        (M.prototype.selectRect = function (i) {
          var n = this,
            a = this.el.bbox();
          function o(h) {
            return function (d) {
              (d = d || window.event).preventDefault
                ? d.preventDefault()
                : (d.returnValue = !1),
                d.stopPropagation();
              var g = d.pageX || d.touches[0].pageX,
                x = d.pageY || d.touches[0].pageY;
              n.el.fire(h, { x: g, y: x, event: d });
            };
          }
          if (
            ((this.rectSelection.isSelected = i),
            (this.rectSelection.set =
              this.rectSelection.set || this.parent.set()),
            this.rectSelection.set.get(0) ||
              this.rectSelection.set.add(
                this.nested
                  .rect(a.width, a.height)
                  .addClass(this.options.classRect)
              ),
            this.options.points.length &&
              this.rectSelection.set.length() < 2 &&
              (this.options.points.map(function (h, d) {
                var g = n.pointCoords(h, a),
                  x = n
                    .drawPoint(g.x, g.y)
                    .attr("class", n.options.classPoints + "_" + h)
                    .on("mousedown", o(h))
                    .on("touchstart", o(h));
                n.rectSelection.set.add(x);
              }),
              this.rectSelection.set.each(function () {
                this.addClass(n.options.classPoints);
              })),
            this.options.rotationPoint &&
              ((this.options.points && !this.rectSelection.set.get(9)) ||
                (!this.options.points && !this.rectSelection.set.get(1))))
          ) {
            var l = function (h) {
                (h = h || window.event).preventDefault
                  ? h.preventDefault()
                  : (h.returnValue = !1),
                  h.stopPropagation();
                var d = h.pageX || h.touches[0].pageX,
                  g = h.pageY || h.touches[0].pageY;
                n.el.fire("rot", { x: d, y: g, event: h });
              },
              u = this.drawPoint(a.width / 2, 20)
                .attr("class", this.options.classPoints + "_rot")
                .on("touchstart", l)
                .on("mousedown", l);
            this.rectSelection.set.add(u);
          }
        }),
        (M.prototype.handler = function () {
          var i = this.el.bbox();
          this.nested.matrix(new SVG.Matrix(this.el).translate(i.x, i.y)),
            this.rectSelection.isSelected && this.updateRectSelection(),
            this.pointSelection.isSelected && this.updatePointSelection();
        }),
        (M.prototype.observe = function () {
          var i = this;
          if (MutationObserver)
            if (this.rectSelection.isSelected || this.pointSelection.isSelected)
              (this.observerInst =
                this.observerInst ||
                new MutationObserver(function () {
                  i.handler();
                })),
                this.observerInst.observe(this.el.node, { attributes: !0 });
            else
              try {
                this.observerInst.disconnect(), delete this.observerInst;
              } catch {}
          else
            this.el.off("DOMAttrModified.select"),
              (this.rectSelection.isSelected ||
                this.pointSelection.isSelected) &&
                this.el.on("DOMAttrModified.select", function () {
                  i.handler();
                });
        }),
        (M.prototype.cleanup = function () {
          !this.rectSelection.isSelected &&
            this.rectSelection.set &&
            (this.rectSelection.set.each(function () {
              this.remove();
            }),
            this.rectSelection.set.clear(),
            delete this.rectSelection.set),
            !this.pointSelection.isSelected &&
              this.pointSelection.set &&
              (this.pointSelection.set.each(function () {
                this.remove();
              }),
              this.pointSelection.set.clear(),
              delete this.pointSelection.set),
            this.pointSelection.isSelected ||
              this.rectSelection.isSelected ||
              (this.nested.remove(), delete this.nested);
        }),
        SVG.extend(SVG.Element, {
          selectize: function (i, n) {
            return (
              typeof i == "object" && ((n = i), (i = !0)),
              (this.remember("_selectHandler") || new M(this)).init(
                i === void 0 || i,
                n || {}
              ),
              this
            );
          },
        }),
        (SVG.Element.prototype.selectize.defaults = {
          points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
          pointsExclude: [],
          classRect: "svg_select_boundingRect",
          classPoints: "svg_select_points",
          pointSize: 7,
          rotationPoint: !0,
          deepSelect: !1,
          pointType: "circle",
        });
    })(),
    (function () {
      (function () {
        function M(i) {
          i.remember("_resizeHandler", this),
            (this.el = i),
            (this.parameters = {}),
            (this.lastUpdateCall = null),
            (this.p = i.doc().node.createSVGPoint());
        }
        (M.prototype.transformPoint = function (i, n, a) {
          return (
            (this.p.x = i - (this.offset.x - window.pageXOffset)),
            (this.p.y = n - (this.offset.y - window.pageYOffset)),
            this.p.matrixTransform(a || this.m)
          );
        }),
          (M.prototype._extractPosition = function (i) {
            return {
              x: i.clientX != null ? i.clientX : i.touches[0].clientX,
              y: i.clientY != null ? i.clientY : i.touches[0].clientY,
            };
          }),
          (M.prototype.init = function (i) {
            var n = this;
            if ((this.stop(), i !== "stop")) {
              for (var a in ((this.options = {}), this.el.resize.defaults))
                (this.options[a] = this.el.resize.defaults[a]),
                  i[a] !== void 0 && (this.options[a] = i[a]);
              this.el.on("lt.resize", function (o) {
                n.resize(o || window.event);
              }),
                this.el.on("rt.resize", function (o) {
                  n.resize(o || window.event);
                }),
                this.el.on("rb.resize", function (o) {
                  n.resize(o || window.event);
                }),
                this.el.on("lb.resize", function (o) {
                  n.resize(o || window.event);
                }),
                this.el.on("t.resize", function (o) {
                  n.resize(o || window.event);
                }),
                this.el.on("r.resize", function (o) {
                  n.resize(o || window.event);
                }),
                this.el.on("b.resize", function (o) {
                  n.resize(o || window.event);
                }),
                this.el.on("l.resize", function (o) {
                  n.resize(o || window.event);
                }),
                this.el.on("rot.resize", function (o) {
                  n.resize(o || window.event);
                }),
                this.el.on("point.resize", function (o) {
                  n.resize(o || window.event);
                }),
                this.update();
            }
          }),
          (M.prototype.stop = function () {
            return (
              this.el.off("lt.resize"),
              this.el.off("rt.resize"),
              this.el.off("rb.resize"),
              this.el.off("lb.resize"),
              this.el.off("t.resize"),
              this.el.off("r.resize"),
              this.el.off("b.resize"),
              this.el.off("l.resize"),
              this.el.off("rot.resize"),
              this.el.off("point.resize"),
              this
            );
          }),
          (M.prototype.resize = function (i) {
            var n = this;
            (this.m = this.el.node.getScreenCTM().inverse()),
              (this.offset = { x: window.pageXOffset, y: window.pageYOffset });
            var a = this._extractPosition(i.detail.event);
            if (
              ((this.parameters = {
                type: this.el.type,
                p: this.transformPoint(a.x, a.y),
                x: i.detail.x,
                y: i.detail.y,
                box: this.el.bbox(),
                rotation: this.el.transform().rotation,
              }),
              this.el.type === "text" &&
                (this.parameters.fontSize = this.el.attr()["font-size"]),
              i.detail.i !== void 0)
            ) {
              var o = this.el.array().valueOf();
              (this.parameters.i = i.detail.i),
                (this.parameters.pointCoords = [
                  o[i.detail.i][0],
                  o[i.detail.i][1],
                ]);
            }
            switch (i.type) {
              case "lt":
                this.calc = function (l, u) {
                  var h = this.snapToGrid(l, u);
                  if (
                    this.parameters.box.width - h[0] > 0 &&
                    this.parameters.box.height - h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize - h[0]
                        )
                      );
                    (h = this.checkAspectRatio(h)),
                      this.el
                        .move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y + h[1]
                        )
                        .size(
                          this.parameters.box.width - h[0],
                          this.parameters.box.height - h[1]
                        );
                  }
                };
                break;
              case "rt":
                this.calc = function (l, u) {
                  var h = this.snapToGrid(l, u, 2);
                  if (
                    this.parameters.box.width + h[0] > 0 &&
                    this.parameters.box.height - h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x - h[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize + h[0]
                        )
                      );
                    (h = this.checkAspectRatio(h, !0)),
                      this.el
                        .move(
                          this.parameters.box.x,
                          this.parameters.box.y + h[1]
                        )
                        .size(
                          this.parameters.box.width + h[0],
                          this.parameters.box.height - h[1]
                        );
                  }
                };
                break;
              case "rb":
                this.calc = function (l, u) {
                  var h = this.snapToGrid(l, u, 0);
                  if (
                    this.parameters.box.width + h[0] > 0 &&
                    this.parameters.box.height + h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x - h[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize + h[0]
                        )
                      );
                    (h = this.checkAspectRatio(h)),
                      this.el
                        .move(this.parameters.box.x, this.parameters.box.y)
                        .size(
                          this.parameters.box.width + h[0],
                          this.parameters.box.height + h[1]
                        );
                  }
                };
                break;
              case "lb":
                this.calc = function (l, u) {
                  var h = this.snapToGrid(l, u, 1);
                  if (
                    this.parameters.box.width - h[0] > 0 &&
                    this.parameters.box.height + h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize - h[0]
                        )
                      );
                    (h = this.checkAspectRatio(h, !0)),
                      this.el
                        .move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y
                        )
                        .size(
                          this.parameters.box.width - h[0],
                          this.parameters.box.height + h[1]
                        );
                  }
                };
                break;
              case "t":
                this.calc = function (l, u) {
                  var h = this.snapToGrid(l, u, 2);
                  if (this.parameters.box.height - h[1] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y + h[1])
                      .height(this.parameters.box.height - h[1]);
                  }
                };
                break;
              case "r":
                this.calc = function (l, u) {
                  var h = this.snapToGrid(l, u, 0);
                  if (this.parameters.box.width + h[0] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y)
                      .width(this.parameters.box.width + h[0]);
                  }
                };
                break;
              case "b":
                this.calc = function (l, u) {
                  var h = this.snapToGrid(l, u, 0);
                  if (this.parameters.box.height + h[1] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y)
                      .height(this.parameters.box.height + h[1]);
                  }
                };
                break;
              case "l":
                this.calc = function (l, u) {
                  var h = this.snapToGrid(l, u, 1);
                  if (this.parameters.box.width - h[0] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x + h[0], this.parameters.box.y)
                      .width(this.parameters.box.width - h[0]);
                  }
                };
                break;
              case "rot":
                this.calc = function (l, u) {
                  var h = l + this.parameters.p.x,
                    d = u + this.parameters.p.y,
                    g = Math.atan2(
                      this.parameters.p.y -
                        this.parameters.box.y -
                        this.parameters.box.height / 2,
                      this.parameters.p.x -
                        this.parameters.box.x -
                        this.parameters.box.width / 2
                    ),
                    x = Math.atan2(
                      d -
                        this.parameters.box.y -
                        this.parameters.box.height / 2,
                      h - this.parameters.box.x - this.parameters.box.width / 2
                    ),
                    v =
                      this.parameters.rotation +
                      (180 * (x - g)) / Math.PI +
                      this.options.snapToAngle / 2;
                  this.el
                    .center(this.parameters.box.cx, this.parameters.box.cy)
                    .rotate(
                      v - (v % this.options.snapToAngle),
                      this.parameters.box.cx,
                      this.parameters.box.cy
                    );
                };
                break;
              case "point":
                this.calc = function (l, u) {
                  var h = this.snapToGrid(
                      l,
                      u,
                      this.parameters.pointCoords[0],
                      this.parameters.pointCoords[1]
                    ),
                    d = this.el.array().valueOf();
                  (d[this.parameters.i][0] =
                    this.parameters.pointCoords[0] + h[0]),
                    (d[this.parameters.i][1] =
                      this.parameters.pointCoords[1] + h[1]),
                    this.el.plot(d);
                };
            }
            this.el.fire("resizestart", {
              dx: this.parameters.x,
              dy: this.parameters.y,
              event: i,
            }),
              SVG.on(window, "touchmove.resize", function (l) {
                n.update(l || window.event);
              }),
              SVG.on(window, "touchend.resize", function () {
                n.done();
              }),
              SVG.on(window, "mousemove.resize", function (l) {
                n.update(l || window.event);
              }),
              SVG.on(window, "mouseup.resize", function () {
                n.done();
              });
          }),
          (M.prototype.update = function (i) {
            if (i) {
              var n = this._extractPosition(i),
                a = this.transformPoint(n.x, n.y),
                o = a.x - this.parameters.p.x,
                l = a.y - this.parameters.p.y;
              (this.lastUpdateCall = [o, l]),
                this.calc(o, l),
                this.el.fire("resizing", { dx: o, dy: l, event: i });
            } else
              this.lastUpdateCall &&
                this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
          }),
          (M.prototype.done = function () {
            (this.lastUpdateCall = null),
              SVG.off(window, "mousemove.resize"),
              SVG.off(window, "mouseup.resize"),
              SVG.off(window, "touchmove.resize"),
              SVG.off(window, "touchend.resize"),
              this.el.fire("resizedone");
          }),
          (M.prototype.snapToGrid = function (i, n, a, o) {
            var l;
            return (
              o !== void 0
                ? (l = [
                    (a + i) % this.options.snapToGrid,
                    (o + n) % this.options.snapToGrid,
                  ])
                : ((a = a ?? 3),
                  (l = [
                    (this.parameters.box.x +
                      i +
                      (1 & a ? 0 : this.parameters.box.width)) %
                      this.options.snapToGrid,
                    (this.parameters.box.y +
                      n +
                      (2 & a ? 0 : this.parameters.box.height)) %
                      this.options.snapToGrid,
                  ])),
              i < 0 && (l[0] -= this.options.snapToGrid),
              n < 0 && (l[1] -= this.options.snapToGrid),
              (i -=
                Math.abs(l[0]) < this.options.snapToGrid / 2
                  ? l[0]
                  : l[0] -
                    (i < 0
                      ? -this.options.snapToGrid
                      : this.options.snapToGrid)),
              (n -=
                Math.abs(l[1]) < this.options.snapToGrid / 2
                  ? l[1]
                  : l[1] -
                    (n < 0
                      ? -this.options.snapToGrid
                      : this.options.snapToGrid)),
              this.constraintToBox(i, n, a, o)
            );
          }),
          (M.prototype.constraintToBox = function (i, n, a, o) {
            var l,
              u,
              h = this.options.constraint || {};
            return (
              o !== void 0
                ? ((l = a), (u = o))
                : ((l =
                    this.parameters.box.x +
                    (1 & a ? 0 : this.parameters.box.width)),
                  (u =
                    this.parameters.box.y +
                    (2 & a ? 0 : this.parameters.box.height))),
              h.minX !== void 0 && l + i < h.minX && (i = h.minX - l),
              h.maxX !== void 0 && l + i > h.maxX && (i = h.maxX - l),
              h.minY !== void 0 && u + n < h.minY && (n = h.minY - u),
              h.maxY !== void 0 && u + n > h.maxY && (n = h.maxY - u),
              [i, n]
            );
          }),
          (M.prototype.checkAspectRatio = function (i, n) {
            if (!this.options.saveAspectRatio) return i;
            var a = i.slice(),
              o = this.parameters.box.width / this.parameters.box.height,
              l = this.parameters.box.width + i[0],
              u = this.parameters.box.height - i[1],
              h = l / u;
            return (
              h < o
                ? ((a[1] = l / o - this.parameters.box.height),
                  n && (a[1] = -a[1]))
                : h > o &&
                  ((a[0] = this.parameters.box.width - u * o),
                  n && (a[0] = -a[0])),
              a
            );
          }),
          SVG.extend(SVG.Element, {
            resize: function (i) {
              return (
                (this.remember("_resizeHandler") || new M(this)).init(i || {}),
                this
              );
            },
          }),
          (SVG.Element.prototype.resize.defaults = {
            snapToAngle: 0.1,
            snapToGrid: 1,
            constraint: {},
            saveAspectRatio: !1,
          });
      }).call(this);
    })(),
    window.Apex === void 0 && (window.Apex = {});
  var jh = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "initModules",
            value: function () {
              (this.ctx.publicMethods = [
                "updateOptions",
                "updateSeries",
                "appendData",
                "appendSeries",
                "isSeriesHidden",
                "toggleSeries",
                "showSeries",
                "hideSeries",
                "setLocale",
                "resetSeries",
                "zoomX",
                "toggleDataPointSelection",
                "dataURI",
                "exportToCSV",
                "addXaxisAnnotation",
                "addYaxisAnnotation",
                "addPointAnnotation",
                "clearAnnotations",
                "removeAnnotation",
                "paper",
                "destroy",
              ]),
                (this.ctx.eventList = [
                  "click",
                  "mousedown",
                  "mousemove",
                  "mouseleave",
                  "touchstart",
                  "touchmove",
                  "touchleave",
                  "mouseup",
                  "touchend",
                ]),
                (this.ctx.animations = new H(this.ctx)),
                (this.ctx.axes = new $v(this.ctx)),
                (this.ctx.core = new yy(this.ctx.el, this.ctx)),
                (this.ctx.config = new ge({})),
                (this.ctx.data = new Qt(this.ctx)),
                (this.ctx.grid = new ei(this.ctx)),
                (this.ctx.graphics = new B(this.ctx)),
                (this.ctx.coreUtils = new K(this.ctx)),
                (this.ctx.crosshairs = new zo(this.ctx)),
                (this.ctx.events = new Gv(this.ctx)),
                (this.ctx.exports = new Pi(this.ctx)),
                (this.ctx.localization = new Uv(this.ctx)),
                (this.ctx.options = new le()),
                (this.ctx.responsive = new qv(this.ctx)),
                (this.ctx.series = new Re(this.ctx)),
                (this.ctx.theme = new Zv(this.ctx)),
                (this.ctx.formatters = new we(this.ctx)),
                (this.ctx.titleSubtitle = new Kv(this.ctx)),
                (this.ctx.legend = new Oh(this.ctx)),
                (this.ctx.toolbar = new Rh(this.ctx)),
                (this.ctx.tooltip = new Dh(this.ctx)),
                (this.ctx.dimensions = new Ca(this.ctx)),
                (this.ctx.updateHelpers = new by(this.ctx)),
                (this.ctx.zoomPanSelection = new ny(this.ctx)),
                (this.ctx.w.globals.tooltip = new Dh(this.ctx));
            },
          },
        ]),
        M
      );
    })(),
    Bh = (function () {
      function M(i) {
        f(this, M), (this.ctx = i), (this.w = i.w);
      }
      return (
        y(M, [
          {
            key: "clear",
            value: function (i) {
              var n = i.isUpdating;
              this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(),
                this.ctx.toolbar && this.ctx.toolbar.destroy(),
                (this.ctx.animations = null),
                (this.ctx.axes = null),
                (this.ctx.annotations = null),
                (this.ctx.core = null),
                (this.ctx.data = null),
                (this.ctx.grid = null),
                (this.ctx.series = null),
                (this.ctx.responsive = null),
                (this.ctx.theme = null),
                (this.ctx.formatters = null),
                (this.ctx.titleSubtitle = null),
                (this.ctx.legend = null),
                (this.ctx.dimensions = null),
                (this.ctx.options = null),
                (this.ctx.crosshairs = null),
                (this.ctx.zoomPanSelection = null),
                (this.ctx.updateHelpers = null),
                (this.ctx.toolbar = null),
                (this.ctx.localization = null),
                (this.ctx.w.globals.tooltip = null),
                this.clearDomElements({ isUpdating: n });
            },
          },
          {
            key: "killSVG",
            value: function (i) {
              i.each(function (n, a) {
                this.removeClass("*"), this.off(), this.stop();
              }, !0),
                i.ungroup(),
                i.clear();
            },
          },
          {
            key: "clearDomElements",
            value: function (i) {
              var n = this,
                a = i.isUpdating,
                o = this.w.globals.dom.Paper.node;
              o.parentNode &&
                o.parentNode.parentNode &&
                !a &&
                (o.parentNode.parentNode.style.minHeight = "unset");
              var l = this.w.globals.dom.baseEl;
              l &&
                this.ctx.eventList.forEach(function (h) {
                  l.removeEventListener(h, n.ctx.events.documentEvent);
                });
              var u = this.w.globals.dom;
              if (this.ctx.el !== null)
                for (; this.ctx.el.firstChild; )
                  this.ctx.el.removeChild(this.ctx.el.firstChild);
              this.killSVG(u.Paper),
                u.Paper.remove(),
                (u.elWrap = null),
                (u.elGraphical = null),
                (u.elLegendWrap = null),
                (u.elLegendForeign = null),
                (u.baseEl = null),
                (u.elGridRect = null),
                (u.elGridRectMask = null),
                (u.elGridRectMarkerMask = null),
                (u.elForecastMask = null),
                (u.elNonForecastMask = null),
                (u.elDefs = null);
            },
          },
        ]),
        M
      );
    })(),
    _o = new WeakMap(),
    wy = (function () {
      function M(i, n) {
        f(this, M),
          (this.opts = n),
          (this.ctx = this),
          (this.w = new fe(n).init()),
          (this.el = i),
          (this.w.globals.cuid = L.randomId()),
          (this.w.globals.chartID = this.w.config.chart.id
            ? L.escapeString(this.w.config.chart.id)
            : this.w.globals.cuid),
          new jh(this).initModules(),
          (this.create = L.bind(this.create, this)),
          (this.windowResizeHandler = this._windowResizeHandler.bind(this)),
          (this.parentResizeHandler = this._parentResizeCallback.bind(this));
      }
      return (
        y(
          M,
          [
            {
              key: "render",
              value: function () {
                var i = this;
                return new Promise(function (n, a) {
                  if (i.el !== null) {
                    Apex._chartInstances === void 0 &&
                      (Apex._chartInstances = []),
                      i.w.config.chart.id &&
                        Apex._chartInstances.push({
                          id: i.w.globals.chartID,
                          group: i.w.config.chart.group,
                          chart: i,
                        }),
                      i.setLocale(i.w.config.chart.defaultLocale);
                    var o = i.w.config.chart.events.beforeMount;
                    if (
                      (typeof o == "function" && o(i, i.w),
                      i.events.fireEvent("beforeMount", [i, i.w]),
                      window.addEventListener("resize", i.windowResizeHandler),
                      (function (x, v) {
                        var w = !1;
                        if (x.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                          var k = x.getBoundingClientRect();
                          (x.style.display !== "none" && k.width !== 0) ||
                            (w = !0);
                        }
                        var C = new ResizeObserver(function (P) {
                          w && v.call(x, P), (w = !0);
                        });
                        x.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                          ? Array.from(x.children).forEach(function (P) {
                              return C.observe(P);
                            })
                          : C.observe(x),
                          _o.set(v, C);
                      })(i.el.parentNode, i.parentResizeHandler),
                      !i.css)
                    ) {
                      var l = i.el.getRootNode && i.el.getRootNode(),
                        u = L.is("ShadowRoot", l),
                        h = i.el.ownerDocument,
                        d = h.getElementById("apexcharts-css");
                      (!u && d) ||
                        ((i.css = document.createElement("style")),
                        (i.css.id = "apexcharts-css"),
                        (i.css.textContent = `@keyframes opaque {
  0% {
      opacity: 0
  }

  to {
      opacity: 1
  }
}

@keyframes resizeanim {
  0%,to {
      opacity: 0
  }
}

.apexcharts-canvas {
  position: relative;
  user-select: none
}

.apexcharts-canvas ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 6px
}

.apexcharts-canvas ::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: rgba(0,0,0,.5);
  box-shadow: 0 0 1px rgba(255,255,255,.5);
  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)
}

.apexcharts-inner {
  position: relative
}

.apexcharts-text tspan {
  font-family: inherit
}

.legend-mouseover-inactive {
  transition: .15s ease all;
  opacity: .2
}

.apexcharts-legend-text {
  padding-left: 15px;
  margin-left: -15px;
}

.apexcharts-series-collapsed {
  opacity: 0
}

.apexcharts-tooltip {
  border-radius: 5px;
  box-shadow: 2px 2px 6px -4px #999;
  cursor: default;
  font-size: 14px;
  left: 62px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 20px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  white-space: nowrap;
  z-index: 12;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-theme-light {
  border: 1px solid #e3e3e3;
  background: rgba(255,255,255,.96)
}

.apexcharts-tooltip.apexcharts-theme-dark {
  color: #fff;
  background: rgba(30,30,30,.8)
}

.apexcharts-tooltip * {
  font-family: inherit
}

.apexcharts-tooltip-title {
  padding: 6px;
  font-size: 15px;
  margin-bottom: 4px
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {
  background: #eceff1;
  border-bottom: 1px solid #ddd
}

.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
  background: rgba(0,0,0,.7);
  border-bottom: 1px solid #333
}

.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {
  display: inline-block;
  margin-left: 5px;
  font-weight: 600
}

.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {
  display: none
}

.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  padding: 6px 0 5px
}

.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  display: flex
}

.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {
  margin-top: -6px
}

.apexcharts-tooltip-marker {
  width: 12px;
  height: 12px;
  position: relative;
  top: 0;
  margin-right: 10px;
  border-radius: 50%
}

.apexcharts-tooltip-series-group {
  padding: 0 10px;
  display: none;
  text-align: left;
  justify-content: left;
  align-items: center
}

.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {
  opacity: 1
}

.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {
  padding-bottom: 4px
}

.apexcharts-tooltip-series-group-hidden {
  opacity: 0;
  height: 0;
  line-height: 0;
  padding: 0!important
}

.apexcharts-tooltip-y-group {
  padding: 6px 0 5px
}

.apexcharts-custom-tooltip,.apexcharts-tooltip-box {
  padding: 4px 8px
}

.apexcharts-tooltip-boxPlot {
  display: flex;
  flex-direction: column-reverse
}

.apexcharts-tooltip-box>div {
  margin: 4px 0
}

.apexcharts-tooltip-box span.value {
  font-weight: 700
}

.apexcharts-tooltip-rangebar {
  padding: 5px 8px
}

.apexcharts-tooltip-rangebar .category {
  font-weight: 600;
  color: #777
}

.apexcharts-tooltip-rangebar .series-name {
  font-weight: 700;
  display: block;
  margin-bottom: 5px
}

.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {
  opacity: 0;
  pointer-events: none;
  color: #373d3f;
  font-size: 13px;
  text-align: center;
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  background: #eceff1;
  border: 1px solid #90a4ae
}

.apexcharts-xaxistooltip {
  padding: 9px 10px;
  transition: .15s ease all
}

.apexcharts-xaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {
  left: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-xaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-left: -6px
}

.apexcharts-xaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-left: -7px
}

.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {
  bottom: 100%
}

.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {
  top: 100%
}

.apexcharts-xaxistooltip-bottom:after {
  border-bottom-color: #eceff1
}

.apexcharts-xaxistooltip-bottom:before {
  border-bottom-color: #90a4ae
}

.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {
  border-bottom-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip-top:after {
  border-top-color: #eceff1
}

.apexcharts-xaxistooltip-top:before {
  border-top-color: #90a4ae
}

.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {
  border-top-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-yaxistooltip {
  padding: 4px 10px
}

.apexcharts-yaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {
  top: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-yaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-top: -6px
}

.apexcharts-yaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -7px
}

.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {
  left: 100%
}

.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {
  right: 100%
}

.apexcharts-yaxistooltip-left:after {
  border-left-color: #eceff1
}

.apexcharts-yaxistooltip-left:before {
  border-left-color: #90a4ae
}

.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {
  border-left-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip-right:after {
  border-right-color: #eceff1
}

.apexcharts-yaxistooltip-right:before {
  border-right-color: #90a4ae
}

.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {
  border-right-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip.apexcharts-active {
  opacity: 1
}

.apexcharts-yaxistooltip-hidden {
  display: none
}

.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {
  pointer-events: none;
  opacity: 0;
  transition: .15s ease all
}

.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-ycrosshairs-hidden {
  opacity: 0
}

.apexcharts-selection-rect {
  cursor: move
}

.svg_select_boundingRect,.svg_select_points_rot {
  pointer-events: none;
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {
  cursor: ew-resize;
  opacity: 1;
  visibility: visible
}

.svg_select_points {
  fill: #efefef;
  stroke: #333;
  rx: 2
}

.apexcharts-svg.apexcharts-zoomable.hovering-zoom {
  cursor: crosshair
}

.apexcharts-svg.apexcharts-zoomable.hovering-pan {
  cursor: move
}

.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  cursor: pointer;
  width: 20px;
  height: 20px;
  line-height: 24px;
  color: #6e8192;
  text-align: center
}

.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {
  fill: #6e8192
}

.apexcharts-selection-icon svg {
  fill: #444;
  transform: scale(.76)
}

.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {
  fill: #f3f4f5
}

.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {
  fill: #008ffb
}

.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {
  fill: #333
}

.apexcharts-menu-icon,.apexcharts-selection-icon {
  position: relative
}

.apexcharts-reset-icon {
  margin-left: 5px
}

.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {
  transform: scale(.85)
}

.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  transform: scale(.7)
}

.apexcharts-zoomout-icon {
  margin-right: 3px
}

.apexcharts-pan-icon {
  transform: scale(.62);
  position: relative;
  left: 1px;
  top: 0
}

.apexcharts-pan-icon svg {
  fill: #fff;
  stroke: #6e8192;
  stroke-width: 2
}

.apexcharts-pan-icon.apexcharts-selected svg {
  stroke: #008ffb
}

.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {
  stroke: #333
}

.apexcharts-toolbar {
  position: absolute;
  z-index: 11;
  max-width: 176px;
  text-align: right;
  border-radius: 3px;
  padding: 0 6px 2px;
  display: flex;
  justify-content: space-between;
  align-items: center
}

.apexcharts-menu {
  background: #fff;
  position: absolute;
  top: 100%;
  border: 1px solid #ddd;
  border-radius: 3px;
  padding: 3px;
  right: 10px;
  opacity: 0;
  min-width: 110px;
  transition: .15s ease all;
  pointer-events: none
}

.apexcharts-menu.apexcharts-menu-open {
  opacity: 1;
  pointer-events: all;
  transition: .15s ease all
}

.apexcharts-menu-item {
  padding: 6px 7px;
  font-size: 12px;
  cursor: pointer
}

.apexcharts-theme-light .apexcharts-menu-item:hover {
  background: #eee
}

.apexcharts-theme-dark .apexcharts-menu {
  background: rgba(0,0,0,.7);
  color: #fff
}

@media screen and (min-width:768px) {
  .apexcharts-canvas:hover .apexcharts-toolbar {
      opacity: 1
  }
}

.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {
  opacity: 0
}

.apexcharts-hidden-element-shown {
  opacity: 1;
  transition: 0.25s ease all;
}
.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {
  cursor: default;
  pointer-events: none
}

.apexcharts-pie-label-delay {
  opacity: 0;
  animation-name: opaque;
  animation-duration: .3s;
  animation-fill-mode: forwards;
  animation-timing-function: ease
}

.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {
  pointer-events: none
}

.apexcharts-marker {
  transition: .15s ease all
}

.resize-triggers {
  animation: 1ms resizeanim;
  visibility: hidden;
  opacity: 0;
  height: 100%;
  width: 100%;
  overflow: hidden
}

.contract-trigger:before,.resize-triggers,.resize-triggers>div {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0
}

.resize-triggers>div {
  height: 100%;
  width: 100%;
  background: #eee;
  overflow: auto
}

.contract-trigger:before {
  overflow: hidden;
  width: 200%;
  height: 200%
}

.apexcharts-bar-goals-markers{
  pointer-events: none
}

.apexcharts-bar-shadows{
  pointer-events: none
}

.apexcharts-rangebar-goals-markers{
  pointer-events: none
}`),
                        u ? l.prepend(i.css) : h.head.appendChild(i.css));
                    }
                    var g = i.create(i.w.config.series, {});
                    if (!g) return n(i);
                    i.mount(g)
                      .then(function () {
                        typeof i.w.config.chart.events.mounted == "function" &&
                          i.w.config.chart.events.mounted(i, i.w),
                          i.events.fireEvent("mounted", [i, i.w]),
                          n(g);
                      })
                      .catch(function (x) {
                        a(x);
                      });
                  } else a(new Error("Element not found"));
                });
              },
            },
            {
              key: "create",
              value: function (i, n) {
                var a = this.w;
                new jh(this).initModules();
                var o = this.w.globals;
                if (
                  ((o.noData = !1),
                  (o.animationEnded = !1),
                  this.responsive.checkResponsiveConfig(n),
                  a.config.xaxis.convertedCatToNumeric &&
                    new se(a.config).convertCatToNumericXaxis(
                      a.config,
                      this.ctx
                    ),
                  this.el === null ||
                    (this.core.setupElements(),
                    a.config.chart.type === "treemap" &&
                      ((a.config.grid.show = !1),
                      (a.config.yaxis[0].show = !1)),
                    o.svgWidth === 0))
                )
                  return (o.animationEnded = !0), null;
                var l = K.checkComboSeries(i);
                (o.comboCharts = l.comboCharts),
                  (o.comboBarCount = l.comboBarCount);
                var u = i.every(function (x) {
                  return x.data && x.data.length === 0;
                });
                (i.length === 0 || u) && this.series.handleNoData(),
                  this.events.setupEventHandlers(),
                  this.data.parseData(i),
                  this.theme.init(),
                  new je(this).setGlobalMarkerSize(),
                  this.formatters.setLabelFormatters(),
                  this.titleSubtitle.draw(),
                  (o.noData &&
                    o.collapsedSeries.length !== o.series.length &&
                    !a.config.legend.showForSingleSeries) ||
                    this.legend.init(),
                  this.series.hasAllSeriesEqualX(),
                  o.axisCharts &&
                    (this.core.coreCalculations(),
                    a.config.xaxis.type !== "category" &&
                      this.formatters.setLabelFormatters(),
                    (this.ctx.toolbar.minX = a.globals.minX),
                    (this.ctx.toolbar.maxX = a.globals.maxX)),
                  this.formatters.heatmapLabelFormatters(),
                  new K(this).getLargestMarkerSize(),
                  this.dimensions.plotCoords();
                var h = this.core.xySettings();
                this.grid.createGridMask();
                var d = this.core.plotChartType(i, h),
                  g = new Lt(this);
                return (
                  g.bringForward(),
                  a.config.dataLabels.background.enabled &&
                    g.dataLabelsBackground(),
                  this.core.shiftGraphPosition(),
                  {
                    elGraph: d,
                    xyRatios: h,
                    dimensions: {
                      plot: {
                        left: a.globals.translateX,
                        top: a.globals.translateY,
                        width: a.globals.gridWidth,
                        height: a.globals.gridHeight,
                      },
                    },
                  }
                );
              },
            },
            {
              key: "mount",
              value: function () {
                var i = this,
                  n =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  a = this,
                  o = a.w;
                return new Promise(function (l, u) {
                  if (a.el === null)
                    return u(
                      new Error(
                        "Not enough data to display or target element not found"
                      )
                    );
                  (n === null || o.globals.allSeriesCollapsed) &&
                    a.series.handleNoData(),
                    (a.grid = new ei(a));
                  var h,
                    d,
                    g = a.grid.drawGrid();
                  if (
                    ((a.annotations = new he(a)),
                    a.annotations.drawImageAnnos(),
                    a.annotations.drawTextAnnos(),
                    o.config.grid.position === "back" &&
                      (g && o.globals.dom.elGraphical.add(g.el),
                      g != null &&
                        (h = g.elGridBorders) !== null &&
                        h !== void 0 &&
                        h.node &&
                        o.globals.dom.elGraphical.add(g.elGridBorders)),
                    Array.isArray(n.elGraph))
                  )
                    for (var x = 0; x < n.elGraph.length; x++)
                      o.globals.dom.elGraphical.add(n.elGraph[x]);
                  else o.globals.dom.elGraphical.add(n.elGraph);
                  o.config.grid.position === "front" &&
                    (g && o.globals.dom.elGraphical.add(g.el),
                    g != null &&
                      (d = g.elGridBorders) !== null &&
                      d !== void 0 &&
                      d.node &&
                      o.globals.dom.elGraphical.add(g.elGridBorders)),
                    o.config.xaxis.crosshairs.position === "front" &&
                      a.crosshairs.drawXCrosshairs(),
                    o.config.yaxis[0].crosshairs.position === "front" &&
                      a.crosshairs.drawYCrosshairs(),
                    o.config.chart.type !== "treemap" &&
                      a.axes.drawAxis(o.config.chart.type, g);
                  var v = new Jt(i.ctx, g),
                    w = new Ro(i.ctx, g);
                  if (
                    (g !== null &&
                      (v.xAxisLabelCorrections(g.xAxisTickWidth),
                      w.setYAxisTextAlignments(),
                      o.config.yaxis.map(function (C, P) {
                        o.globals.ignoreYAxisIndexes.indexOf(P) === -1 &&
                          w.yAxisTitleRotate(P, C.opposite);
                      })),
                    a.annotations.drawAxesAnnotations(),
                    !o.globals.noData)
                  ) {
                    if (
                      (o.config.tooltip.enabled &&
                        !o.globals.noData &&
                        a.w.globals.tooltip.drawTooltip(n.xyRatios),
                      o.globals.axisCharts &&
                        (o.globals.isXNumeric ||
                          o.config.xaxis.convertedCatToNumeric ||
                          o.globals.isRangeBar))
                    )
                      (o.config.chart.zoom.enabled ||
                        (o.config.chart.selection &&
                          o.config.chart.selection.enabled) ||
                        (o.config.chart.pan && o.config.chart.pan.enabled)) &&
                        a.zoomPanSelection.init({ xyRatios: n.xyRatios });
                    else {
                      var k = o.config.chart.toolbar.tools;
                      [
                        "zoom",
                        "zoomin",
                        "zoomout",
                        "selection",
                        "pan",
                        "reset",
                      ].forEach(function (C) {
                        k[C] = !1;
                      });
                    }
                    o.config.chart.toolbar.show &&
                      !o.globals.allSeriesCollapsed &&
                      a.toolbar.createToolbar();
                  }
                  o.globals.memory.methodsToExec.length > 0 &&
                    o.globals.memory.methodsToExec.forEach(function (C) {
                      C.method(C.params, !1, C.context);
                    }),
                    o.globals.axisCharts ||
                      o.globals.noData ||
                      a.core.resizeNonAxisCharts(),
                    l(a);
                });
              },
            },
            {
              key: "destroy",
              value: function () {
                var i, n;
                window.removeEventListener("resize", this.windowResizeHandler),
                  this.el.parentNode,
                  (i = this.parentResizeHandler),
                  (n = _o.get(i)) && (n.disconnect(), _o.delete(i));
                var a = this.w.config.chart.id;
                a &&
                  Apex._chartInstances.forEach(function (o, l) {
                    o.id === L.escapeString(a) &&
                      Apex._chartInstances.splice(l, 1);
                  }),
                  new Bh(this.ctx).clear({ isUpdating: !1 });
              },
            },
            {
              key: "updateOptions",
              value: function (i) {
                var n = this,
                  a =
                    arguments.length > 1 &&
                    arguments[1] !== void 0 &&
                    arguments[1],
                  o =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  l =
                    !(arguments.length > 3 && arguments[3] !== void 0) ||
                    arguments[3],
                  u =
                    !(arguments.length > 4 && arguments[4] !== void 0) ||
                    arguments[4],
                  h = this.w;
                return (
                  (h.globals.selection = void 0),
                  i.series &&
                    (this.series.resetSeries(!1, !0, !1),
                    i.series.length &&
                      i.series[0].data &&
                      (i.series = i.series.map(function (d, g) {
                        return n.updateHelpers._extendSeries(d, g);
                      })),
                    this.updateHelpers.revertDefaultAxisMinMax()),
                  i.xaxis && (i = this.updateHelpers.forceXAxisUpdate(i)),
                  i.yaxis && (i = this.updateHelpers.forceYAxisUpdate(i)),
                  h.globals.collapsedSeriesIndices.length > 0 &&
                    this.series.clearPreviousPaths(),
                  i.theme && (i = this.theme.updateThemeOptions(i)),
                  this.updateHelpers._updateOptions(i, a, o, l, u)
                );
              },
            },
            {
              key: "updateSeries",
              value: function () {
                var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  n =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2];
                return (
                  this.series.resetSeries(!1),
                  this.updateHelpers.revertDefaultAxisMinMax(),
                  this.updateHelpers._updateSeries(i, n, a)
                );
              },
            },
            {
              key: "appendSeries",
              value: function (i) {
                var n =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  o = this.w.config.series.slice();
                return (
                  o.push(i),
                  this.series.resetSeries(!1),
                  this.updateHelpers.revertDefaultAxisMinMax(),
                  this.updateHelpers._updateSeries(o, n, a)
                );
              },
            },
            {
              key: "appendData",
              value: function (i) {
                var n =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a = this;
                (a.w.globals.dataChanged = !0), a.series.getPreviousPaths();
                for (
                  var o = a.w.config.series.slice(), l = 0;
                  l < o.length;
                  l++
                )
                  if (i[l] !== null && i[l] !== void 0)
                    for (var u = 0; u < i[l].data.length; u++)
                      o[l].data.push(i[l].data[u]);
                return (
                  (a.w.config.series = o),
                  n && (a.w.globals.initialSeries = L.clone(a.w.config.series)),
                  this.update()
                );
              },
            },
            {
              key: "update",
              value: function (i) {
                var n = this;
                return new Promise(function (a, o) {
                  new Bh(n.ctx).clear({ isUpdating: !0 });
                  var l = n.create(n.w.config.series, i);
                  if (!l) return a(n);
                  n.mount(l)
                    .then(function () {
                      typeof n.w.config.chart.events.updated == "function" &&
                        n.w.config.chart.events.updated(n, n.w),
                        n.events.fireEvent("updated", [n, n.w]),
                        (n.w.globals.isDirty = !0),
                        a(n);
                    })
                    .catch(function (u) {
                      o(u);
                    });
                });
              },
            },
            {
              key: "getSyncedCharts",
              value: function () {
                var i = this.getGroupedCharts(),
                  n = [this];
                return (
                  i.length &&
                    ((n = []),
                    i.forEach(function (a) {
                      n.push(a);
                    })),
                  n
                );
              },
            },
            {
              key: "getGroupedCharts",
              value: function () {
                var i = this;
                return Apex._chartInstances
                  .filter(function (n) {
                    if (n.group) return !0;
                  })
                  .map(function (n) {
                    return i.w.config.chart.group === n.group ? n.chart : i;
                  });
              },
            },
            {
              key: "toggleSeries",
              value: function (i) {
                return this.series.toggleSeries(i);
              },
            },
            {
              key: "highlightSeriesOnLegendHover",
              value: function (i, n) {
                return this.series.toggleSeriesOnHover(i, n);
              },
            },
            {
              key: "showSeries",
              value: function (i) {
                this.series.showSeries(i);
              },
            },
            {
              key: "hideSeries",
              value: function (i) {
                this.series.hideSeries(i);
              },
            },
            {
              key: "isSeriesHidden",
              value: function (i) {
                this.series.isSeriesHidden(i);
              },
            },
            {
              key: "resetSeries",
              value: function () {
                var i =
                    !(arguments.length > 0 && arguments[0] !== void 0) ||
                    arguments[0],
                  n =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1];
                this.series.resetSeries(i, n);
              },
            },
            {
              key: "addEventListener",
              value: function (i, n) {
                this.events.addEventListener(i, n);
              },
            },
            {
              key: "removeEventListener",
              value: function (i, n) {
                this.events.removeEventListener(i, n);
              },
            },
            {
              key: "addXaxisAnnotation",
              value: function (i) {
                var n =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  o = this;
                a && (o = a), o.annotations.addXaxisAnnotationExternal(i, n, o);
              },
            },
            {
              key: "addYaxisAnnotation",
              value: function (i) {
                var n =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  o = this;
                a && (o = a), o.annotations.addYaxisAnnotationExternal(i, n, o);
              },
            },
            {
              key: "addPointAnnotation",
              value: function (i) {
                var n =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  o = this;
                a && (o = a), o.annotations.addPointAnnotationExternal(i, n, o);
              },
            },
            {
              key: "clearAnnotations",
              value: function () {
                var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : void 0,
                  n = this;
                i && (n = i), n.annotations.clearAnnotations(n);
              },
            },
            {
              key: "removeAnnotation",
              value: function (i) {
                var n =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : void 0,
                  a = this;
                n && (a = n), a.annotations.removeAnnotation(a, i);
              },
            },
            {
              key: "getChartArea",
              value: function () {
                return this.w.globals.dom.baseEl.querySelector(
                  ".apexcharts-inner"
                );
              },
            },
            {
              key: "getSeriesTotalXRange",
              value: function (i, n) {
                return this.coreUtils.getSeriesTotalsXRange(i, n);
              },
            },
            {
              key: "getHighestValueInSeries",
              value: function () {
                var i =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0;
                return new Ln(this.ctx).getMinYMaxY(i).highestY;
              },
            },
            {
              key: "getLowestValueInSeries",
              value: function () {
                var i =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0;
                return new Ln(this.ctx).getMinYMaxY(i).lowestY;
              },
            },
            {
              key: "getSeriesTotal",
              value: function () {
                return this.w.globals.seriesTotals;
              },
            },
            {
              key: "toggleDataPointSelection",
              value: function (i, n) {
                return this.updateHelpers.toggleDataPointSelection(i, n);
              },
            },
            {
              key: "zoomX",
              value: function (i, n) {
                this.ctx.toolbar.zoomUpdateOptions(i, n);
              },
            },
            {
              key: "setLocale",
              value: function (i) {
                this.localization.setCurrentLocaleValues(i);
              },
            },
            {
              key: "dataURI",
              value: function (i) {
                return new Pi(this.ctx).dataURI(i);
              },
            },
            {
              key: "exportToCSV",
              value: function () {
                var i =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : {};
                return new Pi(this.ctx).exportToCSV(i);
              },
            },
            {
              key: "paper",
              value: function () {
                return this.w.globals.dom.Paper;
              },
            },
            {
              key: "_parentResizeCallback",
              value: function () {
                this.w.globals.animationEnded &&
                  this.w.config.chart.redrawOnParentResize &&
                  this._windowResize();
              },
            },
            {
              key: "_windowResize",
              value: function () {
                var i = this;
                clearTimeout(this.w.globals.resizeTimer),
                  (this.w.globals.resizeTimer = window.setTimeout(function () {
                    (i.w.globals.resized = !0),
                      (i.w.globals.dataChanged = !1),
                      i.ctx.update();
                  }, 150));
              },
            },
            {
              key: "_windowResizeHandler",
              value: function () {
                var i = this.w.config.chart.redrawOnWindowResize;
                typeof i == "function" && (i = i()), i && this._windowResize();
              },
            },
          ],
          [
            {
              key: "getChartByID",
              value: function (i) {
                var n = L.escapeString(i);
                if (Apex._chartInstances) {
                  var a = Apex._chartInstances.filter(function (o) {
                    return o.id === n;
                  })[0];
                  return a && a.chart;
                }
              },
            },
            {
              key: "initOnLoad",
              value: function () {
                for (
                  var i = document.querySelectorAll("[data-apexcharts]"), n = 0;
                  n < i.length;
                  n++
                )
                  new M(
                    i[n],
                    JSON.parse(i[n].getAttribute("data-options"))
                  ).render();
              },
            },
            {
              key: "exec",
              value: function (i, n) {
                var a = this.getChartByID(i);
                if (a) {
                  a.w.globals.isExecCalled = !0;
                  var o = null;
                  if (a.publicMethods.indexOf(n) !== -1) {
                    for (
                      var l = arguments.length,
                        u = new Array(l > 2 ? l - 2 : 0),
                        h = 2;
                      h < l;
                      h++
                    )
                      u[h - 2] = arguments[h];
                    o = a[n].apply(a, u);
                  }
                  return o;
                }
              },
            },
            {
              key: "merge",
              value: function (i, n) {
                return L.extend(i, n);
              },
            },
          ]
        ),
        M
      );
    })();
  e.exports = wy;
})(Yc, Yc.exports);
var kC = Yc.exports,
  hv = { exports: {} },
  CC = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",
  AC = CC,
  PC = AC;
function dv() {}
function fv() {}
fv.resetWarningCache = dv;
var TC = function () {
  function e(s, c, f, m, y, S) {
    if (S !== PC) {
      var T = new Error(
        "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
      );
      throw ((T.name = "Invariant Violation"), T);
    }
  }
  e.isRequired = e;
  function t() {
    return e;
  }
  var r = {
    array: e,
    bigint: e,
    bool: e,
    func: e,
    number: e,
    object: e,
    string: e,
    symbol: e,
    any: e,
    arrayOf: t,
    element: e,
    elementType: e,
    instanceOf: t,
    node: e,
    objectOf: t,
    oneOf: t,
    oneOfType: t,
    shape: t,
    exact: t,
    checkPropTypes: fv,
    resetWarningCache: dv,
  };
  return (r.PropTypes = r), r;
};
hv.exports = TC();
var LC = hv.exports,
  pv;
Object.defineProperty(uv, "__esModule", { value: !0 });
var EC =
    typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
      ? function (e) {
          return typeof e;
        }
      : function (e) {
          return e &&
            typeof Symbol == "function" &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? "symbol"
            : typeof e;
        },
  MC =
    Object.assign ||
    function (e) {
      for (var t = 1; t < arguments.length; t++) {
        var r,
          s = arguments[t];
        for (r in s)
          Object.prototype.hasOwnProperty.call(s, r) && (e[r] = s[r]);
      }
      return e;
    },
  OC = (function () {
    function e(t, r) {
      for (var s = 0; s < r.length; s++) {
        var c = r[s];
        (c.enumerable = c.enumerable || !1),
          (c.configurable = !0),
          "value" in c && (c.writable = !0),
          Object.defineProperty(t, c.key, c);
      }
    }
    return function (t, r, s) {
      return r && e(t.prototype, r), s && e(t, s), t;
    };
  })(),
  RC = kC,
  gv = Sh(RC),
  mv = re,
  Pr = Sh(mv),
  zC = LC,
  hi = Sh(zC);
function Sh(e) {
  return e && e.__esModule ? e : { default: e };
}
function IC(e, t, r) {
  return (
    t in e
      ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[t] = r),
    e
  );
}
function DC(e, t) {
  var r,
    s = {};
  for (r in e)
    0 <= t.indexOf(r) ||
      (Object.prototype.hasOwnProperty.call(e, r) && (s[r] = e[r]));
  return s;
}
function NC(e, t) {
  if (!(e instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
function FC(e, t) {
  if (e) return !t || (typeof t != "object" && typeof t != "function") ? e : t;
  throw new ReferenceError(
    "this hasn't been initialised - super() hasn't been called"
  );
}
function _C(e, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError(
      "Super expression must either be null or a function, not " + typeof t
    );
  (e.prototype = Object.create(t && t.prototype, {
    constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 },
  })),
    t &&
      (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t));
}
window.ApexCharts = gv.default;
var sp = (function () {
  function e(t) {
    NC(this, e);
    var r = FC(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t));
    return (
      Pr.default.createRef
        ? (r.chartRef = Pr.default.createRef())
        : (r.setRef = function (s) {
            return (r.chartRef = s);
          }),
      (r.chart = null),
      r
    );
  }
  return (
    _C(e, mv.Component),
    OC(e, [
      {
        key: "render",
        value: function () {
          var t = DC(this.props, []);
          return Pr.default.createElement(
            "div",
            MC({ ref: Pr.default.createRef ? this.chartRef : this.setRef }, t)
          );
        },
      },
      {
        key: "componentDidMount",
        value: function () {
          var t = Pr.default.createRef ? this.chartRef.current : this.chartRef;
          (this.chart = new gv.default(t, this.getConfig())),
            this.chart.render();
        },
      },
      {
        key: "getConfig",
        value: function () {
          var f = this.props,
            t = f.type,
            r = f.height,
            s = f.width,
            c = f.series,
            f = f.options;
          return this.extend(f, {
            chart: { type: t, height: r, width: s },
            series: c,
          });
        },
      },
      {
        key: "isObject",
        value: function (t) {
          return (
            t &&
            (t === void 0 ? "undefined" : EC(t)) === "object" &&
            !Array.isArray(t) &&
            t != null
          );
        },
      },
      {
        key: "extend",
        value: function (t, r) {
          var s = this,
            c =
              (typeof Object.assign != "function" &&
                (Object.assign = function (f) {
                  if (f == null)
                    throw new TypeError(
                      "Cannot convert undefined or null to object"
                    );
                  for (var m = Object(f), y = 1; y < arguments.length; y++) {
                    var S = arguments[y];
                    if (S != null)
                      for (var T in S) S.hasOwnProperty(T) && (m[T] = S[T]);
                  }
                  return m;
                }),
              Object.assign({}, t));
          return (
            this.isObject(t) &&
              this.isObject(r) &&
              Object.keys(r).forEach(function (f) {
                s.isObject(r[f]) && f in t
                  ? (c[f] = s.extend(t[f], r[f]))
                  : Object.assign(c, IC({}, f, r[f]));
              }),
            c
          );
        },
      },
      {
        key: "componentDidUpdate",
        value: function (t) {
          if (!this.chart) return null;
          var c = this.props,
            y = c.options,
            r = c.series,
            s = c.height,
            c = c.width,
            f = JSON.stringify(t.options),
            m = JSON.stringify(t.series),
            y = JSON.stringify(y),
            S = JSON.stringify(r);
          (f === y && m === S && s === t.height && c === t.width) ||
            (m !== S && f === y && s === t.height && c === t.width
              ? this.chart.updateSeries(r)
              : this.chart.updateOptions(this.getConfig()));
        },
      },
      {
        key: "componentWillUnmount",
        value: function () {
          this.chart &&
            typeof this.chart.destroy == "function" &&
            this.chart.destroy();
        },
      },
    ]),
    e
  );
})();
((pv = uv.default = sp).propTypes = {
  type: hi.default.string.isRequired,
  width: hi.default.oneOfType([hi.default.string, hi.default.number]),
  height: hi.default.oneOfType([hi.default.string, hi.default.number]),
  series: hi.default.array.isRequired,
  options: hi.default.object.isRequired,
}),
  (sp.defaultProps = { type: "line", width: "100%", height: "auto" });
const HC = () => {
    const e = {
      series: [10, 5, 50, 11.7, 23.3],
      options: {
        labels: ["Staking", "CEX", "Burn", "Liquidity", "Fairlaunch"],
        chart: { type: "donut", fontFamily: "Nunito", fontSize: "15px" },
        colors: [
          "rgba(53, 177, 227, 0.8)",
          "rgba(228, 72, 86, 0.8)",
          "rgba(252, 142, 45, 0.8)",
          "rgba(149, 188, 19, 0.8)",
          "rgba(128, 0, 128, 0.8)",
        ],
        legend: { show: !1 },
        dataLabels: {
          style: { fontSize: "16px", textTransform: "uppercase" },
          enabled: !0,
          formatter: function (t, r) {
            return r.w.config.labels[r.seriesIndex];
          },
          dropShadow: { enabled: !0 },
        },
        tooltip: {
          enabled: !1,
          fixed: {
            enabled: !0,
            position: "topMiddle",
            offsetX: 0,
            offsetY: -20,
          },
          y: {
            formatter: function (t) {
              return `${t}%`;
            },
          },
          x: { show: !1 },
          title: {
            formatter: function () {
              return "";
            },
          },
        },
        plotOptions: {
          pie: {
            expandOnClick: !1,
            donut: {
              size: "40%",
              labels: {
                show: !0,
                value: {
                  show: !0,
                  color: "#fff",
                  fontSize: "20px",
                  fontFamily: "Bungee",
                  offsetY: 10,
                },
                total: {
                  show: !0,
                  label: "Total",
                  color: "#4385F5",
                  fontSize: "16px",
                  fontFamily: "Bungee",
                  fontWeight: 600,
                  formatter: function (t) {
                    return (
                      t.globals.seriesTotals.reduce((r, s) => r + s, 0) + "%"
                    );
                  },
                },
              },
            },
          },
        },
        responsive: [
          { breakpoint: 480, options: { chart: { width: 400, height: 400 } } },
        ],
      },
    };
    return $.jsx("div", {
      className: "donut-chart-container ",
      children: $.jsx(pv, {
        options: e.options,
        series: e.series,
        type: "donut",
        width: 500,
        height: 500,
      }),
    });
  },
  XC = () => {
    const e = [
      { title: "Symbol: ", value: "$SBF" },
      { title: "Supply: ", value: "21,000,000" },
      { title: "Transaction Tax: ", value: "0%" },
    ];
    return $.jsx("section", {
      className: "w-full h-auto px-5 py-10 text-white pt-44",
      id: "tokenomics",
      children: $.jsxs("div", {
        className: "my-container flex items-center lg:flex-row flex-col",
        children: [
          $.jsxs("div", {
            className: "w-full space-y-8",
            children: [
              $.jsx($t, {
                children: $.jsx("h1", {
                  className: "font-primary  text-4xl sm:text-6xl md:text-7xl ",
                  children: "TOKENOMICS",
                }),
              }),
              $.jsxs("ul", {
                className: "space-y-2",
                children: [
                  e.map((t) =>
                    $.jsxs(
                      "li",
                      {
                        className: "flex items-center gap-x-3",
                        children: [
                          $.jsx("div", {
                            className:
                              "p-3 bg-primary/20 text-primary rounded-full flex-shrink-0 w-9 h-9 flex items-center justify-center",
                            children: "€",
                          }),
                          $.jsx("h1", {
                            className: "font-primary text-sm",
                            children: t.title,
                          }),
                          $.jsx("h1", {
                            className: "font-secondary text-sm",
                            children: t.value,
                          }),
                        ],
                      },
                      t.title
                    )
                  ),
                  $.jsxs("li", {
                    className: "flex items-center gap-x-3",
                    children: [
                      $.jsx("div", {
                        className:
                          "p-3 bg-primary/20 text-primary rounded-full flex-shrink-0 w-9 h-9 flex items-center justify-center",
                        children: "€",
                      }),
                      $.jsxs("div", {
                        className: "",
                        children: [
                          $.jsx("h1", {
                            className: "font-primary text-sm",
                            children: "Contract:",
                          }),
                          $.jsx("h1", {
                            className: "font-secondary sm:text-sm text-xs",
                            children:
                              "0x2FcBD5a6eb694d573D280664393681cB52b9a98b",
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
            ],
          }),
          $.jsx("div", {
            className: "w-full grid place-content-center",
            children: $.jsx(HC, {}),
          }),
        ],
      }),
    });
  },
  jC = "/assets/vid1.mov",
  BC = () => {
    const e = xC();
    async function t() {
      await e.start({ opacity: 1, y: 20, transition: { duration: 1 } }),
        e.start({
          y: [20, -20],
          transition: {
            repeat: 1 / 0,
            ease: "easeInOut",
            repeatType: "reverse",
            duration: 1.5,
          },
        });
    }
    return (
      re.useEffect(() => {
        t();
      }, []),
      $.jsxs("section", {
        className: "w-full min-h-screen relative px-5 py-10 flex items-center u-class-x",
        id: "home",
        children: [
          $.jsx("video", {
            src: jC,
            playsInline: !0,
            autoPlay: !0,
            // muted: !1,
            preload: "auto",
            loop: !0,
            className:
              "w-full h-full fixed top-0 left-0 object-cover brightness-75",
          }),
          $.jsxs("div", {
            className: "my-container z-10 flex items-center",
            children: [
              $.jsxs("div", {
                className: "w-full text-white lg:text-left text-center",
                children: [
                  $.jsxs("div", {
                    className: "mt-2 w-fit mx-auto lg:mx-0",
                    children: [
                      $.jsx($t, {
                        delay: 0.4,
                        children: $.jsx("h1", {
                          className:
                            "font-primary lg:max-w-sm text-4xl sm:text-6xl md:text-4xl",
                          children: "SBF will send you to",
                        }),
                      }),
                      $.jsx($t, {
                        delay: 0.5,
                        children: $.jsxs("h1", {
                          className:
                            "font-primary text-6xl sm:text-6xl md:text-6xl glitch w-fit",
                          children: [
                            "VALHALLA",
                            $.jsx("span", {
                              "aria-hidden": "true",
                              children: "VALHALLA",
                            }),
                            $.jsx("span", {
                              "aria-hidden": "true",
                              children: "VALHALLA",
                            }),
                          ],
                        }),
                      }),
                    ],
                  }),
                  $.jsx($t, {
                    delay: 0.6,
                    children: $.jsx("p", {
                      className:
                        "mt-4 font-secondary lg:w-[33rem] lg:text-left text-center w-full",
                      children:
                        "All That is hidden shall be revealed, $SBF is here to changhe everything. #FTX",
                    }),
                  }),
                  $.jsxs($t, {
                    delay: 0.7,
                    children: [
                      $.jsx(xn, {
                        link: "https://app.uniswap.org/#/swap?inputCurrency=ETH&outputCurrency=0x2fcbd5a6eb694d573d280664393681cb52b9a98b",
                        className: "mt-4 mr-2",
                        children: "Buy Token",
                      }),
                      $.jsx(xn, {
                        link: "https://www.dextools.io/",
                        className: "mt-4",
                        children: "Chart",
                      }),
                    ],
                  }),
                ],
              }),
              $.jsx("div", {
                className: "w-full justify-center lg:flex hidden",
                children: $.jsx(gr.img, {
                  animate: e,
                  src: "/hero/sam.png",
                  alt: "Hero",
                  className: "",
                }),
              }),
            ],
          }),
        ],
      })
    );
  };
var xv = {};
function VC(e) {
  if (!e || typeof window > "u") return;
  const t = document.createElement("style");
  return (
    t.setAttribute("type", "text/css"),
    (t.innerHTML = e),
    document.head.appendChild(t),
    e
  );
}
Object.defineProperty(xv, "__esModule", { value: !0 });
var qe = re;
function YC(e) {
  return e && typeof e == "object" && "default" in e ? e : { default: e };
}
var Li = YC(qe);
VC(`.rfm-marquee-container {
  overflow-x: hidden;
  display: flex;
  flex-direction: row;
  position: relative;
  width: var(--width);
  transform: var(--transform);
}
.rfm-marquee-container:hover div {
  animation-play-state: var(--pause-on-hover);
}
.rfm-marquee-container:active div {
  animation-play-state: var(--pause-on-click);
}

.rfm-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
}
.rfm-overlay::before, .rfm-overlay::after {
  background: linear-gradient(to right, var(--gradient-color), transparent);
  content: "";
  height: 100%;
  position: absolute;
  width: var(--gradient-width);
  z-index: 2;
  pointer-events: none;
  touch-action: none;
}
.rfm-overlay::after {
  right: 0;
  top: 0;
  transform: rotateZ(180deg);
}
.rfm-overlay::before {
  left: 0;
  top: 0;
}

.rfm-marquee {
  flex: 0 0 auto;
  min-width: var(--min-width);
  z-index: 1;
  display: flex;
  flex-direction: row;
  align-items: center;
  animation: scroll var(--duration) linear var(--delay) var(--iteration-count);
  animation-play-state: var(--play);
  animation-delay: var(--delay);
  animation-direction: var(--direction);
}
@keyframes scroll {
  0% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-100%);
  }
}

.rfm-initial-child-container {
  flex: 0 0 auto;
  display: flex;
  min-width: auto;
  flex-direction: row;
  align-items: center;
}

.rfm-child {
  transform: var(--transform);
}`);
const WC = qe.forwardRef(function (
  {
    style: t = {},
    className: r = "",
    autoFill: s = !1,
    play: c = !0,
    pauseOnHover: f = !1,
    pauseOnClick: m = !1,
    direction: y = "left",
    speed: S = 50,
    delay: T = 0,
    loop: O = 0,
    gradient: z = !1,
    gradientColor: N = "white",
    gradientWidth: X = 200,
    onFinish: V,
    onCycleComplete: Y,
    onMount: Q,
    children: j,
  },
  L
) {
  const [H, U] = qe.useState(0),
    [B, K] = qe.useState(0),
    [te, q] = qe.useState(1),
    [ie, ae] = qe.useState(!1),
    pe = qe.useRef(null),
    le = L || pe,
    he = qe.useRef(null),
    xe = qe.useCallback(() => {
      if (he.current && le.current) {
        const fe = le.current.getBoundingClientRect(),
          be = he.current.getBoundingClientRect();
        let je = fe.width,
          Oe = be.width;
        (y === "up" || y === "down") && ((je = fe.height), (Oe = be.height)),
          q(s && je && Oe && Oe < je ? Math.ceil(je / Oe) : 1),
          U(je),
          K(Oe);
      }
    }, [s, le, y]);
  qe.useEffect(() => {
    if (ie && (xe(), he.current && le.current)) {
      const fe = new ResizeObserver(() => xe());
      return (
        fe.observe(le.current),
        fe.observe(he.current),
        () => {
          fe && fe.disconnect();
        }
      );
    }
  }, [xe, le, ie]),
    qe.useEffect(() => {
      xe();
    }, [xe, j]),
    qe.useEffect(() => {
      ae(!0);
    }, []),
    qe.useEffect(() => {
      typeof Q == "function" && Q();
    }, []);
  const we = qe.useMemo(
      () => (s ? (B * te) / S : B < H ? H / S : B / S),
      [s, H, B, te, S]
    ),
    Me = qe.useMemo(
      () =>
        Object.assign(Object.assign({}, t), {
          "--pause-on-hover": !c || f ? "paused" : "running",
          "--pause-on-click": !c || (f && !m) || m ? "paused" : "running",
          "--width": y === "up" || y === "down" ? "100vh" : "100%",
          "--transform":
            y === "up"
              ? "rotate(-90deg)"
              : y === "down"
              ? "rotate(90deg)"
              : "none",
        }),
      [t, c, f, m, y]
    ),
    Xe = qe.useMemo(
      () => ({
        "--gradient-color": N,
        "--gradient-width": typeof X == "number" ? `${X}px` : X,
      }),
      [N, X]
    ),
    se = qe.useMemo(
      () => ({
        "--play": c ? "running" : "paused",
        "--direction": y === "left" ? "normal" : "reverse",
        "--duration": `${we}s`,
        "--delay": `${T}s`,
        "--iteration-count": O ? `${O}` : "infinite",
        "--min-width": s ? "auto" : "100%",
      }),
      [c, y, we, T, O, s]
    ),
    ge = qe.useMemo(
      () => ({
        "--transform":
          y === "up"
            ? "rotate(90deg)"
            : y === "down"
            ? "rotate(-90deg)"
            : "none",
      }),
      [y]
    ),
    me = qe.useCallback(
      (fe) =>
        [...Array(Number.isFinite(fe) && fe >= 0 ? fe : 0)].map((be, je) =>
          Li.default.createElement(
            qe.Fragment,
            { key: je },
            qe.Children.map(j, (Oe) =>
              Li.default.createElement(
                "div",
                { style: ge, className: "rfm-child" },
                Oe
              )
            )
          )
        ),
      [ge, j]
    );
  return ie
    ? Li.default.createElement(
        "div",
        { ref: le, style: Me, className: "rfm-marquee-container " + r },
        z &&
          Li.default.createElement("div", {
            style: Xe,
            className: "rfm-overlay",
          }),
        Li.default.createElement(
          "div",
          {
            className: "rfm-marquee",
            style: se,
            onAnimationIteration: Y,
            onAnimationEnd: V,
          },
          Li.default.createElement(
            "div",
            { className: "rfm-initial-child-container", ref: he },
            qe.Children.map(j, (fe) =>
              Li.default.createElement(
                "div",
                { style: ge, className: "rfm-child" },
                fe
              )
            )
          ),
          me(te - 1)
        ),
        Li.default.createElement(
          "div",
          { className: "rfm-marquee", style: se },
          me(te)
        )
      )
    : null;
});
var kh = (xv.default = WC);
const GC = () => {
    const e = [
      { title: "CoinGeko", img: "cg" },
      { title: "CoinMarketCap", img: "cmc" },
      { title: "DexTools", img: "dextools" },
      { title: "DexView", img: "dexview" },
      { title: "PinkSale", img: "pinksale" },
    ];
    return $.jsx("div", {
      className: "w-full relative z-10 h-auto px-5 py-10 u-class-1",
      id: "partners",
      children: $.jsxs("div", {
        className: "my-container space-y-10",
        children: [
          $.jsxs("div", {
            className: "text-white",
            children: [
              $.jsx($t, {
                children: $.jsx("h1", {
                  className:
                    "font-primary text-4xl sm:text-6xl uppercase  max-w-xl",
                  children: "Exciting",
                }),
              }),
              $.jsx($t, {
                children: $.jsxs("h1", {
                  className: "font-primary text-4xl sm:text-6xl glitch w-fit",
                  children: [
                    "PARTNERSHIPS",
                    $.jsx("span", {
                      "aria-hidden": "true",
                      children: "PARTNERSHIPS",
                    }),
                    $.jsx("span", {
                      "aria-hidden": "true",
                      children: "PARTNERSHIPS",
                    }),
                  ],
                }),
              }),
            ],
          }),
          $.jsx(kh, {
            autoFill: !0,
            children: e.map((t) =>
              $.jsxs(
                "div",
                {
                  className:
                    "flex text-white items-center text-2xl gap-x-2 mx-5 md:mx-10",
                  children: [
                    $.jsx("img", {
                      src: `/partners/${t.img}.webp`,
                      alt: t.title,
                      className: "md:w-16 w-10",
                    }),
                    $.jsx("h1", {
                      className: "font-secondary font-semibold",
                      children: t.title,
                    }),
                  ],
                },
                t.title
              )
            ),
          }),
        ],
      }),
    });
  },
  UC = () => {
    const e = [
      {
        img: "cmc",
        link: "https://coinmarketcap.com/community/articles/653bd89edef1ce13d81f6307/",
      },
      {
        img: "binance",
        link: "https://www.binance.com/en/feed/post/1526627?ref=424364688&utm_campaign=app_share_link",
      },
      { img: "bitswage", link: "" },
      { img: "blockchair", link: "" },
      {
        img: "ce",
        link: "https://cryptoexploit.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "coinopening",
        link: "https://coinopening.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "coinpedia",
        link: "https://coinpedia.org/guest-post/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "coinpress",
        link: "https://coinpress.media/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "copinsphere",
        link: "https://coinsphere.org/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "coinstats",
        link: "https://coinstats.app/news/d10b96618529fd564a695098d933b6f2023bda70d30365e74429914584165a7f_SBF-Coin-(%24SBF)%3A-Riding-the-Wave-of-the-Bitcoin-SBF-Hype-to-New-Heights/",
      },
      {
        img: "cr",
        link: "https://cryptorank.io/news/feed/98e2b-SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights",
      },
      {
        img: "cryptocrunch",
        link: "https://cryptocrunches.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "cryptoddy",
        link: "https://cryptoddy.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "cryptoexit",
        link: "https://cryptoexitscams.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "cryptonewsies",
        link: "https://www.cryptonewsies.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "cryptounfold",
        link: "https://cryptounfold.org/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "cryptoyish",
        link: "https://cryptoyish.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "elielle",
        link: "https://eielle.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "newscall",
        link: "https://newscall.co/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "recentcoin",
        link: "https://recentcoin.com/news/104024-SBF-coin-SBF-riding-the-wave-of-the",
      },
      { img: "smartstaker", link: "" },
      {
        img: "tb",
        link: "https://techbullion.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "tc",
        link: "https://thecapital.io/article/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights-Nhpv_Suj-5BJhqjPJcB",
      },
      {
        img: "upstanding",
        link: "https://www.upstandinghackers.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "wagebits",
        link: "https://bitswage.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
      {
        img: "yourcryptopr",
        link: "https://yourcryptopr.com/SBF-coin-SBF-riding-the-wave-of-the-bitcoin-SBF-hype-to-new-heights/",
      },
    ];
    return $.jsx("div", {
      className: "w-full relative z-10 h-auto px-5 py-10",
      id: "press",
      children: $.jsxs("div", {
        className: "my-container space-y-10",
        children: [
          $.jsx("div", {
            className: "text-white",
            children: $.jsx($t, {
              children: $.jsxs("h1", {
                className: "font-primary text-4xl sm:text-6xl glitch w-fit",
                children: [
                  "CRYPTO MEDIA",
                  $.jsx("span", {
                    "aria-hidden": "true",
                    children: "CRYPTO MEDIA",
                  }),
                  $.jsx("span", {
                    "aria-hidden": "true",
                    children: "CRYPTO MEDIA",
                  }),
                ],
              }),
            }),
          }),
          $.jsx(kh, {
            autoFill: !0,
            children: e.map((t) =>
              $.jsx("div", {
                className:
                  "flex text-white items-center text-2xl gap-x-2 mx-5 md:mx-10",
                children: $.jsx("a", {
                  href: t.link,
                  children: $.jsx("img", {
                    src: `/media/${t.img}.webp`,
                    className: "md:w-32 w-10",
                  }),
                }),
              })
            ),
          }),
        ],
      }),
    });
  },
  $C = () => {
    const e = [
      {
        title: "Yahoo Finance",
        img: "yahoo",
        link: "https://finance.yahoo.com/news/introduction-SBF-empowering-investors-decision-213509455.html",
      },
      {
        title: "Benzinga",
        img: "benzinga",
        link: "https://www.benzinga.com/amp/content/35385133",
      },
      {
        title: "News Direct",
        img: "newsdirect",
        link: "https://newsdirect.com/news/introduction-to-SBF-empowering-investors-about-their-decision-making-for-investments-321781550",
      },
      {
        title: "MENA FN",
        img: "mfn",
        link: "https://menafn.com/1107293452/Introduction-To-SBF-Empowering-Investors-About-Their-Decision-Making-For-Investments",
      },
      {
        title: "Atlantic Brief",
        img: "abrief",
        link: "https://atlanticbrief.com/introduction-to-SBF-empowering-investors-about-their-decision-making-for-investments/",
      },
      {
        title: "AP News",
        img: "apress",
        link: "https://apnews.com/press-release/news-direct-corporation/financial-services-55a5bc5e9f6dcc6ca8c37e3551b03669",
      },
    ];
    return $.jsx("div", {
      className: "w-full relative z-10 h-auto px-5 py-10",
      id: "press",
      children: $.jsxs("div", {
        className: "my-container space-y-10",
        children: [
          $.jsx("div", {
            className: "text-white",
            children: $.jsx($t, {
              children: $.jsxs("h1", {
                className: "font-primary text-4xl sm:text-6xl glitch w-fit",
                children: [
                  "PRESS RELEASES",
                  $.jsx("span", {
                    "aria-hidden": "true",
                    children: "PRESS RELEASES",
                  }),
                  $.jsx("span", {
                    "aria-hidden": "true",
                    children: "PRESS RELEASES",
                  }),
                ],
              }),
            }),
          }),
          $.jsx(kh, {
            autoFill: !0,
            children: e.map((t) =>
              $.jsx(
                "div",
                {
                  className:
                    "flex text-white items-center text-2xl gap-x-2 mx-5 md:mx-10",
                  children: $.jsxs("a", {
                    href: t.link,
                    children: [
                      $.jsx("img", {
                        src: `/press/${t.img}.webp`,
                        alt: t.title,
                        className: "md:w-16 w-10",
                      }),
                      $.jsx("h1", {
                        className: "font-secondary font-semibold",
                        children: t.title,
                      }),
                    ],
                  }),
                },
                t.title
              )
            ),
          }),
        ],
      }),
    });
  },
  qC = "/assets/spin.mp4",
  ZC = () =>
    $.jsx("section", {
      className:
        "w-full h-auto px-5 py-20 relative flex items-center text-white overflow-hidden",
      children: $.jsxs("div", {
        className:
          "my-container bg-black/20 backdrop-blur-md  lg:h-[30rem] p-7 sm:px-20 flex items-center border-b-2 border-primary relative lg:flex-row flex-col overflow-hidden",
        children: [
          $.jsx("div", {
            className: "w-full relative z-10",
            children: $.jsx($t, {
              children: $.jsx("h1", {
                className:
                  "font-primary lg:text-6xl md:text-5xl text-4xl max-w-[full] lg:leading-[5rem] text-center lg:text-left",
                children: "JOIN THE $SBF COMMUNITY TO START THE FUTURE",
              }),
            }),
          }),
          $.jsx("div", {
            className:
              "w-full flex items-center justify-center lg:opacity-100 opacity-20",
            children: $.jsx(gr.img, {
              animate: { rotate: 360 },
              transition: { duration: 20, ease: "linear", repeat: 1 / 0 },
              src: "/sam.png",
              alt: "Logo",
              className: "lg:w-[70%] w-72 lg:relative absolute",
            }),
          }),
          $.jsx("div", {
            className: "lg:absolute bottom-2 right-2 z-10 mt-5 lg:mt-0",
            children: $.jsx("a", {
              href: "https://t.me/",
              children: $.jsx(xn, { className: "py-3", children: "Join Now" }),
            }),
          }),
        ],
      }),
    });
function KC(e) {
  return mo({
    tag: "svg",
    attr: { viewBox: "0 0 32 32" },
    child: [
      {
        tag: "path",
        attr: {
          d: "M 26.070313 3.996094 C 25.734375 4.011719 25.417969 4.109375 25.136719 4.21875 L 25.132813 4.21875 C 24.847656 4.332031 23.492188 4.902344 21.433594 5.765625 C 19.375 6.632813 16.703125 7.757813 14.050781 8.875 C 8.753906 11.105469 3.546875 13.300781 3.546875 13.300781 L 3.609375 13.277344 C 3.609375 13.277344 3.25 13.394531 2.875 13.652344 C 2.683594 13.777344 2.472656 13.949219 2.289063 14.21875 C 2.105469 14.488281 1.957031 14.902344 2.011719 15.328125 C 2.101563 16.050781 2.570313 16.484375 2.90625 16.722656 C 3.246094 16.964844 3.570313 17.078125 3.570313 17.078125 L 3.578125 17.078125 L 8.460938 18.722656 C 8.679688 19.425781 9.949219 23.597656 10.253906 24.558594 C 10.433594 25.132813 10.609375 25.492188 10.828125 25.765625 C 10.933594 25.90625 11.058594 26.023438 11.207031 26.117188 C 11.265625 26.152344 11.328125 26.179688 11.390625 26.203125 C 11.410156 26.214844 11.429688 26.21875 11.453125 26.222656 L 11.402344 26.210938 C 11.417969 26.214844 11.429688 26.226563 11.441406 26.230469 C 11.480469 26.242188 11.507813 26.246094 11.558594 26.253906 C 12.332031 26.488281 12.953125 26.007813 12.953125 26.007813 L 12.988281 25.980469 L 15.871094 23.355469 L 20.703125 27.0625 L 20.8125 27.109375 C 21.820313 27.550781 22.839844 27.304688 23.378906 26.871094 C 23.921875 26.433594 24.132813 25.875 24.132813 25.875 L 24.167969 25.785156 L 27.902344 6.65625 C 28.007813 6.183594 28.035156 5.742188 27.917969 5.3125 C 27.800781 4.882813 27.5 4.480469 27.136719 4.265625 C 26.769531 4.046875 26.40625 3.980469 26.070313 3.996094 Z M 25.96875 6.046875 C 25.964844 6.109375 25.976563 6.101563 25.949219 6.222656 L 25.949219 6.234375 L 22.25 25.164063 C 22.234375 25.191406 22.207031 25.25 22.132813 25.308594 C 22.054688 25.371094 21.992188 25.410156 21.667969 25.28125 L 15.757813 20.75 L 12.1875 24.003906 L 12.9375 19.214844 C 12.9375 19.214844 22.195313 10.585938 22.59375 10.214844 C 22.992188 9.84375 22.859375 9.765625 22.859375 9.765625 C 22.886719 9.3125 22.257813 9.632813 22.257813 9.632813 L 10.082031 17.175781 L 10.078125 17.15625 L 4.242188 15.191406 L 4.242188 15.1875 C 4.238281 15.1875 4.230469 15.183594 4.226563 15.183594 C 4.230469 15.183594 4.257813 15.171875 4.257813 15.171875 L 4.289063 15.15625 L 4.320313 15.144531 C 4.320313 15.144531 9.53125 12.949219 14.828125 10.71875 C 17.480469 9.601563 20.152344 8.476563 22.207031 7.609375 C 24.261719 6.746094 25.78125 6.113281 25.867188 6.078125 C 25.949219 6.046875 25.910156 6.046875 25.96875 6.046875 Z",
        },
      },
    ],
  })(e);
}
const QC = () => {
    const e = [
      { link: "https://t.me/", icon: $.jsx(KC, {}) },
      { link: "https://twitter.com/", icon: $.jsx(Zb, {}) },
    ];
    return $.jsxs("footer", {
      className: "w-full h-auto relative pb-16 overflow-hidden text-white",
      id: "socials",
      children: [
        $.jsxs("div", {
          className:
            "max-w-[1400px] mx-auto w-full px-5 text-center relative z-10",
          children: [
            $.jsxs("div", {
              children: [
                $.jsxs("div", {
                  className: "flex w-fit mx-auto items-end",
                  children: [
                    $.jsx("img", {
                      src: "/sam.png",
                      alt: "Logo",
                      className: "w-20 mx-auto -mr-8",
                    }),
                    $.jsx("img", {
                      src: "/sam.png",
                      alt: "Logo",
                      className: "w-32 mx-auto relative z-10",
                    }),
                    $.jsx("img", {
                      src: "/sam.png",
                      alt: "Logo",
                      className: "w-20 mx-auto -ml-8",
                    }),
                  ],
                }),
                $.jsx("h1", {
                  className:
                    "sm:text-[46px] text-[32px] font-bold leading-tight font-primary bg-clip-text w-fit mx-auto mt-6",
                  children: "Join us on SBF",
                }),
                $.jsx("p", {
                  className:
                    "font-medium font-primary text-footergry text-[15px] sm:text-[22px] mt-2 sm:mt-0",
                  children:
                    "For more details about our progress and workflow be sure to follow",
                }),
              ],
            }),
            $.jsx("ul", {
              className:
                "flex w-fit mx-auto mt-12 text-2xl sm:text-4xl sm:gap-x-7 gap-x-5",
              children: e.map((t, r) =>
                $.jsx(
                  "li",
                  {
                    className:
                      "hover:scale-[1.1] transition-all ease-in-out duration-300 hover:text-cyan ",
                    children: $.jsx("a", {
                      href: t.link,
                      target: "_blank",
                      rel: "noopener noreferrer",
                      className: "",
                      children: t.icon,
                    }),
                  },
                  r
                )
              ),
            }),
          ],
        }),
        $.jsx("div", {
          className: "max-w-[1400px] mx-auto w-full  relative z-10",
          children: $.jsxs("div", {
            className: "sm:mt-10 text-center mt-10",
            children: [
              $.jsx("p", {
                className: "font-secondary font-bold",
                children: "contact@SBFcoin.dev",
              }),
              $.jsx("h3", {
                className:
                  "font-primary uppercase text-center mx-auto w-full text-sm mt-2",
                children: "© SBF 2023 | All rights reserved.",
              }),
            ],
          }),
        }),
      ],
    });
  },
  JC = () =>
    $.jsxs("section", {
      className:
        "w-full h-auto px-5 py-20 relative flex flex-col items-center text-white overflow-hidden",
      id: "staking",
      children: [
        $.jsx("h2", {
          className:
            "text-2xl sm:w-[20rem] lg:text-3xl md:w-[40rem] lg:w-[60rem] font-primary font-semibold text-center mb-4",
          children:
            "Choose any of the 3 pools and stake your $SBF on our DAPP! NO deposit/withdraw fee.",
        }),
        $.jsx("p", {
          className: "text-center mb-8 font-secondary",
          children:
            "3% of supply locked solely for SBF event which will be distributed to all stakers at that time!",
        }),
        $.jsx("div", {
          className:
            "flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4 items-center w-full md:w-auto",
          children: $.jsxs("div", {
            className:
              "p-4 bg-white bg-opacity-40 hover:bg-opacity-100 hover:text-[#110e0e] duration-300 transition-all hover:scale-110 backdrop-blur-md rounded-xl text-white text-center font-primary w-[30rem]",
            children: [
              $.jsx("h3", {
                className: "text-xl font-bold mb-2",
                children: "STAKING POOL",
              }),
              $.jsx("p", {
                className: "text-lg font-bold font-secondary uppercase",
                children: "One staking pool with NO LOCK",
              }),
              $.jsx("p", {
                className: "text-lg font-bold font-secondary uppercase",
                children: "NO Deposit/Withdraw fee",
              }),
              $.jsx("p", {
                className: "text-lg font-bold font-secondary uppercase",
                children: "NO early withdraw fee",
              }),
              $.jsx("p", {
                className: "text-lg font-bold font-secondary uppercase",
                children: "7% SUPPLY provided to staking",
              }),
              $.jsx("p", {
                className: "text-lg font-bold font-secondary uppercase",
                children: "BIG APY!",
              }),
            ],
          }),
        }),
        $.jsx("div", {
          className: "",
          children: $.jsx($t, {
            delay: 0.7,
            children: $.jsx(xn, {
              link: "https://stake.SBFcoin.dev",
              className: "mt-10",
              children: "STAKE NOW",
            }),
          }),
        }),
      ],
    });
var vv = {},
  yv = {},
  Po = {},
  bv = {};
(function (e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), (e.default = void 0);
  var t = {
      animating: !1,
      autoplaying: null,
      currentDirection: 0,
      currentLeft: null,
      currentSlide: 0,
      direction: 1,
      dragging: !1,
      edgeDragged: !1,
      initialized: !1,
      lazyLoadedList: [],
      listHeight: null,
      listWidth: null,
      scrolling: !1,
      slideCount: null,
      slideHeight: null,
      slideWidth: null,
      swipeLeft: null,
      swiped: !1,
      swiping: !1,
      touchObject: { startX: 0, startY: 0, curX: 0, curY: 0 },
      trackStyle: {},
      trackWidth: 0,
      targetSlide: 0,
    },
    r = t;
  e.default = r;
})(bv);
var eA = "Expected a function",
  op = 0 / 0,
  tA = "[object Symbol]",
  iA = /^\s+|\s+$/g,
  nA = /^[-+]0x[0-9a-f]+$/i,
  rA = /^0b[01]+$/i,
  aA = /^0o[0-7]+$/i,
  sA = parseInt,
  oA = typeof Pa == "object" && Pa && Pa.Object === Object && Pa,
  lA = typeof self == "object" && self && self.Object === Object && self,
  cA = oA || lA || Function("return this")(),
  uA = Object.prototype,
  hA = uA.toString,
  dA = Math.max,
  fA = Math.min,
  Pl = function () {
    return cA.Date.now();
  };
function pA(e, t, r) {
  var s,
    c,
    f,
    m,
    y,
    S,
    T = 0,
    O = !1,
    z = !1,
    N = !0;
  if (typeof e != "function") throw new TypeError(eA);
  (t = lp(t) || 0),
    Wc(r) &&
      ((O = !!r.leading),
      (z = "maxWait" in r),
      (f = z ? dA(lp(r.maxWait) || 0, t) : f),
      (N = "trailing" in r ? !!r.trailing : N));
  function X(K) {
    var te = s,
      q = c;
    return (s = c = void 0), (T = K), (m = e.apply(q, te)), m;
  }
  function V(K) {
    return (T = K), (y = setTimeout(j, t)), O ? X(K) : m;
  }
  function Y(K) {
    var te = K - S,
      q = K - T,
      ie = t - te;
    return z ? fA(ie, f - q) : ie;
  }
  function Q(K) {
    var te = K - S,
      q = K - T;
    return S === void 0 || te >= t || te < 0 || (z && q >= f);
  }
  function j() {
    var K = Pl();
    if (Q(K)) return L(K);
    y = setTimeout(j, Y(K));
  }
  function L(K) {
    return (y = void 0), N && s ? X(K) : ((s = c = void 0), m);
  }
  function H() {
    y !== void 0 && clearTimeout(y), (T = 0), (s = S = c = y = void 0);
  }
  function U() {
    return y === void 0 ? m : L(Pl());
  }
  function B() {
    var K = Pl(),
      te = Q(K);
    if (((s = arguments), (c = this), (S = K), te)) {
      if (y === void 0) return V(S);
      if (z) return (y = setTimeout(j, t)), X(S);
    }
    return y === void 0 && (y = setTimeout(j, t)), m;
  }
  return (B.cancel = H), (B.flush = U), B;
}
function Wc(e) {
  var t = typeof e;
  return !!e && (t == "object" || t == "function");
}
function gA(e) {
  return !!e && typeof e == "object";
}
function mA(e) {
  return typeof e == "symbol" || (gA(e) && hA.call(e) == tA);
}
function lp(e) {
  if (typeof e == "number") return e;
  if (mA(e)) return op;
  if (Wc(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = Wc(t) ? t + "" : t;
  }
  if (typeof e != "string") return e === 0 ? e : +e;
  e = e.replace(iA, "");
  var r = rA.test(e);
  return r || aA.test(e) ? sA(e.slice(2), r ? 2 : 8) : nA.test(e) ? op : +e;
}
var xA = pA,
  wv = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ (function (e) {
  (function () {
    var t = {}.hasOwnProperty;
    function r() {
      for (var s = [], c = 0; c < arguments.length; c++) {
        var f = arguments[c];
        if (f) {
          var m = typeof f;
          if (m === "string" || m === "number") s.push(f);
          else if (Array.isArray(f)) {
            if (f.length) {
              var y = r.apply(null, f);
              y && s.push(y);
            }
          } else if (m === "object") {
            if (
              f.toString !== Object.prototype.toString &&
              !f.toString.toString().includes("[native code]")
            ) {
              s.push(f.toString());
              continue;
            }
            for (var S in f) t.call(f, S) && f[S] && s.push(S);
          }
        }
      }
      return s.join(" ");
    }
    e.exports ? ((r.default = r), (e.exports = r)) : (window.classNames = r);
  })();
})(wv);
var To = wv.exports,
  ue = {};
Object.defineProperty(ue, "__esModule", { value: !0 });
ue.checkSpecKeys =
  ue.checkNavigable =
  ue.changeSlide =
  ue.canUseDOM =
  ue.canGoNext =
    void 0;
ue.clamp = Sv;
ue.swipeStart =
  ue.swipeMove =
  ue.swipeEnd =
  ue.slidesOnRight =
  ue.slidesOnLeft =
  ue.slideHandler =
  ue.siblingDirection =
  ue.safePreventDefault =
  ue.lazyStartIndex =
  ue.lazySlidesOnRight =
  ue.lazySlidesOnLeft =
  ue.lazyEndIndex =
  ue.keyHandler =
  ue.initializedState =
  ue.getWidth =
  ue.getTrackLeft =
  ue.getTrackCSS =
  ue.getTrackAnimateCSS =
  ue.getTotalSlides =
  ue.getSwipeDirection =
  ue.getSlideCount =
  ue.getRequiredLazySlides =
  ue.getPreClones =
  ue.getPostClones =
  ue.getOnDemandLazySlides =
  ue.getNavigableIndexes =
  ue.getHeight =
  ue.extractObject =
    void 0;
var vA = yA(re);
function yA(e) {
  return e && e.__esModule ? e : { default: e };
}
function cp(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    t &&
      (s = s.filter(function (c) {
        return Object.getOwnPropertyDescriptor(e, c).enumerable;
      })),
      r.push.apply(r, s);
  }
  return r;
}
function _e(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2
      ? cp(Object(r), !0).forEach(function (s) {
          bA(e, s, r[s]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
      : cp(Object(r)).forEach(function (s) {
          Object.defineProperty(e, s, Object.getOwnPropertyDescriptor(r, s));
        });
  }
  return e;
}
function bA(e, t, r) {
  return (
    t in e
      ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[t] = r),
    e
  );
}
function Sv(e, t, r) {
  return Math.max(t, Math.min(e, r));
}
var vn = function (t) {
  var r = ["onTouchStart", "onTouchMove", "onWheel"];
  r.includes(t._reactName) || t.preventDefault();
};
ue.safePreventDefault = vn;
var Ch = function (t) {
  for (var r = [], s = Ah(t), c = Ph(t), f = s; f < c; f++)
    t.lazyLoadedList.indexOf(f) < 0 && r.push(f);
  return r;
};
ue.getOnDemandLazySlides = Ch;
var wA = function (t) {
  for (var r = [], s = Ah(t), c = Ph(t), f = s; f < c; f++) r.push(f);
  return r;
};
ue.getRequiredLazySlides = wA;
var Ah = function (t) {
  return t.currentSlide - kv(t);
};
ue.lazyStartIndex = Ah;
var Ph = function (t) {
  return t.currentSlide + Cv(t);
};
ue.lazyEndIndex = Ph;
var kv = function (t) {
  return t.centerMode
    ? Math.floor(t.slidesToShow / 2) + (parseInt(t.centerPadding) > 0 ? 1 : 0)
    : 0;
};
ue.lazySlidesOnLeft = kv;
var Cv = function (t) {
  return t.centerMode
    ? Math.floor((t.slidesToShow - 1) / 2) +
        1 +
        (parseInt(t.centerPadding) > 0 ? 1 : 0)
    : t.slidesToShow;
};
ue.lazySlidesOnRight = Cv;
var Bs = function (t) {
  return (t && t.offsetWidth) || 0;
};
ue.getWidth = Bs;
var Th = function (t) {
  return (t && t.offsetHeight) || 0;
};
ue.getHeight = Th;
var Lh = function (t) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1,
    s,
    c,
    f,
    m;
  return (
    (s = t.startX - t.curX),
    (c = t.startY - t.curY),
    (f = Math.atan2(c, s)),
    (m = Math.round((f * 180) / Math.PI)),
    m < 0 && (m = 360 - Math.abs(m)),
    (m <= 45 && m >= 0) || (m <= 360 && m >= 315)
      ? "left"
      : m >= 135 && m <= 225
      ? "right"
      : r === !0
      ? m >= 35 && m <= 135
        ? "up"
        : "down"
      : "vertical"
  );
};
ue.getSwipeDirection = Lh;
var Eh = function (t) {
  var r = !0;
  return (
    t.infinite ||
      (((t.centerMode && t.currentSlide >= t.slideCount - 1) ||
        t.slideCount <= t.slidesToShow ||
        t.currentSlide >= t.slideCount - t.slidesToShow) &&
        (r = !1)),
    r
  );
};
ue.canGoNext = Eh;
var SA = function (t, r) {
  var s = {};
  return (
    r.forEach(function (c) {
      return (s[c] = t[c]);
    }),
    s
  );
};
ue.extractObject = SA;
var kA = function (t) {
  var r = vA.default.Children.count(t.children),
    s = t.listRef,
    c = Math.ceil(Bs(s)),
    f = t.trackRef && t.trackRef.node,
    m = Math.ceil(Bs(f)),
    y;
  if (t.vertical) y = c;
  else {
    var S = t.centerMode && parseInt(t.centerPadding) * 2;
    typeof t.centerPadding == "string" &&
      t.centerPadding.slice(-1) === "%" &&
      (S *= c / 100),
      (y = Math.ceil((c - S) / t.slidesToShow));
  }
  var T = s && Th(s.querySelector('[data-index="0"]')),
    O = T * t.slidesToShow,
    z = t.currentSlide === void 0 ? t.initialSlide : t.currentSlide;
  t.rtl && t.currentSlide === void 0 && (z = r - 1 - t.initialSlide);
  var N = t.lazyLoadedList || [],
    X = Ch(_e(_e({}, t), {}, { currentSlide: z, lazyLoadedList: N }));
  N = N.concat(X);
  var V = {
    slideCount: r,
    slideWidth: y,
    listWidth: c,
    trackWidth: m,
    currentSlide: z,
    slideHeight: T,
    listHeight: O,
    lazyLoadedList: N,
  };
  return t.autoplaying === null && t.autoplay && (V.autoplaying = "playing"), V;
};
ue.initializedState = kA;
var CA = function (t) {
  var r = t.waitForAnimate,
    s = t.animating,
    c = t.fade,
    f = t.infinite,
    m = t.index,
    y = t.slideCount,
    S = t.lazyLoad,
    T = t.currentSlide,
    O = t.centerMode,
    z = t.slidesToScroll,
    N = t.slidesToShow,
    X = t.useCSS,
    V = t.lazyLoadedList;
  if (r && s) return {};
  var Y = m,
    Q,
    j,
    L,
    H = {},
    U = {},
    B = f ? m : Sv(m, 0, y - 1);
  if (c) {
    if (!f && (m < 0 || m >= y)) return {};
    m < 0 ? (Y = m + y) : m >= y && (Y = m - y),
      S && V.indexOf(Y) < 0 && (V = V.concat(Y)),
      (H = {
        animating: !0,
        currentSlide: Y,
        lazyLoadedList: V,
        targetSlide: Y,
      }),
      (U = { animating: !1, targetSlide: Y });
  } else
    (Q = Y),
      Y < 0
        ? ((Q = Y + y), f ? y % z !== 0 && (Q = y - (y % z)) : (Q = 0))
        : !Eh(t) && Y > T
        ? (Y = Q = T)
        : O && Y >= y
        ? ((Y = f ? y : y - 1), (Q = f ? 0 : y - 1))
        : Y >= y && ((Q = Y - y), f ? y % z !== 0 && (Q = 0) : (Q = y - N)),
      !f && Y + N >= y && (Q = y - N),
      (j = fa(_e(_e({}, t), {}, { slideIndex: Y }))),
      (L = fa(_e(_e({}, t), {}, { slideIndex: Q }))),
      f || (j === L && (Y = Q), (j = L)),
      S && (V = V.concat(Ch(_e(_e({}, t), {}, { currentSlide: Y })))),
      X
        ? ((H = {
            animating: !0,
            currentSlide: Q,
            trackStyle: Mh(_e(_e({}, t), {}, { left: j })),
            lazyLoadedList: V,
            targetSlide: B,
          }),
          (U = {
            animating: !1,
            currentSlide: Q,
            trackStyle: da(_e(_e({}, t), {}, { left: L })),
            swipeLeft: null,
            targetSlide: B,
          }))
        : (H = {
            currentSlide: Q,
            trackStyle: da(_e(_e({}, t), {}, { left: L })),
            lazyLoadedList: V,
            targetSlide: B,
          });
  return { state: H, nextState: U };
};
ue.slideHandler = CA;
var AA = function (t, r) {
  var s,
    c,
    f,
    m,
    y,
    S = t.slidesToScroll,
    T = t.slidesToShow,
    O = t.slideCount,
    z = t.currentSlide,
    N = t.targetSlide,
    X = t.lazyLoad,
    V = t.infinite;
  if (((m = O % S !== 0), (s = m ? 0 : (O - z) % S), r.message === "previous"))
    (f = s === 0 ? S : T - s),
      (y = z - f),
      X && !V && ((c = z - f), (y = c === -1 ? O - 1 : c)),
      V || (y = N - S);
  else if (r.message === "next")
    (f = s === 0 ? S : s),
      (y = z + f),
      X && !V && (y = ((z + S) % O) + s),
      V || (y = N + S);
  else if (r.message === "dots") y = r.index * r.slidesToScroll;
  else if (r.message === "children") {
    if (((y = r.index), V)) {
      var Y = Lv(_e(_e({}, t), {}, { targetSlide: y }));
      y > r.currentSlide && Y === "left"
        ? (y = y - O)
        : y < r.currentSlide && Y === "right" && (y = y + O);
    }
  } else r.message === "index" && (y = Number(r.index));
  return y;
};
ue.changeSlide = AA;
var PA = function (t, r, s) {
  return t.target.tagName.match("TEXTAREA|INPUT|SELECT") || !r
    ? ""
    : t.keyCode === 37
    ? s
      ? "next"
      : "previous"
    : t.keyCode === 39
    ? s
      ? "previous"
      : "next"
    : "";
};
ue.keyHandler = PA;
var TA = function (t, r, s) {
  return (
    t.target.tagName === "IMG" && vn(t),
    !r || (!s && t.type.indexOf("mouse") !== -1)
      ? ""
      : {
          dragging: !0,
          touchObject: {
            startX: t.touches ? t.touches[0].pageX : t.clientX,
            startY: t.touches ? t.touches[0].pageY : t.clientY,
            curX: t.touches ? t.touches[0].pageX : t.clientX,
            curY: t.touches ? t.touches[0].pageY : t.clientY,
          },
        }
  );
};
ue.swipeStart = TA;
var LA = function (t, r) {
  var s = r.scrolling,
    c = r.animating,
    f = r.vertical,
    m = r.swipeToSlide,
    y = r.verticalSwiping,
    S = r.rtl,
    T = r.currentSlide,
    O = r.edgeFriction,
    z = r.edgeDragged,
    N = r.onEdge,
    X = r.swiped,
    V = r.swiping,
    Y = r.slideCount,
    Q = r.slidesToScroll,
    j = r.infinite,
    L = r.touchObject,
    H = r.swipeEvent,
    U = r.listHeight,
    B = r.listWidth;
  if (!s) {
    if (c) return vn(t);
    f && m && y && vn(t);
    var K,
      te = {},
      q = fa(r);
    (L.curX = t.touches ? t.touches[0].pageX : t.clientX),
      (L.curY = t.touches ? t.touches[0].pageY : t.clientY),
      (L.swipeLength = Math.round(Math.sqrt(Math.pow(L.curX - L.startX, 2))));
    var ie = Math.round(Math.sqrt(Math.pow(L.curY - L.startY, 2)));
    if (!y && !V && ie > 10) return { scrolling: !0 };
    y && (L.swipeLength = ie);
    var ae = (S ? -1 : 1) * (L.curX > L.startX ? 1 : -1);
    y && (ae = L.curY > L.startY ? 1 : -1);
    var pe = Math.ceil(Y / Q),
      le = Lh(r.touchObject, y),
      he = L.swipeLength;
    return (
      j ||
        (((T === 0 && (le === "right" || le === "down")) ||
          (T + 1 >= pe && (le === "left" || le === "up")) ||
          (!Eh(r) && (le === "left" || le === "up"))) &&
          ((he = L.swipeLength * O),
          z === !1 && N && (N(le), (te.edgeDragged = !0)))),
      !X && H && (H(le), (te.swiped = !0)),
      f
        ? (K = q + he * (U / B) * ae)
        : S
        ? (K = q - he * ae)
        : (K = q + he * ae),
      y && (K = q + he * ae),
      (te = _e(
        _e({}, te),
        {},
        {
          touchObject: L,
          swipeLeft: K,
          trackStyle: da(_e(_e({}, r), {}, { left: K })),
        }
      )),
      Math.abs(L.curX - L.startX) < Math.abs(L.curY - L.startY) * 0.8 ||
        (L.swipeLength > 10 && ((te.swiping = !0), vn(t))),
      te
    );
  }
};
ue.swipeMove = LA;
var EA = function (t, r) {
  var s = r.dragging,
    c = r.swipe,
    f = r.touchObject,
    m = r.listWidth,
    y = r.touchThreshold,
    S = r.verticalSwiping,
    T = r.listHeight,
    O = r.swipeToSlide,
    z = r.scrolling,
    N = r.onSwipe,
    X = r.targetSlide,
    V = r.currentSlide,
    Y = r.infinite;
  if (!s) return c && vn(t), {};
  var Q = S ? T / y : m / y,
    j = Lh(f, S),
    L = {
      dragging: !1,
      edgeDragged: !1,
      scrolling: !1,
      swiping: !1,
      swiped: !1,
      swipeLeft: null,
      touchObject: {},
    };
  if (z || !f.swipeLength) return L;
  if (f.swipeLength > Q) {
    vn(t), N && N(j);
    var H,
      U,
      B = Y ? V : X;
    switch (j) {
      case "left":
      case "up":
        (U = B + Uc(r)), (H = O ? Gc(r, U) : U), (L.currentDirection = 0);
        break;
      case "right":
      case "down":
        (U = B - Uc(r)), (H = O ? Gc(r, U) : U), (L.currentDirection = 1);
        break;
      default:
        H = B;
    }
    L.triggerSlideHandler = H;
  } else {
    var K = fa(r);
    L.trackStyle = Mh(_e(_e({}, r), {}, { left: K }));
  }
  return L;
};
ue.swipeEnd = EA;
var Av = function (t) {
  for (
    var r = t.infinite ? t.slideCount * 2 : t.slideCount,
      s = t.infinite ? t.slidesToShow * -1 : 0,
      c = t.infinite ? t.slidesToShow * -1 : 0,
      f = [];
    s < r;

  )
    f.push(s),
      (s = c + t.slidesToScroll),
      (c += Math.min(t.slidesToScroll, t.slidesToShow));
  return f;
};
ue.getNavigableIndexes = Av;
var Gc = function (t, r) {
  var s = Av(t),
    c = 0;
  if (r > s[s.length - 1]) r = s[s.length - 1];
  else
    for (var f in s) {
      if (r < s[f]) {
        r = c;
        break;
      }
      c = s[f];
    }
  return r;
};
ue.checkNavigable = Gc;
var Uc = function (t) {
  var r = t.centerMode ? t.slideWidth * Math.floor(t.slidesToShow / 2) : 0;
  if (t.swipeToSlide) {
    var s,
      c = t.listRef,
      f = (c.querySelectorAll && c.querySelectorAll(".slick-slide")) || [];
    if (
      (Array.from(f).every(function (S) {
        if (t.vertical) {
          if (S.offsetTop + Th(S) / 2 > t.swipeLeft * -1) return (s = S), !1;
        } else if (S.offsetLeft - r + Bs(S) / 2 > t.swipeLeft * -1) return (s = S), !1;
        return !0;
      }),
      !s)
    )
      return 0;
    var m = t.rtl === !0 ? t.slideCount - t.currentSlide : t.currentSlide,
      y = Math.abs(s.dataset.index - m) || 1;
    return y;
  } else return t.slidesToScroll;
};
ue.getSlideCount = Uc;
var Lo = function (t, r) {
  return r.reduce(function (s, c) {
    return s && t.hasOwnProperty(c);
  }, !0)
    ? null
    : console.error("Keys Missing:", t);
};
ue.checkSpecKeys = Lo;
var da = function (t) {
  Lo(t, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth"]);
  var r,
    s,
    c = t.slideCount + 2 * t.slidesToShow;
  t.vertical ? (s = c * t.slideHeight) : (r = Tv(t) * t.slideWidth);
  var f = { opacity: 1, transition: "", WebkitTransition: "" };
  if (t.useTransform) {
    var m = t.vertical
        ? "translate3d(0px, " + t.left + "px, 0px)"
        : "translate3d(" + t.left + "px, 0px, 0px)",
      y = t.vertical
        ? "translate3d(0px, " + t.left + "px, 0px)"
        : "translate3d(" + t.left + "px, 0px, 0px)",
      S = t.vertical
        ? "translateY(" + t.left + "px)"
        : "translateX(" + t.left + "px)";
    f = _e(_e({}, f), {}, { WebkitTransform: m, transform: y, msTransform: S });
  } else t.vertical ? (f.top = t.left) : (f.left = t.left);
  return (
    t.fade && (f = { opacity: 1 }),
    r && (f.width = r),
    s && (f.height = s),
    window &&
      !window.addEventListener &&
      window.attachEvent &&
      (t.vertical
        ? (f.marginTop = t.left + "px")
        : (f.marginLeft = t.left + "px")),
    f
  );
};
ue.getTrackCSS = da;
var Mh = function (t) {
  Lo(t, [
    "left",
    "variableWidth",
    "slideCount",
    "slidesToShow",
    "slideWidth",
    "speed",
    "cssEase",
  ]);
  var r = da(t);
  return (
    t.useTransform
      ? ((r.WebkitTransition =
          "-webkit-transform " + t.speed + "ms " + t.cssEase),
        (r.transition = "transform " + t.speed + "ms " + t.cssEase))
      : t.vertical
      ? (r.transition = "top " + t.speed + "ms " + t.cssEase)
      : (r.transition = "left " + t.speed + "ms " + t.cssEase),
    r
  );
};
ue.getTrackAnimateCSS = Mh;
var fa = function (t) {
  if (t.unslick) return 0;
  Lo(t, [
    "slideIndex",
    "trackRef",
    "infinite",
    "centerMode",
    "slideCount",
    "slidesToShow",
    "slidesToScroll",
    "slideWidth",
    "listWidth",
    "variableWidth",
    "slideHeight",
  ]);
  var r = t.slideIndex,
    s = t.trackRef,
    c = t.infinite,
    f = t.centerMode,
    m = t.slideCount,
    y = t.slidesToShow,
    S = t.slidesToScroll,
    T = t.slideWidth,
    O = t.listWidth,
    z = t.variableWidth,
    N = t.slideHeight,
    X = t.fade,
    V = t.vertical,
    Y = 0,
    Q,
    j,
    L = 0;
  if (X || t.slideCount === 1) return 0;
  var H = 0;
  if (
    (c
      ? ((H = -Wr(t)),
        m % S !== 0 && r + S > m && (H = -(r > m ? y - (r - m) : m % S)),
        f && (H += parseInt(y / 2)))
      : (m % S !== 0 && r + S > m && (H = y - (m % S)),
        f && (H = parseInt(y / 2))),
    (Y = H * T),
    (L = H * N),
    V ? (Q = r * N * -1 + L) : (Q = r * T * -1 + Y),
    z === !0)
  ) {
    var U,
      B = s && s.node;
    if (
      ((U = r + Wr(t)),
      (j = B && B.childNodes[U]),
      (Q = j ? j.offsetLeft * -1 : 0),
      f === !0)
    ) {
      (U = c ? r + Wr(t) : r), (j = B && B.children[U]), (Q = 0);
      for (var K = 0; K < U; K++)
        Q -= B && B.children[K] && B.children[K].offsetWidth;
      (Q -= parseInt(t.centerPadding)), (Q += j && (O - j.offsetWidth) / 2);
    }
  }
  return Q;
};
ue.getTrackLeft = fa;
var Wr = function (t) {
  return t.unslick || !t.infinite
    ? 0
    : t.variableWidth
    ? t.slideCount
    : t.slidesToShow + (t.centerMode ? 1 : 0);
};
ue.getPreClones = Wr;
var Pv = function (t) {
  return t.unslick || !t.infinite ? 0 : t.slideCount;
};
ue.getPostClones = Pv;
var Tv = function (t) {
  return t.slideCount === 1 ? 1 : Wr(t) + t.slideCount + Pv(t);
};
ue.getTotalSlides = Tv;
var Lv = function (t) {
  return t.targetSlide > t.currentSlide
    ? t.targetSlide > t.currentSlide + Ev(t)
      ? "left"
      : "right"
    : t.targetSlide < t.currentSlide - Mv(t)
    ? "right"
    : "left";
};
ue.siblingDirection = Lv;
var Ev = function (t) {
  var r = t.slidesToShow,
    s = t.centerMode,
    c = t.rtl,
    f = t.centerPadding;
  if (s) {
    var m = (r - 1) / 2 + 1;
    return parseInt(f) > 0 && (m += 1), c && r % 2 === 0 && (m += 1), m;
  }
  return c ? 0 : r - 1;
};
ue.slidesOnRight = Ev;
var Mv = function (t) {
  var r = t.slidesToShow,
    s = t.centerMode,
    c = t.rtl,
    f = t.centerPadding;
  if (s) {
    var m = (r - 1) / 2 + 1;
    return parseInt(f) > 0 && (m += 1), !c && r % 2 === 0 && (m += 1), m;
  }
  return c ? r - 1 : 0;
};
ue.slidesOnLeft = Mv;
var MA = function () {
  return !!(
    typeof window < "u" &&
    window.document &&
    window.document.createElement
  );
};
ue.canUseDOM = MA;
var Eo = {};
function $c(e) {
  "@babel/helpers - typeof";
  return (
    ($c =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (t) {
            return typeof t;
          }
        : function (t) {
            return t &&
              typeof Symbol == "function" &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? "symbol"
              : typeof t;
          }),
    $c(e)
  );
}
Object.defineProperty(Eo, "__esModule", { value: !0 });
Eo.Track = void 0;
var zi = Ov(re),
  Tl = Ov(To),
  Ll = ue;
function Ov(e) {
  return e && e.__esModule ? e : { default: e };
}
function qc() {
  return (
    (qc =
      Object.assign ||
      function (e) {
        for (var t = 1; t < arguments.length; t++) {
          var r = arguments[t];
          for (var s in r)
            Object.prototype.hasOwnProperty.call(r, s) && (e[s] = r[s]);
        }
        return e;
      }),
    qc.apply(this, arguments)
  );
}
function OA(e, t) {
  if (!(e instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
function up(e, t) {
  for (var r = 0; r < t.length; r++) {
    var s = t[r];
    (s.enumerable = s.enumerable || !1),
      (s.configurable = !0),
      "value" in s && (s.writable = !0),
      Object.defineProperty(e, s.key, s);
  }
}
function RA(e, t, r) {
  return (
    t && up(e.prototype, t),
    r && up(e, r),
    Object.defineProperty(e, "prototype", { writable: !1 }),
    e
  );
}
function zA(e, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError("Super expression must either be null or a function");
  (e.prototype = Object.create(t && t.prototype, {
    constructor: { value: e, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(e, "prototype", { writable: !1 }),
    t && Zc(e, t);
}
function Zc(e, t) {
  return (
    (Zc =
      Object.setPrototypeOf ||
      function (s, c) {
        return (s.__proto__ = c), s;
      }),
    Zc(e, t)
  );
}
function IA(e) {
  var t = NA();
  return function () {
    var s = Vs(e),
      c;
    if (t) {
      var f = Vs(this).constructor;
      c = Reflect.construct(s, arguments, f);
    } else c = s.apply(this, arguments);
    return DA(this, c);
  };
}
function DA(e, t) {
  if (t && ($c(t) === "object" || typeof t == "function")) return t;
  if (t !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return Kc(e);
}
function Kc(e) {
  if (e === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return e;
}
function NA() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function Vs(e) {
  return (
    (Vs = Object.setPrototypeOf
      ? Object.getPrototypeOf
      : function (r) {
          return r.__proto__ || Object.getPrototypeOf(r);
        }),
    Vs(e)
  );
}
function hp(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    t &&
      (s = s.filter(function (c) {
        return Object.getOwnPropertyDescriptor(e, c).enumerable;
      })),
      r.push.apply(r, s);
  }
  return r;
}
function wt(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2
      ? hp(Object(r), !0).forEach(function (s) {
          Qc(e, s, r[s]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
      : hp(Object(r)).forEach(function (s) {
          Object.defineProperty(e, s, Object.getOwnPropertyDescriptor(r, s));
        });
  }
  return e;
}
function Qc(e, t, r) {
  return (
    t in e
      ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[t] = r),
    e
  );
}
var El = function (t) {
    var r, s, c, f, m;
    t.rtl ? (m = t.slideCount - 1 - t.index) : (m = t.index),
      (c = m < 0 || m >= t.slideCount),
      t.centerMode
        ? ((f = Math.floor(t.slidesToShow / 2)),
          (s = (m - t.currentSlide) % t.slideCount === 0),
          m > t.currentSlide - f - 1 && m <= t.currentSlide + f && (r = !0))
        : (r = t.currentSlide <= m && m < t.currentSlide + t.slidesToShow);
    var y;
    t.targetSlide < 0
      ? (y = t.targetSlide + t.slideCount)
      : t.targetSlide >= t.slideCount
      ? (y = t.targetSlide - t.slideCount)
      : (y = t.targetSlide);
    var S = m === y;
    return {
      "slick-slide": !0,
      "slick-active": r,
      "slick-center": s,
      "slick-cloned": c,
      "slick-current": S,
    };
  },
  FA = function (t) {
    var r = {};
    return (
      (t.variableWidth === void 0 || t.variableWidth === !1) &&
        (r.width = t.slideWidth),
      t.fade &&
        ((r.position = "relative"),
        t.vertical
          ? (r.top = -t.index * parseInt(t.slideHeight))
          : (r.left = -t.index * parseInt(t.slideWidth)),
        (r.opacity = t.currentSlide === t.index ? 1 : 0),
        t.useCSS &&
          (r.transition =
            "opacity " +
            t.speed +
            "ms " +
            t.cssEase +
            ", visibility " +
            t.speed +
            "ms " +
            t.cssEase)),
      r
    );
  },
  Ml = function (t, r) {
    return t.key || r;
  },
  _A = function (t) {
    var r,
      s = [],
      c = [],
      f = [],
      m = zi.default.Children.count(t.children),
      y = (0, Ll.lazyStartIndex)(t),
      S = (0, Ll.lazyEndIndex)(t);
    return (
      zi.default.Children.forEach(t.children, function (T, O) {
        var z,
          N = {
            message: "children",
            index: O,
            slidesToScroll: t.slidesToScroll,
            currentSlide: t.currentSlide,
          };
        !t.lazyLoad || (t.lazyLoad && t.lazyLoadedList.indexOf(O) >= 0)
          ? (z = T)
          : (z = zi.default.createElement("div", null));
        var X = FA(wt(wt({}, t), {}, { index: O })),
          V = z.props.className || "",
          Y = El(wt(wt({}, t), {}, { index: O }));
        if (
          (s.push(
            zi.default.cloneElement(z, {
              key: "original" + Ml(z, O),
              "data-index": O,
              className: (0, Tl.default)(Y, V),
              tabIndex: "-1",
              "aria-hidden": !Y["slick-active"],
              style: wt(wt({ outline: "none" }, z.props.style || {}), X),
              onClick: function (L) {
                z.props && z.props.onClick && z.props.onClick(L),
                  t.focusOnSelect && t.focusOnSelect(N);
              },
            })
          ),
          t.infinite && t.fade === !1)
        ) {
          var Q = m - O;
          Q <= (0, Ll.getPreClones)(t) &&
            m !== t.slidesToShow &&
            ((r = -Q),
            r >= y && (z = T),
            (Y = El(wt(wt({}, t), {}, { index: r }))),
            c.push(
              zi.default.cloneElement(z, {
                key: "precloned" + Ml(z, r),
                "data-index": r,
                tabIndex: "-1",
                className: (0, Tl.default)(Y, V),
                "aria-hidden": !Y["slick-active"],
                style: wt(wt({}, z.props.style || {}), X),
                onClick: function (L) {
                  z.props && z.props.onClick && z.props.onClick(L),
                    t.focusOnSelect && t.focusOnSelect(N);
                },
              })
            )),
            m !== t.slidesToShow &&
              ((r = m + O),
              r < S && (z = T),
              (Y = El(wt(wt({}, t), {}, { index: r }))),
              f.push(
                zi.default.cloneElement(z, {
                  key: "postcloned" + Ml(z, r),
                  "data-index": r,
                  tabIndex: "-1",
                  className: (0, Tl.default)(Y, V),
                  "aria-hidden": !Y["slick-active"],
                  style: wt(wt({}, z.props.style || {}), X),
                  onClick: function (L) {
                    z.props && z.props.onClick && z.props.onClick(L),
                      t.focusOnSelect && t.focusOnSelect(N);
                  },
                })
              ));
        }
      }),
      t.rtl ? c.concat(s, f).reverse() : c.concat(s, f)
    );
  },
  HA = (function (e) {
    zA(r, e);
    var t = IA(r);
    function r() {
      var s;
      OA(this, r);
      for (var c = arguments.length, f = new Array(c), m = 0; m < c; m++)
        f[m] = arguments[m];
      return (
        (s = t.call.apply(t, [this].concat(f))),
        Qc(Kc(s), "node", null),
        Qc(Kc(s), "handleRef", function (y) {
          s.node = y;
        }),
        s
      );
    }
    return (
      RA(r, [
        {
          key: "render",
          value: function () {
            var c = _A(this.props),
              f = this.props,
              m = f.onMouseEnter,
              y = f.onMouseOver,
              S = f.onMouseLeave,
              T = { onMouseEnter: m, onMouseOver: y, onMouseLeave: S };
            return zi.default.createElement(
              "div",
              qc(
                {
                  ref: this.handleRef,
                  className: "slick-track",
                  style: this.props.trackStyle,
                },
                T
              ),
              c
            );
          },
        },
      ]),
      r
    );
  })(zi.default.PureComponent);
Eo.Track = HA;
var Mo = {};
function Jc(e) {
  "@babel/helpers - typeof";
  return (
    (Jc =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (t) {
            return typeof t;
          }
        : function (t) {
            return t &&
              typeof Symbol == "function" &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? "symbol"
              : typeof t;
          }),
    Jc(e)
  );
}
Object.defineProperty(Mo, "__esModule", { value: !0 });
Mo.Dots = void 0;
var qa = Rv(re),
  XA = Rv(To),
  dp = ue;
function Rv(e) {
  return e && e.__esModule ? e : { default: e };
}
function fp(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    t &&
      (s = s.filter(function (c) {
        return Object.getOwnPropertyDescriptor(e, c).enumerable;
      })),
      r.push.apply(r, s);
  }
  return r;
}
function jA(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2
      ? fp(Object(r), !0).forEach(function (s) {
          BA(e, s, r[s]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
      : fp(Object(r)).forEach(function (s) {
          Object.defineProperty(e, s, Object.getOwnPropertyDescriptor(r, s));
        });
  }
  return e;
}
function BA(e, t, r) {
  return (
    t in e
      ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[t] = r),
    e
  );
}
function VA(e, t) {
  if (!(e instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
function pp(e, t) {
  for (var r = 0; r < t.length; r++) {
    var s = t[r];
    (s.enumerable = s.enumerable || !1),
      (s.configurable = !0),
      "value" in s && (s.writable = !0),
      Object.defineProperty(e, s.key, s);
  }
}
function YA(e, t, r) {
  return (
    t && pp(e.prototype, t),
    r && pp(e, r),
    Object.defineProperty(e, "prototype", { writable: !1 }),
    e
  );
}
function WA(e, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError("Super expression must either be null or a function");
  (e.prototype = Object.create(t && t.prototype, {
    constructor: { value: e, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(e, "prototype", { writable: !1 }),
    t && eu(e, t);
}
function eu(e, t) {
  return (
    (eu =
      Object.setPrototypeOf ||
      function (s, c) {
        return (s.__proto__ = c), s;
      }),
    eu(e, t)
  );
}
function GA(e) {
  var t = qA();
  return function () {
    var s = Ys(e),
      c;
    if (t) {
      var f = Ys(this).constructor;
      c = Reflect.construct(s, arguments, f);
    } else c = s.apply(this, arguments);
    return UA(this, c);
  };
}
function UA(e, t) {
  if (t && (Jc(t) === "object" || typeof t == "function")) return t;
  if (t !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return $A(e);
}
function $A(e) {
  if (e === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return e;
}
function qA() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function Ys(e) {
  return (
    (Ys = Object.setPrototypeOf
      ? Object.getPrototypeOf
      : function (r) {
          return r.__proto__ || Object.getPrototypeOf(r);
        }),
    Ys(e)
  );
}
var ZA = function (t) {
    var r;
    return (
      t.infinite
        ? (r = Math.ceil(t.slideCount / t.slidesToScroll))
        : (r =
            Math.ceil((t.slideCount - t.slidesToShow) / t.slidesToScroll) + 1),
      r
    );
  },
  KA = (function (e) {
    WA(r, e);
    var t = GA(r);
    function r() {
      return VA(this, r), t.apply(this, arguments);
    }
    return (
      YA(r, [
        {
          key: "clickHandler",
          value: function (c, f) {
            f.preventDefault(), this.props.clickHandler(c);
          },
        },
        {
          key: "render",
          value: function () {
            for (
              var c = this.props,
                f = c.onMouseEnter,
                m = c.onMouseOver,
                y = c.onMouseLeave,
                S = c.infinite,
                T = c.slidesToScroll,
                O = c.slidesToShow,
                z = c.slideCount,
                N = c.currentSlide,
                X = ZA({
                  slideCount: z,
                  slidesToScroll: T,
                  slidesToShow: O,
                  infinite: S,
                }),
                V = { onMouseEnter: f, onMouseOver: m, onMouseLeave: y },
                Y = [],
                Q = 0;
              Q < X;
              Q++
            ) {
              var j = (Q + 1) * T - 1,
                L = S ? j : (0, dp.clamp)(j, 0, z - 1),
                H = L - (T - 1),
                U = S ? H : (0, dp.clamp)(H, 0, z - 1),
                B = (0, XA.default)({
                  "slick-active": S ? N >= U && N <= L : N === U,
                }),
                K = {
                  message: "dots",
                  index: Q,
                  slidesToScroll: T,
                  currentSlide: N,
                },
                te = this.clickHandler.bind(this, K);
              Y = Y.concat(
                qa.default.createElement(
                  "li",
                  { key: Q, className: B },
                  qa.default.cloneElement(this.props.customPaging(Q), {
                    onClick: te,
                  })
                )
              );
            }
            return qa.default.cloneElement(
              this.props.appendDots(Y),
              jA({ className: this.props.dotsClass }, V)
            );
          },
        },
      ]),
      r
    );
  })(qa.default.PureComponent);
Mo.Dots = KA;
var ur = {};
function tu(e) {
  "@babel/helpers - typeof";
  return (
    (tu =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (t) {
            return typeof t;
          }
        : function (t) {
            return t &&
              typeof Symbol == "function" &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? "symbol"
              : typeof t;
          }),
    tu(e)
  );
}
Object.defineProperty(ur, "__esModule", { value: !0 });
ur.PrevArrow = ur.NextArrow = void 0;
var er = Iv(re),
  zv = Iv(To),
  QA = ue;
function Iv(e) {
  return e && e.__esModule ? e : { default: e };
}
function Ws() {
  return (
    (Ws =
      Object.assign ||
      function (e) {
        for (var t = 1; t < arguments.length; t++) {
          var r = arguments[t];
          for (var s in r)
            Object.prototype.hasOwnProperty.call(r, s) && (e[s] = r[s]);
        }
        return e;
      }),
    Ws.apply(this, arguments)
  );
}
function gp(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    t &&
      (s = s.filter(function (c) {
        return Object.getOwnPropertyDescriptor(e, c).enumerable;
      })),
      r.push.apply(r, s);
  }
  return r;
}
function Gs(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2
      ? gp(Object(r), !0).forEach(function (s) {
          JA(e, s, r[s]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
      : gp(Object(r)).forEach(function (s) {
          Object.defineProperty(e, s, Object.getOwnPropertyDescriptor(r, s));
        });
  }
  return e;
}
function JA(e, t, r) {
  return (
    t in e
      ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[t] = r),
    e
  );
}
function Dv(e, t) {
  if (!(e instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
function mp(e, t) {
  for (var r = 0; r < t.length; r++) {
    var s = t[r];
    (s.enumerable = s.enumerable || !1),
      (s.configurable = !0),
      "value" in s && (s.writable = !0),
      Object.defineProperty(e, s.key, s);
  }
}
function Nv(e, t, r) {
  return (
    t && mp(e.prototype, t),
    r && mp(e, r),
    Object.defineProperty(e, "prototype", { writable: !1 }),
    e
  );
}
function Fv(e, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError("Super expression must either be null or a function");
  (e.prototype = Object.create(t && t.prototype, {
    constructor: { value: e, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(e, "prototype", { writable: !1 }),
    t && iu(e, t);
}
function iu(e, t) {
  return (
    (iu =
      Object.setPrototypeOf ||
      function (s, c) {
        return (s.__proto__ = c), s;
      }),
    iu(e, t)
  );
}
function _v(e) {
  var t = i2();
  return function () {
    var s = Us(e),
      c;
    if (t) {
      var f = Us(this).constructor;
      c = Reflect.construct(s, arguments, f);
    } else c = s.apply(this, arguments);
    return e2(this, c);
  };
}
function e2(e, t) {
  if (t && (tu(t) === "object" || typeof t == "function")) return t;
  if (t !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return t2(e);
}
function t2(e) {
  if (e === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return e;
}
function i2() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function Us(e) {
  return (
    (Us = Object.setPrototypeOf
      ? Object.getPrototypeOf
      : function (r) {
          return r.__proto__ || Object.getPrototypeOf(r);
        }),
    Us(e)
  );
}
var n2 = (function (e) {
  Fv(r, e);
  var t = _v(r);
  function r() {
    return Dv(this, r), t.apply(this, arguments);
  }
  return (
    Nv(r, [
      {
        key: "clickHandler",
        value: function (c, f) {
          f && f.preventDefault(), this.props.clickHandler(c, f);
        },
      },
      {
        key: "render",
        value: function () {
          var c = { "slick-arrow": !0, "slick-prev": !0 },
            f = this.clickHandler.bind(this, { message: "previous" });
          !this.props.infinite &&
            (this.props.currentSlide === 0 ||
              this.props.slideCount <= this.props.slidesToShow) &&
            ((c["slick-disabled"] = !0), (f = null));
          var m = {
              key: "0",
              "data-role": "none",
              className: (0, zv.default)(c),
              style: { display: "block" },
              onClick: f,
            },
            y = {
              currentSlide: this.props.currentSlide,
              slideCount: this.props.slideCount,
            },
            S;
          return (
            this.props.prevArrow
              ? (S = er.default.cloneElement(
                  this.props.prevArrow,
                  Gs(Gs({}, m), y)
                ))
              : (S = er.default.createElement(
                  "button",
                  Ws({ key: "0", type: "button" }, m),
                  " ",
                  "Previous"
                )),
            S
          );
        },
      },
    ]),
    r
  );
})(er.default.PureComponent);
ur.PrevArrow = n2;
var r2 = (function (e) {
  Fv(r, e);
  var t = _v(r);
  function r() {
    return Dv(this, r), t.apply(this, arguments);
  }
  return (
    Nv(r, [
      {
        key: "clickHandler",
        value: function (c, f) {
          f && f.preventDefault(), this.props.clickHandler(c, f);
        },
      },
      {
        key: "render",
        value: function () {
          var c = { "slick-arrow": !0, "slick-next": !0 },
            f = this.clickHandler.bind(this, { message: "next" });
          (0, QA.canGoNext)(this.props) ||
            ((c["slick-disabled"] = !0), (f = null));
          var m = {
              key: "1",
              "data-role": "none",
              className: (0, zv.default)(c),
              style: { display: "block" },
              onClick: f,
            },
            y = {
              currentSlide: this.props.currentSlide,
              slideCount: this.props.slideCount,
            },
            S;
          return (
            this.props.nextArrow
              ? (S = er.default.cloneElement(
                  this.props.nextArrow,
                  Gs(Gs({}, m), y)
                ))
              : (S = er.default.createElement(
                  "button",
                  Ws({ key: "1", type: "button" }, m),
                  " ",
                  "Next"
                )),
            S
          );
        },
      },
    ]),
    r
  );
})(er.default.PureComponent);
ur.NextArrow = r2;
var Hv = (function () {
    if (typeof Map < "u") return Map;
    function e(t, r) {
      var s = -1;
      return (
        t.some(function (c, f) {
          return c[0] === r ? ((s = f), !0) : !1;
        }),
        s
      );
    }
    return (function () {
      function t() {
        this.__entries__ = [];
      }
      return (
        Object.defineProperty(t.prototype, "size", {
          get: function () {
            return this.__entries__.length;
          },
          enumerable: !0,
          configurable: !0,
        }),
        (t.prototype.get = function (r) {
          var s = e(this.__entries__, r),
            c = this.__entries__[s];
          return c && c[1];
        }),
        (t.prototype.set = function (r, s) {
          var c = e(this.__entries__, r);
          ~c ? (this.__entries__[c][1] = s) : this.__entries__.push([r, s]);
        }),
        (t.prototype.delete = function (r) {
          var s = this.__entries__,
            c = e(s, r);
          ~c && s.splice(c, 1);
        }),
        (t.prototype.has = function (r) {
          return !!~e(this.__entries__, r);
        }),
        (t.prototype.clear = function () {
          this.__entries__.splice(0);
        }),
        (t.prototype.forEach = function (r, s) {
          s === void 0 && (s = null);
          for (var c = 0, f = this.__entries__; c < f.length; c++) {
            var m = f[c];
            r.call(s, m[1], m[0]);
          }
        }),
        t
      );
    })();
  })(),
  nu =
    typeof window < "u" &&
    typeof document < "u" &&
    window.document === document,
  $s = (function () {
    return typeof global < "u" && global.Math === Math
      ? global
      : typeof self < "u" && self.Math === Math
      ? self
      : typeof window < "u" && window.Math === Math
      ? window
      : Function("return this")();
  })(),
  a2 = (function () {
    return typeof requestAnimationFrame == "function"
      ? requestAnimationFrame.bind($s)
      : function (e) {
          return setTimeout(function () {
            return e(Date.now());
          }, 1e3 / 60);
        };
  })(),
  s2 = 2;
function o2(e, t) {
  var r = !1,
    s = !1,
    c = 0;
  function f() {
    r && ((r = !1), e()), s && y();
  }
  function m() {
    a2(f);
  }
  function y() {
    var S = Date.now();
    if (r) {
      if (S - c < s2) return;
      s = !0;
    } else (r = !0), (s = !1), setTimeout(m, t);
    c = S;
  }
  return y;
}
var l2 = 20,
  c2 = ["top", "right", "bottom", "left", "width", "height", "size", "weight"],
  u2 = typeof MutationObserver < "u",
  h2 = (function () {
    function e() {
      (this.connected_ = !1),
        (this.mutationEventsAdded_ = !1),
        (this.mutationsObserver_ = null),
        (this.observers_ = []),
        (this.onTransitionEnd_ = this.onTransitionEnd_.bind(this)),
        (this.refresh = o2(this.refresh.bind(this), l2));
    }
    return (
      (e.prototype.addObserver = function (t) {
        ~this.observers_.indexOf(t) || this.observers_.push(t),
          this.connected_ || this.connect_();
      }),
      (e.prototype.removeObserver = function (t) {
        var r = this.observers_,
          s = r.indexOf(t);
        ~s && r.splice(s, 1),
          !r.length && this.connected_ && this.disconnect_();
      }),
      (e.prototype.refresh = function () {
        var t = this.updateObservers_();
        t && this.refresh();
      }),
      (e.prototype.updateObservers_ = function () {
        var t = this.observers_.filter(function (r) {
          return r.gatherActive(), r.hasActive();
        });
        return (
          t.forEach(function (r) {
            return r.broadcastActive();
          }),
          t.length > 0
        );
      }),
      (e.prototype.connect_ = function () {
        !nu ||
          this.connected_ ||
          (document.addEventListener("transitionend", this.onTransitionEnd_),
          window.addEventListener("resize", this.refresh),
          u2
            ? ((this.mutationsObserver_ = new MutationObserver(this.refresh)),
              this.mutationsObserver_.observe(document, {
                attributes: !0,
                childList: !0,
                characterData: !0,
                subtree: !0,
              }))
            : (document.addEventListener("DOMSubtreeModified", this.refresh),
              (this.mutationEventsAdded_ = !0)),
          (this.connected_ = !0));
      }),
      (e.prototype.disconnect_ = function () {
        !nu ||
          !this.connected_ ||
          (document.removeEventListener("transitionend", this.onTransitionEnd_),
          window.removeEventListener("resize", this.refresh),
          this.mutationsObserver_ && this.mutationsObserver_.disconnect(),
          this.mutationEventsAdded_ &&
            document.removeEventListener("DOMSubtreeModified", this.refresh),
          (this.mutationsObserver_ = null),
          (this.mutationEventsAdded_ = !1),
          (this.connected_ = !1));
      }),
      (e.prototype.onTransitionEnd_ = function (t) {
        var r = t.propertyName,
          s = r === void 0 ? "" : r,
          c = c2.some(function (f) {
            return !!~s.indexOf(f);
          });
        c && this.refresh();
      }),
      (e.getInstance = function () {
        return this.instance_ || (this.instance_ = new e()), this.instance_;
      }),
      (e.instance_ = null),
      e
    );
  })(),
  Xv = function (e, t) {
    for (var r = 0, s = Object.keys(t); r < s.length; r++) {
      var c = s[r];
      Object.defineProperty(e, c, {
        value: t[c],
        enumerable: !1,
        writable: !1,
        configurable: !0,
      });
    }
    return e;
  },
  hr = function (e) {
    var t = e && e.ownerDocument && e.ownerDocument.defaultView;
    return t || $s;
  },
  jv = Oo(0, 0, 0, 0);
function qs(e) {
  return parseFloat(e) || 0;
}
function xp(e) {
  for (var t = [], r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
  return t.reduce(function (s, c) {
    var f = e["border-" + c + "-width"];
    return s + qs(f);
  }, 0);
}
function d2(e) {
  for (
    var t = ["top", "right", "bottom", "left"], r = {}, s = 0, c = t;
    s < c.length;
    s++
  ) {
    var f = c[s],
      m = e["padding-" + f];
    r[f] = qs(m);
  }
  return r;
}
function f2(e) {
  var t = e.getBBox();
  return Oo(0, 0, t.width, t.height);
}
function p2(e) {
  var t = e.clientWidth,
    r = e.clientHeight;
  if (!t && !r) return jv;
  var s = hr(e).getComputedStyle(e),
    c = d2(s),
    f = c.left + c.right,
    m = c.top + c.bottom,
    y = qs(s.width),
    S = qs(s.height);
  if (
    (s.boxSizing === "border-box" &&
      (Math.round(y + f) !== t && (y -= xp(s, "left", "right") + f),
      Math.round(S + m) !== r && (S -= xp(s, "top", "bottom") + m)),
    !m2(e))
  ) {
    var T = Math.round(y + f) - t,
      O = Math.round(S + m) - r;
    Math.abs(T) !== 1 && (y -= T), Math.abs(O) !== 1 && (S -= O);
  }
  return Oo(c.left, c.top, y, S);
}
var g2 = (function () {
  return typeof SVGGraphicsElement < "u"
    ? function (e) {
        return e instanceof hr(e).SVGGraphicsElement;
      }
    : function (e) {
        return e instanceof hr(e).SVGElement && typeof e.getBBox == "function";
      };
})();
function m2(e) {
  return e === hr(e).document.documentElement;
}
function x2(e) {
  return nu ? (g2(e) ? f2(e) : p2(e)) : jv;
}
function v2(e) {
  var t = e.x,
    r = e.y,
    s = e.width,
    c = e.height,
    f = typeof DOMRectReadOnly < "u" ? DOMRectReadOnly : Object,
    m = Object.create(f.prototype);
  return (
    Xv(m, {
      x: t,
      y: r,
      width: s,
      height: c,
      top: r,
      right: t + s,
      bottom: c + r,
      left: t,
    }),
    m
  );
}
function Oo(e, t, r, s) {
  return { x: e, y: t, width: r, height: s };
}
var y2 = (function () {
    function e(t) {
      (this.broadcastWidth = 0),
        (this.broadcastHeight = 0),
        (this.contentRect_ = Oo(0, 0, 0, 0)),
        (this.target = t);
    }
    return (
      (e.prototype.isActive = function () {
        var t = x2(this.target);
        return (
          (this.contentRect_ = t),
          t.width !== this.broadcastWidth || t.height !== this.broadcastHeight
        );
      }),
      (e.prototype.broadcastRect = function () {
        var t = this.contentRect_;
        return (
          (this.broadcastWidth = t.width), (this.broadcastHeight = t.height), t
        );
      }),
      e
    );
  })(),
  b2 = (function () {
    function e(t, r) {
      var s = v2(r);
      Xv(this, { target: t, contentRect: s });
    }
    return e;
  })(),
  w2 = (function () {
    function e(t, r, s) {
      if (
        ((this.activeObservations_ = []),
        (this.observations_ = new Hv()),
        typeof t != "function")
      )
        throw new TypeError(
          "The callback provided as parameter 1 is not a function."
        );
      (this.callback_ = t), (this.controller_ = r), (this.callbackCtx_ = s);
    }
    return (
      (e.prototype.observe = function (t) {
        if (!arguments.length)
          throw new TypeError("1 argument required, but only 0 present.");
        if (!(typeof Element > "u" || !(Element instanceof Object))) {
          if (!(t instanceof hr(t).Element))
            throw new TypeError('parameter 1 is not of type "Element".');
          var r = this.observations_;
          r.has(t) ||
            (r.set(t, new y2(t)),
            this.controller_.addObserver(this),
            this.controller_.refresh());
        }
      }),
      (e.prototype.unobserve = function (t) {
        if (!arguments.length)
          throw new TypeError("1 argument required, but only 0 present.");
        if (!(typeof Element > "u" || !(Element instanceof Object))) {
          if (!(t instanceof hr(t).Element))
            throw new TypeError('parameter 1 is not of type "Element".');
          var r = this.observations_;
          r.has(t) &&
            (r.delete(t), r.size || this.controller_.removeObserver(this));
        }
      }),
      (e.prototype.disconnect = function () {
        this.clearActive(),
          this.observations_.clear(),
          this.controller_.removeObserver(this);
      }),
      (e.prototype.gatherActive = function () {
        var t = this;
        this.clearActive(),
          this.observations_.forEach(function (r) {
            r.isActive() && t.activeObservations_.push(r);
          });
      }),
      (e.prototype.broadcastActive = function () {
        if (this.hasActive()) {
          var t = this.callbackCtx_,
            r = this.activeObservations_.map(function (s) {
              return new b2(s.target, s.broadcastRect());
            });
          this.callback_.call(t, r, t), this.clearActive();
        }
      }),
      (e.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
      }),
      (e.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
      }),
      e
    );
  })(),
  Bv = typeof WeakMap < "u" ? new WeakMap() : new Hv(),
  Vv = (function () {
    function e(t) {
      if (!(this instanceof e))
        throw new TypeError("Cannot call a class as a function.");
      if (!arguments.length)
        throw new TypeError("1 argument required, but only 0 present.");
      var r = h2.getInstance(),
        s = new w2(t, r, this);
      Bv.set(this, s);
    }
    return e;
  })();
["observe", "unobserve", "disconnect"].forEach(function (e) {
  Vv.prototype[e] = function () {
    var t;
    return (t = Bv.get(this))[e].apply(t, arguments);
  };
});
var S2 = (function () {
  return typeof $s.ResizeObserver < "u" ? $s.ResizeObserver : Vv;
})();
const k2 = Object.freeze(
    Object.defineProperty(
      { __proto__: null, default: S2 },
      Symbol.toStringTag,
      { value: "Module" }
    )
  ),
  C2 = Sy(k2);
Object.defineProperty(Po, "__esModule", { value: !0 });
Po.InnerSlider = void 0;
var pt = ka(re),
  A2 = ka(bv),
  P2 = ka(xA),
  T2 = ka(To),
  Ve = ue,
  L2 = Eo,
  E2 = Mo,
  vp = ur,
  M2 = ka(C2);
function ka(e) {
  return e && e.__esModule ? e : { default: e };
}
function Zs(e) {
  "@babel/helpers - typeof";
  return (
    (Zs =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (t) {
            return typeof t;
          }
        : function (t) {
            return t &&
              typeof Symbol == "function" &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? "symbol"
              : typeof t;
          }),
    Zs(e)
  );
}
function Ks() {
  return (
    (Ks =
      Object.assign ||
      function (e) {
        for (var t = 1; t < arguments.length; t++) {
          var r = arguments[t];
          for (var s in r)
            Object.prototype.hasOwnProperty.call(r, s) && (e[s] = r[s]);
        }
        return e;
      }),
    Ks.apply(this, arguments)
  );
}
function O2(e, t) {
  if (e == null) return {};
  var r = R2(e, t),
    s,
    c;
  if (Object.getOwnPropertySymbols) {
    var f = Object.getOwnPropertySymbols(e);
    for (c = 0; c < f.length; c++)
      (s = f[c]),
        !(t.indexOf(s) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(e, s) &&
          (r[s] = e[s]);
  }
  return r;
}
function R2(e, t) {
  if (e == null) return {};
  var r = {},
    s = Object.keys(e),
    c,
    f;
  for (f = 0; f < s.length; f++)
    (c = s[f]), !(t.indexOf(c) >= 0) && (r[c] = e[c]);
  return r;
}
function yp(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    t &&
      (s = s.filter(function (c) {
        return Object.getOwnPropertyDescriptor(e, c).enumerable;
      })),
      r.push.apply(r, s);
  }
  return r;
}
function ve(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2
      ? yp(Object(r), !0).forEach(function (s) {
          Ae(e, s, r[s]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
      : yp(Object(r)).forEach(function (s) {
          Object.defineProperty(e, s, Object.getOwnPropertyDescriptor(r, s));
        });
  }
  return e;
}
function z2(e, t) {
  if (!(e instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
function bp(e, t) {
  for (var r = 0; r < t.length; r++) {
    var s = t[r];
    (s.enumerable = s.enumerable || !1),
      (s.configurable = !0),
      "value" in s && (s.writable = !0),
      Object.defineProperty(e, s.key, s);
  }
}
function I2(e, t, r) {
  return (
    t && bp(e.prototype, t),
    r && bp(e, r),
    Object.defineProperty(e, "prototype", { writable: !1 }),
    e
  );
}
function D2(e, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError("Super expression must either be null or a function");
  (e.prototype = Object.create(t && t.prototype, {
    constructor: { value: e, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(e, "prototype", { writable: !1 }),
    t && ru(e, t);
}
function ru(e, t) {
  return (
    (ru =
      Object.setPrototypeOf ||
      function (s, c) {
        return (s.__proto__ = c), s;
      }),
    ru(e, t)
  );
}
function N2(e) {
  var t = _2();
  return function () {
    var s = Qs(e),
      c;
    if (t) {
      var f = Qs(this).constructor;
      c = Reflect.construct(s, arguments, f);
    } else c = s.apply(this, arguments);
    return F2(this, c);
  };
}
function F2(e, t) {
  if (t && (Zs(t) === "object" || typeof t == "function")) return t;
  if (t !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return Ce(e);
}
function Ce(e) {
  if (e === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return e;
}
function _2() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function Qs(e) {
  return (
    (Qs = Object.setPrototypeOf
      ? Object.getPrototypeOf
      : function (r) {
          return r.__proto__ || Object.getPrototypeOf(r);
        }),
    Qs(e)
  );
}
function Ae(e, t, r) {
  return (
    t in e
      ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[t] = r),
    e
  );
}
var H2 = (function (e) {
  D2(r, e);
  var t = N2(r);
  function r(s) {
    var c;
    z2(this, r),
      (c = t.call(this, s)),
      Ae(Ce(c), "listRefHandler", function (m) {
        return (c.list = m);
      }),
      Ae(Ce(c), "trackRefHandler", function (m) {
        return (c.track = m);
      }),
      Ae(Ce(c), "adaptHeight", function () {
        if (c.props.adaptiveHeight && c.list) {
          var m = c.list.querySelector(
            '[data-index="'.concat(c.state.currentSlide, '"]')
          );
          c.list.style.height = (0, Ve.getHeight)(m) + "px";
        }
      }),
      Ae(Ce(c), "componentDidMount", function () {
        if ((c.props.onInit && c.props.onInit(), c.props.lazyLoad)) {
          var m = (0, Ve.getOnDemandLazySlides)(ve(ve({}, c.props), c.state));
          m.length > 0 &&
            (c.setState(function (S) {
              return { lazyLoadedList: S.lazyLoadedList.concat(m) };
            }),
            c.props.onLazyLoad && c.props.onLazyLoad(m));
        }
        var y = ve({ listRef: c.list, trackRef: c.track }, c.props);
        c.updateState(y, !0, function () {
          c.adaptHeight(), c.props.autoplay && c.autoPlay("update");
        }),
          c.props.lazyLoad === "progressive" &&
            (c.lazyLoadTimer = setInterval(c.progressiveLazyLoad, 1e3)),
          (c.ro = new M2.default(function () {
            c.state.animating
              ? (c.onWindowResized(!1),
                c.callbackTimers.push(
                  setTimeout(function () {
                    return c.onWindowResized();
                  }, c.props.speed)
                ))
              : c.onWindowResized();
          })),
          c.ro.observe(c.list),
          document.querySelectorAll &&
            Array.prototype.forEach.call(
              document.querySelectorAll(".slick-slide"),
              function (S) {
                (S.onfocus = c.props.pauseOnFocus ? c.onSlideFocus : null),
                  (S.onblur = c.props.pauseOnFocus ? c.onSlideBlur : null);
              }
            ),
          window.addEventListener
            ? window.addEventListener("resize", c.onWindowResized)
            : window.attachEvent("onresize", c.onWindowResized);
      }),
      Ae(Ce(c), "componentWillUnmount", function () {
        c.animationEndCallback && clearTimeout(c.animationEndCallback),
          c.lazyLoadTimer && clearInterval(c.lazyLoadTimer),
          c.callbackTimers.length &&
            (c.callbackTimers.forEach(function (m) {
              return clearTimeout(m);
            }),
            (c.callbackTimers = [])),
          window.addEventListener
            ? window.removeEventListener("resize", c.onWindowResized)
            : window.detachEvent("onresize", c.onWindowResized),
          c.autoplayTimer && clearInterval(c.autoplayTimer),
          c.ro.disconnect();
      }),
      Ae(Ce(c), "componentDidUpdate", function (m) {
        if (
          (c.checkImagesLoad(),
          c.props.onReInit && c.props.onReInit(),
          c.props.lazyLoad)
        ) {
          var y = (0, Ve.getOnDemandLazySlides)(ve(ve({}, c.props), c.state));
          y.length > 0 &&
            (c.setState(function (O) {
              return { lazyLoadedList: O.lazyLoadedList.concat(y) };
            }),
            c.props.onLazyLoad && c.props.onLazyLoad(y));
        }
        c.adaptHeight();
        var S = ve(
            ve({ listRef: c.list, trackRef: c.track }, c.props),
            c.state
          ),
          T = c.didPropsChange(m);
        T &&
          c.updateState(S, T, function () {
            c.state.currentSlide >=
              pt.default.Children.count(c.props.children) &&
              c.changeSlide({
                message: "index",
                index:
                  pt.default.Children.count(c.props.children) -
                  c.props.slidesToShow,
                currentSlide: c.state.currentSlide,
              }),
              c.props.autoplay ? c.autoPlay("update") : c.pause("paused");
          });
      }),
      Ae(Ce(c), "onWindowResized", function (m) {
        c.debouncedResize && c.debouncedResize.cancel(),
          (c.debouncedResize = (0, P2.default)(function () {
            return c.resizeWindow(m);
          }, 50)),
          c.debouncedResize();
      }),
      Ae(Ce(c), "resizeWindow", function () {
        var m =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0,
          y = !!(c.track && c.track.node);
        if (y) {
          var S = ve(
            ve({ listRef: c.list, trackRef: c.track }, c.props),
            c.state
          );
          c.updateState(S, m, function () {
            c.props.autoplay ? c.autoPlay("update") : c.pause("paused");
          }),
            c.setState({ animating: !1 }),
            clearTimeout(c.animationEndCallback),
            delete c.animationEndCallback;
        }
      }),
      Ae(Ce(c), "updateState", function (m, y, S) {
        var T = (0, Ve.initializedState)(m);
        m = ve(ve(ve({}, m), T), {}, { slideIndex: T.currentSlide });
        var O = (0, Ve.getTrackLeft)(m);
        m = ve(ve({}, m), {}, { left: O });
        var z = (0, Ve.getTrackCSS)(m);
        (y ||
          pt.default.Children.count(c.props.children) !==
            pt.default.Children.count(m.children)) &&
          (T.trackStyle = z),
          c.setState(T, S);
      }),
      Ae(Ce(c), "ssrInit", function () {
        if (c.props.variableWidth) {
          var m = 0,
            y = 0,
            S = [],
            T = (0, Ve.getPreClones)(
              ve(
                ve(ve({}, c.props), c.state),
                {},
                { slideCount: c.props.children.length }
              )
            ),
            O = (0, Ve.getPostClones)(
              ve(
                ve(ve({}, c.props), c.state),
                {},
                { slideCount: c.props.children.length }
              )
            );
          c.props.children.forEach(function (te) {
            S.push(te.props.style.width), (m += te.props.style.width);
          });
          for (var z = 0; z < T; z++)
            (y += S[S.length - 1 - z]), (m += S[S.length - 1 - z]);
          for (var N = 0; N < O; N++) m += S[N];
          for (var X = 0; X < c.state.currentSlide; X++) y += S[X];
          var V = { width: m + "px", left: -y + "px" };
          if (c.props.centerMode) {
            var Y = "".concat(S[c.state.currentSlide], "px");
            V.left = "calc("
              .concat(V.left, " + (100% - ")
              .concat(Y, ") / 2 ) ");
          }
          return { trackStyle: V };
        }
        var Q = pt.default.Children.count(c.props.children),
          j = ve(ve(ve({}, c.props), c.state), {}, { slideCount: Q }),
          L = (0, Ve.getPreClones)(j) + (0, Ve.getPostClones)(j) + Q,
          H = (100 / c.props.slidesToShow) * L,
          U = 100 / L,
          B = (-U * ((0, Ve.getPreClones)(j) + c.state.currentSlide) * H) / 100;
        c.props.centerMode && (B += (100 - (U * H) / 100) / 2);
        var K = { width: H + "%", left: B + "%" };
        return { slideWidth: U + "%", trackStyle: K };
      }),
      Ae(Ce(c), "checkImagesLoad", function () {
        var m =
            (c.list &&
              c.list.querySelectorAll &&
              c.list.querySelectorAll(".slick-slide img")) ||
            [],
          y = m.length,
          S = 0;
        Array.prototype.forEach.call(m, function (T) {
          var O = function () {
            return ++S && S >= y && c.onWindowResized();
          };
          if (!T.onclick)
            T.onclick = function () {
              return T.parentNode.focus();
            };
          else {
            var z = T.onclick;
            T.onclick = function () {
              z(), T.parentNode.focus();
            };
          }
          T.onload ||
            (c.props.lazyLoad
              ? (T.onload = function () {
                  c.adaptHeight(),
                    c.callbackTimers.push(
                      setTimeout(c.onWindowResized, c.props.speed)
                    );
                })
              : ((T.onload = O),
                (T.onerror = function () {
                  O(), c.props.onLazyLoadError && c.props.onLazyLoadError();
                })));
        });
      }),
      Ae(Ce(c), "progressiveLazyLoad", function () {
        for (
          var m = [],
            y = ve(ve({}, c.props), c.state),
            S = c.state.currentSlide;
          S < c.state.slideCount + (0, Ve.getPostClones)(y);
          S++
        )
          if (c.state.lazyLoadedList.indexOf(S) < 0) {
            m.push(S);
            break;
          }
        for (
          var T = c.state.currentSlide - 1;
          T >= -(0, Ve.getPreClones)(y);
          T--
        )
          if (c.state.lazyLoadedList.indexOf(T) < 0) {
            m.push(T);
            break;
          }
        m.length > 0
          ? (c.setState(function (O) {
              return { lazyLoadedList: O.lazyLoadedList.concat(m) };
            }),
            c.props.onLazyLoad && c.props.onLazyLoad(m))
          : c.lazyLoadTimer &&
            (clearInterval(c.lazyLoadTimer), delete c.lazyLoadTimer);
      }),
      Ae(Ce(c), "slideHandler", function (m) {
        var y =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1,
          S = c.props,
          T = S.asNavFor,
          O = S.beforeChange,
          z = S.onLazyLoad,
          N = S.speed,
          X = S.afterChange,
          V = c.state.currentSlide,
          Y = (0, Ve.slideHandler)(
            ve(
              ve(ve({ index: m }, c.props), c.state),
              {},
              { trackRef: c.track, useCSS: c.props.useCSS && !y }
            )
          ),
          Q = Y.state,
          j = Y.nextState;
        if (Q) {
          O && O(V, Q.currentSlide);
          var L = Q.lazyLoadedList.filter(function (H) {
            return c.state.lazyLoadedList.indexOf(H) < 0;
          });
          z && L.length > 0 && z(L),
            !c.props.waitForAnimate &&
              c.animationEndCallback &&
              (clearTimeout(c.animationEndCallback),
              X && X(V),
              delete c.animationEndCallback),
            c.setState(Q, function () {
              T &&
                c.asNavForIndex !== m &&
                ((c.asNavForIndex = m), T.innerSlider.slideHandler(m)),
                j &&
                  (c.animationEndCallback = setTimeout(function () {
                    var H = j.animating,
                      U = O2(j, ["animating"]);
                    c.setState(U, function () {
                      c.callbackTimers.push(
                        setTimeout(function () {
                          return c.setState({ animating: H });
                        }, 10)
                      ),
                        X && X(Q.currentSlide),
                        delete c.animationEndCallback;
                    });
                  }, N));
            });
        }
      }),
      Ae(Ce(c), "changeSlide", function (m) {
        var y =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1,
          S = ve(ve({}, c.props), c.state),
          T = (0, Ve.changeSlide)(S, m);
        if (
          !(T !== 0 && !T) &&
          (y === !0 ? c.slideHandler(T, y) : c.slideHandler(T),
          c.props.autoplay && c.autoPlay("update"),
          c.props.focusOnSelect)
        ) {
          var O = c.list.querySelectorAll(".slick-current");
          O[0] && O[0].focus();
        }
      }),
      Ae(Ce(c), "clickHandler", function (m) {
        c.clickable === !1 && (m.stopPropagation(), m.preventDefault()),
          (c.clickable = !0);
      }),
      Ae(Ce(c), "keyHandler", function (m) {
        var y = (0, Ve.keyHandler)(m, c.props.accessibility, c.props.rtl);
        y !== "" && c.changeSlide({ message: y });
      }),
      Ae(Ce(c), "selectHandler", function (m) {
        c.changeSlide(m);
      }),
      Ae(Ce(c), "disableBodyScroll", function () {
        var m = function (S) {
          (S = S || window.event),
            S.preventDefault && S.preventDefault(),
            (S.returnValue = !1);
        };
        window.ontouchmove = m;
      }),
      Ae(Ce(c), "enableBodyScroll", function () {
        window.ontouchmove = null;
      }),
      Ae(Ce(c), "swipeStart", function (m) {
        c.props.verticalSwiping && c.disableBodyScroll();
        var y = (0, Ve.swipeStart)(m, c.props.swipe, c.props.draggable);
        y !== "" && c.setState(y);
      }),
      Ae(Ce(c), "swipeMove", function (m) {
        var y = (0, Ve.swipeMove)(
          m,
          ve(
            ve(ve({}, c.props), c.state),
            {},
            {
              trackRef: c.track,
              listRef: c.list,
              slideIndex: c.state.currentSlide,
            }
          )
        );
        y && (y.swiping && (c.clickable = !1), c.setState(y));
      }),
      Ae(Ce(c), "swipeEnd", function (m) {
        var y = (0, Ve.swipeEnd)(
          m,
          ve(
            ve(ve({}, c.props), c.state),
            {},
            {
              trackRef: c.track,
              listRef: c.list,
              slideIndex: c.state.currentSlide,
            }
          )
        );
        if (y) {
          var S = y.triggerSlideHandler;
          delete y.triggerSlideHandler,
            c.setState(y),
            S !== void 0 &&
              (c.slideHandler(S),
              c.props.verticalSwiping && c.enableBodyScroll());
        }
      }),
      Ae(Ce(c), "touchEnd", function (m) {
        c.swipeEnd(m), (c.clickable = !0);
      }),
      Ae(Ce(c), "slickPrev", function () {
        c.callbackTimers.push(
          setTimeout(function () {
            return c.changeSlide({ message: "previous" });
          }, 0)
        );
      }),
      Ae(Ce(c), "slickNext", function () {
        c.callbackTimers.push(
          setTimeout(function () {
            return c.changeSlide({ message: "next" });
          }, 0)
        );
      }),
      Ae(Ce(c), "slickGoTo", function (m) {
        var y =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        if (((m = Number(m)), isNaN(m))) return "";
        c.callbackTimers.push(
          setTimeout(function () {
            return c.changeSlide(
              {
                message: "index",
                index: m,
                currentSlide: c.state.currentSlide,
              },
              y
            );
          }, 0)
        );
      }),
      Ae(Ce(c), "play", function () {
        var m;
        if (c.props.rtl) m = c.state.currentSlide - c.props.slidesToScroll;
        else if ((0, Ve.canGoNext)(ve(ve({}, c.props), c.state)))
          m = c.state.currentSlide + c.props.slidesToScroll;
        else return !1;
        c.slideHandler(m);
      }),
      Ae(Ce(c), "autoPlay", function (m) {
        c.autoplayTimer && clearInterval(c.autoplayTimer);
        var y = c.state.autoplaying;
        if (m === "update") {
          if (y === "hovered" || y === "focused" || y === "paused") return;
        } else if (m === "leave") {
          if (y === "paused" || y === "focused") return;
        } else if (m === "blur" && (y === "paused" || y === "hovered")) return;
        (c.autoplayTimer = setInterval(c.play, c.props.autoplaySpeed + 50)),
          c.setState({ autoplaying: "playing" });
      }),
      Ae(Ce(c), "pause", function (m) {
        c.autoplayTimer &&
          (clearInterval(c.autoplayTimer), (c.autoplayTimer = null));
        var y = c.state.autoplaying;
        m === "paused"
          ? c.setState({ autoplaying: "paused" })
          : m === "focused"
          ? (y === "hovered" || y === "playing") &&
            c.setState({ autoplaying: "focused" })
          : y === "playing" && c.setState({ autoplaying: "hovered" });
      }),
      Ae(Ce(c), "onDotsOver", function () {
        return c.props.autoplay && c.pause("hovered");
      }),
      Ae(Ce(c), "onDotsLeave", function () {
        return (
          c.props.autoplay &&
          c.state.autoplaying === "hovered" &&
          c.autoPlay("leave")
        );
      }),
      Ae(Ce(c), "onTrackOver", function () {
        return c.props.autoplay && c.pause("hovered");
      }),
      Ae(Ce(c), "onTrackLeave", function () {
        return (
          c.props.autoplay &&
          c.state.autoplaying === "hovered" &&
          c.autoPlay("leave")
        );
      }),
      Ae(Ce(c), "onSlideFocus", function () {
        return c.props.autoplay && c.pause("focused");
      }),
      Ae(Ce(c), "onSlideBlur", function () {
        return (
          c.props.autoplay &&
          c.state.autoplaying === "focused" &&
          c.autoPlay("blur")
        );
      }),
      Ae(Ce(c), "render", function () {
        var m = (0, T2.default)("slick-slider", c.props.className, {
            "slick-vertical": c.props.vertical,
            "slick-initialized": !0,
          }),
          y = ve(ve({}, c.props), c.state),
          S = (0, Ve.extractObject)(y, [
            "fade",
            "cssEase",
            "speed",
            "infinite",
            "centerMode",
            "focusOnSelect",
            "currentSlide",
            "lazyLoad",
            "lazyLoadedList",
            "rtl",
            "slideWidth",
            "slideHeight",
            "listHeight",
            "vertical",
            "slidesToShow",
            "slidesToScroll",
            "slideCount",
            "trackStyle",
            "variableWidth",
            "unslick",
            "centerPadding",
            "targetSlide",
            "useCSS",
          ]),
          T = c.props.pauseOnHover;
        S = ve(
          ve({}, S),
          {},
          {
            onMouseEnter: T ? c.onTrackOver : null,
            onMouseLeave: T ? c.onTrackLeave : null,
            onMouseOver: T ? c.onTrackOver : null,
            focusOnSelect:
              c.props.focusOnSelect && c.clickable ? c.selectHandler : null,
          }
        );
        var O;
        if (c.props.dots === !0 && c.state.slideCount >= c.props.slidesToShow) {
          var z = (0, Ve.extractObject)(y, [
              "dotsClass",
              "slideCount",
              "slidesToShow",
              "currentSlide",
              "slidesToScroll",
              "clickHandler",
              "children",
              "customPaging",
              "infinite",
              "appendDots",
            ]),
            N = c.props.pauseOnDotsHover;
          (z = ve(
            ve({}, z),
            {},
            {
              clickHandler: c.changeSlide,
              onMouseEnter: N ? c.onDotsLeave : null,
              onMouseOver: N ? c.onDotsOver : null,
              onMouseLeave: N ? c.onDotsLeave : null,
            }
          )),
            (O = pt.default.createElement(E2.Dots, z));
        }
        var X,
          V,
          Y = (0, Ve.extractObject)(y, [
            "infinite",
            "centerMode",
            "currentSlide",
            "slideCount",
            "slidesToShow",
            "prevArrow",
            "nextArrow",
          ]);
        (Y.clickHandler = c.changeSlide),
          c.props.arrows &&
            ((X = pt.default.createElement(vp.PrevArrow, Y)),
            (V = pt.default.createElement(vp.NextArrow, Y)));
        var Q = null;
        c.props.vertical && (Q = { height: c.state.listHeight });
        var j = null;
        c.props.vertical === !1
          ? c.props.centerMode === !0 &&
            (j = { padding: "0px " + c.props.centerPadding })
          : c.props.centerMode === !0 &&
            (j = { padding: c.props.centerPadding + " 0px" });
        var L = ve(ve({}, Q), j),
          H = c.props.touchMove,
          U = {
            className: "slick-list",
            style: L,
            onClick: c.clickHandler,
            onMouseDown: H ? c.swipeStart : null,
            onMouseMove: c.state.dragging && H ? c.swipeMove : null,
            onMouseUp: H ? c.swipeEnd : null,
            onMouseLeave: c.state.dragging && H ? c.swipeEnd : null,
            onTouchStart: H ? c.swipeStart : null,
            onTouchMove: c.state.dragging && H ? c.swipeMove : null,
            onTouchEnd: H ? c.touchEnd : null,
            onTouchCancel: c.state.dragging && H ? c.swipeEnd : null,
            onKeyDown: c.props.accessibility ? c.keyHandler : null,
          },
          B = { className: m, dir: "ltr", style: c.props.style };
        return (
          c.props.unslick &&
            ((U = { className: "slick-list" }), (B = { className: m })),
          pt.default.createElement(
            "div",
            B,
            c.props.unslick ? "" : X,
            pt.default.createElement(
              "div",
              Ks({ ref: c.listRefHandler }, U),
              pt.default.createElement(
                L2.Track,
                Ks({ ref: c.trackRefHandler }, S),
                c.props.children
              )
            ),
            c.props.unslick ? "" : V,
            c.props.unslick ? "" : O
          )
        );
      }),
      (c.list = null),
      (c.track = null),
      (c.state = ve(
        ve({}, A2.default),
        {},
        {
          currentSlide: c.props.initialSlide,
          slideCount: pt.default.Children.count(c.props.children),
        }
      )),
      (c.callbackTimers = []),
      (c.clickable = !0),
      (c.debouncedResize = null);
    var f = c.ssrInit();
    return (c.state = ve(ve({}, c.state), f)), c;
  }
  return (
    I2(r, [
      {
        key: "didPropsChange",
        value: function (c) {
          for (
            var f = !1, m = 0, y = Object.keys(this.props);
            m < y.length;
            m++
          ) {
            var S = y[m];
            if (!c.hasOwnProperty(S)) {
              f = !0;
              break;
            }
            if (
              !(Zs(c[S]) === "object" || typeof c[S] == "function") &&
              c[S] !== this.props[S]
            ) {
              f = !0;
              break;
            }
          }
          return (
            f ||
            pt.default.Children.count(this.props.children) !==
              pt.default.Children.count(c.children)
          );
        },
      },
    ]),
    r
  );
})(pt.default.Component);
Po.InnerSlider = H2;
var X2 = function (e) {
    return e
      .replace(/[A-Z]/g, function (t) {
        return "-" + t.toLowerCase();
      })
      .toLowerCase();
  },
  j2 = X2,
  B2 = j2,
  V2 = function (e) {
    var t = /[height|width]$/;
    return t.test(e);
  },
  wp = function (e) {
    var t = "",
      r = Object.keys(e);
    return (
      r.forEach(function (s, c) {
        var f = e[s];
        (s = B2(s)),
          V2(s) && typeof f == "number" && (f = f + "px"),
          f === !0
            ? (t += s)
            : f === !1
            ? (t += "not " + s)
            : (t += "(" + s + ": " + f + ")"),
          c < r.length - 1 && (t += " and ");
      }),
      t
    );
  },
  Y2 = function (e) {
    var t = "";
    return typeof e == "string"
      ? e
      : e instanceof Array
      ? (e.forEach(function (r, s) {
          (t += wp(r)), s < e.length - 1 && (t += ", ");
        }),
        t)
      : wp(e);
  },
  W2 = Y2,
  Yv = {};
(function (e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), (e.default = void 0);
  var t = r(re);
  function r(f) {
    return f && f.__esModule ? f : { default: f };
  }
  var s = {
      accessibility: !0,
      adaptiveHeight: !1,
      afterChange: null,
      appendDots: function (m) {
        return t.default.createElement(
          "ul",
          { style: { display: "block" } },
          m
        );
      },
      arrows: !0,
      autoplay: !1,
      autoplaySpeed: 3e3,
      beforeChange: null,
      centerMode: !1,
      centerPadding: "50px",
      className: "",
      cssEase: "ease",
      customPaging: function (m) {
        return t.default.createElement("button", null, m + 1);
      },
      dots: !1,
      dotsClass: "slick-dots",
      draggable: !0,
      easing: "linear",
      edgeFriction: 0.35,
      fade: !1,
      focusOnSelect: !1,
      infinite: !0,
      initialSlide: 0,
      lazyLoad: null,
      nextArrow: null,
      onEdge: null,
      onInit: null,
      onLazyLoadError: null,
      onReInit: null,
      pauseOnDotsHover: !1,
      pauseOnFocus: !1,
      pauseOnHover: !0,
      prevArrow: null,
      responsive: null,
      rows: 1,
      rtl: !1,
      slide: "div",
      slidesPerRow: 1,
      slidesToScroll: 1,
      slidesToShow: 1,
      speed: 500,
      swipe: !0,
      swipeEvent: null,
      swipeToSlide: !1,
      touchMove: !0,
      touchThreshold: 5,
      useCSS: !0,
      useTransform: !0,
      variableWidth: !1,
      vertical: !1,
      waitForAnimate: !0,
    },
    c = s;
  e.default = c;
})(Yv);
var Ol, Sp;
function G2() {
  if (Sp) return Ol;
  Sp = 1;
  function e(t) {
    (this.options = t), !t.deferSetup && this.setup();
  }
  return (
    (e.prototype = {
      constructor: e,
      setup: function () {
        this.options.setup && this.options.setup(), (this.initialised = !0);
      },
      on: function () {
        !this.initialised && this.setup(),
          this.options.match && this.options.match();
      },
      off: function () {
        this.options.unmatch && this.options.unmatch();
      },
      destroy: function () {
        this.options.destroy ? this.options.destroy() : this.off();
      },
      equals: function (t) {
        return this.options === t || this.options.match === t;
      },
    }),
    (Ol = e),
    Ol
  );
}
var Rl, kp;
function Wv() {
  if (kp) return Rl;
  kp = 1;
  function e(s, c) {
    var f = 0,
      m = s.length,
      y;
    for (f; f < m && ((y = c(s[f], f)), y !== !1); f++);
  }
  function t(s) {
    return Object.prototype.toString.apply(s) === "[object Array]";
  }
  function r(s) {
    return typeof s == "function";
  }
  return (Rl = { isFunction: r, isArray: t, each: e }), Rl;
}
var zl, Cp;
function U2() {
  if (Cp) return zl;
  Cp = 1;
  var e = G2(),
    t = Wv().each;
  function r(s, c) {
    (this.query = s),
      (this.isUnconditional = c),
      (this.handlers = []),
      (this.mql = window.matchMedia(s));
    var f = this;
    (this.listener = function (m) {
      (f.mql = m.currentTarget || m), f.assess();
    }),
      this.mql.addListener(this.listener);
  }
  return (
    (r.prototype = {
      constuctor: r,
      addHandler: function (s) {
        var c = new e(s);
        this.handlers.push(c), this.matches() && c.on();
      },
      removeHandler: function (s) {
        var c = this.handlers;
        t(c, function (f, m) {
          if (f.equals(s)) return f.destroy(), !c.splice(m, 1);
        });
      },
      matches: function () {
        return this.mql.matches || this.isUnconditional;
      },
      clear: function () {
        t(this.handlers, function (s) {
          s.destroy();
        }),
          this.mql.removeListener(this.listener),
          (this.handlers.length = 0);
      },
      assess: function () {
        var s = this.matches() ? "on" : "off";
        t(this.handlers, function (c) {
          c[s]();
        });
      },
    }),
    (zl = r),
    zl
  );
}
var Il, Ap;
function $2() {
  if (Ap) return Il;
  Ap = 1;
  var e = U2(),
    t = Wv(),
    r = t.each,
    s = t.isFunction,
    c = t.isArray;
  function f() {
    if (!window.matchMedia)
      throw new Error(
        "matchMedia not present, legacy browsers require a polyfill"
      );
    (this.queries = {}),
      (this.browserIsIncapable = !window.matchMedia("only all").matches);
  }
  return (
    (f.prototype = {
      constructor: f,
      register: function (m, y, S) {
        var T = this.queries,
          O = S && this.browserIsIncapable;
        return (
          T[m] || (T[m] = new e(m, O)),
          s(y) && (y = { match: y }),
          c(y) || (y = [y]),
          r(y, function (z) {
            s(z) && (z = { match: z }), T[m].addHandler(z);
          }),
          this
        );
      },
      unregister: function (m, y) {
        var S = this.queries[m];
        return (
          S && (y ? S.removeHandler(y) : (S.clear(), delete this.queries[m])),
          this
        );
      },
    }),
    (Il = f),
    Il
  );
}
var Dl, Pp;
function q2() {
  if (Pp) return Dl;
  Pp = 1;
  var e = $2();
  return (Dl = new e()), Dl;
}
(function (e) {
  function t(q) {
    "@babel/helpers - typeof";
    return (
      (t =
        typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
          ? function (ie) {
              return typeof ie;
            }
          : function (ie) {
              return ie &&
                typeof Symbol == "function" &&
                ie.constructor === Symbol &&
                ie !== Symbol.prototype
                ? "symbol"
                : typeof ie;
            }),
      t(q)
    );
  }
  Object.defineProperty(e, "__esModule", { value: !0 }), (e.default = void 0);
  var r = y(re),
    s = Po,
    c = y(W2),
    f = y(Yv),
    m = ue;
  function y(q) {
    return q && q.__esModule ? q : { default: q };
  }
  function S() {
    return (
      (S =
        Object.assign ||
        function (q) {
          for (var ie = 1; ie < arguments.length; ie++) {
            var ae = arguments[ie];
            for (var pe in ae)
              Object.prototype.hasOwnProperty.call(ae, pe) && (q[pe] = ae[pe]);
          }
          return q;
        }),
      S.apply(this, arguments)
    );
  }
  function T(q, ie) {
    var ae = Object.keys(q);
    if (Object.getOwnPropertySymbols) {
      var pe = Object.getOwnPropertySymbols(q);
      ie &&
        (pe = pe.filter(function (le) {
          return Object.getOwnPropertyDescriptor(q, le).enumerable;
        })),
        ae.push.apply(ae, pe);
    }
    return ae;
  }
  function O(q) {
    for (var ie = 1; ie < arguments.length; ie++) {
      var ae = arguments[ie] != null ? arguments[ie] : {};
      ie % 2
        ? T(Object(ae), !0).forEach(function (pe) {
            B(q, pe, ae[pe]);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(q, Object.getOwnPropertyDescriptors(ae))
        : T(Object(ae)).forEach(function (pe) {
            Object.defineProperty(
              q,
              pe,
              Object.getOwnPropertyDescriptor(ae, pe)
            );
          });
    }
    return q;
  }
  function z(q, ie) {
    if (!(q instanceof ie))
      throw new TypeError("Cannot call a class as a function");
  }
  function N(q, ie) {
    for (var ae = 0; ae < ie.length; ae++) {
      var pe = ie[ae];
      (pe.enumerable = pe.enumerable || !1),
        (pe.configurable = !0),
        "value" in pe && (pe.writable = !0),
        Object.defineProperty(q, pe.key, pe);
    }
  }
  function X(q, ie, ae) {
    return (
      ie && N(q.prototype, ie),
      ae && N(q, ae),
      Object.defineProperty(q, "prototype", { writable: !1 }),
      q
    );
  }
  function V(q, ie) {
    if (typeof ie != "function" && ie !== null)
      throw new TypeError("Super expression must either be null or a function");
    (q.prototype = Object.create(ie && ie.prototype, {
      constructor: { value: q, writable: !0, configurable: !0 },
    })),
      Object.defineProperty(q, "prototype", { writable: !1 }),
      ie && Y(q, ie);
  }
  function Y(q, ie) {
    return (
      (Y =
        Object.setPrototypeOf ||
        function (pe, le) {
          return (pe.__proto__ = le), pe;
        }),
      Y(q, ie)
    );
  }
  function Q(q) {
    var ie = H();
    return function () {
      var pe = U(q),
        le;
      if (ie) {
        var he = U(this).constructor;
        le = Reflect.construct(pe, arguments, he);
      } else le = pe.apply(this, arguments);
      return j(this, le);
    };
  }
  function j(q, ie) {
    if (ie && (t(ie) === "object" || typeof ie == "function")) return ie;
    if (ie !== void 0)
      throw new TypeError(
        "Derived constructors may only return object or undefined"
      );
    return L(q);
  }
  function L(q) {
    if (q === void 0)
      throw new ReferenceError(
        "this hasn't been initialised - super() hasn't been called"
      );
    return q;
  }
  function H() {
    if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
      return !1;
    if (typeof Proxy == "function") return !0;
    try {
      return (
        Boolean.prototype.valueOf.call(
          Reflect.construct(Boolean, [], function () {})
        ),
        !0
      );
    } catch {
      return !1;
    }
  }
  function U(q) {
    return (
      (U = Object.setPrototypeOf
        ? Object.getPrototypeOf
        : function (ae) {
            return ae.__proto__ || Object.getPrototypeOf(ae);
          }),
      U(q)
    );
  }
  function B(q, ie, ae) {
    return (
      ie in q
        ? Object.defineProperty(q, ie, {
            value: ae,
            enumerable: !0,
            configurable: !0,
            writable: !0,
          })
        : (q[ie] = ae),
      q
    );
  }
  var K = (0, m.canUseDOM)() && q2(),
    te = (function (q) {
      V(ae, q);
      var ie = Q(ae);
      function ae(pe) {
        var le;
        return (
          z(this, ae),
          (le = ie.call(this, pe)),
          B(L(le), "innerSliderRefHandler", function (he) {
            return (le.innerSlider = he);
          }),
          B(L(le), "slickPrev", function () {
            return le.innerSlider.slickPrev();
          }),
          B(L(le), "slickNext", function () {
            return le.innerSlider.slickNext();
          }),
          B(L(le), "slickGoTo", function (he) {
            var xe =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : !1;
            return le.innerSlider.slickGoTo(he, xe);
          }),
          B(L(le), "slickPause", function () {
            return le.innerSlider.pause("paused");
          }),
          B(L(le), "slickPlay", function () {
            return le.innerSlider.autoPlay("play");
          }),
          (le.state = { breakpoint: null }),
          (le._responsiveMediaHandlers = []),
          le
        );
      }
      return (
        X(ae, [
          {
            key: "media",
            value: function (le, he) {
              K.register(le, he),
                this._responsiveMediaHandlers.push({ query: le, handler: he });
            },
          },
          {
            key: "componentDidMount",
            value: function () {
              var le = this;
              if (this.props.responsive) {
                var he = this.props.responsive.map(function (we) {
                  return we.breakpoint;
                });
                he.sort(function (we, Me) {
                  return we - Me;
                }),
                  he.forEach(function (we, Me) {
                    var Xe;
                    Me === 0
                      ? (Xe = (0, c.default)({ minWidth: 0, maxWidth: we }))
                      : (Xe = (0, c.default)({
                          minWidth: he[Me - 1] + 1,
                          maxWidth: we,
                        })),
                      (0, m.canUseDOM)() &&
                        le.media(Xe, function () {
                          le.setState({ breakpoint: we });
                        });
                  });
                var xe = (0, c.default)({ minWidth: he.slice(-1)[0] });
                (0, m.canUseDOM)() &&
                  this.media(xe, function () {
                    le.setState({ breakpoint: null });
                  });
              }
            },
          },
          {
            key: "componentWillUnmount",
            value: function () {
              this._responsiveMediaHandlers.forEach(function (le) {
                K.unregister(le.query, le.handler);
              });
            },
          },
          {
            key: "render",
            value: function () {
              var le = this,
                he,
                xe;
              this.state.breakpoint
                ? ((xe = this.props.responsive.filter(function (Oe) {
                    return Oe.breakpoint === le.state.breakpoint;
                  })),
                  (he =
                    xe[0].settings === "unslick"
                      ? "unslick"
                      : O(O(O({}, f.default), this.props), xe[0].settings)))
                : (he = O(O({}, f.default), this.props)),
                he.centerMode &&
                  (he.slidesToScroll > 1, (he.slidesToScroll = 1)),
                he.fade &&
                  (he.slidesToShow > 1,
                  he.slidesToScroll > 1,
                  (he.slidesToShow = 1),
                  (he.slidesToScroll = 1));
              var we = r.default.Children.toArray(this.props.children);
              (we = we.filter(function (Oe) {
                return typeof Oe == "string" ? !!Oe.trim() : !!Oe;
              })),
                he.variableWidth &&
                  (he.rows > 1 || he.slidesPerRow > 1) &&
                  (console.warn(
                    "variableWidth is not supported in case of rows > 1 or slidesPerRow > 1"
                  ),
                  (he.variableWidth = !1));
              for (
                var Me = [], Xe = null, se = 0;
                se < we.length;
                se += he.rows * he.slidesPerRow
              ) {
                for (
                  var ge = [], me = se;
                  me < se + he.rows * he.slidesPerRow;
                  me += he.slidesPerRow
                ) {
                  for (
                    var fe = [], be = me;
                    be < me + he.slidesPerRow &&
                    (he.variableWidth &&
                      we[be].props.style &&
                      (Xe = we[be].props.style.width),
                    !(be >= we.length));
                    be += 1
                  )
                    fe.push(
                      r.default.cloneElement(we[be], {
                        key: 100 * se + 10 * me + be,
                        tabIndex: -1,
                        style: {
                          width: "".concat(100 / he.slidesPerRow, "%"),
                          display: "inline-block",
                        },
                      })
                    );
                  ge.push(
                    r.default.createElement("div", { key: 10 * se + me }, fe)
                  );
                }
                he.variableWidth
                  ? Me.push(
                      r.default.createElement(
                        "div",
                        { key: se, style: { width: Xe } },
                        ge
                      )
                    )
                  : Me.push(r.default.createElement("div", { key: se }, ge));
              }
              if (he === "unslick") {
                var je = "regular slider " + (this.props.className || "");
                return r.default.createElement("div", { className: je }, we);
              } else Me.length <= he.slidesToShow && (he.unslick = !0);
              return r.default.createElement(
                s.InnerSlider,
                S(
                  { style: this.props.style, ref: this.innerSliderRefHandler },
                  he
                ),
                Me
              );
            },
          },
        ]),
        ae
      );
    })(r.default.Component);
  e.default = te;
})(yv);
(function (e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), (e.default = void 0);
  var t = r(yv);
  function r(c) {
    return c && c.__esModule ? c : { default: c };
  }
  var s = t.default;
  e.default = s;
})(vv);
const Z2 = Tp(vv),
  K2 = ({ children: e }) => {
    const t = {
        triggerOnce: !1,
        threshold: 0.5,
        rootMargin: `${window.innerHeight}px 0px  0px 0px`,
      },
      [r, s] = wh(t);
    return $.jsx(gr.div, {
      initial: { opacity: 0 },
      animate: s ? { opacity: 1 } : {},
      transition: { duration: 2, ease: [0.16, 0.77, 0.47, 0.97], delay: 0.2 },
      ref: r,
      children: e,
    });
  },
  Q2 = ({ children: e, delay: t }) => {
    const r = {
        triggerOnce: !1,
        threshold: 0.5,
        rootMargin: `${window.innerHeight}px 0px  0px 0px`,
      },
      [s, c] = wh(r);
    return $.jsx(gr.div, {
      initial: { y: 70, opacity: 0 },
      animate: c ? { y: 0, opacity: 1 } : {},
      transition: {
        duration: 2,
        ease: [0.16, 0.77, 0.47, 0.97],
        delay: t || 0,
      },
      ref: s,
      children: e,
    });
  },
  J2 = () => {
    const e = [
        {
          title: "Phase 1",
          description: [
            "Idea born",
            "Socials, website, design",
            "Contract creation",
            "KYC / 2 audits",
            "Pinksale fairlaunch",
            "Prelaunch marketing campaign",
            "Community building (Telegram, Twitter)",
            "Staking DAPP",
          ],
        },
        {
          title: "Phase 2",
          description: [
            "Giveaways",
            "$SBF launch",
            "Staking live",
            "CG/CMC applications",
            "CEX listing",
            "Trendings",
            "Kol partnership ",
            "PR campaigns",
            "Billboards",
          ],
        },
        {
          title: "Phase 3",
          description: [
            "Continued development",
            "SBF event / events",
            "CEX listings",
            "Website V2",
            "Community activites",
            "Major partnerships",
          ],
        },
        {
          title: "Phase 1",
          description: [
            "Idea born",
            "Socials, website, design",
            "Contract creation",
            "KYC / 2 audits",
            "Pinksale fairlaunch",
            "Prelaunch marketing campaign",
            "Community building (Telegram, Twitter)",
            "Staking DAPP",
          ],
        },
        {
          title: "Phase 2",
          description: [
            "Giveaways",
            "$SBF launch",
            "Staking live",
            "CG/CMC applications",
            "CEX listing",
            "Trendings",
            "Kol partnership ",
            "PR campaigns",
            "Billboards",
          ],
        },
        {
          title: "Phase 3",
          description: [
            "Continued development",
            "SBF event / events",
            "CEX listings",
            "Website V2",
            "Community activites",
            "Major partnerships",
          ],
        },
      ],
      t = {
        dots: !1,
        infinite: !1,
        speed: 500,
        slidesToShow: 3,
        slidesToScroll: 1,
        responsive: [
          {
            breakpoint: 1280,
            settings: { dots: !1, slidesToShow: 2, slidesToScroll: 1 },
          },
          {
            breakpoint: 1024,
            settings: { dots: !1, slidesToShow: 1, slidesToScroll: 1 },
          },
        ],
      };
    return $.jsx("section", {
      className:
        "w-full h-auto min-h-screen px-5 py-20 z-10 flex items-center relative",
      id: "roadmap",
      children: $.jsxs("div", {
        className: "max-w-[1400px] w-full mx-auto relative z-10",
        children: [
          $.jsx(Q2, {
            children: $.jsx("h1", {
              className:
                "2xl:text-8xl xl:text-6xl sm:text-5xl text-3xl text-center font-primary text-white text-glow",
              children: "ROADMAP",
            }),
          }),
          $.jsx("div", {
            className: "relative z-10 flex gap-20 flex-col mt-5",
            children: $.jsx(Z2, {
              ...t,
              className:
                "xl:max-w-[78rem] lg:max-w-[42rem] max-w-[19rem] w-full flex pl-2 mx-auto",
              children: e.map((r, s) =>
                $.jsx(
                  K2,
                  {
                    children: $.jsxs("div", {
                      className:
                        "relative h-auto min-h-[20rem] xl:max-w-[25rem] lg:max-w-[20rem] max-w-[18rem] my-10",
                      children: [
                        $.jsx("div", {
                          className:
                            "absolute top-0 left-0 right-0 m-auto bottom-0 h-[105%] w-[90%] bg-white z-[9]",
                        }),
                        $.jsx("div", {
                          className:
                            "absolute top-0 left-0 right-0 m-auto bottom-0 h-[108%] w-[60%] bg-white z-[9]",
                        }),
                        $.jsxs("div", {
                          className:
                            "glassmorphic border-2 border-white w-full p-7 min-h-[25rem] h-auto relative z-[11] bg-primary",
                          children: [
                            $.jsx("h2", {
                              className:
                                "font-primary text-white text-glow text-3xl",
                              children: r.title,
                            }),
                            $.jsx("div", {
                              className: "flex flex-col gap-y-2 mt-5",
                              children: r.description.map((c, f) =>
                                $.jsxs(
                                  "p",
                                  {
                                    className: "text-white",
                                    children: ["• ", c],
                                  },
                                  f
                                )
                              ),
                            }),
                          ],
                        }),
                      ],
                    }),
                  },
                  s
                )
              ),
            }),
          }),
        ],
      }),
    });
  },
  eP = () => {
    const [e, t] = re.useState(!1);
    return $.jsx("div", {
      className: "w-full min-h-screen bg-bg",
      children: $.jsx(fC, {
        mode: "wait",
        children: e
          ? $.jsxs(
              gr.div,
              {
                initial: { opacity: 0 },
                animate: { opacity: 1 },
                transition: { duration: 1 },
                children: [
                  $.jsx(Jb, {}),
                  $.jsx(BC, {}),
                  $.jsx($C, {}),
                  $.jsx(UC, {}),
                  $.jsx(XC, {}),
                  $.jsx(JC, {}),
                  $.jsx(GC, {}),
                  $.jsx(J2, {}),
                  $.jsx(ZC, {}),
                  $.jsx(QC, {}),
                ],
              },
              "Main"
            )
          : $.jsx("div", {
              className: "w-full h-screen bg-black",
              children: $.jsx("video", {
                playsInline: !0,
                muted: !1,
                autoPlay: !0,
                preload: "auto",
                onEnded: () => {
                  t(!0);
                },
                src: qC,
                className: "w-full h-full object-cover absolute top-0 left-0",
              }),
            }),
      }),
    });
  };
Nl.createRoot(document.getElementById("root")).render(
  $.jsx(ai.StrictMode, { children: $.jsx(eP, {}) })
);
